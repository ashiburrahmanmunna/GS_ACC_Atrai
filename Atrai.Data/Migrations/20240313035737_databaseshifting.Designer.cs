// <auto-generated />
using System;
using Atrai.Data.Context.AppDataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Atrai.Data.Migrations
{
    [DbContext(typeof(InvoiceDbContext))]
    [Migration("20240313035737_databaseshifting")]
    partial class databaseshifting
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_BudgetMainModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<string>("Interval")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("PreFillId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PreFillId");

                    b.ToTable("Acc_BudgetMain");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_FiscalHalfYear", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FYId")
                        .HasColumnType("int");

                    b.Property<string>("HyearName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HyearNameBangla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("dtFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Acc_FiscalHalfYear");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_FiscalMonthModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("ClosingdtTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FYId")
                        .HasColumnType("int");

                    b.Property<int>("HYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MonthName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthNameBangla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OpeningdtFrom")
                        .HasColumnType("datetime2");

                    b.Property<int>("QtrId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("dtFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("isLockedAccounts")
                        .HasColumnType("bit");

                    b.Property<bool>("isLockedAttendance")
                        .HasColumnType("bit");

                    b.Property<bool>("isLockedSalary")
                        .HasColumnType("bit");

                    b.Property<bool>("isLockedStore")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Acc_FiscalMonth");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_FiscalQtr", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FYId")
                        .HasColumnType("int");

                    b.Property<int>("HYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("QtrName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QtrNameBangla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("dtFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Acc_FiscalQtr");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_FiscalYearModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ClDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FYName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FYNameBangla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("OpDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OpeningDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("isRunning")
                        .HasColumnType("bit");

                    b.Property<bool>("isWorking")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Acc_FiscalYear");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_VoucherMainModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<double>("ConvRate")
                        .HasColumnType("float");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("CountryIdLocal")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCash")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdApprove")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdCheck")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<double>("MasterCurrencyRate")
                        .HasColumnType("float");

                    b.Property<int?>("PrdUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Referance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferanceThree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferanceTwo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("VAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherFilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VoucherInputDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherNo")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<int>("VoucherSerialId")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherTranGroupId")
                        .HasColumnType("int");

                    b.Property<string>("VoucherTranGroupList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VoucherTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<int?>("YearlyVoucherTypeWiseSerial")
                        .HasColumnType("int");

                    b.Property<bool>("isAutoEntry")
                        .HasColumnType("bit");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.Property<string>("vAmountInWords")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("vAmountLocal")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CountryIdLocal");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PrdUnitId");

                    b.HasIndex("VoucherTranGroupId");

                    b.HasIndex("VoucherTypeId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Acc_VoucherMain");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_VoucherNoCreatedTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherNoCreatedTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherNoCreatedTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Acc_VoucherNoCreatedType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_VoucherNoPrefixModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherShortPrefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VoucherTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("isVisible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("VoucherTypeId");

                    b.ToTable("Acc_VoucherNoPrefix");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_VoucherSubChecknoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("ChkNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Criteria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdApprove")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdCheck")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowNoChk")
                        .HasColumnType("int");

                    b.Property<int?>("SRowNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherSubId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dtChk")
                        .HasColumnType("datetime2");

                    b.Property<string>("dtChkClear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtChkTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isClear")
                        .HasColumnType("bit");

                    b.Property<bool>("isManualEntry")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("VoucherId");

                    b.HasIndex("VoucherSubId");

                    b.ToTable("Acc_VoucherSubCheckno");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_VoucherSubModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrencyForeignId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<double>("CurrencyRate")
                        .HasColumnType("float");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DamageId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("IssueId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("Note1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note5")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseReturnId")
                        .HasColumnType("int");

                    b.Property<int?>("RefId")
                        .HasColumnType("int");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.Property<int>("SRowNo")
                        .HasColumnType("int");

                    b.Property<int?>("SalesId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesReturnId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<double>("TKCredit")
                        .HasColumnType("float");

                    b.Property<double>("TKCreditLocal")
                        .HasColumnType("float");

                    b.Property<double>("TKDebit")
                        .HasColumnType("float");

                    b.Property<double>("TKDebitLocal")
                        .HasColumnType("float");

                    b.Property<int?>("TransferInId")
                        .HasColumnType("int");

                    b.Property<int?>("TransferOutId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherTranGroupIdRow")
                        .HasColumnType("int");

                    b.Property<int>("ccId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccId");

                    b.HasIndex("ComId");

                    b.HasIndex("CurrencyForeignId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DamageId");

                    b.HasIndex("EmpId");

                    b.HasIndex("IssueId");

                    b.HasIndex("LuserId");

                    b.HasIndex("MemberId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("PurchaseReturnId");

                    b.HasIndex("SalesId");

                    b.HasIndex("SalesReturnId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TransferInId");

                    b.HasIndex("TransferOutId");

                    b.HasIndex("VoucherId");

                    b.HasIndex("VoucherTranGroupIdRow");

                    b.ToTable("Acc_VoucherSub");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_VoucherSubSectionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Note1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowNoSSec")
                        .HasColumnType("int");

                    b.Property<int>("SRowNo")
                        .HasColumnType("int");

                    b.Property<int>("SubSectId")
                        .HasColumnType("int");

                    b.Property<int>("SubSectionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.Property<int>("VoucherSubId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SubSectionId");

                    b.HasIndex("VoucherSubId");

                    b.ToTable("Acc_VoucherSubSection");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_VoucherTagsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.Property<string>("tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("VoucherId");

                    b.ToTable("Acc_VoucherTags");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_VoucherTranGroupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.Property<int>("VoucherTranGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("VoucherId");

                    b.HasIndex("VoucherTranGroupId");

                    b.ToTable("Acc_VoucherTranGroup");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_VoucherTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherTypeButtonClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherTypeClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherTypeNameShort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isSystem")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Acc_VoucherType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AccountCategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NoteNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentAccountCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ParentAccountCategoryId");

                    b.ToTable("AccountCategory");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AccountHeadModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AccName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("AccType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("AccountBalanceLive")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("AccountCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("AccumulatedDepId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepExpenseId")
                        .HasColumnType("int");

                    b.Property<string>("DepreciationRate")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsBankItem")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCashItem")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChkRef")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsItemAccmulateddDep")
                        .HasColumnType("bit");

                    b.Property<bool>("IsItemBS")
                        .HasColumnType("bit");

                    b.Property<bool>("IsItemCS")
                        .HasColumnType("bit");

                    b.Property<bool>("IsItemDepExp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsItemPL")
                        .HasColumnType("bit");

                    b.Property<bool>("IsItemTA")
                        .HasColumnType("bit");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LevelId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("NumericNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("OpCredit")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("OpCreditLocal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("OpDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OpDebit")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("OpDebitLocal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<bool>("isInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isItemConsumed")
                        .HasColumnType("bit");

                    b.Property<bool>("isItemInventory")
                        .HasColumnType("bit");

                    b.Property<bool>("isSystem")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountCategoryId");

                    b.HasIndex("ComId");

                    b.HasIndex("CountryId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ParentId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("AccountHead");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AccountHeadPermissionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int>("LuserIdAllow")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("AccountHeadPermission");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AccountHeadSystemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AccName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("AccType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int?>("AccountCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("AccumulatedDepId")
                        .HasColumnType("int");

                    b.Property<int?>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepExpenseId")
                        .HasColumnType("int");

                    b.Property<string>("DepreciationRate")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsItemAccmulateddDep")
                        .HasColumnType("bit");

                    b.Property<bool>("IsItemDepExp")
                        .HasColumnType("bit");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LevelId")
                        .HasColumnType("int");

                    b.Property<int?>("NumericNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("OpDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isSystem")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountCategoryId");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("ParentId");

                    b.ToTable("AccountHead_System");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AccountsReportModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<string>("ReportName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SerialNo")
                        .HasColumnType("int");

                    b.Property<string>("Tab")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AccountsReport");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ActivationTicketModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActivatedbyLUserId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AreaZone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FusionTeamLUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MRC")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ONUFrom")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("OTC")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("PromiseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ROUTERFrom")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("ReferanceBy")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("TicketNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ActivatedbyLUserId");

                    b.HasIndex("FusionTeamLUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PackageId");

                    b.HasIndex("ComId", "TicketNo")
                        .IsUnique();

                    b.ToTable("ActivationTicket");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AdvanceTrasactionTrackingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("Occurence")
                        .HasColumnType("int");

                    b.Property<string>("OccuringDate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("SalesId");

                    b.ToTable("AdvanceTrasactionTracking");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AgencyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgencyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fillingfrequency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("ReportingMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StartOfTaxPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Agency");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AndroidMenuModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorOne")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ColorThree")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ColorTwo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("FontColor")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("GradiantStyle")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("IconPath")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("MenuCaption")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("MenuPage")
                        .HasColumnType("int");

                    b.Property<string>("MenuRemarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Radius")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AndroidMenu");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AndroidMenuPermissionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AndroidMenuId")
                        .HasColumnType("int");

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AndroidMenuId");

                    b.HasIndex("BusinessTypeId");

                    b.ToTable("AndroidMenuPermission");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AndroidMenuPermission_DetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AndroidMenuPermissionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleteP")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReport")
                        .HasColumnType("bit");

                    b.Property<bool>("IsView")
                        .HasColumnType("bit");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AndroidMenuPermissionId");

                    b.HasIndex("MenuId");

                    b.ToTable("AndroidMenuPermission_Details");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AndroidMenuPermission_MasterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LUserIdPermission")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LUserIdPermission");

                    b.ToTable("AndroidMenuPermission_Master");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ApprovalTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApprovalStage")
                        .HasColumnType("int");

                    b.Property<string>("ApprovalType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ApprovalType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ApprovedBy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApprovedByName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovedByShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ApprovedBy");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BBLCMain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AmdNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovalPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BBLCAmdNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BBLCNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("BBLCPrintDocDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BBLCPrintDocRef")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("BBLCQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BBLCValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("COM_MasterLCId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ConvertRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateApproval")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DayListId")
                        .HasColumnType("int");

                    b.Property<int?>("DayListTermId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DecreaseValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DestinationID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FirstShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("GroupLCAverage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("GroupLCId")
                        .HasColumnType("int");

                    b.Property<decimal?>("IncreaseValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Insurance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemGroupId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LcOpeningDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LienBankId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("OpeningBankId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentTerm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentTermsId")
                        .HasColumnType("int");

                    b.Property<string>("Percentage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PortOfDischargeId")
                        .HasColumnType("int");

                    b.Property<int?>("PortOfLoadingId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PrevBBLCValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PrintDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShipModeId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Tenor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TradeTermId")
                        .HasColumnType("int");

                    b.Property<int?>("TruckInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UDNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("COM_MasterLCId");

                    b.HasIndex("ComId");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DayListId");

                    b.HasIndex("DayListTermId");

                    b.HasIndex("DestinationID");

                    b.HasIndex("GroupLCId");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("LienBankId");

                    b.HasIndex("LuserId");

                    b.HasIndex("OpeningBankId");

                    b.HasIndex("PaymentTermsId");

                    b.HasIndex("PortOfDischargeId");

                    b.HasIndex("PortOfLoadingId");

                    b.HasIndex("ShipModeId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TradeTermId");

                    b.HasIndex("TruckInfoId");

                    b.ToTable("BBLCMaster");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BBLC_Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BBLCMainId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("PIId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BBLCMainId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PIId");

                    b.ToTable("BBLC_Details");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BOMAllocationCategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("BOMAllocationCategory");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BOMDetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("BOMAllocationCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("BOMMasterId")
                        .HasColumnType("int");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<double>("LossPercentage")
                        .HasColumnType("float");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("Remarks1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BOMAllocationCategoryId");

                    b.HasIndex("BOMMasterId");

                    b.HasIndex("ColorId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SizeId");

                    b.ToTable("BOMDetails");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BOMMasterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BOMCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<double>("LossPercentage")
                        .HasColumnType("float");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int");

                    b.Property<int>("StyleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SizeId");

                    b.HasIndex("StyleId");

                    b.ToTable("BOMMaster");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BankAccountNo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BankAccountNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("OpeningBankId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("LuserId");

                    b.HasIndex("OpeningBankId");

                    b.ToTable("BankAccountNo");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BarcodePrintModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehosueId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("BarcodePrintInfo");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BookModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("MobileImages");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BrandModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BudgetSubModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<decimal>("April")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Aug")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BudgetId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Dec")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Feb")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<decimal>("Jan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Jul")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Jun")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("Mar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("May")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Nov")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Oct")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Quarter1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Quarter2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Quarter3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Quarter4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Sep")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Yearly")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AccId");

                    b.HasIndex("BudgetId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Acc_BudgetSub");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BusinessTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AppsName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BusinessTypeName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("BusinessTypeRemarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAccounts")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDealerBasedOrganization")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMarcel")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWalton")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BusinessType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BuyerGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BuyerGroupCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuyerGroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BuyerGroupShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("BuyerGroup");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BuyerPO_ConsumptionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("BOMAllocationCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("BOMMasterId")
                        .HasColumnType("int");

                    b.Property<int>("BuyerPOId")
                        .HasColumnType("int");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("Remarks1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BOMAllocationCategoryId");

                    b.HasIndex("BOMMasterId");

                    b.HasIndex("BuyerPOId");

                    b.HasIndex("ColorId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SizeId");

                    b.ToTable("BuyerPO_Consumption");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BuyerPO_DetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuyerPOId")
                        .HasColumnType("int");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerPOId");

                    b.HasIndex("ColorId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SizeId");

                    b.ToTable("BuyerPO_Details");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BuyerPO_MasterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<string>("BuyerPO")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("StyleId")
                        .HasColumnType("int");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<double>("TotalQuantity")
                        .HasColumnType("float");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("StyleId");

                    b.ToTable("BuyerPO_Master");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_CommercialInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BBLCId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BLDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BLNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BillOfEntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BillOfEntryNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int?>("CommercialCompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CommercialInvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CommercialInvoiceNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("CommercialLCTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ConversionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CustomAssesmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DocumentAssesmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DocumentReceiptDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DocumentStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ETBDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FidderVasel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GoodsInhouseDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemDescId")
                        .HasColumnType("int");

                    b.Property<string>("ItemDescList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ItemGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LCType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("MachinaryLCId")
                        .HasColumnType("int");

                    b.Property<string>("MotherVassel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("SupplierID")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UnitMasterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VasselETADate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BBLCId");

                    b.HasIndex("ComId");

                    b.HasIndex("CommercialCompanyID");

                    b.HasIndex("CommercialLCTypeId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DocumentStatusId");

                    b.HasIndex("ItemDescId");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("LuserId");

                    b.HasIndex("MachinaryLCId");

                    b.HasIndex("SupplierID");

                    b.HasIndex("UnitMasterId");

                    b.ToTable("COM_CommercialInvoice");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_CommercialInvoice_Sub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int>("CommercialInvoiceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("ItemDescId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("CommercialInvoiceId");

                    b.HasIndex("ItemDescId");

                    b.HasIndex("LuserId");

                    b.ToTable("COM_CommercialInvoice_Sub");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_DocumentAcceptance_Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int?>("CommercialInvoiceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DocumentAcceptanceMasterId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("CommercialInvoiceId");

                    b.HasIndex("DocumentAcceptanceMasterId");

                    b.HasIndex("LuserId");

                    b.ToTable("COM_DocumentAcceptance_Details");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_DocumentAcceptance_Master", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AcceptedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BBLCId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BillDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BillMaturityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BillOfExchangeRef")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("BillPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<decimal>("ConversionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("GroupLCId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("MasterLCId")
                        .HasColumnType("int");

                    b.Property<string>("MasterLCRef")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NewCIAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PayableAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalBBLCAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BBLCId");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ComId");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("GroupLCId");

                    b.HasIndex("LuserId");

                    b.HasIndex("MasterLCId");

                    b.HasIndex("SupplierId");

                    b.ToTable("COM_DocumentAcceptance_Master");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_MachinaryLC_Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("MachinaryLCMasterID")
                        .HasColumnType("int");

                    b.Property<int?>("PIId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("MachinaryLCMasterID");

                    b.HasIndex("PIId");

                    b.ToTable("COM_MachinaryLC_Details");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_MachinaryLC_Master", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<decimal>("ConvertRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DayListId")
                        .HasColumnType("int");

                    b.Property<decimal>("DecreaseValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DestinationID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FirstShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GroupLCAverage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IncreaseValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Insurance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ItemGroupsId")
                        .HasColumnType("int");

                    b.Property<string>("LCAmdNo")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("LCAmdNote")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<DateTime?>("LastShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LcOpeningDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LienBankId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MachinaryLCNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("MachinaryLCPrintDocDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MachinaryLCPrintDocRef")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("MachinaryLCQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MachinaryLCValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("OpeningBankId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentTerm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentTermsId")
                        .HasColumnType("int");

                    b.Property<int?>("PortOfDischargeId")
                        .HasColumnType("int");

                    b.Property<int?>("PortOfLoadingId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShipModeId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Tenor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TradeTermId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UDDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UDNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DayListId");

                    b.HasIndex("DestinationID");

                    b.HasIndex("ItemGroupsId");

                    b.HasIndex("LienBankId");

                    b.HasIndex("LuserId");

                    b.HasIndex("OpeningBankId");

                    b.HasIndex("PaymentTermsId");

                    b.HasIndex("PortOfDischargeId");

                    b.HasIndex("PortOfLoadingId");

                    b.HasIndex("ShipModeId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TradeTermId");

                    b.ToTable("COM_MachinaryLC_Master");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_MachineryLCDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("MachineryLCId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkOrderId")
                        .HasColumnType("int");

                    b.Property<string>("WorkOrderRef")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("MachineryLCId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("COM_MachineryLCDetails");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_MachineryLCMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Addedby")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BillMacturityDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BillPayDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DefferredPaymentDays")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ImportBillDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImportBillNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InsuranceCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("InsurancePayStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LCDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LCNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentTermsId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalBillAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PaymentTermsId");

                    b.HasIndex("SupplierId");

                    b.ToTable("WorkOCOM_MachineryLCMasterrderMaster");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_MasterLCExport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExportOrderID")
                        .HasColumnType("int");

                    b.Property<string>("ExportOrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExportPONo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("MasterLCModelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("MasterLCModelId");

                    b.ToTable("COM_MasterLCExport");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_MasterLC_Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BuyerPOId")
                        .HasColumnType("int");

                    b.Property<string>("CatNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContractNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DestinationPO")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ExportPONo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Fabrication")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<float>("Factor")
                        .HasColumnType("real");

                    b.Property<string>("HSCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Kimball")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("MasterLCID")
                        .HasColumnType("int");

                    b.Property<float>("OrderQty")
                        .HasColumnType("real");

                    b.Property<string>("OrderType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("QtyInPcs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SL")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StyleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerPOId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("MasterLCID");

                    b.ToTable("COM_MasterLC_Details");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_ProformaInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CartonRollQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int?>("DayListId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FileNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("GroupLCId")
                        .HasColumnType("int");

                    b.Property<string>("HSCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("ImportPONo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("ImportQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ImportRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemDescId")
                        .HasColumnType("int");

                    b.Property<string>("ItemDescList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ItemGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ItemGroupName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LCAF")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("LienBankId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MerchandiserName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("OpeningBankId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PIDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PINo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PIReceivingDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PITypeId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentTermsId")
                        .HasColumnType("int");

                    b.Property<int?>("PortOfLoadingCountryOfOriginId")
                        .HasColumnType("int");

                    b.Property<int?>("PortOfLoadingDestinationId")
                        .HasColumnType("int");

                    b.Property<int?>("PortOfLoadingId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("RevNo")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("ComId");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DayListId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("GroupLCId");

                    b.HasIndex("ItemDescId");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("LienBankId");

                    b.HasIndex("LuserId");

                    b.HasIndex("OpeningBankId");

                    b.HasIndex("PITypeId");

                    b.HasIndex("PaymentTermsId");

                    b.HasIndex("PortOfLoadingCountryOfOriginId");

                    b.HasIndex("PortOfLoadingDestinationId");

                    b.HasIndex("PortOfLoadingId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UnitId");

                    b.ToTable("COM_ProformaInvoices");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_ProformaInvoice_Sub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemDescId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("PIId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("ItemDescId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PIId");

                    b.ToTable("COM_ProformaInvoice_Sub");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_AccountTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccTypeName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cat_AccountType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_BankBranchModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Cat_BankBranch");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_BankModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BankAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BankShortName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Cat_Bank");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_BloodGroupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BloodName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("BloodNameB")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cat_BloodGroup");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_BuildingTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BuildingName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("BuildingNameB")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("BuildingShortName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Cat_BuildingType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_DepartmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeptBangla")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Slno")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Cat_Department");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_DesignationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AttBonus")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DesigName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DesigNameB")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GradeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Gsmin")
                        .HasColumnType("decimal(18,4)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProposedManPower")
                        .HasColumnType("int");

                    b.Property<string>("SalaryRange")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SlNo")
                        .HasColumnType("int");

                    b.Property<int?>("TtlManpower")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("GradeId");

                    b.HasIndex("LuserId");

                    b.ToTable("Cat_Designation");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_DistrictModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DistName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("DistNameB")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("DistNameShort")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("SL")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Cat_District");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_Emp_TypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpTypeName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmpTypeNameB")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("TtlManpower")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cat_Emp_Type");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_EmployeeTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmployeeType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeTypeBangla")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Slno")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cat_EmployeeType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_FloorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FloorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FloorNameB")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Cat_Floor");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_GenderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("GenderNameB")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cat_Gender");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_GradeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("GradeNameB")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<double?>("MinGS")
                        .HasColumnType("float");

                    b.Property<string>("SalaryRange")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("SlNo")
                        .HasColumnType("int");

                    b.Property<int?>("TtlManPowerWorker")
                        .HasColumnType("int");

                    b.Property<int?>("TtlManpower")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Cat_Grade");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_Integration_Setting_Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<string>("ColNameFour")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ColNameFourGroupBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColNameOne")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ColNameOneGroupBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColNameThree")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ColNameThreeGroupBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColNameTwo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ColNameTwoGroupBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("CompanyListId")
                        .HasColumnType("int");

                    b.Property<int>("ConditionCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupByCondition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IntegrationSettingMainId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDebit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubtract")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<string>("SelectColumnNameOne")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SelectStatement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("WhereCondition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("colNameFourValue")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("colNameOneValue")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("colNameThreeValue")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("colNameTwoValue")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AccId");

                    b.HasIndex("CompanyListId");

                    b.HasIndex("IntegrationSettingMainId");

                    b.HasIndex("LuserId");

                    b.ToTable("IntegrationSettingDetails");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_Integration_Setting_Main", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IntegrationRemarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntegrationSettingName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IntegrationTableName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MainSLNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VoucherTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("VoucherTypeId");

                    b.ToTable("IntegrationSettingMain");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_Leave_TypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<float?>("LDays")
                        .HasColumnType("real");

                    b.Property<string>("LTypeName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("LTypeNameShort")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cat_Leave_Type");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_LineModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LineName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LineNameB")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Cat_Line");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LocationNameB")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LocationNameShort")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LocationNameShortB")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Cat_Location");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_PayModeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PayModeName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cat_PayMode");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_PayrollIntegrationSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Note1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SLNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TKCreditLocal")
                        .HasColumnType("float");

                    b.Property<double>("TKDebitLocal")
                        .HasColumnType("float");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccId");

                    b.HasIndex("ComId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("LuserId");

                    b.ToTable("PayrollIntegration");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_PoliceStationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DistId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PStationName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PStationNameB")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DistId");

                    b.ToTable("Cat_PoliceStation");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_PostOfficeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DistId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("POCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("POName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PONameB")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("PStationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DistId");

                    b.HasIndex("PStationId");

                    b.ToTable("Cat_PostOffice");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_ReligionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ReligionName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReligionNameB")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cat_Religion");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_SalaryTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("SalaryType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Slno")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cat_SalaryType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_SectionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeptId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("SectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SectNameB")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Slno")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("DeptId");

                    b.HasIndex("LuserId");

                    b.ToTable("Cat_Section");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_ShiftModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LunchIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LunchOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LunchTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegHour")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftCat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShiftCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ShiftDesc")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ShiftIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShiftLate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("ShiftOut")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TiffinIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TiffinOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TiffinTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TiffinTime1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TiffinTime2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TiffinTimeIn1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TiffinTimeIn2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Cat_Shift");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_SkillModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SkillNameB")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Cat_Skill");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_SubSectionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectId")
                        .HasColumnType("int");

                    b.Property<short>("Slno")
                        .HasColumnType("smallint");

                    b.Property<string>("SubSectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubSectNameB")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("DeptId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SectId");

                    b.ToTable("Cat_SubSection");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_UnitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UnitNameB")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UnitShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Cat_Unit");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_WeekSegmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Slno")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WeekName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Cat_WeekSegment");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryParentId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("TaxPer")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isTaxExcluded")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryParentId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ColorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ColorShortName")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInactive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ColorsChildModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("StyleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("StyleId");

                    b.ToTable("ColorChild");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ColorsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ColorDesc")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ColorsFilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CommercialCompanyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BKMEARegNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPersonDesignation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FactoryPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaxNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IRCNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TINNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TradeLicenceNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VATNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Web")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Commercial");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CommercialLCType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CommercialLCTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CommercialLCTypeShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CommercialLCType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CompanyCurrencyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AsOf")
                        .HasColumnType("datetime2");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyRate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("LuserId");

                    b.ToTable("CompanyCurrencies");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CompanyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BusinessIdNo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CompanyShortName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ContDesig")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContPerson")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerFacingAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("CustomerFacingCityAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("CustomerFacingState")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("CustomerFacingZipCode")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSignature")
                        .HasColumnType("bit");

                    b.Property<string>("LegalAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("LegalCityAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("LegalName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LegalState")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("LegalZipCode")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("PrimaryAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SecoundaryAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("SubscriptionTypeId")
                        .HasColumnType("int");

                    b.Property<string>("UniqueCompanyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VoucherNoCreatedTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("comEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("comWeb")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("customerFacingEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isChequeDetails")
                        .HasColumnType("bit");

                    b.Property<bool>("isEmailSerivce")
                        .HasColumnType("bit");

                    b.Property<bool>("isMultiCurrency")
                        .HasColumnType("bit");

                    b.Property<bool>("isMultiDebitCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("isSMSService")
                        .HasColumnType("bit");

                    b.Property<bool>("isVoucherDistributionEntry")
                        .HasColumnType("bit");

                    b.Property<string>("vat")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("SubscriptionTypeId");

                    b.HasIndex("VoucherNoCreatedTypeId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CompanyPermissionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isChecked")
                        .HasColumnType("bit");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("CompanyPermission");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CostCalculatedModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CalculatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CalculatedPrice")
                        .HasColumnType("decimal(18,5)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrPrice")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("CurrQty")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("DamageId")
                        .HasColumnType("int");

                    b.Property<string>("DeletedDocNo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("InternalTransferId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTransferIn")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTransferOut")
                        .HasColumnType("bit");

                    b.Property<int?>("IssueId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("PrevPrice")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("PrevQty")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseReturnId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesExchangeId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesReturnId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCurrPrice")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("TotalPrevPrice")
                        .HasColumnType("decimal(18,5)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<bool>("isManualProcess")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("DamageId");

                    b.HasIndex("InternalTransferId");

                    b.HasIndex("IssueId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("PurchaseReturnId");

                    b.HasIndex("SalesId");

                    b.HasIndex("SalesReturnId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("CostCalculated");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CountryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CountryShortName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureInfo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrencyShortName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CurrencySymbol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DialCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FlagClass")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CreditBalanceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ActivationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("PurchaseRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("SoftwarePackageId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsedQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("ValidityDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SoftwarePackageId");

                    b.ToTable("CreditBalance");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CreditUsedModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("CommandType")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SMSText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("SendingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TextLength")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("UsedValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("CreditUsed");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CustomFormStyleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BusinessAllAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ColumnOrder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("ComRegNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompanyRegNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DocTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FontColor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FontFamily")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FontSize")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FooterText")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("FooterTextSize")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FootertextPlacement")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Invoice")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsBillingAddress")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBusinessAddrsShow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBusinessNameShow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsComRegShow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCustomTranUsed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCustomVatNo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeposited")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDiscounted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDueDate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailShow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEstimateSummary")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFitPrinted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFormNumbers")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFullDetails")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLetterHeadUsed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPdfAttached")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhoneShow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReiminderEmailGreetingUsed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShipping")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowOnInvoice")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStandardEmialGreetingUsed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSummarizedDetails")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTaxSummary")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWebsiteShow")
                        .HasColumnType("bit");

                    b.Property<string>("LogoPlacement")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LogoSize")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MessageToCustTextSize")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MessageToCustomer")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PageMarginBottom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PageMarginLeft")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PageMarginRight")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PageMarginTop")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReiminderEmailGreetingFullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReiminderEmailGreetingsAppeal")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReiminderEmailMsgToCustomer")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReiminderEmailSubject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReminderEmailTemplateHolder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportFor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StandardEmailGreetingFullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StandardEmailGreetingsAppeal")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StandardEmailMsgToCustomer")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StandardEmailSubject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StandardEmailTemplateHolder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxInvoice")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Template")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("DocTypeId");

                    b.HasIndex("LuserId");

                    b.ToTable("CustomFormStyle");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CustomFormStyleVariableModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VariableFor")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("VariableName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("VariableValue")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("CustomFormStyleVariable");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CustomerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BillingCity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BillingCountry")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BillingPostalCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BillingProvince")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BillingStreetAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("ClBalance")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactPersonDesignation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactPersonName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("CustParentId")
                        .HasColumnType("int");

                    b.Property<string>("CustType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("CustomerCommissionPer")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("CustomerCurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryOptions")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LoginId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MiddelName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("MonthlyTarget")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NextPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("OpBalance")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("OpeningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Other")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("OverDueBalance")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PaymentTermsId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PrimaryAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("SRCommissionPer")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("SalesRepresentativeId")
                        .HasColumnType("int");

                    b.Property<string>("SecoundaryAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShippingCity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShippingCountry")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShippingPostalCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShippingProvince")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShippingStreetAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Suffix")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Taxes")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("TradeTermsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("CustParentId");

                    b.HasIndex("CustomerCurrencyId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PaymentTermsId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("SalesRepresentativeId");

                    b.HasIndex("TradeTermsId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DailyCurrencyRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AmountForeign")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("AmountLocalBuy")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("AmountLocalSale")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int>("CountryIdForeign")
                        .HasColumnType("int");

                    b.Property<int>("CountryIdLocal")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isAutoEntry")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("tranDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("DailyCurrencyRate");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DailyProduction_DetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DailyProductionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<double>("ReceivedQuantity")
                        .HasColumnType("float");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ComId");

                    b.HasIndex("DailyProductionId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SizeId");

                    b.ToTable("DailyProduction_Details");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DailyProduction_MasterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerPOId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("StyleId")
                        .HasColumnType("int");

                    b.Property<double>("TotalQuantity")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("BuyerPOId");

                    b.HasIndex("ComId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("LuserId");

                    b.HasIndex("StyleId");

                    b.ToTable("DailyProduction_Master");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DamageBatchItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BatchSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DamageItemId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseBatchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("DamageItemId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseBatchId");

                    b.ToTable("DamageBatchItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DamageItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<double>("AvgCostPrice")
                        .HasColumnType("float");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DamageId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("SerialItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("DamageId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("DamageItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DamageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DamageCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("DamageDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReferanceOne")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReferanceTwo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseIdMain")
                        .HasColumnType("int");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("WarehouseIdMain");

                    b.HasIndex("ComId", "DamageCode")
                        .IsUnique();

                    b.ToTable("Damage");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DashBoardLayoutOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DashId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("DashBoardLayoutOrder");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DayList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DayListGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DayListName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DayListShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DayList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DayListTerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DayListTermGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DayListTermName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DayListTermShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("DayListTerm");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DeliveryServiceCommentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("CommentToLuserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeliveryServiceId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliveryServiceModelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("CommentToLuserId");

                    b.HasIndex("DeliveryServiceId");

                    b.HasIndex("DeliveryServiceModelId");

                    b.HasIndex("LuserId");

                    b.ToTable("DeliveryServiceComment");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DeliveryServiceDistanceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DistanceDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DistanceName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("FigureForCalculation")
                        .HasColumnType("decimal(18,4)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("DeliveryServiceDistance");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DeliveryServiceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("BillAmount")
                        .HasColumnType("real");

                    b.Property<string>("BillNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("BilledDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryClientAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeliveryClientName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeliveryClientPhoneNo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("DeliveryTimingId")
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<int?>("DistanceId")
                        .HasColumnType("int");

                    b.Property<string>("InWords")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PickupPoint")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("PreferableDateTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("ReceivedAmount")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WeightId")
                        .HasColumnType("int");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<bool>("isSystem")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeliveryTimingId");

                    b.HasIndex("DistanceId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("WeightId");

                    b.HasIndex("ComId", "BillNo")
                        .IsUnique();

                    b.ToTable("DeliveryService");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DeliveryServiceTimingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FigureForCalculation")
                        .HasColumnType("decimal(18,4)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("TimingDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TimingName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("DeliveryServiceTiming");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DeliveryServiceWeightModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FigureForCalculation")
                        .HasColumnType("decimal(18,4)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WeightDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WeightName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("isInActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("DeliveryServiceWeight");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Destination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationNameSearch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("CountryId");

                    b.HasIndex("LuserId");

                    b.ToTable("Destination");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DiagnosisReportModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("DiagnosisReport");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DiscountTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("DisPer")
                        .HasColumnType("float");

                    b.Property<string>("DiscountFor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDefault")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("DiscountType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DocApprovalSettingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApprovalTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DocTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdApprove")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdCheck")
                        .HasColumnType("int");

                    b.Property<int>("LuserIdEntry")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdVerify")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInactive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalTypeId");

                    b.HasIndex("ComId");

                    b.HasIndex("DocTypeId");

                    b.HasIndex("LuserId");

                    b.HasIndex("LuserIdApprove");

                    b.HasIndex("LuserIdCheck");

                    b.HasIndex("LuserIdEntry");

                    b.HasIndex("LuserIdVerify");

                    b.ToTable("DocApprovalSetting");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DocStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DocTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocTypeId");

                    b.HasIndex("StatusId");

                    b.ToTable("DocStatus");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DocTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocFor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DocTypeValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DocType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DocumentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentStatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DocumentStatusShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DocumentStatus");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DurationTimeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DurationName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInactive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DurationTime");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DyDashBoardModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalFilter")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AdditionalFilterTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AdditionalFilterValue")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ChartTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ChartType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GroupFilterValue")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Grouptitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit");

                    b.Property<bool>("Isvisible")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("Oder")
                        .HasColumnType("int");

                    b.Property<string>("TimePriod")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TimePriodValue")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("DyDashBoard");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DynamicReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<decimal>("CompletePercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DynamicReportActionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DynamicReportCaption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DynamicReportName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DynamicReportPackingDetailsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DynamicReportPackingListName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportController")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportDesignByPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerifiedByPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isVerified")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("DynamicReport");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.EmailSettingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("MailPort")
                        .HasColumnType("int");

                    b.Property<string>("MailServer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("EmailSettings");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.EmployeeAttendanceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeLuerId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePathBack")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePathFront")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("OutTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PunchDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PunchDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("EmployeeAttendance");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.EmployeeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Basic")
                        .HasColumnType("real");

                    b.Property<int?>("BloodId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("DeptId")
                        .HasColumnType("int");

                    b.Property<int?>("DesigId")
                        .HasColumnType("int");

                    b.Property<int?>("Designationid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DtBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtConfirm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtIncrement")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtJoin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtLocalJoin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtPF")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtPromotion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtReleased")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmergencyContactName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmergencyContactRelationship")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmergencyMobileNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("EmpAdvanceBalance")
                        .HasColumnType("real");

                    b.Property<string>("EmpEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("EmpLoanBalance")
                        .HasColumnType("real");

                    b.Property<string>("EmpNameB")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpPerZip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpPhone1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpPhone2")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpRemarks")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("EmployeeTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FathersName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FingerId")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("FloorId")
                        .HasColumnType("int");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<int?>("GradeId")
                        .HasColumnType("int");

                    b.Property<float>("GrossSalary")
                        .HasColumnType("real");

                    b.Property<float>("HR")
                        .HasColumnType("real");

                    b.Property<float>("HoursRate")
                        .HasColumnType("real");

                    b.Property<string>("IntroducerAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IntroducerContctNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IntroducerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsAllowOT")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCasual")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConfirm")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExistImage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsIncentiveBns")
                        .HasColumnType("bit");

                    b.Property<int?>("LineId")
                        .HasColumnType("int");

                    b.Property<int?>("LinkUserId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<float>("MA")
                        .HasColumnType("real");

                    b.Property<int>("ManageType")
                        .HasColumnType("int");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("NID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("OthersAllowance")
                        .HasColumnType("real");

                    b.Property<string>("PermanentAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PresentAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<float>("ProductionRate")
                        .HasColumnType("real");

                    b.Property<int?>("RelgionId")
                        .HasColumnType("int");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<int?>("SectId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<int?>("SkillId")
                        .HasColumnType("int");

                    b.Property<int?>("SubSectId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkLocation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BloodId");

                    b.HasIndex("ComId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DeptId");

                    b.HasIndex("DesigId");

                    b.HasIndex("Designationid");

                    b.HasIndex("EmployeeTypeId");

                    b.HasIndex("FloorId");

                    b.HasIndex("GenderId");

                    b.HasIndex("GradeId");

                    b.HasIndex("LineId");

                    b.HasIndex("LuserId");

                    b.HasIndex("RelgionId");

                    b.HasIndex("SectId");

                    b.HasIndex("ShiftId");

                    b.HasIndex("SkillId");

                    b.HasIndex("SubSectId");

                    b.HasIndex("UnitId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.EmployeeSalaryDetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("AbsentDay")
                        .HasColumnType("real");

                    b.Property<float>("AbsentDeduction")
                        .HasColumnType("real");

                    b.Property<float>("AdvanceDeduction")
                        .HasColumnType("real");

                    b.Property<float>("Allowance")
                        .HasColumnType("real");

                    b.Property<float>("BS")
                        .HasColumnType("real");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<float>("GS")
                        .HasColumnType("real");

                    b.Property<float>("HourProductionCount")
                        .HasColumnType("real");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<float>("LoanDeduction")
                        .HasColumnType("real");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<float>("NetAmount")
                        .HasColumnType("real");

                    b.Property<float>("OtherAddition")
                        .HasColumnType("real");

                    b.Property<float>("OtherDeduction")
                        .HasColumnType("real");

                    b.Property<string>("SalaryDetailsRemarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SalaryMasterId")
                        .HasColumnType("int");

                    b.Property<float>("TotalDay")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SalaryMasterId");

                    b.ToTable("EmployeeSalary_Details");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.EmployeeSalaryMasterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("SalaryMasterRemarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SalaryMonth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SalaryMonthFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SalaryMonthTo")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SalaryTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<int?>("WeekSegmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeTypeId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SalaryTypeId");

                    b.HasIndex("WarehouseId");

                    b.HasIndex("WeekSegmentId");

                    b.ToTable("EmployeeSalary_Master");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ExpireDateExtendModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("NewExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("OldExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.ToTable("ExpireDateExtend");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ExportInvoiceDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BillReceiveDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("BoxHeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BoxLength")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BoxWidth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CBMLine")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CartonQty")
                        .HasColumnType("int");

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DocumentSendDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExportInvoiceMasterId")
                        .HasColumnType("int");

                    b.Property<string>("ExportPoNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("GrossWeightLine")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("InvoiceFactor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<decimal?>("InvoiceQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("InvoiceQtyInPcs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("InvoiceRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("InvoiceValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LCQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("MasterLCDetailsID")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetWeightLine")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PODate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SLNO")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StyleNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitMasterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitMasterId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("ExportInvoiceMasterId");

                    b.HasIndex("LuserId");

                    b.HasIndex("UnitMasterId1");

                    b.ToTable("ExportInvoiceDetails");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ExportInvoiceMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BLDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BLNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("BalanceShip")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankAccNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BookingNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CBM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CMPPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CMPValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CargoHandoverDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CartonMeasurement")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ContainerNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryTerm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ExfactoryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("FirstNotifyPartyId")
                        .HasColumnType("int");

                    b.Property<string>("GoodsDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("GrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRevised")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MainMark")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ManufactureId")
                        .HasColumnType("int");

                    b.Property<int?>("MasterLCId")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NetWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("OnboardDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PackingType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentTermsManual")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PortOfDischargeId")
                        .HasColumnType("int");

                    b.Property<int?>("PortOfLoadingId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("RevisedNo")
                        .HasColumnType("int");

                    b.Property<int?>("SecondNotifyPartyId")
                        .HasColumnType("int");

                    b.Property<string>("Session")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipmentAuthorization")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ShippingBillDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingBillNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("ThirdNotifyPartyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCartonQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalInvoiceQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalInvoiceQtyPcs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalShipped")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VesselName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("VoyageNo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ComId");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("FirstNotifyPartyId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ManufactureId");

                    b.HasIndex("MasterLCId");

                    b.HasIndex("PortOfDischargeId");

                    b.HasIndex("PortOfLoadingId");

                    b.HasIndex("SecondNotifyPartyId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("ThirdNotifyPartyId");

                    b.ToTable("ExportInvoiceMaster");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ExportInvoicePackingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("BoxHeightLinePacking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BoxLengthLinePacking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BoxWidthLinePacking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CBMLinePacking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CartonQty")
                        .HasColumnType("int");

                    b.Property<string>("ColorPL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CtnNoFromPL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CtnNoToPL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExportInvoiceDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("ExportPoNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("GrossWeightLinePacking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ItemNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetWeightLinePacking")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PcsCTN")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Qty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SLNOLinePacking")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalGrossWeightPL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalNetWeightPL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UPCNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("netPcsPL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("remainingPL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ttlPcsPL")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("ExportInvoiceDetailsId");

                    b.HasIndex("LuserId");

                    b.ToTable("ExportInvoicePackingList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ExportOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BuyerContactPONo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DestinationID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExFactoryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExportOrderCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ExportOrderStatusId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("OrderQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OrderValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("POLineNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PoDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ShipModelId")
                        .HasColumnType("int");

                    b.Property<int?>("StyleId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitMasterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("StyleId");

                    b.HasIndex("UnitMasterId");

                    b.ToTable("ExportOrder");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ExportOrderCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExportOrderCategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ExportOrderCategoryShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExportOrderCategory");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ExportOrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExportOrderStatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ExportOrderStatusShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExportOrderStatus");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ExportRealization_Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BankCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("RealizationId")
                        .HasColumnType("int");

                    b.Property<decimal>("ReceivingValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("LuserId");

                    b.HasIndex("RealizationId");

                    b.ToTable("ExportRealization_Details");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ExportRealization_Master", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BankCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankRef")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CourierDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CourierNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExportFormNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("FBPDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FBPNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FileNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("MasterLCId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RealizationAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("RealizationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ReceivingVlaue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.Property<decimal>("TotalInvoiceQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("MasterLCId");

                    b.ToTable("ExportRealization_Master");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.FeedbackModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeedbackForm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.FiscalYearTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FYEndDate")
                        .HasColumnType("int");

                    b.Property<int>("FYEndMonth")
                        .HasColumnType("int");

                    b.Property<string>("FYName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("FYStartDate")
                        .HasColumnType("int");

                    b.Property<int>("FYStartMonth")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FiscalYearType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.FromWarehousePermissionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int>("LuserIdAllow")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("FromWarehousePermission");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Gallery", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ComId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("UploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Gallery");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.GalleryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BookModelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookModelId");

                    b.ToTable("ImagesGallery");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.GatePassItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("GatePassId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTransaction")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("PackageQuantity")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("GatePassId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.ToTable("GatePassItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.GatePassModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BuyerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GatePassCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("GatePassDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("ManualNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StyleNo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Through")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("GatePass");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.GroupLC_MainModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FirstShipDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FreightChargePer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GroupLCAmdNo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("GroupLCRefName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastShipDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("Margin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalGroupLCQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalGroupLCValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalGroupLCValueManual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ComId");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("LuserId");

                    b.ToTable("GroupLC_Main");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.GroupLC_SubModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GroupLCId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("MasterLCID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("GroupLCId");

                    b.HasIndex("LuserId");

                    b.HasIndex("MasterLCID");

                    b.ToTable("GroupLC_Sub");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_AttFixed", b =>
                {
                    b.Property<int>("AttId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttId"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtPunchDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<float>("OT")
                        .HasColumnType("real");

                    b.Property<float>("OTHour")
                        .HasColumnType("real");

                    b.Property<TimeSpan>("OTHourInTime")
                        .HasColumnType("time");

                    b.Property<float>("OTHourPrev")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("StatusPrev")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("TimeIn")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TimeInPrev")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TimeOut")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TimeOutPrev")
                        .HasColumnType("time");

                    b.HasKey("AttId");

                    b.HasIndex("EmpId");

                    b.ToTable("HR_AttFixed");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_Address", b =>
                {
                    b.Property<int>("EmpAddId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpAddId"));

                    b.Property<int>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpCurrCityVill")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("EmpCurrDistId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpCurrPOId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpCurrPSId")
                        .HasColumnType("int");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EmpPerCityVill")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("EmpPerDistId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpPerPOId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpPerPSId")
                        .HasColumnType("int");

                    b.Property<string>("EmpRemarksCurr")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmpRemarksPer")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("LuserId")
                        .HasMaxLength(80)
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UpdateByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpAddId");

                    b.HasIndex("EmpCurrDistId");

                    b.HasIndex("EmpCurrPOId");

                    b.HasIndex("EmpCurrPSId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.HasIndex("EmpPerDistId");

                    b.HasIndex("EmpPerPOId");

                    b.HasIndex("EmpPerPSId");

                    b.ToTable("HR_Emp_Address");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_BankInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccTypeId")
                        .HasColumnType("int");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("BankId")
                        .HasColumnType("int");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("PayModeId")
                        .HasColumnType("int");

                    b.Property<string>("RoutingNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccTypeId");

                    b.HasIndex("BankId");

                    b.HasIndex("BranchId");

                    b.HasIndex("ComId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.HasIndex("LuserId");

                    b.HasIndex("PayModeId");

                    b.ToTable("HR_Emp_BankInfo");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_EducationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BoardName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Certificate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("ExamName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ExamResult")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("InstituteName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MajorSub")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PassingYear")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("EmpId");

                    b.HasIndex("LuserId");

                    b.ToTable("HR_Emp_Education");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_ExperienceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtFromJob")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtToJob")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("ExpYear")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PrevCompany")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PrevDesignation")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PrevSalary")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("EmpId");

                    b.HasIndex("LuserId");

                    b.ToTable("HR_Emp_Experience");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_FamilyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpChildBirthCer1")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("EmpChildBirthCer2")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("EmpChildBirthCer3")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("EmpChildBirthCer4")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("EmpChildDOB1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EmpChildDOB2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EmpChildDOB3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EmpChildDOB4")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpChildEdu1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpChildEdu2")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpChildEdu3")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpChildEdu4")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpChildName1")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpChildName2")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpChildName3")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpChildName4")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpFather")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpFatherB")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpFatherMobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpFatherNID")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EmpMother")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpMotherB")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpMotherMobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpMotherNID")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("EmpSpouse")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpSpouseB")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpSpouseMobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpSpouseNID")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.HasIndex("LuserId");

                    b.ToTable("HR_Emp_Family");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_Image", b =>
                {
                    b.Property<int>("EmpImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpImageId"));

                    b.Property<int>("ComId")
                        .HasMaxLength(80)
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<byte[]>("EmpImage")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("EmpImageExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("EmpSign")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("EmpSignExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpSignPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LuserId")
                        .HasMaxLength(80)
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("UpdateByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpImageId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.ToTable("HR_Emp_Image");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_Increment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<float?>("BSDiff")
                        .HasColumnType("real");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtIncrement")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtPromotion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<float?>("HRDiff")
                        .HasColumnType("real");

                    b.Property<float?>("HRExpDiff")
                        .HasColumnType("real");

                    b.Property<float?>("HRExpOtherDiff")
                        .HasColumnType("real");

                    b.Property<int?>("IncTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<float?>("MADiff")
                        .HasColumnType("real");

                    b.Property<double?>("NewBS")
                        .HasColumnType("float");

                    b.Property<double?>("NewDA")
                        .HasColumnType("float");

                    b.Property<int?>("NewDeptId")
                        .HasColumnType("int");

                    b.Property<int?>("NewDesigId")
                        .HasColumnType("int");

                    b.Property<int?>("NewEmpTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("NewFA")
                        .HasColumnType("float");

                    b.Property<int?>("NewGenderId")
                        .HasColumnType("int");

                    b.Property<double?>("NewHR")
                        .HasColumnType("float");

                    b.Property<double?>("NewHRExp")
                        .HasColumnType("float");

                    b.Property<double?>("NewHRExpOther")
                        .HasColumnType("float");

                    b.Property<double?>("NewMA")
                        .HasColumnType("float");

                    b.Property<double?>("NewPA")
                        .HasColumnType("float");

                    b.Property<double?>("NewSalary")
                        .HasColumnType("float");

                    b.Property<int?>("NewSectId")
                        .HasColumnType("int");

                    b.Property<double?>("NewTA")
                        .HasColumnType("float");

                    b.Property<int?>("NewUnitId")
                        .HasColumnType("int");

                    b.Property<double?>("OldBS")
                        .HasColumnType("float");

                    b.Property<double?>("OldDA")
                        .HasColumnType("float");

                    b.Property<int?>("OldDeptId")
                        .HasColumnType("int");

                    b.Property<int?>("OldDesigId")
                        .HasColumnType("int");

                    b.Property<int?>("OldEmpTypeId")
                        .HasColumnType("int");

                    b.Property<double?>("OldFA")
                        .HasColumnType("float");

                    b.Property<int?>("OldGenderId")
                        .HasColumnType("int");

                    b.Property<double?>("OldHR")
                        .HasColumnType("float");

                    b.Property<double?>("OldHRExp")
                        .HasColumnType("float");

                    b.Property<double?>("OldHRExpOther")
                        .HasColumnType("float");

                    b.Property<double?>("OldMA")
                        .HasColumnType("float");

                    b.Property<double?>("OldPA")
                        .HasColumnType("float");

                    b.Property<double?>("OldSalary")
                        .HasColumnType("float");

                    b.Property<int?>("OldSectId")
                        .HasColumnType("int");

                    b.Property<double?>("OldTA")
                        .HasColumnType("float");

                    b.Property<int?>("OldUnitId")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<float?>("Percentage")
                        .HasColumnType("real");

                    b.Property<string>("UpdateByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserAccountListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("EmpId")
                        .IsUnique()
                        .HasFilter("[EmpId] IS NOT NULL");

                    b.HasIndex("IncTypeId");

                    b.HasIndex("NewDeptId");

                    b.HasIndex("NewDesigId");

                    b.HasIndex("NewEmpTypeId");

                    b.HasIndex("NewGenderId");

                    b.HasIndex("NewSectId");

                    b.HasIndex("NewUnitId");

                    b.HasIndex("OldDeptId");

                    b.HasIndex("OldDesigId");

                    b.HasIndex("OldEmpTypeId");

                    b.HasIndex("OldGenderId");

                    b.HasIndex("OldSectId");

                    b.HasIndex("OldUnitId");

                    b.HasIndex("UserAccountListId");

                    b.ToTable("HR_Emp_Increment");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_NomineeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EmpNomineeAddress1")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmpNomineeAddress2")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("EmpNomineeDOB1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EmpNomineeDOB2")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmpNomineeJobType1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNomineeJobType2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpNomineeMobile1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpNomineeMobile2")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpNomineeNID1")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("EmpNomineeNID2")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("EmpNomineeName1")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpNomineeName2")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmpNomineePercentage1")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmpNomineePercentage2")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmpNomineeRelation1")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmpNomineeRelation2")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.HasIndex("LuserId");

                    b.ToTable("HR_Emp_Nominee");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_PersonalInfoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BId")
                        .HasColumnType("int");

                    b.Property<string>("BirthCertificate")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Caste")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ChildNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtPF")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmergencyContactName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("EmergencyContactNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("EmpFileNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeCodeBCIC")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("GratuityFinalYId")
                        .HasColumnType("int");

                    b.Property<int?>("GratuityFundTransferYId")
                        .HasColumnType("int");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentificationSign")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("IsAllowPF")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGratuityFinal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGratuityFundTransfer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPFFinal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPFFundTransfer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsingHouse")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWFFinal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWFFundTransfer")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<bool>("MaritalStatus")
                        .HasColumnType("bit");

                    b.Property<string>("MedicalBookNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PFFileNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("PFFinalYId")
                        .HasColumnType("int");

                    b.Property<int?>("PFFundTransferYId")
                        .HasColumnType("int");

                    b.Property<string>("PassportNo")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("PoliceVerificationStatus")
                        .HasColumnType("bit");

                    b.Property<string>("RelationEmerContact")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("TINNo")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WFFinalYId")
                        .HasColumnType("int");

                    b.Property<int?>("WFFundTransferYId")
                        .HasColumnType("int");

                    b.Property<int?>("WeekDay")
                        .HasColumnType("int");

                    b.Property<float?>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("BId");

                    b.HasIndex("ComId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.HasIndex("GratuityFinalYId");

                    b.HasIndex("GratuityFundTransferYId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PFFinalYId");

                    b.HasIndex("PFFundTransferYId");

                    b.HasIndex("WFFinalYId");

                    b.HasIndex("WFFundTransferYId");

                    b.ToTable("HR_Emp_PersonalInfo");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_Released", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtPresentLast")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtReleased")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtSubmit")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("RelType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.HasIndex("LuserId");

                    b.ToTable("HR_Emp_Released");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_Salary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("AdvAgainstExp")
                        .HasColumnType("real");

                    b.Property<float?>("AdvFacility")
                        .HasColumnType("real");

                    b.Property<float?>("AdvInTaxDed")
                        .HasColumnType("real");

                    b.Property<float?>("AdvWagesDed")
                        .HasColumnType("real");

                    b.Property<float?>("ArrearBasic")
                        .HasColumnType("real");

                    b.Property<float?>("ArrearBonus")
                        .HasColumnType("real");

                    b.Property<float?>("ArrearInTaxDed")
                        .HasColumnType("real");

                    b.Property<float?>("AttAllow")
                        .HasColumnType("real");

                    b.Property<int?>("BId")
                        .HasColumnType("int");

                    b.Property<float>("BasicSalary")
                        .HasColumnType("real");

                    b.Property<float?>("CanteenAllow")
                        .HasColumnType("real");

                    b.Property<float?>("ChargeAllow")
                        .HasColumnType("real");

                    b.Property<float?>("CheForum")
                        .HasColumnType("real");

                    b.Property<float?>("ChemicalAsso")
                        .HasColumnType("real");

                    b.Property<float?>("ChemicalForum")
                        .HasColumnType("real");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<float?>("ComPfCount")
                        .HasColumnType("real");

                    b.Property<float?>("ContainSub")
                        .HasColumnType("real");

                    b.Property<float?>("ConvAllowDed")
                        .HasColumnType("real");

                    b.Property<float?>("ConveyanceAllow")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<float?>("DapEmpClub")
                        .HasColumnType("real");

                    b.Property<float?>("DearnessAllow")
                        .HasColumnType("real");

                    b.Property<float?>("DedIncBns")
                        .HasColumnType("real");

                    b.Property<float?>("DedIncBonusOf")
                        .HasColumnType("real");

                    b.Property<float?>("DiplomaassoDed")
                        .HasColumnType("real");

                    b.Property<float?>("Dishantenna")
                        .HasColumnType("real");

                    b.Property<float?>("Donation")
                        .HasColumnType("real");

                    b.Property<float?>("EduAlloDed")
                        .HasColumnType("real");

                    b.Property<float?>("EduAllow")
                        .HasColumnType("real");

                    b.Property<float?>("ElectricCharge")
                        .HasColumnType("real");

                    b.Property<float?>("ElectricChargeOther")
                        .HasColumnType("real");

                    b.Property<float?>("EmpClubDed")
                        .HasColumnType("real");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<float?>("EnggassoDed")
                        .HasColumnType("real");

                    b.Property<float?>("FesBonusDed")
                        .HasColumnType("real");

                    b.Property<float?>("FestivalBonus")
                        .HasColumnType("real");

                    b.Property<float?>("FoodAllow")
                        .HasColumnType("real");

                    b.Property<int?>("GLId")
                        .HasColumnType("int");

                    b.Property<float?>("GasAllow")
                        .HasColumnType("real");

                    b.Property<float?>("GasChargeOther")
                        .HasColumnType("real");

                    b.Property<float?>("Gascharge")
                        .HasColumnType("real");

                    b.Property<int?>("HBLId")
                        .HasColumnType("int");

                    b.Property<int?>("HBLId2")
                        .HasColumnType("int");

                    b.Property<int?>("HBLId3")
                        .HasColumnType("int");

                    b.Property<float?>("HRExpensesOther")
                        .HasColumnType("real");

                    b.Property<float?>("HazScheme")
                        .HasColumnType("real");

                    b.Property<float?>("HbloanDed")
                        .HasColumnType("real");

                    b.Property<float?>("HouseRent")
                        .HasColumnType("real");

                    b.Property<float?>("HrExp")
                        .HasColumnType("real");

                    b.Property<float?>("IncBonusDed")
                        .HasColumnType("real");

                    b.Property<float?>("IncomeTax")
                        .HasColumnType("real");

                    b.Property<bool>("IsAdvAgainstExp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdvFacility")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdvInTaxDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdvWagesDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsArrearBasic")
                        .HasColumnType("bit");

                    b.Property<bool>("IsArrearBonus")
                        .HasColumnType("bit");

                    b.Property<bool>("IsArrearInTaxDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAttAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBS")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCanteenAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChargAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCheForum")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChemicalAsso")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChemicalForum")
                        .HasColumnType("bit");

                    b.Property<bool>("IsComPfcount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsContainSub")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConvAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConvAllowDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDapEmpClub")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDearAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDedIncBns")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDedIncBonusOf")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDiplomaassoDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDishantenna")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDonation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEduAlloDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEduAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsElectricCharge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsElectricChargeOther")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmpClubDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnggassoDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFa")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFesBonus")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFestivalBonus")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGasAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGasChargeOther")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGascharge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHRExpensesOther")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHazScheme")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHbloan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHr")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHrexp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsIncBonusDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsIncomeTax")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMa")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMaterialLoan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMcloan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMedicalExp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMedicalLoanDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMiscAdd")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMiscDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMobileAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMoktab")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNightAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOffWlfareAsso")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOfficeclubDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOwaSub")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPersonalPay")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPf")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPfAdd")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPfloann")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPurChange")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPurchaseAdv")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRevenueStamp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRiskAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSalaryAdv")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSiftAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTAExp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTelcharge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTiffinAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrncharge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUnionSubDed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWFL")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWagesaAdv")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWashingAllow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWaterChargeOther")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWatercharge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWfloanLocal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWfloanOther")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWfsub")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWpfloanDed")
                        .HasColumnType("bit");

                    b.Property<int?>("LId1")
                        .HasColumnType("int");

                    b.Property<int?>("LId2")
                        .HasColumnType("int");

                    b.Property<int?>("LId3")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("MCLId")
                        .HasColumnType("int");

                    b.Property<float?>("MadicalAllow")
                        .HasColumnType("real");

                    b.Property<float?>("MaterialLoanDed")
                        .HasColumnType("real");

                    b.Property<float?>("McloanDed")
                        .HasColumnType("real");

                    b.Property<float?>("MedicalExp")
                        .HasColumnType("real");

                    b.Property<float?>("MedicalLoanDed")
                        .HasColumnType("real");

                    b.Property<float?>("MiscAdd")
                        .HasColumnType("real");

                    b.Property<float?>("MiscDed")
                        .HasColumnType("real");

                    b.Property<float?>("MobileAllow")
                        .HasColumnType("real");

                    b.Property<float?>("Moktab")
                        .HasColumnType("real");

                    b.Property<float?>("NightAllow")
                        .HasColumnType("real");

                    b.Property<float?>("OffWlfareAsso")
                        .HasColumnType("real");

                    b.Property<float?>("OfficeclubDed")
                        .HasColumnType("real");

                    b.Property<float?>("OwaSub")
                        .HasColumnType("real");

                    b.Property<int?>("PFLId")
                        .HasColumnType("int");

                    b.Property<int?>("PFLLId")
                        .HasColumnType("int");

                    b.Property<int?>("PFLLId2")
                        .HasColumnType("int");

                    b.Property<int?>("PFLLId3")
                        .HasColumnType("int");

                    b.Property<float?>("PersonalPay")
                        .HasColumnType("real");

                    b.Property<float?>("Pf")
                        .HasColumnType("real");

                    b.Property<float?>("PfAdd")
                        .HasColumnType("real");

                    b.Property<float?>("PfloannDed")
                        .HasColumnType("real");

                    b.Property<float?>("PurChange")
                        .HasColumnType("real");

                    b.Property<float?>("PurchaseAdv")
                        .HasColumnType("real");

                    b.Property<float?>("RevenueStamp")
                        .HasColumnType("real");

                    b.Property<float?>("RiskAllow")
                        .HasColumnType("real");

                    b.Property<float?>("SalaryAdv")
                        .HasColumnType("real");

                    b.Property<float?>("SiftAllow")
                        .HasColumnType("real");

                    b.Property<float?>("TAExpense")
                        .HasColumnType("real");

                    b.Property<float?>("TeliphoneCharge")
                        .HasColumnType("real");

                    b.Property<float?>("TiffinAllow")
                        .HasColumnType("real");

                    b.Property<float?>("Transportcharge")
                        .HasColumnType("real");

                    b.Property<float?>("UnionSubDed")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<float?>("WFL")
                        .HasColumnType("real");

                    b.Property<float?>("WagesaAdv")
                        .HasColumnType("real");

                    b.Property<float?>("WashingAllow")
                        .HasColumnType("real");

                    b.Property<float?>("WaterChargeOther")
                        .HasColumnType("real");

                    b.Property<float?>("Watercharge")
                        .HasColumnType("real");

                    b.Property<int?>("WelfareLId")
                        .HasColumnType("int");

                    b.Property<float?>("WfloanLocal")
                        .HasColumnType("real");

                    b.Property<float?>("WfloanOther")
                        .HasColumnType("real");

                    b.Property<float?>("Wfsub")
                        .HasColumnType("real");

                    b.Property<float?>("WpfloanDed")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("BId");

                    b.HasIndex("ComId");

                    b.HasIndex("EmpId")
                        .IsUnique()
                        .HasFilter("[EmpId] IS NOT NULL");

                    b.HasIndex("GLId");

                    b.HasIndex("HBLId");

                    b.HasIndex("HBLId2");

                    b.HasIndex("HBLId3");

                    b.HasIndex("LId1");

                    b.HasIndex("LId2");

                    b.HasIndex("LId3");

                    b.HasIndex("LuserId");

                    b.HasIndex("MCLId");

                    b.HasIndex("PFLId");

                    b.HasIndex("PFLLId");

                    b.HasIndex("PFLLId2");

                    b.HasIndex("PFLLId3");

                    b.HasIndex("WelfareLId");

                    b.ToTable("HR_Emp_Salary");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_ShiftInput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.HasIndex("LuserId");

                    b.HasIndex("ShiftId");

                    b.ToTable("HR_Emp_ShiftInput");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_IncType", b =>
                {
                    b.Property<int>("IncTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IncTypeId"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<string>("IncType")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.HasKey("IncTypeId");

                    b.ToTable("HR_IncType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Leave_Avail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtFrom")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtLvInput")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtTo")
                        .HasColumnType("date");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("InputType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LTypeId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<float?>("LvApp")
                        .HasColumnType("real");

                    b.Property<string>("LvType")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Remark")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<float?>("TotalDay")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.HasIndex("LTypeId");

                    b.HasIndex("LuserId");

                    b.ToTable("HR_Leave_Avail");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Leave_Balance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("AACCL")
                        .HasColumnType("real");

                    b.Property<float?>("ABL")
                        .HasColumnType("real");

                    b.Property<float?>("ACCL")
                        .HasColumnType("real");

                    b.Property<float?>("ACL")
                        .HasColumnType("real");

                    b.Property<float?>("AEL")
                        .HasColumnType("real");

                    b.Property<float?>("ALWP")
                        .HasColumnType("real");

                    b.Property<float?>("AML")
                        .HasColumnType("real");

                    b.Property<float?>("ASL")
                        .HasColumnType("real");

                    b.Property<float?>("ASPL")
                        .HasColumnType("real");

                    b.Property<float?>("ATL")
                        .HasColumnType("real");

                    b.Property<float?>("BL")
                        .HasColumnType("real");

                    b.Property<float>("CL")
                        .HasColumnType("real");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<int>("DtOpeningBalance")
                        .HasColumnType("int");

                    b.Property<float>("EL")
                        .HasColumnType("real");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsELPaid")
                        .HasColumnType("bit");

                    b.Property<float?>("LWP")
                        .HasColumnType("real");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<float?>("ML")
                        .HasColumnType("real");

                    b.Property<float>("SL")
                        .HasColumnType("real");

                    b.Property<float?>("SPL")
                        .HasColumnType("real");

                    b.Property<float?>("TL")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("EmpId")
                        .IsUnique();

                    b.HasIndex("LuserId");

                    b.ToTable("HR_Leave_Balance");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_OverTimeSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("From1")
                        .HasColumnType("int");

                    b.Property<int>("From2")
                        .HasColumnType("int");

                    b.Property<int>("From3")
                        .HasColumnType("int");

                    b.Property<int>("From4")
                        .HasColumnType("int");

                    b.Property<int>("GraceTimeFrom")
                        .HasColumnType("int");

                    b.Property<int>("GraceTimeTo")
                        .HasColumnType("int");

                    b.Property<bool>("IsAllowMinute")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<float>("OT1")
                        .HasColumnType("real");

                    b.Property<float>("OT2")
                        .HasColumnType("real");

                    b.Property<float>("OT3")
                        .HasColumnType("real");

                    b.Property<float>("OT4")
                        .HasColumnType("real");

                    b.Property<int>("OTStart")
                        .HasColumnType("int");

                    b.Property<int>("To1")
                        .HasColumnType("int");

                    b.Property<int>("To2")
                        .HasColumnType("int");

                    b.Property<int>("To3")
                        .HasColumnType("int");

                    b.Property<int>("To4")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("HR_OverTimeSetting");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_ProcessLockModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtToDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLock")
                        .HasColumnType("bit");

                    b.Property<string>("LockType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("LuserId");

                    b.ToTable("HR_ProcessLock");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_ProcessedData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AbTn")
                        .HasColumnType("int");

                    b.Property<string>("AdJusted")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<float>("BS")
                        .HasColumnType("real");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeptId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtPunchDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("EOT")
                        .HasColumnType("real");

                    b.Property<float>("EOTAmt")
                        .HasColumnType("real");

                    b.Property<string>("EmpCode")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeModelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<float>("IsLunchDay")
                        .HasColumnType("real");

                    b.Property<float>("IsNightShift")
                        .HasColumnType("real");

                    b.Property<DateTime?>("Late")
                        .HasColumnType("datetime2");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<float?>("OT")
                        .HasColumnType("real");

                    b.Property<float>("OTAmt")
                        .HasColumnType("real");

                    b.Property<float>("OTHour")
                        .HasColumnType("real");

                    b.Property<float>("OTHourDed")
                        .HasColumnType("real");

                    b.Property<float>("OTRate")
                        .HasColumnType("real");

                    b.Property<string>("PStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("PTimeIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PTimeOut")
                        .HasColumnType("datetime2");

                    b.Property<float>("ROT")
                        .HasColumnType("real");

                    b.Property<float>("ROTAmt")
                        .HasColumnType("real");

                    b.Property<float>("RegHour")
                        .HasColumnType("real");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SectId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShiftIn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShiftType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<float>("StaffOT")
                        .HasColumnType("real");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<TimeSpan>("TimeIn")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TimeOut")
                        .HasColumnType("time");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("EmployeeModelId");

                    b.HasIndex("LuserId");

                    b.ToTable("HR_ProcessedData");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_ProssType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DaySts")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DayStsB")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("DtTran")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("IsLock")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProssDt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("HR_ProssType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_ProssType_WHDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DaySts")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DayStsB")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtPunchDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("HR_ProssType_WHDay");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_RawData_App", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CardNo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceNo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeModelId")
                        .HasColumnType("int");

                    b.Property<string>("FPId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Imei")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("InOut")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<byte?>("IsNew")
                        .HasColumnType("tinyint");

                    b.Property<int?>("LUserId")
                        .HasColumnType("int");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OvNMark")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PCName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PicBack")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PicFront")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRData")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("StNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtPunchDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtPunchTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("wId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeModelId");

                    b.ToTable("HR_RawData_App");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Hr_RawData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CardNo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceNo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("DtPunchDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtPunchTime")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("FPId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Imei")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("InOut")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("IsNew")
                        .HasColumnType("int");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("OvNMark")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<byte[]>("PicBack")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PicFront")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("QRData")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("StNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("EmpId");

                    b.HasIndex("LuserId");

                    b.ToTable("Hr_RawData");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.InternalTransferBatchItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BatchSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InternalTransferItemId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseBatchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("InternalTransferItemId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseBatchId");

                    b.ToTable("InternalTransferBatchItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.InternalTransferItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<double>("AvgCostPrice")
                        .HasColumnType("float");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("FromWarehouseId")
                        .HasColumnType("int");

                    b.Property<int>("InternalTransferId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("SerialItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ToWarehouseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("FromWarehouseId");

                    b.HasIndex("InternalTransferId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ToWarehouseId");

                    b.ToTable("InternalTransferItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.InternalTransferModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InternalTransferCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("InternalTransferDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReferanceOne")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReferanceTwo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseIdMain")
                        .HasColumnType("int");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("WarehouseIdMain");

                    b.HasIndex("ComId", "InternalTransferCode")
                        .IsUnique();

                    b.ToTable("InternalTransfer");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.InternetComplainModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("ComplainName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("InternetComplain");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.InternetPackageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("PackageActiveDay")
                        .HasColumnType("int");

                    b.Property<float>("PackageAmount")
                        .HasColumnType("real");

                    b.Property<string>("PackageDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Speed")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("InternetPackage");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.InternetUserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("ConnectionPointAddress")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastBilledDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NationalIdCard")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ONUMac")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<string>("PaidStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TotalDue")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UserStatusId")
                        .HasColumnType("int");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("LuserId");

                    b.HasIndex("PackageId");

                    b.HasIndex("UserStatusId");

                    b.HasIndex("ComId", "UserId")
                        .IsUnique();

                    b.ToTable("InternetUser");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.InternetUserStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserStatusLong")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserStatusShort")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("InternetUserStatus");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.InvoiceBillModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountReceiveHeadId")
                        .HasColumnType("int");

                    b.Property<decimal>("BadDebt")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("BillAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("BillNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("BilledDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("ExpiredDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("InWords")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NextFollowDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ReceivedAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<bool>("isSystem")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountReceiveHeadId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ComId", "BillNo")
                        .IsUnique();

                    b.ToTable("InvoiceBill");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.IssueBatchItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BatchSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("IssueItemId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseBatchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("IssueItemId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseBatchId");

                    b.ToTable("IssueBatchItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.IssueItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<double>("AvgCostPrice")
                        .HasColumnType("float");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IssueId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("SerialItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("IssueId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("IssueItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.IssueModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("IssueCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReferanceOne")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReferanceTwo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseIdMain")
                        .HasColumnType("int");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("WarehouseIdMain");

                    b.HasIndex("ComId", "IssueCode")
                        .IsUnique();

                    b.ToTable("Issue");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ItemDesc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ItemDescCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescHSCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemDescShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemGroupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ItemGroupId");

                    b.ToTable("ItemDesc");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ItemDescriptionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ItemDescCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescHSCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ItemDescShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ItemGroupId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("LuserId");

                    b.ToTable("ItemDescription");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ItemGroupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ItemGroupCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemGroupHSCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemGroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemGroupShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("ItemMargin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("ItemGroup");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.LCNature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LCNatureName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LCNatureShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LCNature");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.LCStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LCStatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LCStatusShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LCStatus");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.LCType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LCTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LCTypeShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LCType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.LienBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchAddress2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LienBankAccountNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LienBankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SwiftCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("CountryId");

                    b.HasIndex("LuserId");

                    b.ToTable("LienBank");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.LinkShareModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<Guid>("SecretKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("LinkShare");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MASTERPO_ConsumptionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("BOMAllocationCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("BOMMasterId")
                        .HasColumnType("int");

                    b.Property<int>("BuyerPOId")
                        .HasColumnType("int");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("MasterPOId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("Remarks1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BOMAllocationCategoryId");

                    b.HasIndex("BOMMasterId");

                    b.HasIndex("BuyerPOId");

                    b.HasIndex("ColorId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("MasterPOId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SizeId");

                    b.HasIndex("SupplierId");

                    b.ToTable("MASTERPO_Consumption");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MarketModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActiveMember")
                        .HasColumnType("int");

                    b.Property<int?>("ClosedShop")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FifthFloor")
                        .HasColumnType("int");

                    b.Property<int?>("FirstFloor")
                        .HasColumnType("int");

                    b.Property<int?>("Floors")
                        .HasColumnType("int");

                    b.Property<int?>("FourthFloor")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MarketCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MarketNameBng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MarketNameEng")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PrName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PrPhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresidentFileExtension")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PresidentImagePath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SecName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SecPhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SecoundFloor")
                        .HasColumnType("int");

                    b.Property<string>("SecretaryFileExtension")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SecretaryImagePath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ThirdFloor")
                        .HasColumnType("int");

                    b.Property<int?>("TotalShop")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Market");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MasterLCModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerGroupID")
                        .HasColumnType("int");

                    b.Property<int>("BuyerID")
                        .HasColumnType("int");

                    b.Property<string>("BuyerLCRef")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("DayListId")
                        .HasColumnType("int");

                    b.Property<string>("DestinationContract")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<decimal>("ExportLCValueManual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FirstShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Insurance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LCExpirydate")
                        .HasColumnType("datetime2");

                    b.Property<float>("LCMargin")
                        .HasColumnType("real");

                    b.Property<string>("LCNOforImport")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR");

                    b.Property<int?>("LCNatureId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LCOpenDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LCRefNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("LCStatusId")
                        .HasColumnType("int");

                    b.Property<int>("LCTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("LCValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LienBankId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("MasterLCValueManual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("OpeningBankId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentTermsId")
                        .HasColumnType("int");

                    b.Property<int?>("PortOfDischargeId")
                        .HasColumnType("int");

                    b.Property<int?>("PortOfLoadingId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemarksFive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemarksFour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemarksOne")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemarksThree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemarksTwo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SalesContractIssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShipModeId")
                        .HasColumnType("int");

                    b.Property<int?>("ShipModelId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("Tenor")
                        .HasColumnType("int");

                    b.Property<decimal?>("Tolerance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalLCQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TradeTermId")
                        .HasColumnType("int");

                    b.Property<string>("UnitMasterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("unitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("BuyerGroupID");

                    b.HasIndex("BuyerID");

                    b.HasIndex("ComId");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DayListId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("LCNatureId");

                    b.HasIndex("LCStatusId");

                    b.HasIndex("LCTypeId");

                    b.HasIndex("LienBankId");

                    b.HasIndex("LuserId");

                    b.HasIndex("OpeningBankId");

                    b.HasIndex("PaymentTermsId");

                    b.HasIndex("PortOfDischargeId");

                    b.HasIndex("PortOfLoadingId");

                    b.HasIndex("ShipModeId");

                    b.HasIndex("ShipModelId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TradeTermId");

                    b.HasIndex("unitId");

                    b.ToTable("MasterLC");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MasterPODetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuyerPOId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("MasterPOId")
                        .HasColumnType("int");

                    b.Property<double>("Qty")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerPOId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("MasterPOId");

                    b.ToTable("MasterPO_Details");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MasterPOModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MasterPONo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("TotalQty")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("MasterPO_Master");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MasterSalesTaxModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocForTax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("MasterSalesTax");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MemberModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AppliedRemarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ApprovalRemarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BloodGroup")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BusinessAddressBng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BusinessAddressEng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CanceledRemarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CheckedRemarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("EducationalQualification")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FathersNameBng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FathersNameEng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FixedAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HoldingNoBng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HoldingNoEng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsApplied")
                        .HasMaxLength(200)
                        .HasColumnType("bit");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExistImage")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("MarketId")
                        .HasColumnType("int");

                    b.Property<string>("MarketName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("MemberAccessId")
                        .HasColumnType("int");

                    b.Property<string>("MemberBarcodeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberHomePhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberImagePath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("MemberStatusId")
                        .HasColumnType("int");

                    b.Property<string>("MemberType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MembersNameBng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MembersNameEng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NID")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OwnerShipType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProposerMemberNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProposerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ShopId")
                        .HasColumnType("int");

                    b.Property<string>("ShopNameBng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopNameEng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SupporterMemberNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SupporterName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerifiedRemarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("isCanceled")
                        .HasColumnType("bit");

                    b.Property<bool>("isVerified")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("MarketId");

                    b.HasIndex("MemberStatusId");

                    b.HasIndex("ShopId");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MemberStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MemberStatusLong")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MemberStatusShort")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("MemberStatus");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MenuModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AllActionName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ControllerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("FirstParameter")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstValue")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsCreateAction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleteAction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEditAction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsListAction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReportAction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVatMenu")
                        .HasColumnType("bit");

                    b.Property<bool>("IsViewAction")
                        .HasColumnType("bit");

                    b.Property<string>("MenuClass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MenuRemarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("isParent")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MenuPermissionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuPermission");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MenuPermission_DetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleteP")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReport")
                        .HasColumnType("bit");

                    b.Property<bool>("IsView")
                        .HasColumnType("bit");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("MenuPermissionId")
                        .HasColumnType("int");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("MenuPermissionId");

                    b.ToTable("MenuPermission_Details");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MenuPermission_MasterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LUserIdPermission")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<bool>("SummaryView")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LUserIdPermission");

                    b.ToTable("MenuPermission_Master");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MobileTextAnimationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AnimationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("TextMessageOne")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("TextMessageOneColor")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TextMessageOneSize")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TextMessageThree")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("TextMessageThreeColor")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TextMessageThreeSize")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TextMessageTwo")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("TextMessageTwoColor")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TextMessageTwoSize")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TypeColor")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TypeSize")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("MobileTextAnimation");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MonthlySalesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("MonthId")
                        .HasColumnType("int");

                    b.Property<string>("MonthName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalSales")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("MonthlySales");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.NotificationMassage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Massage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NotificationSettingId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ScheduleTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NotificationSettingId");

                    b.ToTable("NotificationMassages");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.NotificationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("NotifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TextMessage")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.NotificationSeenModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("NotificationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("NotificationId");

                    b.ToTable("NotificationSeen");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.NotificationSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("NotificationSettings");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.NotifyParty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DynamicReportId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("NotifyPartyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotifyPartyNameSearch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PortOfDischargeId")
                        .HasColumnType("int");

                    b.Property<int?>("SLNO")
                        .HasColumnType("int");

                    b.Property<string>("ShippedTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShopCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isInactive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ComId");

                    b.HasIndex("CountryId");

                    b.HasIndex("DynamicReportId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PortOfDischargeId");

                    b.ToTable("NotifyParty");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.OfferModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("OfferFigure")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("OfferName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("OfferRangeEnd")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("OfferRangeStart")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("OfferType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Offer");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.OpeningBank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BranchAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchAddress2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("OpeningBankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SwiftCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("CountryId");

                    b.HasIndex("LuserId");

                    b.ToTable("OpeningBank");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.OrdersItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("OrdersId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrdersItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.OrdersModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("DisAmt")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("DisPer")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("OrdersDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PrimaryAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SecoundaryAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("ServiceCharge")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TotalVat")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ComId", "OrderCode")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.OrdersPaymentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentCardNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("OrdersId");

                    b.ToTable("OrdersPayment");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PITypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PITytpeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PITytpeShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("PIType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PackageActivationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ActiveFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ActiveToDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ActiveYesNo")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("BillingName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrxId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("ValidityDay")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("LuserId");

                    b.HasIndex("PackageId");

                    b.HasIndex("ComId", "InvoiceNo")
                        .IsUnique();

                    b.ToTable("PackageActivation");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PaymentMethodModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("BusinessIdNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CW")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNickName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDebitCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPayPal")
                        .HasColumnType("bit");

                    b.Property<string>("LegalAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("LegalCityAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("LegalState")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("LegalZipCode")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOnCard")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("StoreSettingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("CountryId");

                    b.HasIndex("LuserId");

                    b.HasIndex("StoreSettingId");

                    b.ToTable("PaymentMethod");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PaymentTerms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentTermsName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PaymentTermsShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PaymentTermss");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PaymentTermsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DueByDayOfMonth")
                        .HasColumnType("int");

                    b.Property<int?>("DueInFixedDays")
                        .HasColumnType("int");

                    b.Property<int?>("DueNextMonthWithinDays")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("TermName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("PaymentTerms");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PaymentTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeliveryService")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrading")
                        .HasColumnType("bit");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TypeShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PaymentType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PortOfDischarge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PortCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortOfDischargeName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("CountryId");

                    b.HasIndex("LuserId");

                    b.ToTable("PortOfDischarge");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PortOfLoading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PortCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortOfLoadingName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("CountryId");

                    b.HasIndex("LuserId");

                    b.ToTable("PortOfLoading");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PrdUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PrdUnitBanglaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrdUnitCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PrdUnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrdUnitShortName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isPrdUnit")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("PrdUnit");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ProcessLock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtToDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLock")
                        .HasColumnType("bit");

                    b.Property<string>("LockType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("LuserId");

                    b.ToTable("ProcessLock");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ProductColorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductColor");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ProductImageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductImageTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImage");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ProductLedgerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PrdDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("ReceivedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Referance")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TeamType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TicketId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductLedger");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ProductModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccIdConsumption")
                        .HasColumnType("int");

                    b.Property<int?>("AccIdInventory")
                        .HasColumnType("int");

                    b.Property<int?>("AccIdPurchaseVAT")
                        .HasColumnType("int");

                    b.Property<int?>("AccIdSales")
                        .HasColumnType("int");

                    b.Property<int?>("AccIdSalesVAT")
                        .HasColumnType("int");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<decimal>("CommissionAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("CommissionPer")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("EANCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GSM")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNonInventory")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPurchaseTaxInclusive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTaxInclusive")
                        .HasColumnType("bit");

                    b.Property<string>("LocalName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("MOQ")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("OldPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("OpeningDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PCTN")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("ParentProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("ProductColorList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductDiscountAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("ProductDiscountPer")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("ProductProfitPer")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("ProductSizeList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int?>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseTaxId")
                        .HasColumnType("int");

                    b.Property<decimal>("ROL")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ROLStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("ROLThree")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("ROLTwo")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("ROQ")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<double>("RunTimeLiveStock")
                        .HasColumnType("float");

                    b.Property<int?>("SalesTaxId")
                        .HasColumnType("int");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int");

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("UnitId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarrentyId")
                        .HasColumnType("int");

                    b.Property<decimal>("WholeSalePrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<bool>("isSystem")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccIdConsumption");

                    b.HasIndex("AccIdInventory");

                    b.HasIndex("AccIdPurchaseVAT");

                    b.HasIndex("AccIdSales");

                    b.HasIndex("AccIdSalesVAT");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ColorId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ParentProductId");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("PurchaseTaxId");

                    b.HasIndex("SalesTaxId");

                    b.HasIndex("SizeId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UnitId");

                    b.HasIndex("WarrentyId");

                    b.HasIndex("ComId", "Code")
                        .IsUnique();

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ProductReviewsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Ratings")
                        .HasColumnType("int");

                    b.Property<string>("Reviews")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductReviews");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ProductSecUnitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SecUnitRemarks")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("ProductSecoundaryUnit");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ProductSizeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SizeId");

                    b.ToTable("ProductSize");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DivId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IconClass")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseBatchItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BatchRemarks")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BatchSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExchangeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExchangeSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReturn")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("PurchaseBatchAmount")
                        .HasColumnType("float");

                    b.Property<double>("PurchaseBatchPrice")
                        .HasColumnType("float");

                    b.Property<int>("PurchaseBatchQuantity")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseItemId")
                        .HasColumnType("int");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseItemId");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseBatchItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseItemsCategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBillable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTax")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("MasterTaxId")
                        .HasColumnType("int");

                    b.Property<string>("MasterTaxName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseItemsCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccId");

                    b.HasIndex("ComId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LuserId");

                    b.HasIndex("MasterTaxId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("PurchaseItemsCategoryId");

                    b.ToTable("PurchaseItemsCategory");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("BatchStartFrom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("BuyerPOId")
                        .HasColumnType("int");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("IndDiscount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<double>("IndDiscountProportion")
                        .HasColumnType("float");

                    b.Property<decimal>("IndShippingProportion")
                        .HasColumnType("decimal(18,4)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemsReturnStatus")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("MasterTaxId")
                        .HasColumnType("int");

                    b.Property<string>("MasterTaxName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("NewQTY")
                        .HasColumnType("float");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProfitPer")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseItemsId")
                        .HasColumnType("int");

                    b.Property<double>("QTY")
                        .HasColumnType("float");

                    b.Property<double>("QTYOnHand")
                        .HasColumnType("float");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<decimal>("SalesUnitPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int");

                    b.Property<int?>("StyleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WHName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<bool>("isDisPerRow")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BuyerPOId");

                    b.HasIndex("ColorId");

                    b.HasIndex("ComId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LuserId");

                    b.HasIndex("MasterTaxId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("PurchaseItemsId");

                    b.HasIndex("SizeId");

                    b.HasIndex("StyleId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("PurchaseItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AmountsAre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Bcc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CheckDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChequeNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("ChkPer")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("DisAmt")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("DisPer")
                        .HasColumnType("decimal(18,4)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<int>("DocStatusCount")
                        .HasColumnType("int");

                    b.Property<int?>("DocStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("DocTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("DueAmt")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaymentDone")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRecognition")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRecurring")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVatSales")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdApprove")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdCheck")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdVerify")
                        .HasColumnType("int");

                    b.Property<int?>("MasterPOId")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PaidAmt")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentTermsId")
                        .HasColumnType("int");

                    b.Property<string>("PermitNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("PrimaryAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("PurchaseCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchaseFilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ReturnStatus")
                        .HasColumnType("int");

                    b.Property<string>("SecoundaryAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal>("ServiceCharge")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("ShipVia")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalVat")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VerifyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarehouseIdMain")
                        .HasColumnType("int");

                    b.Property<bool>("isBatchPurchase")
                        .HasColumnType("bit");

                    b.Property<bool>("isDisPer")
                        .HasColumnType("bit");

                    b.Property<bool>("isPOSPurchase")
                        .HasColumnType("bit");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DocStatusId");

                    b.HasIndex("DocTypeId");

                    b.HasIndex("LuserId");

                    b.HasIndex("LuserIdApprove");

                    b.HasIndex("LuserIdCheck");

                    b.HasIndex("LuserIdVerify");

                    b.HasIndex("MasterPOId");

                    b.HasIndex("PaymentTermsId");

                    b.HasIndex("StatusId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("WarehouseIdMain");

                    b.HasIndex("ComId", "PurchaseCode")
                        .IsUnique();

                    b.ToTable("Purchase");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchasePaymentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountHeadId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PaymentCardNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountHeadId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("TransactionId");

                    b.HasIndex("VoucherId");

                    b.ToTable("PurchasePayment");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseProductTaxModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("Amount")
                        .HasColumnType("real");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("TaxId");

                    b.ToTable("PurchaseProductTax");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseReturnBatchItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BatchSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseBatchId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseReturnItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseBatchId");

                    b.HasIndex("PurchaseReturnItemId");

                    b.ToTable("PurchaseReturnBatchItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseReturnItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<double>("CommissionAmount")
                        .HasColumnType("float");

                    b.Property<double>("CommissionPer")
                        .HasColumnType("float");

                    b.Property<double>("CostPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseReturnId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SerialItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("UserCommissionAmount")
                        .HasColumnType("float");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseReturnId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("PurchaseReturnItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseReturnModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ChkPer")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DisAmt")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("DisPer")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("DueAmt")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("FinalCostingPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PaidAmt")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PrimaryAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Profit")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("ProfitPercentage")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<string>("PurchaseReturnCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("PurchaseReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecoundaryAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("ServiceCharge")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalCommisionAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("TotalVat")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseIdMain")
                        .HasColumnType("int");

                    b.Property<bool>("isPOSPurchaseReturn")
                        .HasColumnType("bit");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.Property<bool>("isSerialPurchaseReturn")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("WarehouseIdMain");

                    b.HasIndex("ComId", "PurchaseReturnCode")
                        .IsUnique();

                    b.ToTable("PurchaseReturn");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseReturnPaymentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountHeadId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PaymentCardNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PurchaseReturnId")
                        .HasColumnType("int");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountHeadId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PurchaseReturnId");

                    b.HasIndex("TransactionId");

                    b.HasIndex("VoucherId");

                    b.ToTable("PurchaseReturnPayment");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseTagModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("TagsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("TagsId");

                    b.ToTable("purchaseTag");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseTermsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<string>("TermsDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TermsName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TermsSLNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("PurchaseTerms");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.RecurringDetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("Count_")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateDays")
                        .HasColumnType("int");

                    b.Property<string>("End_")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Every_")
                        .HasColumnType("int");

                    b.Property<string>("Integer_")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interval")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Month_")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NextDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PreviousDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecurringEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RecurringStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SalesId")
                        .HasColumnType("int");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Week_")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("occurences")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("SalesId");

                    b.HasIndex("TransactionId");

                    b.ToTable("RecurringDetails");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ReportGroupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Iconclass")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ReportGroupName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ReportGroup");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ReportModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<int?>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("InActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManagement")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("ReportLink")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("ReportName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ReportStyleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<string>("LogoPlacement")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReportFor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReportStyleName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ReportStyleRemarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TextPlacement")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ReportStyle");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ReportUserTrackingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("ReportId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ReportId");

                    b.ToTable("ReportUserTracking");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesBatchItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BatchSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseBatchId")
                        .HasColumnType("int");

                    b.Property<double>("SalesBatchAmount")
                        .HasColumnType("float");

                    b.Property<double>("SalesBatchPrice")
                        .HasColumnType("float");

                    b.Property<int>("SalesBatchQuantity")
                        .HasColumnType("int");

                    b.Property<int>("SalesItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseBatchId");

                    b.HasIndex("SalesItemId");

                    b.ToTable("SalesBatchItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesExchangeBatchItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BatchSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseBatchId")
                        .HasColumnType("int");

                    b.Property<int>("SalesExchangeItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseBatchId");

                    b.HasIndex("SalesExchangeItemId");

                    b.ToTable("SalesExchangeBatchItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesExchangeItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<double>("AvgCostPrice")
                        .HasColumnType("float");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<double>("CommissionAmount")
                        .HasColumnType("float");

                    b.Property<double>("CommissionPer")
                        .HasColumnType("float");

                    b.Property<double>("CostPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("IndDisPer")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("IndDiscount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<double>("IndDiscountProportionExc")
                        .HasColumnType("float");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseItemsId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("SalesReturnId")
                        .HasColumnType("int");

                    b.Property<string>("SerialItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("UserCommissionAmount")
                        .HasColumnType("float");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseItemsId");

                    b.HasIndex("SalesReturnId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("SalesExchangeItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<double>("AvgCostPrice")
                        .HasColumnType("float");

                    b.Property<double>("CartonQty")
                        .HasColumnType("float");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<double>("CommissionAmount")
                        .HasColumnType("float");

                    b.Property<double>("CommissionPer")
                        .HasColumnType("float");

                    b.Property<double>("CostPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("DefaultPrice")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("ForwardSalesQuantity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("IndDisPer")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("IndDiscount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<double>("IndDiscountProportion")
                        .HasColumnType("float");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTax")
                        .HasColumnType("bit");

                    b.Property<decimal>("IssueQuantity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("ItemsReturnStatus")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("MasterTaxId")
                        .HasColumnType("int");

                    b.Property<string>("MasterTaxName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("PCTN")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseItemsId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<decimal>("ReturnQuantity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("SalesId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesItemsId")
                        .HasColumnType("int");

                    b.Property<string>("SerialItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TokenItemsId")
                        .HasColumnType("int");

                    b.Property<decimal>("TokenSalesQty")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("UserCommissionAmount")
                        .HasColumnType("float");

                    b.Property<string>("WHName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<bool>("isDisPerRow")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseItemsId");

                    b.HasIndex("SalesId");

                    b.HasIndex("SalesItemsId");

                    b.HasIndex("TokenItemsId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("SalesItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AmountsAre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("ChangeAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("CustomerCommissionAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("CustomerCommissionPer")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("DisAmt")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("DisPer")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("DocStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("DocTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("DueAmt")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FinalCostingPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaymentDone")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRecognition")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRecurring")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVatSales")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MessageInvoice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageStatement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("PaidAmt")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("PrevDue")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("PrimaryAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Profit")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("ProfitPercentage")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ReturnStatus")
                        .HasColumnType("int");

                    b.Property<int>("RewardPointValue")
                        .HasColumnType("int");

                    b.Property<decimal?>("SRCommissionAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("SRCommissionPer")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("SaleCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("SalesDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SalesRepId")
                        .HasColumnType("int");

                    b.Property<string>("SecoundaryAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("ServiceCharge")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("ShippingDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ShippingTax")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("ShippingTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingVia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StatusDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("StatusRemarks")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("StatusUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusUpdatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.Property<double>("TaxAmount")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalCommisionAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("TotalVat")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("TrackingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarehouseIdMain")
                        .HasColumnType("int");

                    b.Property<bool>("isDisPer")
                        .HasColumnType("bit");

                    b.Property<bool>("isPOSSales")
                        .HasColumnType("bit");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.Property<bool>("isSerialSales")
                        .HasColumnType("bit");

                    b.Property<bool>("isWholeSales")
                        .HasColumnType("bit");

                    b.Property<int?>("salesRecievedtTermsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DocStatusId");

                    b.HasIndex("DocTypeId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("OrderId");

                    b.HasIndex("SalesRepId");

                    b.HasIndex("StatusId");

                    b.HasIndex("WarehouseIdMain");

                    b.HasIndex("salesRecievedtTermsId");

                    b.HasIndex("ComId", "SaleCode")
                        .IsUnique();

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesPaymentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountHeadId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PaymentCardNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PaymentTypeModelId")
                        .HasColumnType("int");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<int>("SalesId")
                        .HasColumnType("int");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountHeadId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PaymentTypeModelId");

                    b.HasIndex("SalesId");

                    b.HasIndex("TransactionId");

                    b.HasIndex("VoucherId");

                    b.ToTable("SalesPayment");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesProductTaxModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("Amount")
                        .HasColumnType("real");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SalesId")
                        .HasColumnType("int");

                    b.Property<int?>("TaxId")
                        .HasColumnType("int");

                    b.Property<float?>("TotalAmount")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SalesId");

                    b.HasIndex("TaxId");

                    b.ToTable("SalesProductTax");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesReturnBatchItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BatchSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseBatchId")
                        .HasColumnType("int");

                    b.Property<int>("SalesReturnItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseBatchId");

                    b.HasIndex("SalesReturnItemId");

                    b.ToTable("SalesReturnBatchItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesReturnItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<double>("AvgCostPrice")
                        .HasColumnType("float");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<double>("CommissionAmount")
                        .HasColumnType("float");

                    b.Property<double>("CommissionPer")
                        .HasColumnType("float");

                    b.Property<double>("CostPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("IndDisPer")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("IndDiscount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("SalesReturnId")
                        .HasColumnType("int");

                    b.Property<string>("SerialItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("UserCommissionAmount")
                        .HasColumnType("float");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SalesReturnId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("SalesReturnItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesReturnModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ChkPer")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("DisAmt")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("DisPer")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("DueAmt")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("FinalCostingPrice")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PaidAmt")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PrimaryAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Profit")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("ProfitPercentage")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("SaleId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesRepId")
                        .HasColumnType("int");

                    b.Property<string>("SalesReturnCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("SalesReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecoundaryAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("ServiceCharge")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalCommisionAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("TotalVat")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseIdMain")
                        .HasColumnType("int");

                    b.Property<bool>("isPOSSalesReturn")
                        .HasColumnType("bit");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.Property<bool>("isSerialSalesReturn")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SaleId");

                    b.HasIndex("SalesRepId");

                    b.HasIndex("WarehouseIdMain");

                    b.HasIndex("ComId", "SalesReturnCode")
                        .IsUnique();

                    b.ToTable("SalesReturn");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesReturnPaymentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountHeadId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PaymentCardNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<int>("SalesReturnId")
                        .HasColumnType("int");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountHeadId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SalesReturnId");

                    b.HasIndex("TransactionId");

                    b.HasIndex("VoucherId");

                    b.ToTable("SalesReturnPayment");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesTagModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("SalesId")
                        .HasColumnType("int");

                    b.Property<int?>("TagsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SalesId");

                    b.HasIndex("TagsId");

                    b.ToTable("salesTag");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesTaxModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccIdPurchaseTaxes")
                        .HasColumnType("int");

                    b.Property<int?>("AccIdSalesTaxes")
                        .HasColumnType("int");

                    b.Property<int?>("AgentId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<float?>("CustomRateTotal")
                        .HasColumnType("real");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSingleTax")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Rate")
                        .HasColumnType("real");

                    b.Property<int?>("SalesTaxMasterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccIdPurchaseTaxes");

                    b.HasIndex("AccIdSalesTaxes");

                    b.HasIndex("AgentId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SalesTaxMasterId");

                    b.ToTable("SalesTax");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesTermsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("SalesId")
                        .HasColumnType("int");

                    b.Property<string>("TermsDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TermsName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TermsSLNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SalesId");

                    b.ToTable("SalesTerms");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ShipMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("ShipModeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShipModeShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("ShipMode");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ShipModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ShipName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShipShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ShipModel");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ShippingChargeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ChargeAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("ShippingLocationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("ShippingCharge");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ShopModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HoldingNoBng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HoldingNoEng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("MarketId")
                        .HasColumnType("int");

                    b.Property<string>("ShopBusinessAddressBng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopBusinessAddressEng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShopDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShopFileExtension")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("ShopImage")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ShopImagePath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopMobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShopNameBng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopNameEng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopOwnerBng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopOwnerEng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopTypeItemProduct")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopWebSite")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("MarketId");

                    b.ToTable("Shop");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ShortLinkHitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LongString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("ShortLinkId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WebBrowserName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("WebLink")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("ShortLinkId");

                    b.ToTable("ShortLinkHit");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ShortLinkModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("ShortLink");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SizeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SizeShortName")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInactive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.ToTable("Size");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SizesChildModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<int>("StyleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SizeId");

                    b.HasIndex("StyleId");

                    b.ToTable("SizeChild");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SizesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("SizeCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SizeDesc")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SmsSettingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("SmsProvider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("smsAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsSender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("SmsSetting");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SoftwarePackageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActiveYesNo")
                        .HasColumnType("bit");

                    b.Property<int?>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<float>("DiscountPercentage")
                        .HasColumnType("real");

                    b.Property<float>("Duration")
                        .HasColumnType("real");

                    b.Property<int?>("DurationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LinkAdd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PackagePrice")
                        .HasColumnType("real");

                    b.Property<string>("SoftwarePackageCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwarePackageDescription")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SoftwarePackageFileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwarePackageImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DurationId");

                    b.ToTable("SoftwarePackage");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.StatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DocTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("StatusShort")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocTypeId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.StoreSettingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountingMethodId")
                        .HasColumnType("int");

                    b.Property<string>("AdditionalEmailOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("BarcodePrefixForWeightScale")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<int?>("BarcodeReportStyleId")
                        .HasColumnType("int");

                    b.Property<int>("BaseComId")
                        .HasColumnType("int");

                    b.Property<string>("Bcc")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BusinessIdNo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Cc")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerFacingAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("CustomerFacingCityAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("CustomerFacingState")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("CustomerFacingZipCode")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("CustomizedReportFormatName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("DateFormatId")
                        .HasColumnType("int");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<int>("DecimalField")
                        .HasColumnType("int");

                    b.Property<string>("DefaultMessageForPurchase")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DeliveryMethod")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("DocTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailMessage")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EmailSubjectLine")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Facebook")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("FinancialYearId")
                        .HasColumnType("int");

                    b.Property<string>("FirstDayOfWeek")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GreetingAppeal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GreetingNameFormat")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HeaderCaption")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<bool>("IsAllowTimeToBillable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAutoAppliedBillPayment")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAutoInvoicedUnbilled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBillableItemAndExpenses")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCloseTheBooks")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCopyEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCreateMultiplePartialInvoice")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCustomTransactionNumber")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefaultDisAmount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeposit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDiscount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDuplicateBillNo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDuplicateCheque")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDuplicateJournal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabledAccNumbers")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstLetterUpperCase")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFixedDiscountMainValue")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFixedDiscountRowValue")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFixedSalesValue")
                        .HasColumnType("bit");

                    b.Property<bool>("IsIndDiscount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsListAllTransaction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsListEachTransaction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOrganisedJob")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPdfAttached")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPreFillFormsPrevEnteredContent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSalesCopyEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSalesCustomtransactionNumber")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSalesDescription")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSerialSales")
                        .HasColumnType("bit");

                    b.Property<bool>("IsServiceDate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShipping")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowBillingRateToUser")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowFullDetailsInEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowItemsTablesOnForms")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowProductServiceColumn")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowServiceField")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowSku")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowSummaryInEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowTagsOnFroms")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSignature")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTags")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTermsCondition")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrackQtyOnHand")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrackedByCustomer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrackedClasses")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrackedLocations")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTracktyRatePrice")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVatLogin")
                        .HasColumnType("bit");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("LegalAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("LegalCityAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("LegalName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LegalState")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("LegalZipCode")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<double>("MaxDiscountMainValue")
                        .HasColumnType("float");

                    b.Property<double>("MaxDiscountPercentageMainValue")
                        .HasColumnType("float");

                    b.Property<double>("MaxDiscountRowValue")
                        .HasColumnType("float");

                    b.Property<int?>("NumberFormatId")
                        .HasColumnType("int");

                    b.Property<decimal>("OfferDiscountPer")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("PaymentInstructions")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneTwo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("PrintBrandName")
                        .HasColumnType("bit");

                    b.Property<bool>("PrintModelName")
                        .HasColumnType("bit");

                    b.Property<bool>("PrintProductCode")
                        .HasColumnType("bit");

                    b.Property<bool>("PrintProductDescription")
                        .HasColumnType("bit");

                    b.Property<bool>("PrintProductName")
                        .HasColumnType("bit");

                    b.Property<bool>("PrintSizeName")
                        .HasColumnType("bit");

                    b.Property<int?>("PurchaseReportStyleId")
                        .HasColumnType("int");

                    b.Property<bool>("RedirectToEcommercePage")
                        .HasColumnType("bit");

                    b.Property<string>("ReminderOneDays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReminderOneDueDate")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReminderOneGreetingAppeal")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReminderOneGreetingNameFormat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReminderOneMessage")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ReminderOneSubjectLine")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReminderThreeDays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReminderThreeDueDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReminderThreeGreetingAppeal")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReminderThreeGreetingNameFormat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReminderThreeMessage")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ReminderThreeSubjectLine")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReminderTwoDays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReminderTwoDueDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReminderTwoGreetingAppeal")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReminderTwoGreetingNameFormat")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReminderTwoMessage")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ReminderTwoSubjectLine")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReportCaptionSmall")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SalesBcc")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SalesCc")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SalesEmailMessage")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SalesEmailSubjectLine")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SalesGreetingAppeal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SalesGreetingNameFormat")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SalesReportStyleId")
                        .HasColumnType("int");

                    b.Property<string>("ShortCutKey")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<int?>("SignOutDurationId")
                        .HasColumnType("int");

                    b.Property<int?>("SoftwarePackageId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SubscriptionTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("TaxFormId")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxPer")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("TaxRateId")
                        .HasColumnType("int");

                    b.Property<int?>("TermsId")
                        .HasColumnType("int");

                    b.Property<int>("TimeZoneSettingsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("VisibleSalesCommission")
                        .HasColumnType("bit");

                    b.Property<int?>("VoucherNoCreatedTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Web")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("customerFacingEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fixMonthofTaxYear")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("isBackDatePermission")
                        .HasColumnType("bit");

                    b.Property<bool>("isChequeDetails")
                        .HasColumnType("bit");

                    b.Property<bool>("isDiscountOffer")
                        .HasColumnType("bit");

                    b.Property<bool>("isEmailSerivce")
                        .HasColumnType("bit");

                    b.Property<bool>("isMultiCurrency")
                        .HasColumnType("bit");

                    b.Property<bool>("isMultiDebitCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("isMultiSelect")
                        .HasColumnType("bit");

                    b.Property<bool>("isSMSService")
                        .HasColumnType("bit");

                    b.Property<bool>("isScanner")
                        .HasColumnType("bit");

                    b.Property<bool>("isTaxExcluded")
                        .HasColumnType("bit");

                    b.Property<bool>("isVoucherDistributionEntry")
                        .HasColumnType("bit");

                    b.Property<string>("vat")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AccountingMethodId");

                    b.HasIndex("BarcodeReportStyleId");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("ComId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DateFormatId");

                    b.HasIndex("DocTypeId");

                    b.HasIndex("FinancialYearId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LuserId");

                    b.HasIndex("NumberFormatId");

                    b.HasIndex("PurchaseReportStyleId");

                    b.HasIndex("SalesReportStyleId");

                    b.HasIndex("SignOutDurationId");

                    b.HasIndex("SoftwarePackageId");

                    b.HasIndex("SubscriptionTypeId");

                    b.HasIndex("TaxFormId");

                    b.HasIndex("TaxRateId");

                    b.HasIndex("TermsId");

                    b.HasIndex("TimeZoneSettingsId");

                    b.HasIndex("VoucherNoCreatedTypeId");

                    b.ToTable("StoreSetting");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.StyleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("StyleNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Style");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SubscriptionActivationCompanyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ActiveFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ActiveToDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<int?>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubscriptionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("ValidityDay")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("SubscriptionTypeId");

                    b.ToTable("SubscriptionActivationCompany");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SubscriptionActivationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ActiveFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ActiveToDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<int?>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubscriptionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("ValidityDay")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SubscriptionTypeId");

                    b.ToTable("SubscriptionActivation");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SubscriptionTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<float>("SubscriptionAmount")
                        .HasColumnType("real");

                    b.Property<string>("SubscriptionName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SubscriptionRemarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ValidationRemarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ValidityDay")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTypeId");

                    b.ToTable("SubscriptionType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SupplierModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccIdExpenseCategory")
                        .HasColumnType("int");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime?>("AsOf")
                        .HasColumnType("datetime2");

                    b.Property<string>("BillingRate")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("BusinessIdNo")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("ClBalance")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("ContactPersonDesignation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactPersonName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("LoginId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("OpBalance")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Other")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PaymentTermsId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PrimaryAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("SecoundaryAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StatusRemarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suffix")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("SupParentId")
                        .HasColumnType("int");

                    b.Property<string>("SupType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("SupplierCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("SupplierCommissionPer")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("SupplierCurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierFilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("TradeLicenseNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AccIdExpenseCategory");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PaymentTermsId");

                    b.HasIndex("SupParentId");

                    b.HasIndex("SupplierCurrencyId");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TagsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TagShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TagsType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ParentId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TaskToDoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("AssaignToPerson")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("TaskColour")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TaskDetails")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("TaskPercentage")
                        .HasColumnType("int");

                    b.Property<string>("TaskRemarks")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("TaskTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TaskToDoParentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("TaskToDoParentId");

                    b.ToTable("TaskToDo");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TaxFormModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasMaxLength(200)
                        .HasColumnType("bit");

                    b.Property<string>("TaxFormName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TaxForm");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TermsMainModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("TermsName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TermsRemarks")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("TermsMain");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TermsSubModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Terms")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TermsDescription")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.Property<int>("TermsId")
                        .HasColumnType("int");

                    b.Property<int>("TermsSerialNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("TermsId");

                    b.ToTable("TermsSub");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TestRouterOnuTrackingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GivenBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MacSerial")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PrdDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WithdrawnBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("WithdrawnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.ToTable("TestRouterOnuTracking");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TimeZoneSettingsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("TimeZoneName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TimeZoneNameJquery")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UTCTime")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInactive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TimeZoneSettings");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ToDoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssaignFusionTeam")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("StaffComment")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TicketId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.ToTable("ToDo");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ToWarehousePermissionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int>("LuserIdAllow")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("ToWarehousePermission");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TokenSalesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BlackGross")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("BlackNet")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("BlackProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("BlackTare")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("DocTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("OtherOneGross")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("OtherOneNet")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("OtherOneProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("OtherOneTare")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("OtherTwoGross")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("OtherTwoNet")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("OtherTwoProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("OtherTwoTare")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PrimaryAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TokenCode")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("TokenDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarehouseIdMain")
                        .HasColumnType("int");

                    b.Property<decimal>("WhiteGross")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("WhiteNet")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("WhiteProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("WhiteTare")
                        .HasColumnType("decimal(18,4)");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BlackProductId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DocTypeId");

                    b.HasIndex("LuserId");

                    b.HasIndex("OtherOneProductId");

                    b.HasIndex("OtherTwoProductId");

                    b.HasIndex("WarehouseIdMain");

                    b.HasIndex("WhiteProductId");

                    b.HasIndex("ComId", "TokenCode")
                        .IsUnique();

                    b.ToTable("TokenSales");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TradeTerm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("TradeTermName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TradeTermShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TradeTerm");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TradeTermsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("TradeTermCaption")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInactive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("TradeTerms");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TransactionDetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AIT")
                        .HasColumnType("decimal(18,4)");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("ExchangeLossGain")
                        .HasColumnType("decimal(18,4)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesId")
                        .HasColumnType("int");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("VAT")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("SalesId");

                    b.HasIndex("TransactionId");

                    b.ToTable("AccountsDailyTransactionDetails");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TransactionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AITAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("CategoryItemId")
                        .HasColumnType("int");

                    b.Property<string>("CheckNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CheckRemarks")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int?>("ComingFrom")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreditAccountId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrencyRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DamageId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitAccountId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRecurring")
                        .HasColumnType("bit");

                    b.Property<int?>("IssueId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentTransactionId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductItemId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseReturnId")
                        .HasColumnType("int");

                    b.Property<int?>("SalarySheetId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesReturnId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("TransactionAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("TransactionCategory")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TransactionCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TransactionFilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TransactionQuantity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("TransactionRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("TransferInId")
                        .HasColumnType("int");

                    b.Property<int?>("TransferOutId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("VATAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dtClearChk")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtFromChk")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dtToChk")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isPayment")
                        .HasColumnType("bit");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<bool>("isReceipt")
                        .HasColumnType("bit");

                    b.Property<bool>("isSystem")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryItemId");

                    b.HasIndex("ComId");

                    b.HasIndex("CreditAccountId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DamageId");

                    b.HasIndex("DebitAccountId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("IssueId");

                    b.HasIndex("LuserId");

                    b.HasIndex("MemberId");

                    b.HasIndex("ParentTransactionId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("ProductItemId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("PurchaseReturnId");

                    b.HasIndex("SalarySheetId");

                    b.HasIndex("SalesId");

                    b.HasIndex("SalesReturnId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TransferInId");

                    b.HasIndex("TransferOutId");

                    b.HasIndex("VoucherId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("AccountsDailyTransaction");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TransactionTagsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("TransactionId");

                    b.ToTable("TransactionTags");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TroubleTicketCommentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("CommentToLuserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("TroubleTicketId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("CommentToLuserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("TroubleTicketId");

                    b.ToTable("TroubleTicketComment");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TroubleTicketModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiagnosisReportId")
                        .HasColumnType("int");

                    b.Property<int?>("DiagonosisByLUserId")
                        .HasColumnType("int");

                    b.Property<int?>("InternetComplainId")
                        .HasColumnType("int");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Recommendation")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SupportByLUserId")
                        .HasColumnType("int");

                    b.Property<string>("TicketNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DiagnosisReportId");

                    b.HasIndex("DiagonosisByLUserId");

                    b.HasIndex("InternetComplainId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SupportByLUserId");

                    b.HasIndex("ComId", "TicketNo")
                        .IsUnique();

                    b.ToTable("TroubleTicket");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TruckInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupLcId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("LCId")
                        .HasColumnType("int");

                    b.Property<string>("LCNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MasterLC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PINo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Percentage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrintDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TruckNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("TruckInfo");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.UnitGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("UnitGroup");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.UnitMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExportOrdersId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsBaseUOM")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal?>("RelativeFactor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UnitGroupId")
                        .HasColumnType("int");

                    b.Property<string>("UnitMasterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("UnitGroupId");

                    b.ToTable("UnitMaster");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.UnitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitNameBangla")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.UserAccountModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBaseUser")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInacitve")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhoneVerified")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OTP")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UniqueUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LuserId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("UserAccount");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.UserLogingInfoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LoginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LongString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MacAddress")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PcName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebBrowserName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("WebLink")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("UserLogingInfo");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.UserRoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("RoleRemarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTypeId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.UserTerminateModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceUpdate")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MobileNoIfNecessary")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("NextFollowDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("TerminateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.ToTable("UserTerminate");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.UserTransactionLogModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("CommandType")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ControllerName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentReferance")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("FlagValue")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("FromDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ToDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionStatement")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WebLink")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("UserTransactionLog");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.VGMModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressOfWeightBridge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("ContainerNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContainerSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContainerType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("IssuedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("NameofShipper")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviouslyDeclaredweight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingAgent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TareWeight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VGAMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VGANo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VGMPerformedShipperBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VGMWeightbyCPA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifiedGrossMass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeightBridgeRegistrationNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("VGM");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.VariableModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icons")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTop")
                        .HasColumnType("bit");

                    b.Property<string>("PerameterValue")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VariableAction")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("VariableCategory")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("VariableController")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VariableFor")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("VariableName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("VariablePerameter")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("VariableValue")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Variable");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.VoterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("father")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("mother")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("nameEn")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("oldNationalIdNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("permanentAddress")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<byte[]>("photo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("photoExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("photoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("presentAddressBN")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<string>("profession")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("spouse")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("voterNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Voter");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.VoucherTranGroupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherTranGroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("VoucherTranGroup");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.WalletModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreditBalanceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPost")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RechargeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RechargeBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("UsedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ValidityDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("CreditBalanceId");

                    b.HasIndex("LuserId");

                    b.ToTable("Wallet");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.WarehouseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StoreAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WhName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WhShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WhType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ParentId");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.WarrantyItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("ComplainNo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Complainer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("NextFollowDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrimaryAddress")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Problem")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseBatchId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ReplacedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReplacedSerialNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SalesId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseBatchId");

                    b.HasIndex("SalesId");

                    b.HasIndex("SupplierId");

                    b.ToTable("WarrentyItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.WarrentyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("DurationTimeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInactive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DurationTimeId");

                    b.ToTable("Warrenty");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.WorkOrderMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AdvancePayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("AgreementDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int?>("CommercialCompanyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ConversionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateApproval")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<int?>("ItemDescId")
                        .HasColumnType("int");

                    b.Property<string>("ItemDescList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR");

                    b.Property<int?>("ItemGroupId")
                        .HasColumnType("int");

                    b.Property<string>("ItemGroupName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal?>("NetPayable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("OtherExp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OtherTerms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentTerms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RecommenedById")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SalesTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceContract")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ServiceContractEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ServiceContractStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shipping")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("ToPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WODetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("WorkOrderAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("WorkOrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkOrderNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("WorkOrderQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("WorkOrderRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("WorkOrderStatusId")
                        .HasColumnType("int");

                    b.Property<string>("WorkOrderType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedById");

                    b.HasIndex("ComId");

                    b.HasIndex("CommercialCompanyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ItemDescId");

                    b.HasIndex("ItemGroupId");

                    b.HasIndex("LuserId");

                    b.HasIndex("RecommenedById");

                    b.HasIndex("SupplierId");

                    b.HasIndex("WorkOrderStatusId");

                    b.ToTable("WorkOrderMaster");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.WorkorderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkorderStatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WorkorderStatusShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("WorkorderStatus");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_BudgetMainModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Acc_FiscalYearModel", "Acc_FiscalYears")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Acc_FiscalYearModel", "PreFills")
                        .WithMany()
                        .HasForeignKey("PreFillId");

                    b.Navigation("Acc_FiscalYears");

                    b.Navigation("CompanyList");

                    b.Navigation("PreFills");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_FiscalHalfYear", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_FiscalMonthModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_FiscalQtr", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_FiscalYearModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_VoucherMainModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Acc_Currency")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Acc_CurrencyLocal")
                        .WithMany()
                        .HasForeignKey("CountryIdLocal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Acc_FiscalMonthModel", "Acc_FiscalMonths")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("Atrai.Model.Core.Entity.Acc_FiscalYearModel", "Acc_FiscalYears")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PrdUnit", "PrdUnits")
                        .WithMany()
                        .HasForeignKey("PrdUnitId");

                    b.HasOne("Atrai.Model.Core.Entity.VoucherTranGroupModel", "VoucherTranGroups")
                        .WithMany()
                        .HasForeignKey("VoucherTranGroupId");

                    b.HasOne("Atrai.Model.Core.Entity.Acc_VoucherTypeModel", "Acc_VoucherTypes")
                        .WithMany("VoucherMains")
                        .HasForeignKey("VoucherTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "Location")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("Acc_Currency");

                    b.Navigation("Acc_CurrencyLocal");

                    b.Navigation("Acc_FiscalMonths");

                    b.Navigation("Acc_FiscalYears");

                    b.Navigation("Acc_VoucherTypes");

                    b.Navigation("CompanyList");

                    b.Navigation("Location");

                    b.Navigation("PrdUnits");

                    b.Navigation("UserAccountList");

                    b.Navigation("VoucherTranGroups");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_VoucherNoPrefixModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Acc_VoucherTypeModel", "vVoucherTypes")
                        .WithMany("VoucherNoPrefixs")
                        .HasForeignKey("VoucherTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");

                    b.Navigation("vVoucherTypes");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_VoucherSubChecknoModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "vAcc_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Acc_VoucherMainModel", "Acc_VoucherMain")
                        .WithMany("VoucherCheckNos")
                        .HasForeignKey("VoucherId");

                    b.HasOne("Atrai.Model.Core.Entity.Acc_VoucherSubModel", "Acc_VoucherSub")
                        .WithMany("VoucherSubChecnoes")
                        .HasForeignKey("VoucherSubId");

                    b.Navigation("Acc_VoucherMain");

                    b.Navigation("Acc_VoucherSub");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");

                    b.Navigation("vAcc_ChartOfAccount");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_VoucherSubModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "Acc_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "CountryForeign")
                        .WithMany()
                        .HasForeignKey("CurrencyForeignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Country")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CustomerModel", "Customers")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Atrai.Model.Core.Entity.DamageModel", "Damage")
                        .WithMany()
                        .HasForeignKey("DamageId");

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "EmployeeData")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.HasOne("Atrai.Model.Core.Entity.IssueModel", "Issue")
                        .WithMany()
                        .HasForeignKey("IssueId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.MemberModel", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseModel", "Purchase")
                        .WithMany()
                        .HasForeignKey("PurchaseId");

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseReturnModel", "PurchaseReturn")
                        .WithMany()
                        .HasForeignKey("PurchaseReturnId");

                    b.HasOne("Atrai.Model.Core.Entity.SalesModel", "Sale")
                        .WithMany()
                        .HasForeignKey("SalesId");

                    b.HasOne("Atrai.Model.Core.Entity.SalesReturnModel", "SalesReturn")
                        .WithMany()
                        .HasForeignKey("SalesReturnId");

                    b.HasOne("Atrai.Model.Core.Entity.SupplierModel", "Suppliers")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("Atrai.Model.Core.Entity.InternalTransferModel", "TransferIn")
                        .WithMany()
                        .HasForeignKey("TransferInId");

                    b.HasOne("Atrai.Model.Core.Entity.InternalTransferModel", "TransferOut")
                        .WithMany()
                        .HasForeignKey("TransferOutId");

                    b.HasOne("Atrai.Model.Core.Entity.Acc_VoucherMainModel", "Acc_VoucherMain")
                        .WithMany("VoucherSubs")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.VoucherTranGroupModel", "VoucherTranGroups")
                        .WithMany()
                        .HasForeignKey("VoucherTranGroupIdRow");

                    b.Navigation("Acc_ChartOfAccount");

                    b.Navigation("Acc_VoucherMain");

                    b.Navigation("CompanyList");

                    b.Navigation("Country");

                    b.Navigation("CountryForeign");

                    b.Navigation("Customers");

                    b.Navigation("Damage");

                    b.Navigation("EmployeeData");

                    b.Navigation("Issue");

                    b.Navigation("Member");

                    b.Navigation("Purchase");

                    b.Navigation("PurchaseReturn");

                    b.Navigation("Sale");

                    b.Navigation("SalesReturn");

                    b.Navigation("Suppliers");

                    b.Navigation("TransferIn");

                    b.Navigation("TransferOut");

                    b.Navigation("UserAccountList");

                    b.Navigation("VoucherTranGroups");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_VoucherSubSectionModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Cat_SubSectionModel", "SubSection")
                        .WithMany()
                        .HasForeignKey("SubSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Acc_VoucherSubModel", "Acc_VoucherSub")
                        .WithMany("VoucherSubSections")
                        .HasForeignKey("VoucherSubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_VoucherSub");

                    b.Navigation("CompanyList");

                    b.Navigation("SubSection");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_VoucherTagsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Acc_VoucherMainModel", "acc_vouchermains")
                        .WithMany("VoucherTagsList")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");

                    b.Navigation("acc_vouchermains");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_VoucherTranGroupModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Acc_VoucherMainModel", "acc_vouchermains")
                        .WithMany("Acc_VoucherTranGroups")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.VoucherTranGroupModel", "VoucherTranGroups")
                        .WithMany()
                        .HasForeignKey("VoucherTranGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");

                    b.Navigation("VoucherTranGroups");

                    b.Navigation("acc_vouchermains");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AccountCategoryModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.AccountCategoryModel", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentAccountCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AccountHeadModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.AccountCategoryModel", "AccountCategorys")
                        .WithMany()
                        .HasForeignKey("AccountCategoryId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Currency")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "vAccountGroupHead")
                        .WithMany("ChildrenAccountList")
                        .HasForeignKey("ParentId");

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "Location")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("AccountCategorys");

                    b.Navigation("CompanyList");

                    b.Navigation("Currency");

                    b.Navigation("Location");

                    b.Navigation("UserAccountList");

                    b.Navigation("vAccountGroupHead");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AccountHeadPermissionModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "AccountHeadList")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountHeadList");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AccountHeadSystemModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.AccountCategoryModel", "AccountCategorys")
                        .WithMany()
                        .HasForeignKey("AccountCategoryId");

                    b.HasOne("Atrai.Model.Core.Entity.BusinessTypeModel", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadSystemModel", "vAccountGroupHead")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("AccountCategorys");

                    b.Navigation("BusinessType");

                    b.Navigation("vAccountGroupHead");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ActivationTicketModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "ActivatedbyUser")
                        .WithMany()
                        .HasForeignKey("ActivatedbyLUserId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "FusionTeamAssaign")
                        .WithMany()
                        .HasForeignKey("FusionTeamLUserId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.InternetPackageModel", "InternetPackageList")
                        .WithMany()
                        .HasForeignKey("PackageId");

                    b.Navigation("ActivatedbyUser");

                    b.Navigation("CompanyList");

                    b.Navigation("FusionTeamAssaign");

                    b.Navigation("InternetPackageList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AdvanceTrasactionTrackingModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseModel", "Purchase")
                        .WithMany()
                        .HasForeignKey("PurchaseId");

                    b.HasOne("Atrai.Model.Core.Entity.SalesModel", "Sales")
                        .WithMany()
                        .HasForeignKey("SalesId");

                    b.Navigation("CompanyList");

                    b.Navigation("Purchase");

                    b.Navigation("Sales");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AgencyModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AndroidMenuPermissionModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.AndroidMenuModel", "AndroidMenus")
                        .WithMany()
                        .HasForeignKey("AndroidMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.BusinessTypeModel", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AndroidMenus");

                    b.Navigation("BusinessType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AndroidMenuPermission_DetailsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.AndroidMenuPermission_MasterModel", "AndroidMenuPermissionMasters")
                        .WithMany("AndroidMenuPermission_Details")
                        .HasForeignKey("AndroidMenuPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.AndroidMenuModel", "AndroidMenus")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AndroidMenuPermissionMasters");

                    b.Navigation("AndroidMenus");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AndroidMenuPermission_MasterModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "Company")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccount")
                        .WithMany()
                        .HasForeignKey("LUserIdPermission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BBLCMain", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.MasterLCModel", "COM_MasterLC")
                        .WithMany()
                        .HasForeignKey("COM_MasterLCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CommercialCompanyModel", "Company")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId");

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("Atrai.Model.Core.Entity.DayList", "daylists")
                        .WithMany()
                        .HasForeignKey("DayListId");

                    b.HasOne("Atrai.Model.Core.Entity.DayListTerm", "dayliststerm")
                        .WithMany()
                        .HasForeignKey("DayListTermId");

                    b.HasOne("Atrai.Model.Core.Entity.Destination", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationID");

                    b.HasOne("Atrai.Model.Core.Entity.GroupLC_MainModel", "COM_GroupLC_Main")
                        .WithMany()
                        .HasForeignKey("GroupLCId");

                    b.HasOne("Atrai.Model.Core.Entity.ItemGroupModel", "ItemGroups")
                        .WithMany()
                        .HasForeignKey("ItemGroupId");

                    b.HasOne("Atrai.Model.Core.Entity.LienBank", "LienBank")
                        .WithMany()
                        .HasForeignKey("LienBankId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.OpeningBank", "OpeningBank")
                        .WithMany()
                        .HasForeignKey("OpeningBankId");

                    b.HasOne("Atrai.Model.Core.Entity.PaymentTerms", "PaymentTermss")
                        .WithMany()
                        .HasForeignKey("PaymentTermsId");

                    b.HasOne("Atrai.Model.Core.Entity.PortOfDischarge", "PortOfDischarge")
                        .WithMany()
                        .HasForeignKey("PortOfDischargeId");

                    b.HasOne("Atrai.Model.Core.Entity.PortOfLoading", "PortOfLoading")
                        .WithMany()
                        .HasForeignKey("PortOfLoadingId");

                    b.HasOne("Atrai.Model.Core.Entity.ShipMode", "ShipMode")
                        .WithMany()
                        .HasForeignKey("ShipModeId");

                    b.HasOne("Atrai.Model.Core.Entity.SupplierModel", "SupplierInformation")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("Atrai.Model.Core.Entity.TradeTerm", "TradeTerms")
                        .WithMany()
                        .HasForeignKey("TradeTermId");

                    b.HasOne("Atrai.Model.Core.Entity.TruckInfo", "TruckInfo")
                        .WithMany()
                        .HasForeignKey("TruckInfoId");

                    b.Navigation("COM_GroupLC_Main");

                    b.Navigation("COM_MasterLC");

                    b.Navigation("Company");

                    b.Navigation("CompanyList");

                    b.Navigation("Currency");

                    b.Navigation("Destination");

                    b.Navigation("ItemGroups");

                    b.Navigation("LienBank");

                    b.Navigation("OpeningBank");

                    b.Navigation("PaymentTermss");

                    b.Navigation("PortOfDischarge");

                    b.Navigation("PortOfLoading");

                    b.Navigation("ShipMode");

                    b.Navigation("SupplierInformation");

                    b.Navigation("TradeTerms");

                    b.Navigation("TruckInfo");

                    b.Navigation("UserAccountList");

                    b.Navigation("daylists");

                    b.Navigation("dayliststerm");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BBLC_Details", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.BBLCMain", "BBLCMain")
                        .WithMany("BBLC_Details")
                        .HasForeignKey("BBLCMainId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.COM_ProformaInvoice", "COM_ProformaInvoice")
                        .WithMany()
                        .HasForeignKey("PIId");

                    b.Navigation("BBLCMain");

                    b.Navigation("COM_ProformaInvoice");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BOMAllocationCategoryModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BOMDetailsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.BOMAllocationCategoryModel", "BOMAllocationCategory")
                        .WithMany()
                        .HasForeignKey("BOMAllocationCategoryId");

                    b.HasOne("Atrai.Model.Core.Entity.BOMMasterModel", "BOMMaster")
                        .WithMany("BOMDetails")
                        .HasForeignKey("BOMMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ColorsModel", "Colors")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SizesModel", "Sizes")
                        .WithMany()
                        .HasForeignKey("SizeId");

                    b.Navigation("BOMAllocationCategory");

                    b.Navigation("BOMMaster");

                    b.Navigation("Colors");

                    b.Navigation("CompanyList");

                    b.Navigation("Product");

                    b.Navigation("Sizes");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BOMMasterModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.ColorsModel", "Colors")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SizesModel", "Sizes")
                        .WithMany()
                        .HasForeignKey("SizeId");

                    b.HasOne("Atrai.Model.Core.Entity.StyleModel", "Style")
                        .WithMany()
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colors");

                    b.Navigation("CompanyList");

                    b.Navigation("Sizes");

                    b.Navigation("Style");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BankAccountNo", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CommercialCompanyModel", "CommercialCompanies")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.OpeningBank", "OpeningBanks")
                        .WithMany("BankAccountNos")
                        .HasForeignKey("OpeningBankId");

                    b.Navigation("CommercialCompanies");

                    b.Navigation("CompanyList");

                    b.Navigation("OpeningBanks");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BarcodePrintModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BookModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BrandModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BudgetSubModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "Acc_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Acc_BudgetMainModel", "Acc_BudgetMainModel")
                        .WithMany("BudgetSubs")
                        .HasForeignKey("BudgetId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_BudgetMainModel");

                    b.Navigation("Acc_ChartOfAccount");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BuyerGroup", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BuyerPO_ConsumptionModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.BOMAllocationCategoryModel", "BOMAllocationCategory")
                        .WithMany()
                        .HasForeignKey("BOMAllocationCategoryId");

                    b.HasOne("Atrai.Model.Core.Entity.BOMMasterModel", "BOMMaster")
                        .WithMany()
                        .HasForeignKey("BOMMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.BuyerPO_MasterModel", "BuyerPO_Master")
                        .WithMany()
                        .HasForeignKey("BuyerPOId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ColorsModel", "Colors")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SizesModel", "Sizes")
                        .WithMany()
                        .HasForeignKey("SizeId");

                    b.Navigation("BOMAllocationCategory");

                    b.Navigation("BOMMaster");

                    b.Navigation("BuyerPO_Master");

                    b.Navigation("Colors");

                    b.Navigation("CompanyList");

                    b.Navigation("Product");

                    b.Navigation("Sizes");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BuyerPO_DetailsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.BuyerPO_MasterModel", "BuyerPO_Master")
                        .WithMany("BuyerPO_Details")
                        .HasForeignKey("BuyerPOId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ColorsModel", "Colors")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SizesModel", "Sizes")
                        .WithMany()
                        .HasForeignKey("SizeId");

                    b.Navigation("BuyerPO_Master");

                    b.Navigation("Colors");

                    b.Navigation("CompanyList");

                    b.Navigation("Sizes");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BuyerPO_MasterModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CustomerModel", "Buyers")
                        .WithMany()
                        .HasForeignKey("BuyerId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.StyleModel", "Style")
                        .WithMany()
                        .HasForeignKey("StyleId");

                    b.Navigation("Buyers");

                    b.Navigation("CompanyList");

                    b.Navigation("Style");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_CommercialInvoice", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.BBLCMain", "COM_BBLC_Master")
                        .WithMany()
                        .HasForeignKey("BBLCId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CommercialCompanyModel", "CommercialCompany")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyID");

                    b.HasOne("Atrai.Model.Core.Entity.CommercialLCType", "CommercialLCTypes")
                        .WithMany()
                        .HasForeignKey("CommercialLCTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("Atrai.Model.Core.Entity.DocumentStatus", "DocumentStatus")
                        .WithMany()
                        .HasForeignKey("DocumentStatusId");

                    b.HasOne("Atrai.Model.Core.Entity.ItemDescriptionModel", "ItemDescs")
                        .WithMany()
                        .HasForeignKey("ItemDescId");

                    b.HasOne("Atrai.Model.Core.Entity.ItemGroupModel", "ItemGroups")
                        .WithMany()
                        .HasForeignKey("ItemGroupId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.COM_MachinaryLC_Master", "COM_MachinaryLC_Master")
                        .WithMany()
                        .HasForeignKey("MachinaryLCId");

                    b.HasOne("Atrai.Model.Core.Entity.SupplierModel", "SupplierInformations")
                        .WithMany()
                        .HasForeignKey("SupplierID");

                    b.HasOne("Atrai.Model.Core.Entity.UnitModel", "UnitMaster")
                        .WithMany()
                        .HasForeignKey("UnitMasterId");

                    b.Navigation("COM_BBLC_Master");

                    b.Navigation("COM_MachinaryLC_Master");

                    b.Navigation("CommercialCompany");

                    b.Navigation("CommercialLCTypes");

                    b.Navigation("CompanyList");

                    b.Navigation("Currency");

                    b.Navigation("DocumentStatus");

                    b.Navigation("ItemDescs");

                    b.Navigation("ItemGroups");

                    b.Navigation("SupplierInformations");

                    b.Navigation("UnitMaster");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_CommercialInvoice_Sub", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.COM_CommercialInvoice", "COM_CommercialInvoices")
                        .WithMany("COM_CommercialInvoice_Subs")
                        .HasForeignKey("CommercialInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ItemDesc", "ItemDescs")
                        .WithMany()
                        .HasForeignKey("ItemDescId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("COM_CommercialInvoices");

                    b.Navigation("CompanyList");

                    b.Navigation("ItemDescs");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_DocumentAcceptance_Details", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.COM_CommercialInvoice", "COM_CommercialInvoice")
                        .WithMany()
                        .HasForeignKey("CommercialInvoiceId");

                    b.HasOne("Atrai.Model.Core.Entity.COM_DocumentAcceptance_Master", "COM_DocumentAcceptance_Master")
                        .WithMany("COM_DocumentAcceptance_Details")
                        .HasForeignKey("DocumentAcceptanceMasterId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("COM_CommercialInvoice");

                    b.Navigation("COM_DocumentAcceptance_Master");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_DocumentAcceptance_Master", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.BBLCMain", "COM_BBLC_Master")
                        .WithMany()
                        .HasForeignKey("BBLCId");

                    b.HasOne("Atrai.Model.Core.Entity.CustomerModel", "BuyerInformation")
                        .WithMany()
                        .HasForeignKey("BuyerId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CommercialCompanyModel", "CommercialCompanys")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId");

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("Atrai.Model.Core.Entity.GroupLC_MainModel", "COM_GroupLC_Main")
                        .WithMany()
                        .HasForeignKey("GroupLCId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.MasterLCModel", "MasterLC")
                        .WithMany()
                        .HasForeignKey("MasterLCId");

                    b.HasOne("Atrai.Model.Core.Entity.SupplierModel", "SupplierInformations")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("BuyerInformation");

                    b.Navigation("COM_BBLC_Master");

                    b.Navigation("COM_GroupLC_Main");

                    b.Navigation("CommercialCompanys");

                    b.Navigation("CompanyList");

                    b.Navigation("Currency");

                    b.Navigation("MasterLC");

                    b.Navigation("SupplierInformations");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_MachinaryLC_Details", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.COM_MachinaryLC_Master", "COM_MachinaryLC_Master")
                        .WithMany("COM_MachinaryLC_Details")
                        .HasForeignKey("MachinaryLCMasterID");

                    b.HasOne("Atrai.Model.Core.Entity.COM_ProformaInvoice", "COM_ProformaInvoice")
                        .WithMany()
                        .HasForeignKey("PIId");

                    b.Navigation("COM_MachinaryLC_Master");

                    b.Navigation("COM_ProformaInvoice");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_MachinaryLC_Master", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CommercialCompanyModel", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("Atrai.Model.Core.Entity.DayList", "daylists")
                        .WithMany()
                        .HasForeignKey("DayListId");

                    b.HasOne("Atrai.Model.Core.Entity.Destination", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationID");

                    b.HasOne("Atrai.Model.Core.Entity.ItemGroupModel", "ItemGroups")
                        .WithMany()
                        .HasForeignKey("ItemGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.LienBank", "LienBank")
                        .WithMany()
                        .HasForeignKey("LienBankId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.OpeningBank", "OpeningBank")
                        .WithMany()
                        .HasForeignKey("OpeningBankId");

                    b.HasOne("Atrai.Model.Core.Entity.PaymentTerms", "PaymentTermss")
                        .WithMany()
                        .HasForeignKey("PaymentTermsId");

                    b.HasOne("Atrai.Model.Core.Entity.PortOfDischarge", "PortOfDischarge")
                        .WithMany()
                        .HasForeignKey("PortOfDischargeId");

                    b.HasOne("Atrai.Model.Core.Entity.PortOfLoading", "PortOfLoading")
                        .WithMany()
                        .HasForeignKey("PortOfLoadingId");

                    b.HasOne("Atrai.Model.Core.Entity.ShipMode", "ShipMode")
                        .WithMany()
                        .HasForeignKey("ShipModeId");

                    b.HasOne("Atrai.Model.Core.Entity.SupplierModel", "SupplierInformation")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("Atrai.Model.Core.Entity.TradeTerm", "TradeTerms")
                        .WithMany()
                        .HasForeignKey("TradeTermId");

                    b.Navigation("Company");

                    b.Navigation("CompanyList");

                    b.Navigation("Currency");

                    b.Navigation("Destination");

                    b.Navigation("ItemGroups");

                    b.Navigation("LienBank");

                    b.Navigation("OpeningBank");

                    b.Navigation("PaymentTermss");

                    b.Navigation("PortOfDischarge");

                    b.Navigation("PortOfLoading");

                    b.Navigation("ShipMode");

                    b.Navigation("SupplierInformation");

                    b.Navigation("TradeTerms");

                    b.Navigation("UserAccountList");

                    b.Navigation("daylists");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_MachineryLCDetails", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.COM_MachineryLCMaster", "COM_MachineryLCMaster")
                        .WithMany("COM_MachineryLCDetailses")
                        .HasForeignKey("MachineryLCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.WorkOrderMaster", "WorkOrderMaster")
                        .WithMany("COM_MachineryLCDetailss")
                        .HasForeignKey("WorkOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("COM_MachineryLCMaster");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");

                    b.Navigation("WorkOrderMaster");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_MachineryLCMaster", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PaymentTerms", "PaymentTerms")
                        .WithMany()
                        .HasForeignKey("PaymentTermsId");

                    b.HasOne("Atrai.Model.Core.Entity.SupplierModel", "SupplierInformation")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("CompanyList");

                    b.Navigation("PaymentTerms");

                    b.Navigation("SupplierInformation");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_MasterLCExport", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.MasterLCModel", null)
                        .WithMany("COM_MasterLCExport")
                        .HasForeignKey("MasterLCModelId");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_MasterLC_Details", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.BuyerPO_MasterModel", "BuyerPO_Master")
                        .WithMany()
                        .HasForeignKey("BuyerPOId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.MasterLCModel", "COM_MasterLC")
                        .WithMany("COM_MasterLC_Details")
                        .HasForeignKey("MasterLCID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuyerPO_Master");

                    b.Navigation("COM_MasterLC");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_ProformaInvoice", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.BankAccountNo", "BankAccountNos")
                        .WithMany()
                        .HasForeignKey("BankAccountId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CommercialCompanyModel", "CommercialCompanies")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId");

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Currencies")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("Atrai.Model.Core.Entity.DayList", "DayList")
                        .WithMany()
                        .HasForeignKey("DayListId");

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "employees")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Atrai.Model.Core.Entity.GroupLC_MainModel", "COM_GroupLC_Mains")
                        .WithMany()
                        .HasForeignKey("GroupLCId");

                    b.HasOne("Atrai.Model.Core.Entity.ItemDescriptionModel", "ItemDescs")
                        .WithMany()
                        .HasForeignKey("ItemDescId");

                    b.HasOne("Atrai.Model.Core.Entity.ItemGroupModel", "ItemGroups")
                        .WithMany()
                        .HasForeignKey("ItemGroupId");

                    b.HasOne("Atrai.Model.Core.Entity.LienBank", "LienBanks")
                        .WithMany()
                        .HasForeignKey("LienBankId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.OpeningBank", "OpeningBanks")
                        .WithMany()
                        .HasForeignKey("OpeningBankId");

                    b.HasOne("Atrai.Model.Core.Entity.PITypeModel", "PITypes")
                        .WithMany()
                        .HasForeignKey("PITypeId");

                    b.HasOne("Atrai.Model.Core.Entity.PaymentTerms", "PaymentTerms")
                        .WithMany()
                        .HasForeignKey("PaymentTermsId");

                    b.HasOne("Atrai.Model.Core.Entity.PortOfLoading", "PortOfLoadingCountryOfOrigin")
                        .WithMany()
                        .HasForeignKey("PortOfLoadingCountryOfOriginId");

                    b.HasOne("Atrai.Model.Core.Entity.PortOfLoading", "PortOfLoadingDestination")
                        .WithMany()
                        .HasForeignKey("PortOfLoadingDestinationId");

                    b.HasOne("Atrai.Model.Core.Entity.PortOfLoading", "PortOfLoading")
                        .WithMany()
                        .HasForeignKey("PortOfLoadingId");

                    b.HasOne("Atrai.Model.Core.Entity.SupplierModel", "Suppliers")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("Atrai.Model.Core.Entity.UnitModel", "UnitMaster")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("BankAccountNos");

                    b.Navigation("COM_GroupLC_Mains");

                    b.Navigation("CommercialCompanies");

                    b.Navigation("CompanyList");

                    b.Navigation("Currencies");

                    b.Navigation("DayList");

                    b.Navigation("ItemDescs");

                    b.Navigation("ItemGroups");

                    b.Navigation("LienBanks");

                    b.Navigation("OpeningBanks");

                    b.Navigation("PITypes");

                    b.Navigation("PaymentTerms");

                    b.Navigation("PortOfLoading");

                    b.Navigation("PortOfLoadingCountryOfOrigin");

                    b.Navigation("PortOfLoadingDestination");

                    b.Navigation("Suppliers");

                    b.Navigation("UnitMaster");

                    b.Navigation("UserAccountList");

                    b.Navigation("employees");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_ProformaInvoice_Sub", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ItemDescriptionModel", "ItemDescription")
                        .WithMany()
                        .HasForeignKey("ItemDescId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.COM_ProformaInvoice", "Com_proformaInvoices")
                        .WithMany("COM_ProformaInvoice_Subs")
                        .HasForeignKey("PIId");

                    b.Navigation("Com_proformaInvoices");

                    b.Navigation("CompanyList");

                    b.Navigation("ItemDescription");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_BankBranchModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_BankModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_BuildingTypeModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_DepartmentModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_DesignationModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Cat_GradeModel", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Grade");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_DistrictModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_FloorModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_GradeModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_Integration_Setting_Details", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "Acc_ChartOfAccounts")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("CompanyListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Cat_Integration_Setting_Main", "Cat_Integration_Setting_Mains")
                        .WithMany("Cat_Integration_Setting_Details")
                        .HasForeignKey("IntegrationSettingMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_ChartOfAccounts");

                    b.Navigation("Cat_Integration_Setting_Mains");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_Integration_Setting_Main", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Acc_VoucherTypeModel", "Acc_VoucherType")
                        .WithMany()
                        .HasForeignKey("VoucherTypeId");

                    b.Navigation("Acc_VoucherType");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_LineModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_Location", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_PayrollIntegrationSummary", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "Acc_ChartOfAccounts")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Acc_FiscalMonthModel", "Acc_FiscalMonths")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("Atrai.Model.Core.Entity.Acc_FiscalYearModel", "Acc_FiscalYears")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_ChartOfAccounts");

                    b.Navigation("Acc_FiscalMonths");

                    b.Navigation("Acc_FiscalYears");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_PoliceStationModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.Cat_DistrictModel", "Cat_District")
                        .WithMany()
                        .HasForeignKey("DistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat_District");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_PostOfficeModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.Cat_DistrictModel", "Cat_District")
                        .WithMany()
                        .HasForeignKey("DistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Cat_PoliceStationModel", "Cat_PoliceStation")
                        .WithMany()
                        .HasForeignKey("PStationId");

                    b.Navigation("Cat_District");

                    b.Navigation("Cat_PoliceStation");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_SectionModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Cat_DepartmentModel", "Dept")
                        .WithMany("Cat_Section")
                        .HasForeignKey("DeptId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Dept");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_ShiftModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_SkillModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_SubSectionModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Cat_DepartmentModel", "Dept")
                        .WithMany("Cat_SubSection")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Cat_SectionModel", "Sect")
                        .WithMany("Cat_SubSection")
                        .HasForeignKey("SectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Dept");

                    b.Navigation("Sect");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_UnitModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CategoryModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CategoryModel", "Categories")
                        .WithMany("ChildCategoryList")
                        .HasForeignKey("CategoryParentId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ColorModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId");

                    b.Navigation("CompanyList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ColorsChildModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.ColorsModel", "Colors")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.StyleModel", "StyleModel")
                        .WithMany("ColorsChilds")
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colors");

                    b.Navigation("CompanyList");

                    b.Navigation("StyleModel");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ColorsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CommercialCompanyModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CompanyCurrencyModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Currency");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CompanyModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.BusinessTypeModel", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SubscriptionTypeModel", "SubscriptionType")
                        .WithMany()
                        .HasForeignKey("SubscriptionTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.Acc_VoucherNoCreatedTypeModel", "VoucherNoCreatedTypes")
                        .WithMany()
                        .HasForeignKey("VoucherNoCreatedTypeId");

                    b.Navigation("BusinessType");

                    b.Navigation("Country");

                    b.Navigation("Currency");

                    b.Navigation("SubscriptionType");

                    b.Navigation("VoucherNoCreatedTypes");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CompanyPermissionModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CostCalculatedModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.DamageModel", "Damage")
                        .WithMany("CostCalculations")
                        .HasForeignKey("DamageId");

                    b.HasOne("Atrai.Model.Core.Entity.InternalTransferModel", "InternalTransfer")
                        .WithMany("CostCalculations")
                        .HasForeignKey("InternalTransferId");

                    b.HasOne("Atrai.Model.Core.Entity.IssueModel", "Issue")
                        .WithMany("CostCalculations")
                        .HasForeignKey("IssueId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Product")
                        .WithMany("CostCalculated")
                        .HasForeignKey("ProductId");

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseModel", "Purchase")
                        .WithMany("CostCalculations")
                        .HasForeignKey("PurchaseId");

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseReturnModel", "PurchaseReturn")
                        .WithMany("CostCalculations")
                        .HasForeignKey("PurchaseReturnId");

                    b.HasOne("Atrai.Model.Core.Entity.SalesModel", "Sales")
                        .WithMany("CostCalculations")
                        .HasForeignKey("SalesId");

                    b.HasOne("Atrai.Model.Core.Entity.SalesReturnModel", "SalesReturn")
                        .WithMany("CostCalculations")
                        .HasForeignKey("SalesReturnId");

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("CompanyList");

                    b.Navigation("Damage");

                    b.Navigation("InternalTransfer");

                    b.Navigation("Issue");

                    b.Navigation("Product");

                    b.Navigation("Purchase");

                    b.Navigation("PurchaseReturn");

                    b.Navigation("Sales");

                    b.Navigation("SalesReturn");

                    b.Navigation("UserAccountList");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CreditBalanceModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SoftwarePackageModel", "PackageList")
                        .WithMany()
                        .HasForeignKey("SoftwarePackageId");

                    b.Navigation("CompanyList");

                    b.Navigation("PackageList");

                    b.Navigation("UserList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CreditUsedModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CustomFormStyleModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.DocTypeModel", "DocTypeList")
                        .WithMany()
                        .HasForeignKey("DocTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("DocTypeList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CustomerModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CustomerModel", "Customers")
                        .WithMany()
                        .HasForeignKey("CustParentId");

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Currency")
                        .WithMany()
                        .HasForeignKey("CustomerCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PaymentTermsModel", "PaymentTermsInfo")
                        .WithMany()
                        .HasForeignKey("PaymentTermsId");

                    b.HasOne("Atrai.Model.Core.Entity.PaymentTypeModel", "vPaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "SalesRepresentative")
                        .WithMany()
                        .HasForeignKey("SalesRepresentativeId");

                    b.HasOne("Atrai.Model.Core.Entity.TradeTermsModel", "TradeTerms")
                        .WithMany()
                        .HasForeignKey("TradeTermsId");

                    b.Navigation("CompanyList");

                    b.Navigation("Currency");

                    b.Navigation("Customers");

                    b.Navigation("PaymentTermsInfo");

                    b.Navigation("SalesRepresentative");

                    b.Navigation("TradeTerms");

                    b.Navigation("UserAccountList");

                    b.Navigation("vPaymentType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DailyCurrencyRate", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DailyProduction_DetailsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.ColorsModel", "Colors")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.DailyProduction_MasterModel", "DailyProduction_Master")
                        .WithMany("DailyProduction_Details")
                        .HasForeignKey("DailyProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SizesModel", "Sizes")
                        .WithMany()
                        .HasForeignKey("SizeId");

                    b.Navigation("Colors");

                    b.Navigation("CompanyList");

                    b.Navigation("DailyProduction_Master");

                    b.Navigation("Sizes");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DailyProduction_MasterModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CustomerModel", "Buyers")
                        .WithMany()
                        .HasForeignKey("BuyerId");

                    b.HasOne("Atrai.Model.Core.Entity.BuyerPO_MasterModel", "BuyerPO_Master")
                        .WithMany()
                        .HasForeignKey("BuyerPOId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Cat_DepartmentModel", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.StyleModel", "Style")
                        .WithMany()
                        .HasForeignKey("StyleId");

                    b.Navigation("BuyerPO_Master");

                    b.Navigation("Buyers");

                    b.Navigation("CompanyList");

                    b.Navigation("Departments");

                    b.Navigation("Style");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DamageBatchItemsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.DamageItemsModel", "DamageItems")
                        .WithMany("BatchSerialItems")
                        .HasForeignKey("DamageItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseBatchItemsModel", "PurchaseBatchItems")
                        .WithMany()
                        .HasForeignKey("PurchaseBatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("DamageItems");

                    b.Navigation("Products");

                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DamageItemsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.DamageModel", "DamageModel")
                        .WithMany("Items")
                        .HasForeignKey("DamageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Product")
                        .WithMany("DamageItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("CompanyList");

                    b.Navigation("DamageModel");

                    b.Navigation("Product");

                    b.Navigation("UserAccountList");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DamageModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "Warehouses")
                        .WithMany()
                        .HasForeignKey("WarehouseIdMain");

                    b.Navigation("CompanyList");

                    b.Navigation("InternetUserList");

                    b.Navigation("UserAccountList");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DashBoardLayoutOrder", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DayListTerm", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DeliveryServiceCommentModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "CommentToUserList")
                        .WithMany()
                        .HasForeignKey("CommentToLuserId");

                    b.HasOne("Atrai.Model.Core.Entity.DeliveryServiceCommentModel", "DeliveryServiceList")
                        .WithMany()
                        .HasForeignKey("DeliveryServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.DeliveryServiceModel", null)
                        .WithMany("DeliveryServiceComment")
                        .HasForeignKey("DeliveryServiceModelId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommentToUserList");

                    b.Navigation("CompanyList");

                    b.Navigation("DeliveryServiceList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DeliveryServiceDistanceModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DeliveryServiceModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CategoryModel", "CategoryList")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CustomerModel", "CustomerList")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Atrai.Model.Core.Entity.DeliveryServiceTimingModel", "DeliveryTiming")
                        .WithMany()
                        .HasForeignKey("DeliveryTimingId");

                    b.HasOne("Atrai.Model.Core.Entity.DeliveryServiceDistanceModel", "DistanceList")
                        .WithMany()
                        .HasForeignKey("DistanceId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PaymentTypeModel", "PaymentTypeList")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.DeliveryServiceWeightModel", "WeightList")
                        .WithMany()
                        .HasForeignKey("WeightId");

                    b.Navigation("CategoryList");

                    b.Navigation("CompanyList");

                    b.Navigation("CustomerList");

                    b.Navigation("DeliveryTiming");

                    b.Navigation("DistanceList");

                    b.Navigation("PaymentTypeList");

                    b.Navigation("UserAccountList");

                    b.Navigation("WeightList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DeliveryServiceTimingModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DeliveryServiceWeightModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Destination", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Countrys")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Countrys");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DiagnosisReportModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DiscountTypeModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DocApprovalSettingModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.ApprovalTypeModel", "ApprovalType")
                        .WithMany()
                        .HasForeignKey("ApprovalTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.DocTypeModel", "DocType")
                        .WithMany()
                        .HasForeignKey("DocTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "ApproveUserList")
                        .WithMany()
                        .HasForeignKey("LuserIdApprove");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "CheckUserList")
                        .WithMany()
                        .HasForeignKey("LuserIdCheck");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "EntryUserList")
                        .WithMany()
                        .HasForeignKey("LuserIdEntry")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "VerifyUserList")
                        .WithMany()
                        .HasForeignKey("LuserIdVerify");

                    b.Navigation("ApprovalType");

                    b.Navigation("ApproveUserList");

                    b.Navigation("CheckUserList");

                    b.Navigation("CompanyList");

                    b.Navigation("DocType");

                    b.Navigation("EntryUserList");

                    b.Navigation("UserAccountList");

                    b.Navigation("VerifyUserList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DocStatusModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.DocTypeModel", "DocTypes")
                        .WithMany()
                        .HasForeignKey("DocTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.StatusModel", "StatusInfo")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("DocTypes");

                    b.Navigation("StatusInfo");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DyDashBoardModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DynamicReport", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CustomerModel", "BuyerInformations")
                        .WithMany()
                        .HasForeignKey("BuyerId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuyerInformations");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.EmailSettingModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.EmployeeAttendanceModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.EmployeeModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.Cat_BloodGroupModel", "Cat_BloodGroup")
                        .WithMany()
                        .HasForeignKey("BloodId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Cat_DepartmentModel", "DepartmentList")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_DepartmentModel", "Cat_Department")
                        .WithMany()
                        .HasForeignKey("DeptId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_DesignationModel", "Cat_Designation")
                        .WithMany()
                        .HasForeignKey("DesigId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_DesignationModel", "DesignationList")
                        .WithMany()
                        .HasForeignKey("Designationid");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_EmployeeTypeModel", "EmployeeType")
                        .WithMany()
                        .HasForeignKey("EmployeeTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_FloorModel", "Cat_Floor")
                        .WithMany()
                        .HasForeignKey("FloorId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_GenderModel", "Cat_Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_GradeModel", "Cat_Grade")
                        .WithMany()
                        .HasForeignKey("GradeId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_LineModel", "Cat_Line")
                        .WithMany()
                        .HasForeignKey("LineId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Cat_ReligionModel", "Cat_Religion")
                        .WithMany()
                        .HasForeignKey("RelgionId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_SectionModel", "Cat_Section")
                        .WithMany()
                        .HasForeignKey("SectId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_ShiftModel", "Cat_Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_SkillModel", "Cat_Skill")
                        .WithMany()
                        .HasForeignKey("SkillId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_SubSectionModel", "Cat_SubSection")
                        .WithMany()
                        .HasForeignKey("SubSectId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_UnitModel", "Cat_Unit")
                        .WithMany()
                        .HasForeignKey("UnitId");

                    b.Navigation("Cat_BloodGroup");

                    b.Navigation("Cat_Department");

                    b.Navigation("Cat_Designation");

                    b.Navigation("Cat_Floor");

                    b.Navigation("Cat_Gender");

                    b.Navigation("Cat_Grade");

                    b.Navigation("Cat_Line");

                    b.Navigation("Cat_Religion");

                    b.Navigation("Cat_Section");

                    b.Navigation("Cat_Shift");

                    b.Navigation("Cat_Skill");

                    b.Navigation("Cat_SubSection");

                    b.Navigation("Cat_Unit");

                    b.Navigation("CompanyList");

                    b.Navigation("DepartmentList");

                    b.Navigation("DesignationList");

                    b.Navigation("EmployeeType");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.EmployeeSalaryDetailsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeSalaryMasterModel", "EmployeeSalaryMaster")
                        .WithMany("SalaryDetailsList")
                        .HasForeignKey("SalaryMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Employee");

                    b.Navigation("EmployeeSalaryMaster");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.EmployeeSalaryMasterModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Cat_DepartmentModel", "DepartmentList")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_EmployeeTypeModel", "EmployeeType")
                        .WithMany()
                        .HasForeignKey("EmployeeTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Cat_SalaryTypeModel", "SalaryType")
                        .WithMany()
                        .HasForeignKey("SalaryTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "Location")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_WeekSegmentModel", "WeekSegment")
                        .WithMany()
                        .HasForeignKey("WeekSegmentId");

                    b.Navigation("CompanyList");

                    b.Navigation("DepartmentList");

                    b.Navigation("EmployeeType");

                    b.Navigation("Location");

                    b.Navigation("SalaryType");

                    b.Navigation("UserAccountList");

                    b.Navigation("WeekSegment");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ExpireDateExtendModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("InternetUserList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ExportInvoiceDetails", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ExportInvoiceMaster", "ExportInvoiceMaster")
                        .WithMany("ExportInvoiceDetails")
                        .HasForeignKey("ExportInvoiceMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UnitMaster", "UnitMaster")
                        .WithMany()
                        .HasForeignKey("UnitMasterId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("ExportInvoiceMaster");

                    b.Navigation("UnitMaster");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ExportInvoiceMaster", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CustomerModel", "BuyerInformation")
                        .WithMany()
                        .HasForeignKey("BuyerId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CommercialCompanyModel", "CommercialCompany")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId");

                    b.HasOne("Atrai.Model.Core.Entity.NotifyParty", "NotifyPartyFirst")
                        .WithMany()
                        .HasForeignKey("FirstNotifyPartyId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CommercialCompanyModel", "ComercialCompanyss")
                        .WithMany()
                        .HasForeignKey("ManufactureId");

                    b.HasOne("Atrai.Model.Core.Entity.MasterLCModel", "COM_MasterLC")
                        .WithMany("ExportInvoiceMasters")
                        .HasForeignKey("MasterLCId");

                    b.HasOne("Atrai.Model.Core.Entity.PortOfDischarge", "PortOfDischarge")
                        .WithMany()
                        .HasForeignKey("PortOfDischargeId");

                    b.HasOne("Atrai.Model.Core.Entity.PortOfLoading", "PortOfLoading")
                        .WithMany()
                        .HasForeignKey("PortOfLoadingId");

                    b.HasOne("Atrai.Model.Core.Entity.NotifyParty", "NotifyPartySecound")
                        .WithMany()
                        .HasForeignKey("SecondNotifyPartyId");

                    b.HasOne("Atrai.Model.Core.Entity.SupplierModel", "SupplierInformation")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("Atrai.Model.Core.Entity.NotifyParty", "NotifyPartyThird")
                        .WithMany()
                        .HasForeignKey("ThirdNotifyPartyId");

                    b.Navigation("BuyerInformation");

                    b.Navigation("COM_MasterLC");

                    b.Navigation("ComercialCompanyss");

                    b.Navigation("CommercialCompany");

                    b.Navigation("CompanyList");

                    b.Navigation("NotifyPartyFirst");

                    b.Navigation("NotifyPartySecound");

                    b.Navigation("NotifyPartyThird");

                    b.Navigation("PortOfDischarge");

                    b.Navigation("PortOfLoading");

                    b.Navigation("SupplierInformation");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ExportInvoicePackingList", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ExportInvoiceDetails", "ExportInvoiceDetails")
                        .WithMany("ExportInvoicePackingLists")
                        .HasForeignKey("ExportInvoiceDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("ExportInvoiceDetails");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ExportOrder", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.StyleModel", "StyleInformation")
                        .WithMany()
                        .HasForeignKey("StyleId");

                    b.HasOne("Atrai.Model.Core.Entity.UnitMaster", null)
                        .WithMany("ExportOrders")
                        .HasForeignKey("UnitMasterId");

                    b.Navigation("CompanyList");

                    b.Navigation("StyleInformation");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ExportRealization_Details", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ExportInvoiceMaster", "ExportInvoiceMaster")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ExportRealization_Master", "RealizationMaster")
                        .WithMany("ExportRealization_Details")
                        .HasForeignKey("RealizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("ExportInvoiceMaster");

                    b.Navigation("RealizationMaster");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ExportRealization_Master", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.MasterLCModel", "MasterLC")
                        .WithMany()
                        .HasForeignKey("MasterLCId");

                    b.Navigation("CompanyList");

                    b.Navigation("MasterLC");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.FeedbackModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.FromWarehousePermissionModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "WarehouseList")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");

                    b.Navigation("WarehouseList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Gallery", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserList")
                        .WithMany()
                        .HasForeignKey("LuserId");

                    b.Navigation("CompanyList");

                    b.Navigation("UserList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.GalleryModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.BookModel", null)
                        .WithMany("Gallery")
                        .HasForeignKey("BookModelId");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.GatePassItemsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.GatePassModel", "GatePassModel")
                        .WithMany("Items")
                        .HasForeignKey("GatePassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("CompanyList");

                    b.Navigation("GatePassModel");

                    b.Navigation("Product");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.GatePassModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.GroupLC_MainModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CustomerModel", "Buyers")
                        .WithMany()
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CommercialCompanyModel", "CommercialCompanies")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyers");

                    b.Navigation("CommercialCompanies");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.GroupLC_SubModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.GroupLC_MainModel", "GroupLC_Mains")
                        .WithMany("GroupLC_Sub")
                        .HasForeignKey("GroupLCId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.MasterLCModel", "MasterLC")
                        .WithMany("COM_GroupLC_Subs")
                        .HasForeignKey("MasterLCID");

                    b.Navigation("CompanyList");

                    b.Navigation("GroupLC_Mains");

                    b.Navigation("MasterLC");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_AttFixed", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "HR_Emp_Info")
                        .WithMany("HR_AttFixed")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_Address", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.Cat_DistrictModel", "Cat_DistrictCurr")
                        .WithMany()
                        .HasForeignKey("EmpCurrDistId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_PostOfficeModel", "Cat_PostOfficeCurr")
                        .WithMany()
                        .HasForeignKey("EmpCurrPOId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_PoliceStationModel", "Cat_PoliceStationCurr")
                        .WithMany()
                        .HasForeignKey("EmpCurrPSId");

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "HR_Emp_Info")
                        .WithOne("HR_Emp_Address")
                        .HasForeignKey("Atrai.Model.Core.Entity.HR_Emp_Address", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Cat_DistrictModel", "Cat_DistrictPer")
                        .WithMany()
                        .HasForeignKey("EmpPerDistId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_PostOfficeModel", "Cat_PostOfficePer")
                        .WithMany()
                        .HasForeignKey("EmpPerPOId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_PoliceStationModel", "Cat_PoliceStationPer")
                        .WithMany()
                        .HasForeignKey("EmpPerPSId");

                    b.Navigation("Cat_DistrictCurr");

                    b.Navigation("Cat_DistrictPer");

                    b.Navigation("Cat_PoliceStationCurr");

                    b.Navigation("Cat_PoliceStationPer");

                    b.Navigation("Cat_PostOfficeCurr");

                    b.Navigation("Cat_PostOfficePer");

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_BankInfo", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.Cat_AccountTypeModel", "Cat_AccountType")
                        .WithMany()
                        .HasForeignKey("AccTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_BankModel", "Cat_Bank")
                        .WithMany()
                        .HasForeignKey("BankId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_BankBranchModel", "Cat_BankBranch")
                        .WithMany()
                        .HasForeignKey("BranchId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "HR_Emp_Info")
                        .WithOne("HR_Emp_BankInfo")
                        .HasForeignKey("Atrai.Model.Core.Entity.HR_Emp_BankInfo", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Cat_PayModeModel", "Cat_PayMode")
                        .WithMany()
                        .HasForeignKey("PayModeId");

                    b.Navigation("Cat_AccountType");

                    b.Navigation("Cat_Bank");

                    b.Navigation("Cat_BankBranch");

                    b.Navigation("Cat_PayMode");

                    b.Navigation("CompanyList");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_EducationModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "HR_Emp_Info")
                        .WithMany("HR_Emp_Educations")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_ExperienceModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "HR_Emp_Info")
                        .WithMany("HR_Emp_Experiences")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_FamilyModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "HR_Emp_Info")
                        .WithOne("HR_Emp_Family")
                        .HasForeignKey("Atrai.Model.Core.Entity.HR_Emp_FamilyModel", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_Image", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "HR_Emp_Info")
                        .WithOne("HR_Emp_Image")
                        .HasForeignKey("Atrai.Model.Core.Entity.HR_Emp_Image", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HR_Emp_Info");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_Increment", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "HR_Emp_Info")
                        .WithOne("HR_Emp_Increment")
                        .HasForeignKey("Atrai.Model.Core.Entity.HR_Emp_Increment", "EmpId");

                    b.HasOne("Atrai.Model.Core.Entity.HR_IncType", "HR_IncType")
                        .WithMany()
                        .HasForeignKey("IncTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_DepartmentModel", "Cat_DepartmentNew")
                        .WithMany()
                        .HasForeignKey("NewDeptId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_DesignationModel", "Cat_DesignationNew")
                        .WithMany()
                        .HasForeignKey("NewDesigId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_Emp_TypeModel", "Cat_Emp_TypeNew")
                        .WithMany()
                        .HasForeignKey("NewEmpTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_GenderModel", "Cat_GenderNew")
                        .WithMany()
                        .HasForeignKey("NewGenderId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_SectionModel", "Cat_SectionNew")
                        .WithMany()
                        .HasForeignKey("NewSectId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_UnitModel", "Cat_UnitNew")
                        .WithMany()
                        .HasForeignKey("NewUnitId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_DepartmentModel", "Cat_DepartmentOld")
                        .WithMany()
                        .HasForeignKey("OldDeptId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_DesignationModel", "Cat_DesignationOld")
                        .WithMany()
                        .HasForeignKey("OldDesigId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_Emp_TypeModel", "Cat_Emp_TypeOld")
                        .WithMany()
                        .HasForeignKey("OldEmpTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_GenderModel", "Cat_GenderOld")
                        .WithMany()
                        .HasForeignKey("OldGenderId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_SectionModel", "Cat_SectionOld")
                        .WithMany()
                        .HasForeignKey("OldSectId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_UnitModel", "Cat_UnitOld")
                        .WithMany()
                        .HasForeignKey("OldUnitId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("UserAccountListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat_DepartmentNew");

                    b.Navigation("Cat_DepartmentOld");

                    b.Navigation("Cat_DesignationNew");

                    b.Navigation("Cat_DesignationOld");

                    b.Navigation("Cat_Emp_TypeNew");

                    b.Navigation("Cat_Emp_TypeOld");

                    b.Navigation("Cat_GenderNew");

                    b.Navigation("Cat_GenderOld");

                    b.Navigation("Cat_SectionNew");

                    b.Navigation("Cat_SectionOld");

                    b.Navigation("Cat_UnitNew");

                    b.Navigation("Cat_UnitOld");

                    b.Navigation("CompanyList");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("HR_IncType");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_NomineeModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "HR_Emp_Info")
                        .WithOne("HR_Emp_Nominee")
                        .HasForeignKey("Atrai.Model.Core.Entity.HR_Emp_NomineeModel", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_PersonalInfoModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.Cat_BuildingTypeModel", "Cat_BuildingType")
                        .WithMany()
                        .HasForeignKey("BId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "HR_Emp_Info")
                        .WithOne("HR_Emp_PersonalInfo")
                        .HasForeignKey("Atrai.Model.Core.Entity.HR_Emp_PersonalInfoModel", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Acc_FiscalYearModel", "GratuityFinalYear")
                        .WithMany()
                        .HasForeignKey("GratuityFinalYId");

                    b.HasOne("Atrai.Model.Core.Entity.Acc_FiscalYearModel", "GratuityFundTransferYear")
                        .WithMany()
                        .HasForeignKey("GratuityFundTransferYId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Acc_FiscalYearModel", "PFFinalYear")
                        .WithMany()
                        .HasForeignKey("PFFinalYId");

                    b.HasOne("Atrai.Model.Core.Entity.Acc_FiscalYearModel", "PFFundTransferYear")
                        .WithMany()
                        .HasForeignKey("PFFundTransferYId");

                    b.HasOne("Atrai.Model.Core.Entity.Acc_FiscalYearModel", "WFFinalYear")
                        .WithMany()
                        .HasForeignKey("WFFinalYId");

                    b.HasOne("Atrai.Model.Core.Entity.Acc_FiscalYearModel", "WFFundTransferYear")
                        .WithMany()
                        .HasForeignKey("WFFundTransferYId");

                    b.Navigation("Cat_BuildingType");

                    b.Navigation("CompanyList");

                    b.Navigation("GratuityFinalYear");

                    b.Navigation("GratuityFundTransferYear");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("PFFinalYear");

                    b.Navigation("PFFundTransferYear");

                    b.Navigation("UserAccountList");

                    b.Navigation("WFFinalYear");

                    b.Navigation("WFFundTransferYear");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_Released", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "HR_Emp_Info")
                        .WithOne("HR_Emp_Released")
                        .HasForeignKey("Atrai.Model.Core.Entity.HR_Emp_Released", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_Salary", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.Cat_BuildingTypeModel", "Cat_BuildingTypeHC")
                        .WithMany()
                        .HasForeignKey("BId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "HR_Emp_Info")
                        .WithOne("HR_Emp_Salary")
                        .HasForeignKey("Atrai.Model.Core.Entity.HR_Emp_Salary", "EmpId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_Location", "Cat_GratuityLocation")
                        .WithMany()
                        .HasForeignKey("GLId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_Location", "Cat_LocationHB")
                        .WithMany()
                        .HasForeignKey("HBLId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_Location", "Cat_LocationHB2")
                        .WithMany()
                        .HasForeignKey("HBLId2");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_Location", "Cat_LocationHB3")
                        .WithMany()
                        .HasForeignKey("HBLId3");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_Location", "Cat_Location1")
                        .WithMany()
                        .HasForeignKey("LId1");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_Location", "Cat_Location2")
                        .WithMany()
                        .HasForeignKey("LId2");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_Location", "Cat_Location3")
                        .WithMany()
                        .HasForeignKey("LId3");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Cat_Location", "Cat_LocationMC")
                        .WithMany()
                        .HasForeignKey("MCLId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_Location", "Cat_LocationPF")
                        .WithMany()
                        .HasForeignKey("PFLId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_Location", "Cat_PFLoanlocation")
                        .WithMany()
                        .HasForeignKey("PFLLId");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_Location", "Cat_PFLoanlocation2")
                        .WithMany()
                        .HasForeignKey("PFLLId2");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_Location", "Cat_PFLoanlocation3")
                        .WithMany()
                        .HasForeignKey("PFLLId3");

                    b.HasOne("Atrai.Model.Core.Entity.Cat_Location", "Cat_LocationWelfare")
                        .WithMany()
                        .HasForeignKey("WelfareLId");

                    b.Navigation("Cat_BuildingTypeHC");

                    b.Navigation("Cat_GratuityLocation");

                    b.Navigation("Cat_Location1");

                    b.Navigation("Cat_Location2");

                    b.Navigation("Cat_Location3");

                    b.Navigation("Cat_LocationHB");

                    b.Navigation("Cat_LocationHB2");

                    b.Navigation("Cat_LocationHB3");

                    b.Navigation("Cat_LocationMC");

                    b.Navigation("Cat_LocationPF");

                    b.Navigation("Cat_LocationWelfare");

                    b.Navigation("Cat_PFLoanlocation");

                    b.Navigation("Cat_PFLoanlocation2");

                    b.Navigation("Cat_PFLoanlocation3");

                    b.Navigation("CompanyList");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Emp_ShiftInput", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "HR_Emp_Info")
                        .WithOne("HR_Emp_ShiftInput")
                        .HasForeignKey("Atrai.Model.Core.Entity.HR_Emp_ShiftInput", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Cat_ShiftModel", "Cat_Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat_Shift");

                    b.Navigation("CompanyList");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Leave_Avail", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "HR_Emp_Info")
                        .WithOne("HR_Leave_Avail")
                        .HasForeignKey("Atrai.Model.Core.Entity.HR_Leave_Avail", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Cat_Leave_TypeModel", "Cat_Leave_Type")
                        .WithMany()
                        .HasForeignKey("LTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat_Leave_Type");

                    b.Navigation("CompanyList");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_Leave_Balance", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "HR_Emp_Info")
                        .WithOne("HR_Leave_Balance")
                        .HasForeignKey("Atrai.Model.Core.Entity.HR_Leave_Balance", "EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_ProcessLockModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Acc_FiscalMonthModel", "Acc_FiscalMonths")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("Atrai.Model.Core.Entity.Acc_FiscalYearModel", "Acc_FiscalYears")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_FiscalMonths");

                    b.Navigation("Acc_FiscalYears");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_ProcessedData", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", null)
                        .WithMany("HR_ProcessedData")
                        .HasForeignKey("EmployeeModelId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_ProssType", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_ProssType_WHDay", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.HR_RawData_App", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", null)
                        .WithMany("HR_RawData_App")
                        .HasForeignKey("EmployeeModelId");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Hr_RawData", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "HR_Emp_Info")
                        .WithMany("Hr_RawData")
                        .HasForeignKey("EmpId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("HR_Emp_Info");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.InternalTransferBatchItemsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.InternalTransferItemsModel", "InternalTransferItems")
                        .WithMany("BatchSerialItems")
                        .HasForeignKey("InternalTransferItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseBatchItemsModel", "PurchaseBatchItems")
                        .WithMany()
                        .HasForeignKey("PurchaseBatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("InternalTransferItems");

                    b.Navigation("Products");

                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.InternalTransferItemsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "FromWarehouse")
                        .WithMany()
                        .HasForeignKey("FromWarehouseId");

                    b.HasOne("Atrai.Model.Core.Entity.InternalTransferModel", "InternalTransferModel")
                        .WithMany("Items")
                        .HasForeignKey("InternalTransferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Product")
                        .WithMany("InternalTransferItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "ToWarehouse")
                        .WithMany()
                        .HasForeignKey("ToWarehouseId");

                    b.Navigation("CompanyList");

                    b.Navigation("FromWarehouse");

                    b.Navigation("InternalTransferModel");

                    b.Navigation("Product");

                    b.Navigation("ToWarehouse");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.InternalTransferModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "Warehouses")
                        .WithMany()
                        .HasForeignKey("WarehouseIdMain");

                    b.Navigation("CompanyList");

                    b.Navigation("InternetUserList");

                    b.Navigation("UserAccountList");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.InternetComplainModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.InternetPackageModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.InternetUserModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.InternetPackageModel", "InternetPackageList")
                        .WithMany()
                        .HasForeignKey("PackageId");

                    b.HasOne("Atrai.Model.Core.Entity.InternetUserStatusModel", "UserStatus")
                        .WithMany()
                        .HasForeignKey("UserStatusId");

                    b.Navigation("CompanyList");

                    b.Navigation("InternetPackageList");

                    b.Navigation("UserAccountList");

                    b.Navigation("UserStatus");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.InternetUserStatusModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.InvoiceBillModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "AccountReceiveByHead")
                        .WithMany()
                        .HasForeignKey("AccountReceiveHeadId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany("InvoiceBill")
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountReceiveByHead");

                    b.Navigation("CompanyList");

                    b.Navigation("InternetUserList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.IssueBatchItemsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.IssueItemsModel", "IssueItems")
                        .WithMany("BatchSerialItems")
                        .HasForeignKey("IssueItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseBatchItemsModel", "PurchaseBatchItems")
                        .WithMany()
                        .HasForeignKey("PurchaseBatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("IssueItems");

                    b.Navigation("Products");

                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.IssueItemsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.IssueModel", "IssueModel")
                        .WithMany("Items")
                        .HasForeignKey("IssueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Product")
                        .WithMany("IssueItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("CompanyList");

                    b.Navigation("IssueModel");

                    b.Navigation("Product");

                    b.Navigation("UserAccountList");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.IssueModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "Warehouses")
                        .WithMany()
                        .HasForeignKey("WarehouseIdMain");

                    b.Navigation("CompanyList");

                    b.Navigation("InternetUserList");

                    b.Navigation("UserAccountList");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ItemDesc", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.ItemGroupModel", "ItemGroups")
                        .WithMany()
                        .HasForeignKey("ItemGroupId");

                    b.Navigation("ItemGroups");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ItemDescriptionModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ItemGroupModel", "ItemGroups")
                        .WithMany()
                        .HasForeignKey("ItemGroupId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("ItemGroups");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ItemGroupModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.LienBank", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Country");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.LinkShareModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MASTERPO_ConsumptionModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.BOMAllocationCategoryModel", "BOMAllocationCategory")
                        .WithMany()
                        .HasForeignKey("BOMAllocationCategoryId");

                    b.HasOne("Atrai.Model.Core.Entity.BOMMasterModel", "BOMMaster")
                        .WithMany()
                        .HasForeignKey("BOMMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.BuyerPO_MasterModel", "BuyerPO_Master")
                        .WithMany()
                        .HasForeignKey("BuyerPOId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ColorsModel", "Colors")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.MasterPOModel", "MasterPO")
                        .WithMany()
                        .HasForeignKey("MasterPOId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SizesModel", "Sizes")
                        .WithMany()
                        .HasForeignKey("SizeId");

                    b.HasOne("Atrai.Model.Core.Entity.SupplierModel", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("BOMAllocationCategory");

                    b.Navigation("BOMMaster");

                    b.Navigation("BuyerPO_Master");

                    b.Navigation("Colors");

                    b.Navigation("CompanyList");

                    b.Navigation("MasterPO");

                    b.Navigation("Product");

                    b.Navigation("Sizes");

                    b.Navigation("Supplier");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MarketModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MasterLCModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.BankAccountNo", "BankAccountNos")
                        .WithMany()
                        .HasForeignKey("BankAccountId");

                    b.HasOne("Atrai.Model.Core.Entity.BuyerGroup", "BuyerGroups")
                        .WithMany()
                        .HasForeignKey("BuyerGroupID");

                    b.HasOne("Atrai.Model.Core.Entity.CustomerModel", "BuyerInformations")
                        .WithMany()
                        .HasForeignKey("BuyerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CommercialCompanyModel", "CommercialCompanies")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("Atrai.Model.Core.Entity.DayList", "DayList")
                        .WithMany()
                        .HasForeignKey("DayListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Destination", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.LCNature", "LCNature")
                        .WithMany()
                        .HasForeignKey("LCNatureId");

                    b.HasOne("Atrai.Model.Core.Entity.LCStatus", "LCStatus")
                        .WithMany()
                        .HasForeignKey("LCStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.LCType", "LCType")
                        .WithMany()
                        .HasForeignKey("LCTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.LienBank", "LienBank")
                        .WithMany("COM_MasterLC")
                        .HasForeignKey("LienBankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.OpeningBank", "OpeningBank")
                        .WithMany("COM_MasterLC")
                        .HasForeignKey("OpeningBankId");

                    b.HasOne("Atrai.Model.Core.Entity.PaymentTerms", "PaymentTerms")
                        .WithMany()
                        .HasForeignKey("PaymentTermsId");

                    b.HasOne("Atrai.Model.Core.Entity.PortOfDischarge", "PortOfDischarge")
                        .WithMany("COM_MasterLC")
                        .HasForeignKey("PortOfDischargeId");

                    b.HasOne("Atrai.Model.Core.Entity.PortOfLoading", "PortOfLoading")
                        .WithMany("COM_MasterLC")
                        .HasForeignKey("PortOfLoadingId");

                    b.HasOne("Atrai.Model.Core.Entity.ShipMode", "ShipMode")
                        .WithMany()
                        .HasForeignKey("ShipModeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ShipModel", "ShipModels")
                        .WithMany()
                        .HasForeignKey("ShipModelId");

                    b.HasOne("Atrai.Model.Core.Entity.SupplierModel", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("Atrai.Model.Core.Entity.TradeTerm", "TradeTerm")
                        .WithMany()
                        .HasForeignKey("TradeTermId");

                    b.HasOne("Atrai.Model.Core.Entity.UnitMaster", "UnitMaster")
                        .WithMany()
                        .HasForeignKey("unitId");

                    b.Navigation("BankAccountNos");

                    b.Navigation("BuyerGroups");

                    b.Navigation("BuyerInformations");

                    b.Navigation("CommercialCompanies");

                    b.Navigation("CompanyList");

                    b.Navigation("Currency");

                    b.Navigation("DayList");

                    b.Navigation("Destination");

                    b.Navigation("LCNature");

                    b.Navigation("LCStatus");

                    b.Navigation("LCType");

                    b.Navigation("LienBank");

                    b.Navigation("OpeningBank");

                    b.Navigation("PaymentTerms");

                    b.Navigation("PortOfDischarge");

                    b.Navigation("PortOfLoading");

                    b.Navigation("ShipMode");

                    b.Navigation("ShipModels");

                    b.Navigation("ShippingAgent");

                    b.Navigation("TradeTerm");

                    b.Navigation("UnitMaster");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MasterPODetailsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.BuyerPO_MasterModel", "BuyerPO_Master")
                        .WithMany()
                        .HasForeignKey("BuyerPOId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.MasterPOModel", "MasterPO")
                        .WithMany("MasterPODetails")
                        .HasForeignKey("MasterPOId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuyerPO_Master");

                    b.Navigation("CompanyList");

                    b.Navigation("MasterPO");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MasterPOModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MasterSalesTaxModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MemberModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.MarketModel", "Market")
                        .WithMany()
                        .HasForeignKey("MarketId");

                    b.HasOne("Atrai.Model.Core.Entity.MemberStatusModel", "MemberStatus")
                        .WithMany()
                        .HasForeignKey("MemberStatusId");

                    b.HasOne("Atrai.Model.Core.Entity.ShopModel", "Shop")
                        .WithMany("Member")
                        .HasForeignKey("ShopId");

                    b.Navigation("CompanyList");

                    b.Navigation("Market");

                    b.Navigation("MemberStatus");

                    b.Navigation("Shop");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MemberStatusModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MenuModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.MenuModel", "ParentMenu")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("ParentMenu");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MenuPermissionModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.BusinessTypeModel", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.MenuModel", "Menus")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessType");

                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MenuPermission_DetailsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.MenuModel", "Menus")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.MenuPermission_MasterModel", "MenuPermissionMasters")
                        .WithMany("MenuPermission_Details")
                        .HasForeignKey("MenuPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuPermissionMasters");

                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MenuPermission_MasterModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "Company")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccount")
                        .WithMany()
                        .HasForeignKey("LUserIdPermission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MobileTextAnimationModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MonthlySalesModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.NotificationMassage", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.NotificationSetting", "NotificationSetting")
                        .WithMany()
                        .HasForeignKey("NotificationSettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotificationSetting");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.NotificationModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.NotificationSeenModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.NotificationModel", "Notificaioninfo")
                        .WithMany("NotificationSeenList")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Notificaioninfo");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.NotificationSetting", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.NotifyParty", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CustomerModel", "buyers")
                        .WithMany()
                        .HasForeignKey("BuyerId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Countrys")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Atrai.Model.Core.Entity.DynamicReport", "DynamicReports")
                        .WithMany()
                        .HasForeignKey("DynamicReportId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PortOfDischarge", "PortOfDischarge")
                        .WithMany()
                        .HasForeignKey("PortOfDischargeId");

                    b.Navigation("CompanyList");

                    b.Navigation("Countrys");

                    b.Navigation("DynamicReports");

                    b.Navigation("PortOfDischarge");

                    b.Navigation("UserAccountList");

                    b.Navigation("buyers");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.OfferModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.OpeningBank", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Country");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.OrdersItemsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.OrdersModel", "OrdersModel")
                        .WithMany("Items")
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("OrdersModel");

                    b.Navigation("Product");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.OrdersModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CustomerModel", "CustomerModel")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("CustomerModel");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.OrdersPaymentModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.OrdersModel", "OrdersMain")
                        .WithMany("OrdersPayments")
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("OrdersMain");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PITypeModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PackageActivationModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SoftwarePackageModel", "SoftwarePackage")
                        .WithMany()
                        .HasForeignKey("PackageId");

                    b.Navigation("CompanyList");

                    b.Navigation("SoftwarePackage");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PaymentMethodModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.StoreSettingModel", "StoreSettings")
                        .WithMany()
                        .HasForeignKey("StoreSettingId");

                    b.Navigation("CompanyList");

                    b.Navigation("Country");

                    b.Navigation("StoreSettings");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PaymentTermsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PortOfDischarge", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Countrys")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Countrys");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PortOfLoading", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Countrys")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Countrys");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PrdUnit", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ProcessLock", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Acc_FiscalMonthModel", "Acc_FiscalMonths")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("Atrai.Model.Core.Entity.Acc_FiscalYearModel", "Acc_FiscalYears")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_FiscalMonths");

                    b.Navigation("Acc_FiscalYears");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ProductColorModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.ColorModel", "ProductColorList")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "ProductModel")
                        .WithMany("ColorList")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductColorList");

                    b.Navigation("ProductModel");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ProductImageModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ProductLedgerModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "ProductList")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("CompanyList");

                    b.Navigation("InternetUserList");

                    b.Navigation("ProductList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ProductModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "ConsumptionAccount")
                        .WithMany()
                        .HasForeignKey("AccIdConsumption");

                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "InventoryAccounts")
                        .WithMany()
                        .HasForeignKey("AccIdInventory");

                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "PurchaseVATAccount")
                        .WithMany()
                        .HasForeignKey("AccIdPurchaseVAT");

                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "SalesAccount")
                        .WithMany()
                        .HasForeignKey("AccIdSales");

                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "SalesVATAccount")
                        .WithMany()
                        .HasForeignKey("AccIdSalesVAT");

                    b.HasOne("Atrai.Model.Core.Entity.BrandModel", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("Atrai.Model.Core.Entity.CategoryModel", "Category")
                        .WithMany("ProductCount")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ColorModel", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "ParentProduct")
                        .WithMany()
                        .HasForeignKey("ParentProductId");

                    b.HasOne("Atrai.Model.Core.Entity.ProductType", "ProductTypes")
                        .WithMany()
                        .HasForeignKey("ProductTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.MasterSalesTaxModel", "PurchaseTax")
                        .WithMany()
                        .HasForeignKey("PurchaseTaxId");

                    b.HasOne("Atrai.Model.Core.Entity.MasterSalesTaxModel", "SalesTax")
                        .WithMany()
                        .HasForeignKey("SalesTaxId");

                    b.HasOne("Atrai.Model.Core.Entity.SizeModel", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId");

                    b.HasOne("Atrai.Model.Core.Entity.SupplierModel", "SupplierModel")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("Atrai.Model.Core.Entity.UnitModel", "Unit")
                        .WithMany("ProductList")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.WarrentyModel", "Warrenty")
                        .WithMany()
                        .HasForeignKey("WarrentyId");

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Color");

                    b.Navigation("CompanyList");

                    b.Navigation("ConsumptionAccount");

                    b.Navigation("InventoryAccounts");

                    b.Navigation("ParentProduct");

                    b.Navigation("ProductTypes");

                    b.Navigation("PurchaseTax");

                    b.Navigation("PurchaseVATAccount");

                    b.Navigation("SalesAccount");

                    b.Navigation("SalesTax");

                    b.Navigation("SalesVATAccount");

                    b.Navigation("Size");

                    b.Navigation("SupplierModel");

                    b.Navigation("Unit");

                    b.Navigation("UserAccountList");

                    b.Navigation("Warrenty");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ProductReviewsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Product")
                        .WithMany("ProductReviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ProductSecUnitModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UnitModel", "Units")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Product");

                    b.Navigation("Units");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ProductSizeModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "ProductModel")
                        .WithMany("SizeList")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SizeModel", "ProductSizeList")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductModel");

                    b.Navigation("ProductSizeList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseBatchItemsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Products")
                        .WithMany("PurchaseBatchItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseItemsModel", "PurchaseItems")
                        .WithMany("PurchaseBatchItems")
                        .HasForeignKey("PurchaseItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SupplierModel", "SupplierList")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("CompanyList");

                    b.Navigation("Products");

                    b.Navigation("PurchaseItems");

                    b.Navigation("SupplierList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseItemsCategoryModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "Acc_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CustomerModel", "Customers")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.MasterSalesTaxModel", "MasterSalesTax")
                        .WithMany()
                        .HasForeignKey("MasterTaxId");

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseModel", "PurchaseModel")
                        .WithMany("ItemsCategory")
                        .HasForeignKey("PurchaseId");

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseItemsCategoryModel", "PurchaseCategoryInfo")
                        .WithMany("PurchaseItemsCategory")
                        .HasForeignKey("PurchaseItemsCategoryId");

                    b.Navigation("Acc_ChartOfAccount");

                    b.Navigation("CompanyList");

                    b.Navigation("Customers");

                    b.Navigation("MasterSalesTax");

                    b.Navigation("PurchaseCategoryInfo");

                    b.Navigation("PurchaseModel");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseItemsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.BuyerPO_MasterModel", "BuyerPO_Master")
                        .WithMany()
                        .HasForeignKey("BuyerPOId");

                    b.HasOne("Atrai.Model.Core.Entity.ColorsModel", "Colors")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CustomerModel", "ItemWiseCustomer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.MasterSalesTaxModel", "MasterSalesTax")
                        .WithMany()
                        .HasForeignKey("MasterTaxId");

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Product")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseModel", "PurchaseModel")
                        .WithMany("Items")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseItemsModel", "PurchaseInfo")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("PurchaseItemsId");

                    b.HasOne("Atrai.Model.Core.Entity.SizesModel", "Sizes")
                        .WithMany()
                        .HasForeignKey("SizeId");

                    b.HasOne("Atrai.Model.Core.Entity.StyleModel", "Style")
                        .WithMany()
                        .HasForeignKey("StyleId");

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("BuyerPO_Master");

                    b.Navigation("Colors");

                    b.Navigation("CompanyList");

                    b.Navigation("ItemWiseCustomer");

                    b.Navigation("MasterSalesTax");

                    b.Navigation("Product");

                    b.Navigation("PurchaseInfo");

                    b.Navigation("PurchaseModel");

                    b.Navigation("Sizes");

                    b.Navigation("Style");

                    b.Navigation("UserAccountList");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("Atrai.Model.Core.Entity.CustomerModel", "CustomerModel")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Atrai.Model.Core.Entity.DocStatusModel", "DocStatus")
                        .WithMany()
                        .HasForeignKey("DocStatusId");

                    b.HasOne("Atrai.Model.Core.Entity.DocTypeModel", "DocTypeList")
                        .WithMany()
                        .HasForeignKey("DocTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "ApproveByUserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserIdApprove");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "CheckByUserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserIdCheck");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "VerifyByUserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserIdVerify");

                    b.HasOne("Atrai.Model.Core.Entity.MasterPOModel", "MasterPO")
                        .WithMany()
                        .HasForeignKey("MasterPOId");

                    b.HasOne("Atrai.Model.Core.Entity.PaymentTermsModel", "PaymentTermsInfo")
                        .WithMany()
                        .HasForeignKey("PaymentTermsId");

                    b.HasOne("Atrai.Model.Core.Entity.StatusModel", "StatusInfo")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("Atrai.Model.Core.Entity.SupplierModel", "SupplierModel")
                        .WithMany("Purchase")
                        .HasForeignKey("SupplierId");

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "Warehouses")
                        .WithMany()
                        .HasForeignKey("WarehouseIdMain")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApproveByUserAccountList");

                    b.Navigation("CheckByUserAccountList");

                    b.Navigation("CompanyList");

                    b.Navigation("Currency");

                    b.Navigation("CustomerModel");

                    b.Navigation("DocStatus");

                    b.Navigation("DocTypeList");

                    b.Navigation("MasterPO");

                    b.Navigation("PaymentTermsInfo");

                    b.Navigation("StatusInfo");

                    b.Navigation("SupplierModel");

                    b.Navigation("UserAccountList");

                    b.Navigation("VerifyByUserAccountList");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchasePaymentModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "vChartofAccounts")
                        .WithMany()
                        .HasForeignKey("AccountHeadId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseModel", "PurchaseMain")
                        .WithMany("PurchasePayments")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.TransactionModel", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId");

                    b.HasOne("Atrai.Model.Core.Entity.Acc_VoucherMainModel", "Voucher")
                        .WithMany()
                        .HasForeignKey("VoucherId");

                    b.Navigation("CompanyList");

                    b.Navigation("PurchaseMain");

                    b.Navigation("Transaction");

                    b.Navigation("UserAccountList");

                    b.Navigation("Voucher");

                    b.Navigation("vChartofAccounts");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseProductTaxModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseModel", "PurchaseModel")
                        .WithMany("PurchaseProductTax")
                        .HasForeignKey("PurchaseId");

                    b.HasOne("Atrai.Model.Core.Entity.SalesTaxModel", "SalesTaxModel")
                        .WithMany()
                        .HasForeignKey("TaxId");

                    b.Navigation("CompanyList");

                    b.Navigation("PurchaseModel");

                    b.Navigation("SalesTaxModel");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseReturnBatchItemsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseBatchItemsModel", "PurchaseBatchItems")
                        .WithMany()
                        .HasForeignKey("PurchaseBatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseReturnItemsModel", "PurchaseReturnItems")
                        .WithMany("BatchSerialItems")
                        .HasForeignKey("PurchaseReturnItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Products");

                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("PurchaseReturnItems");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseReturnItemsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Product")
                        .WithMany("PurchaseReturnItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseReturnModel", "PurchaseReturnModel")
                        .WithMany("Items")
                        .HasForeignKey("PurchaseReturnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("CompanyList");

                    b.Navigation("Product");

                    b.Navigation("PurchaseReturnModel");

                    b.Navigation("UserAccountList");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseReturnModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseModel", "PurchaseInfo")
                        .WithMany("PurchaseReturn")
                        .HasForeignKey("PurchaseId");

                    b.HasOne("Atrai.Model.Core.Entity.SupplierModel", "SupplierModel")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "Warehouses")
                        .WithMany()
                        .HasForeignKey("WarehouseIdMain");

                    b.Navigation("CompanyList");

                    b.Navigation("InternetUserList");

                    b.Navigation("PurchaseInfo");

                    b.Navigation("SupplierModel");

                    b.Navigation("UserAccountList");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseReturnPaymentModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "vChartofAccounts")
                        .WithMany()
                        .HasForeignKey("AccountHeadId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseReturnModel", "PurchaseReturnMain")
                        .WithMany("PurchaseReturnPayments")
                        .HasForeignKey("PurchaseReturnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.TransactionModel", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId");

                    b.HasOne("Atrai.Model.Core.Entity.Acc_VoucherMainModel", "Voucher")
                        .WithMany()
                        .HasForeignKey("VoucherId");

                    b.Navigation("CompanyList");

                    b.Navigation("PurchaseReturnMain");

                    b.Navigation("Transaction");

                    b.Navigation("UserAccountList");

                    b.Navigation("Voucher");

                    b.Navigation("vChartofAccounts");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseTagModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseModel", "PurchaseMaster")
                        .WithMany("PurchaseTags")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.TagsModel", "Tags")
                        .WithMany()
                        .HasForeignKey("TagsId");

                    b.Navigation("CompanyList");

                    b.Navigation("PurchaseMaster");

                    b.Navigation("Tags");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseTermsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseModel", "PurchaseMain")
                        .WithMany("PurchaseTerms")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("PurchaseMain");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.RecurringDetailsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseModel", "PurchaseModel")
                        .WithMany("RecurringDetails")
                        .HasForeignKey("PurchaseId");

                    b.HasOne("Atrai.Model.Core.Entity.SalesModel", "SalesModel")
                        .WithMany("RecurringDetails")
                        .HasForeignKey("SalesId");

                    b.HasOne("Atrai.Model.Core.Entity.TransactionModel", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId");

                    b.Navigation("CompanyList");

                    b.Navigation("PurchaseModel");

                    b.Navigation("SalesModel");

                    b.Navigation("Transaction");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ReportModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.ReportGroupModel", "ReportGroup")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.Navigation("ReportGroup");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ReportUserTrackingModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ReportModel", "Reports")
                        .WithMany()
                        .HasForeignKey("ReportId");

                    b.Navigation("CompanyList");

                    b.Navigation("Reports");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesBatchItemsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseBatchItemsModel", "PurchaseBatchItems")
                        .WithMany("SalesBatchItems")
                        .HasForeignKey("PurchaseBatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SalesItemsModel", "SalesItems")
                        .WithMany("BatchSerialItems")
                        .HasForeignKey("SalesItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Products");

                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("SalesItems");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesExchangeBatchItemsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseBatchItemsModel", "PurchaseBatchItems")
                        .WithMany()
                        .HasForeignKey("PurchaseBatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SalesExchangeItemsModel", "SalesExchangeItems")
                        .WithMany("BatchSerialItems")
                        .HasForeignKey("SalesExchangeItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Products");

                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("SalesExchangeItems");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesExchangeItemsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseItemsModel", "PurchaseItems")
                        .WithMany()
                        .HasForeignKey("PurchaseItemsId");

                    b.HasOne("Atrai.Model.Core.Entity.SalesReturnModel", "SalesReturnModel")
                        .WithMany("ExchangeItems")
                        .HasForeignKey("SalesReturnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("CompanyList");

                    b.Navigation("Product");

                    b.Navigation("PurchaseItems");

                    b.Navigation("SalesReturnModel");

                    b.Navigation("UserAccountList");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesItemsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Product")
                        .WithMany("SalesItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseItemsModel", "PurchaseItems")
                        .WithMany()
                        .HasForeignKey("PurchaseItemsId");

                    b.HasOne("Atrai.Model.Core.Entity.SalesModel", "SalesModel")
                        .WithMany("Items")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SalesItemsModel", "SalesItemsParent")
                        .WithMany("SalesParentItems")
                        .HasForeignKey("SalesItemsId");

                    b.HasOne("Atrai.Model.Core.Entity.TokenSalesModel", "TokenItems")
                        .WithMany("TokenBillList")
                        .HasForeignKey("TokenItemsId");

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("CompanyList");

                    b.Navigation("Product");

                    b.Navigation("PurchaseItems");

                    b.Navigation("SalesItemsParent");

                    b.Navigation("SalesModel");

                    b.Navigation("TokenItems");

                    b.Navigation("UserAccountList");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("Atrai.Model.Core.Entity.CustomerModel", "CustomerModel")
                        .WithMany("Sales")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.DocStatusModel", "DocStatus")
                        .WithMany()
                        .HasForeignKey("DocStatusId");

                    b.HasOne("Atrai.Model.Core.Entity.DocTypeModel", "DocTypeList")
                        .WithMany()
                        .HasForeignKey("DocTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.OrdersModel", "OrdersModel")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "SalesRep")
                        .WithMany()
                        .HasForeignKey("SalesRepId");

                    b.HasOne("Atrai.Model.Core.Entity.StatusModel", "StatusValue")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "Warehouses")
                        .WithMany()
                        .HasForeignKey("WarehouseIdMain")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PaymentTermsModel", "salesRecievedTermsInfo")
                        .WithMany()
                        .HasForeignKey("salesRecievedtTermsId");

                    b.Navigation("CompanyList");

                    b.Navigation("Currency");

                    b.Navigation("CustomerModel");

                    b.Navigation("DocStatus");

                    b.Navigation("DocTypeList");

                    b.Navigation("InternetUserList");

                    b.Navigation("OrdersModel");

                    b.Navigation("SalesRep");

                    b.Navigation("StatusValue");

                    b.Navigation("UserAccountList");

                    b.Navigation("Warehouses");

                    b.Navigation("salesRecievedTermsInfo");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesPaymentModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "vChartofAccounts")
                        .WithMany()
                        .HasForeignKey("AccountHeadId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PaymentTypeModel", null)
                        .WithMany("vTypeSalesSubs")
                        .HasForeignKey("PaymentTypeModelId");

                    b.HasOne("Atrai.Model.Core.Entity.SalesModel", "SalesMain")
                        .WithMany("SalesPayments")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.TransactionModel", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId");

                    b.HasOne("Atrai.Model.Core.Entity.Acc_VoucherMainModel", "Voucher")
                        .WithMany()
                        .HasForeignKey("VoucherId");

                    b.Navigation("CompanyList");

                    b.Navigation("SalesMain");

                    b.Navigation("Transaction");

                    b.Navigation("UserAccountList");

                    b.Navigation("Voucher");

                    b.Navigation("vChartofAccounts");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesProductTaxModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SalesModel", "SalesModel")
                        .WithMany("SalesProductTax")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SalesTaxModel", "SalesTaxModel")
                        .WithMany()
                        .HasForeignKey("TaxId");

                    b.Navigation("CompanyList");

                    b.Navigation("SalesModel");

                    b.Navigation("SalesTaxModel");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesReturnBatchItemsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseBatchItemsModel", "PurchaseBatchItems")
                        .WithMany()
                        .HasForeignKey("PurchaseBatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SalesReturnItemsModel", "SalesReturnItems")
                        .WithMany("BatchSerialItems")
                        .HasForeignKey("SalesReturnItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Products");

                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("SalesReturnItems");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesReturnItemsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Product")
                        .WithMany("SalesReturnItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SalesReturnModel", "SalesReturnModel")
                        .WithMany("Items")
                        .HasForeignKey("SalesReturnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("CompanyList");

                    b.Navigation("Product");

                    b.Navigation("SalesReturnModel");

                    b.Navigation("UserAccountList");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesReturnModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CustomerModel", "CustomerModel")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SalesModel", "SalesInfo")
                        .WithMany("SalesReturn")
                        .HasForeignKey("SaleId");

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "SalesRep")
                        .WithMany()
                        .HasForeignKey("SalesRepId");

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "Warehouses")
                        .WithMany()
                        .HasForeignKey("WarehouseIdMain");

                    b.Navigation("CompanyList");

                    b.Navigation("CustomerModel");

                    b.Navigation("InternetUserList");

                    b.Navigation("SalesInfo");

                    b.Navigation("SalesRep");

                    b.Navigation("UserAccountList");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesReturnPaymentModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "vChartofAccounts")
                        .WithMany()
                        .HasForeignKey("AccountHeadId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SalesReturnModel", "SalesReturnMain")
                        .WithMany("SalesReturnPayments")
                        .HasForeignKey("SalesReturnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.TransactionModel", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId");

                    b.HasOne("Atrai.Model.Core.Entity.Acc_VoucherMainModel", "Voucher")
                        .WithMany()
                        .HasForeignKey("VoucherId");

                    b.Navigation("CompanyList");

                    b.Navigation("SalesReturnMain");

                    b.Navigation("Transaction");

                    b.Navigation("UserAccountList");

                    b.Navigation("Voucher");

                    b.Navigation("vChartofAccounts");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesTagModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SalesModel", "Sales")
                        .WithMany("SalesTags")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.TagsModel", "Tags")
                        .WithMany()
                        .HasForeignKey("TagsId");

                    b.Navigation("CompanyList");

                    b.Navigation("Sales");

                    b.Navigation("Tags");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesTaxModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "PurchaseVATAccount")
                        .WithMany()
                        .HasForeignKey("AccIdPurchaseTaxes");

                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "SalesVATAccount")
                        .WithMany()
                        .HasForeignKey("AccIdSalesTaxes");

                    b.HasOne("Atrai.Model.Core.Entity.AgencyModel", "Agency")
                        .WithMany()
                        .HasForeignKey("AgentId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.MasterSalesTaxModel", "MasterSalesTax")
                        .WithMany("SalesTax")
                        .HasForeignKey("SalesTaxMasterId");

                    b.Navigation("Agency");

                    b.Navigation("CompanyList");

                    b.Navigation("MasterSalesTax");

                    b.Navigation("PurchaseVATAccount");

                    b.Navigation("SalesVATAccount");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesTermsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SalesModel", "SalesMain")
                        .WithMany("SalesTerms")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("SalesMain");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ShipMode", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ShippingChargeModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ShopModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.MarketModel", "Market")
                        .WithMany()
                        .HasForeignKey("MarketId");

                    b.Navigation("CompanyList");

                    b.Navigation("Market");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ShortLinkHitModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.ShortLinkModel", "ShortLinkInfo")
                        .WithMany("ShortLinkHitList")
                        .HasForeignKey("ShortLinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShortLinkInfo");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ShortLinkModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SizeModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId");

                    b.Navigation("CompanyList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SizesChildModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SizesModel", "Sizes")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.StyleModel", "StyleModel")
                        .WithMany("SizesChilds")
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Sizes");

                    b.Navigation("StyleModel");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SizesModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SmsSettingModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SoftwarePackageModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.BusinessTypeModel", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Country")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("Atrai.Model.Core.Entity.DurationTimeModel", "DurationType")
                        .WithMany()
                        .HasForeignKey("DurationId");

                    b.Navigation("BusinessType");

                    b.Navigation("Country");

                    b.Navigation("DurationType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.StatusModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.DocTypeModel", "DocTypes")
                        .WithMany()
                        .HasForeignKey("DocTypeId");

                    b.Navigation("DocTypes");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.StoreSettingModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.VariableModel", "AccountingMethods")
                        .WithMany()
                        .HasForeignKey("AccountingMethodId");

                    b.HasOne("Atrai.Model.Core.Entity.ReportStyleModel", "BarcodeReportStyle")
                        .WithMany()
                        .HasForeignKey("BarcodeReportStyleId");

                    b.HasOne("Atrai.Model.Core.Entity.BusinessTypeModel", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany("storeinfo")
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.VariableModel", "DateFormats")
                        .WithMany()
                        .HasForeignKey("DateFormatId");

                    b.HasOne("Atrai.Model.Core.Entity.DocTypeModel", "DocTypeList")
                        .WithMany()
                        .HasForeignKey("DocTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.VariableModel", "FinancialYears")
                        .WithMany()
                        .HasForeignKey("FinancialYearId");

                    b.HasOne("Atrai.Model.Core.Entity.VariableModel", "Languages")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.VariableModel", "NumberFormats")
                        .WithMany()
                        .HasForeignKey("NumberFormatId");

                    b.HasOne("Atrai.Model.Core.Entity.ReportStyleModel", "PurchaseReportStyle")
                        .WithMany()
                        .HasForeignKey("PurchaseReportStyleId");

                    b.HasOne("Atrai.Model.Core.Entity.ReportStyleModel", "SalesReportStyle")
                        .WithMany()
                        .HasForeignKey("SalesReportStyleId");

                    b.HasOne("Atrai.Model.Core.Entity.VariableModel", "SignOutDurations")
                        .WithMany()
                        .HasForeignKey("SignOutDurationId");

                    b.HasOne("Atrai.Model.Core.Entity.SoftwarePackageModel", "SoftwarePackages")
                        .WithMany()
                        .HasForeignKey("SoftwarePackageId");

                    b.HasOne("Atrai.Model.Core.Entity.SubscriptionTypeModel", "SubscriptionType")
                        .WithMany()
                        .HasForeignKey("SubscriptionTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.TaxFormModel", "TaxForm")
                        .WithMany()
                        .HasForeignKey("TaxFormId");

                    b.HasOne("Atrai.Model.Core.Entity.VariableModel", "TaxRates")
                        .WithMany()
                        .HasForeignKey("TaxRateId");

                    b.HasOne("Atrai.Model.Core.Entity.PaymentTermsModel", "TermsInfo")
                        .WithMany()
                        .HasForeignKey("TermsId");

                    b.HasOne("Atrai.Model.Core.Entity.TimeZoneSettingsModel", "TimeZones")
                        .WithMany()
                        .HasForeignKey("TimeZoneSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.Acc_VoucherNoCreatedTypeModel", "VoucherNoCreatedTypes")
                        .WithMany()
                        .HasForeignKey("VoucherNoCreatedTypeId");

                    b.Navigation("AccountingMethods");

                    b.Navigation("BarcodeReportStyle");

                    b.Navigation("BusinessType");

                    b.Navigation("CompanyList");

                    b.Navigation("Country");

                    b.Navigation("Currency");

                    b.Navigation("DateFormats");

                    b.Navigation("DocTypeList");

                    b.Navigation("FinancialYears");

                    b.Navigation("Languages");

                    b.Navigation("NumberFormats");

                    b.Navigation("PurchaseReportStyle");

                    b.Navigation("SalesReportStyle");

                    b.Navigation("SignOutDurations");

                    b.Navigation("SoftwarePackages");

                    b.Navigation("SubscriptionType");

                    b.Navigation("TaxForm");

                    b.Navigation("TaxRates");

                    b.Navigation("TermsInfo");

                    b.Navigation("TimeZones");

                    b.Navigation("UserAccountList");

                    b.Navigation("VoucherNoCreatedTypes");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.StyleModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CustomerModel", "Buyers")
                        .WithMany()
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyers");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SubscriptionActivationCompanyModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId");

                    b.HasOne("Atrai.Model.Core.Entity.SubscriptionTypeModel", "SubscriptionType")
                        .WithMany()
                        .HasForeignKey("SubscriptionTypeId");

                    b.Navigation("CompanyList");

                    b.Navigation("SubscriptionType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SubscriptionActivationModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccount")
                        .WithMany("UserActivationList")
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.SubscriptionTypeModel", "SubscriptionType")
                        .WithMany()
                        .HasForeignKey("SubscriptionTypeId");

                    b.Navigation("CompanyList");

                    b.Navigation("SubscriptionType");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SubscriptionTypeModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.BusinessTypeModel", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId");

                    b.Navigation("BusinessType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SupplierModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "ExpenseCategoryAccount")
                        .WithMany()
                        .HasForeignKey("AccIdExpenseCategory");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PaymentTermsModel", "PaymentTermsInfo")
                        .WithMany()
                        .HasForeignKey("PaymentTermsId");

                    b.HasOne("Atrai.Model.Core.Entity.SupplierModel", "Suppliers")
                        .WithMany()
                        .HasForeignKey("SupParentId");

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Currency")
                        .WithMany()
                        .HasForeignKey("SupplierCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Currency");

                    b.Navigation("ExpenseCategoryAccount");

                    b.Navigation("PaymentTermsInfo");

                    b.Navigation("Suppliers");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TagsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.TagsModel", "Tags")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("CompanyList");

                    b.Navigation("Tags");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TaskToDoModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.TaskToDoModel", "ParentTaskToDo")
                        .WithMany("SubTaskList")
                        .HasForeignKey("TaskToDoParentId");

                    b.Navigation("CompanyList");

                    b.Navigation("ParentTaskToDo");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TermsMainModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TermsSubModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.TermsMainModel", "TermsMain")
                        .WithMany("TermsSubs")
                        .HasForeignKey("TermsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("TermsMain");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TestRouterOnuTrackingModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "ProductList")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("CompanyList");

                    b.Navigation("InternetUserList");

                    b.Navigation("ProductList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ToDoModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("InternetUserList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ToWarehousePermissionModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "WarehouseList")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");

                    b.Navigation("WarehouseList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TokenSalesModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "BlackProduct")
                        .WithMany()
                        .HasForeignKey("BlackProductId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CustomerModel", "CustomerModel")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.DocTypeModel", "DocTypeList")
                        .WithMany()
                        .HasForeignKey("DocTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "OtherOneProduct")
                        .WithMany()
                        .HasForeignKey("OtherOneProductId");

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "OtherTwoProduct")
                        .WithMany()
                        .HasForeignKey("OtherTwoProductId");

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "Warehouses")
                        .WithMany()
                        .HasForeignKey("WarehouseIdMain")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "WhiteProduct")
                        .WithMany()
                        .HasForeignKey("WhiteProductId");

                    b.Navigation("BlackProduct");

                    b.Navigation("CompanyList");

                    b.Navigation("CustomerModel");

                    b.Navigation("DocTypeList");

                    b.Navigation("OtherOneProduct");

                    b.Navigation("OtherTwoProduct");

                    b.Navigation("UserAccountList");

                    b.Navigation("Warehouses");

                    b.Navigation("WhiteProduct");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TradeTermsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TransactionDetailsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseModel", "Purchase")
                        .WithMany()
                        .HasForeignKey("PurchaseId");

                    b.HasOne("Atrai.Model.Core.Entity.SalesModel", "Sales")
                        .WithMany()
                        .HasForeignKey("SalesId");

                    b.HasOne("Atrai.Model.Core.Entity.TransactionModel", "TransactionMain")
                        .WithMany("TransactionDetails")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Purchase");

                    b.Navigation("Sales");

                    b.Navigation("TransactionMain");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TransactionModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CategoryModel", "vCategory")
                        .WithMany()
                        .HasForeignKey("CategoryItemId");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "CreditAccount")
                        .WithMany()
                        .HasForeignKey("CreditAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("Atrai.Model.Core.Entity.CustomerModel", "Customer")
                        .WithMany("AccountsDailyTransaction")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Atrai.Model.Core.Entity.DamageModel", "Damage")
                        .WithMany()
                        .HasForeignKey("DamageId");

                    b.HasOne("Atrai.Model.Core.Entity.AccountHeadModel", "DebitAccount")
                        .WithMany()
                        .HasForeignKey("DebitAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Atrai.Model.Core.Entity.InternetUserModel", "InternetUser")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Atrai.Model.Core.Entity.IssueModel", "Issue")
                        .WithMany()
                        .HasForeignKey("IssueId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.MemberModel", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.HasOne("Atrai.Model.Core.Entity.TransactionModel", "ParentTransaction")
                        .WithMany()
                        .HasForeignKey("ParentTransactionId");

                    b.HasOne("Atrai.Model.Core.Entity.PaymentTypeModel", "PaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId");

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "vProduct")
                        .WithMany()
                        .HasForeignKey("ProductItemId");

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseModel", "Purchase")
                        .WithMany("AccountTransaction")
                        .HasForeignKey("PurchaseId");

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseReturnModel", "PurchaseReturn")
                        .WithMany("AccountTransaction")
                        .HasForeignKey("PurchaseReturnId");

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeSalaryMasterModel", "SalarySheet")
                        .WithMany()
                        .HasForeignKey("SalarySheetId");

                    b.HasOne("Atrai.Model.Core.Entity.SalesModel", "Sales")
                        .WithMany("AccountTransaction")
                        .HasForeignKey("SalesId");

                    b.HasOne("Atrai.Model.Core.Entity.SalesReturnModel", "SalesReturn")
                        .WithMany("AccountTransaction")
                        .HasForeignKey("SalesReturnId");

                    b.HasOne("Atrai.Model.Core.Entity.SupplierModel", "Supplier")
                        .WithMany("AccountsDailyTransaction")
                        .HasForeignKey("SupplierId");

                    b.HasOne("Atrai.Model.Core.Entity.InternalTransferModel", "TransferIn")
                        .WithMany()
                        .HasForeignKey("TransferInId");

                    b.HasOne("Atrai.Model.Core.Entity.InternalTransferModel", "TransferOut")
                        .WithMany()
                        .HasForeignKey("TransferOutId");

                    b.HasOne("Atrai.Model.Core.Entity.Acc_VoucherMainModel", "VoucherMain")
                        .WithMany()
                        .HasForeignKey("VoucherId");

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("CompanyList");

                    b.Navigation("CreditAccount");

                    b.Navigation("Currency");

                    b.Navigation("Customer");

                    b.Navigation("Damage");

                    b.Navigation("DebitAccount");

                    b.Navigation("Employee");

                    b.Navigation("InternetUser");

                    b.Navigation("Issue");

                    b.Navigation("Member");

                    b.Navigation("ParentTransaction");

                    b.Navigation("PaymentType");

                    b.Navigation("Purchase");

                    b.Navigation("PurchaseReturn");

                    b.Navigation("SalarySheet");

                    b.Navigation("Sales");

                    b.Navigation("SalesReturn");

                    b.Navigation("Supplier");

                    b.Navigation("TransferIn");

                    b.Navigation("TransferOut");

                    b.Navigation("UserAccountList");

                    b.Navigation("VoucherMain");

                    b.Navigation("vCategory");

                    b.Navigation("vProduct");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TransactionTagsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.TransactionModel", "Transactions")
                        .WithMany("TransactionTagsList")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Transactions");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TroubleTicketCommentModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "CommentToUserList")
                        .WithMany()
                        .HasForeignKey("CommentToLuserId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.TroubleTicketModel", "TroubleTicket")
                        .WithMany("TroubleTicketComment")
                        .HasForeignKey("TroubleTicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommentToUserList");

                    b.Navigation("CompanyList");

                    b.Navigation("TroubleTicket");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TroubleTicketModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.DiagnosisReportModel", "DiagnosisReport")
                        .WithMany()
                        .HasForeignKey("DiagnosisReportId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "DiagonosisByUser")
                        .WithMany()
                        .HasForeignKey("DiagonosisByLUserId");

                    b.HasOne("Atrai.Model.Core.Entity.InternetComplainModel", "InternetComplain")
                        .WithMany()
                        .HasForeignKey("InternetComplainId");

                    b.HasOne("Atrai.Model.Core.Entity.InternetUserModel", "InternetUser")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "SupportByUser")
                        .WithMany()
                        .HasForeignKey("SupportByLUserId");

                    b.Navigation("CompanyList");

                    b.Navigation("DiagnosisReport");

                    b.Navigation("DiagonosisByUser");

                    b.Navigation("InternetComplain");

                    b.Navigation("InternetUser");

                    b.Navigation("SupportByUser");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TruckInfo", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.UnitGroup", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.UnitMaster", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UnitGroup", "UnitGroup")
                        .WithMany("UnitMaster")
                        .HasForeignKey("UnitGroupId");

                    b.Navigation("CompanyList");

                    b.Navigation("UnitGroup");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.UnitModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.UserAccountModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.EmployeeModel", "EmployeeList")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserRoleModel", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId");

                    b.Navigation("CompanyList");

                    b.Navigation("EmployeeList");

                    b.Navigation("UserAccountList");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.UserLogingInfoModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany("UserloginInfo")
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.UserRoleModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.BusinessTypeModel", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId");

                    b.Navigation("BusinessType");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.UserTerminateModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("InternetUserList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.UserTransactionLogModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany("UserTransaction")
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.VGMModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.VoterModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.WalletModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CreditBalanceModel", "PurchaseItem")
                        .WithMany()
                        .HasForeignKey("CreditBalanceId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserList")
                        .WithMany("UserWallet")
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("PurchaseItem");

                    b.Navigation("UserList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.WarehouseModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.WarehouseModel", "Warehouses")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.WarrantyItemsModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ProductModel", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("Atrai.Model.Core.Entity.PurchaseBatchItemsModel", "PurchaseBatchItems")
                        .WithMany("WarrentyList")
                        .HasForeignKey("PurchaseBatchId");

                    b.HasOne("Atrai.Model.Core.Entity.SalesModel", "Sales")
                        .WithMany()
                        .HasForeignKey("SalesId");

                    b.HasOne("Atrai.Model.Core.Entity.SupplierModel", "SupplierList")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("CompanyList");

                    b.Navigation("Products");

                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("Sales");

                    b.Navigation("SupplierList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.WarrentyModel", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.DurationTimeModel", "DurationTime")
                        .WithMany()
                        .HasForeignKey("DurationTimeId");

                    b.Navigation("DurationTime");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.WorkOrderMaster", b =>
                {
                    b.HasOne("Atrai.Model.Core.Entity.ApprovedBy", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedById");

                    b.HasOne("Atrai.Model.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.CommercialCompanyModel", "CommercialCompany")
                        .WithMany()
                        .HasForeignKey("CommercialCompanyId");

                    b.HasOne("Atrai.Model.Core.Entity.CountryModel", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("Atrai.Model.Core.Entity.ItemDescriptionModel", "ItemDescs")
                        .WithMany()
                        .HasForeignKey("ItemDescId");

                    b.HasOne("Atrai.Model.Core.Entity.ItemGroupModel", "ItemGroups")
                        .WithMany()
                        .HasForeignKey("ItemGroupId");

                    b.HasOne("Atrai.Model.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atrai.Model.Core.Entity.ApprovedBy", "RecommenedBy")
                        .WithMany()
                        .HasForeignKey("RecommenedById");

                    b.HasOne("Atrai.Model.Core.Entity.SupplierModel", "SupplierInformation")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("Atrai.Model.Core.Entity.WorkorderStatus", "WorkorderStatus")
                        .WithMany()
                        .HasForeignKey("WorkOrderStatusId");

                    b.Navigation("ApprovedBy");

                    b.Navigation("CommercialCompany");

                    b.Navigation("CompanyList");

                    b.Navigation("Currency");

                    b.Navigation("ItemDescs");

                    b.Navigation("ItemGroups");

                    b.Navigation("RecommenedBy");

                    b.Navigation("SupplierInformation");

                    b.Navigation("UserAccountList");

                    b.Navigation("WorkorderStatus");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_BudgetMainModel", b =>
                {
                    b.Navigation("BudgetSubs");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_VoucherMainModel", b =>
                {
                    b.Navigation("Acc_VoucherTranGroups");

                    b.Navigation("VoucherCheckNos");

                    b.Navigation("VoucherSubs");

                    b.Navigation("VoucherTagsList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_VoucherSubModel", b =>
                {
                    b.Navigation("VoucherSubChecnoes");

                    b.Navigation("VoucherSubSections");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Acc_VoucherTypeModel", b =>
                {
                    b.Navigation("VoucherMains");

                    b.Navigation("VoucherNoPrefixs");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AccountHeadModel", b =>
                {
                    b.Navigation("ChildrenAccountList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.AndroidMenuPermission_MasterModel", b =>
                {
                    b.Navigation("AndroidMenuPermission_Details");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BBLCMain", b =>
                {
                    b.Navigation("BBLC_Details");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BOMMasterModel", b =>
                {
                    b.Navigation("BOMDetails");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BookModel", b =>
                {
                    b.Navigation("Gallery");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.BuyerPO_MasterModel", b =>
                {
                    b.Navigation("BuyerPO_Details");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_CommercialInvoice", b =>
                {
                    b.Navigation("COM_CommercialInvoice_Subs");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_DocumentAcceptance_Master", b =>
                {
                    b.Navigation("COM_DocumentAcceptance_Details");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_MachinaryLC_Master", b =>
                {
                    b.Navigation("COM_MachinaryLC_Details");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_MachineryLCMaster", b =>
                {
                    b.Navigation("COM_MachineryLCDetailses");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.COM_ProformaInvoice", b =>
                {
                    b.Navigation("COM_ProformaInvoice_Subs");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_DepartmentModel", b =>
                {
                    b.Navigation("Cat_Section");

                    b.Navigation("Cat_SubSection");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_Integration_Setting_Main", b =>
                {
                    b.Navigation("Cat_Integration_Setting_Details");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.Cat_SectionModel", b =>
                {
                    b.Navigation("Cat_SubSection");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CategoryModel", b =>
                {
                    b.Navigation("ChildCategoryList");

                    b.Navigation("ProductCount");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CompanyModel", b =>
                {
                    b.Navigation("storeinfo");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.CustomerModel", b =>
                {
                    b.Navigation("AccountsDailyTransaction");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DailyProduction_MasterModel", b =>
                {
                    b.Navigation("DailyProduction_Details");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DamageItemsModel", b =>
                {
                    b.Navigation("BatchSerialItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DamageModel", b =>
                {
                    b.Navigation("CostCalculations");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.DeliveryServiceModel", b =>
                {
                    b.Navigation("DeliveryServiceComment");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.EmployeeModel", b =>
                {
                    b.Navigation("HR_AttFixed");

                    b.Navigation("HR_Emp_Address")
                        .IsRequired();

                    b.Navigation("HR_Emp_BankInfo")
                        .IsRequired();

                    b.Navigation("HR_Emp_Educations");

                    b.Navigation("HR_Emp_Experiences");

                    b.Navigation("HR_Emp_Family")
                        .IsRequired();

                    b.Navigation("HR_Emp_Image")
                        .IsRequired();

                    b.Navigation("HR_Emp_Increment")
                        .IsRequired();

                    b.Navigation("HR_Emp_Nominee")
                        .IsRequired();

                    b.Navigation("HR_Emp_PersonalInfo")
                        .IsRequired();

                    b.Navigation("HR_Emp_Released")
                        .IsRequired();

                    b.Navigation("HR_Emp_Salary")
                        .IsRequired();

                    b.Navigation("HR_Emp_ShiftInput")
                        .IsRequired();

                    b.Navigation("HR_Leave_Avail")
                        .IsRequired();

                    b.Navigation("HR_Leave_Balance")
                        .IsRequired();

                    b.Navigation("HR_ProcessedData");

                    b.Navigation("HR_RawData_App");

                    b.Navigation("Hr_RawData");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.EmployeeSalaryMasterModel", b =>
                {
                    b.Navigation("SalaryDetailsList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ExportInvoiceDetails", b =>
                {
                    b.Navigation("ExportInvoicePackingLists");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ExportInvoiceMaster", b =>
                {
                    b.Navigation("ExportInvoiceDetails");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ExportRealization_Master", b =>
                {
                    b.Navigation("ExportRealization_Details");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.GatePassModel", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.GroupLC_MainModel", b =>
                {
                    b.Navigation("GroupLC_Sub");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.InternalTransferItemsModel", b =>
                {
                    b.Navigation("BatchSerialItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.InternalTransferModel", b =>
                {
                    b.Navigation("CostCalculations");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.InternetUserModel", b =>
                {
                    b.Navigation("InvoiceBill");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.IssueItemsModel", b =>
                {
                    b.Navigation("BatchSerialItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.IssueModel", b =>
                {
                    b.Navigation("CostCalculations");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.LienBank", b =>
                {
                    b.Navigation("COM_MasterLC");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MasterLCModel", b =>
                {
                    b.Navigation("COM_GroupLC_Subs");

                    b.Navigation("COM_MasterLCExport");

                    b.Navigation("COM_MasterLC_Details");

                    b.Navigation("ExportInvoiceMasters");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MasterPOModel", b =>
                {
                    b.Navigation("MasterPODetails");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MasterSalesTaxModel", b =>
                {
                    b.Navigation("SalesTax");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.MenuPermission_MasterModel", b =>
                {
                    b.Navigation("MenuPermission_Details");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.NotificationModel", b =>
                {
                    b.Navigation("NotificationSeenList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.OpeningBank", b =>
                {
                    b.Navigation("BankAccountNos");

                    b.Navigation("COM_MasterLC");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.OrdersModel", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("OrdersPayments");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PaymentTypeModel", b =>
                {
                    b.Navigation("vTypeSalesSubs");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PortOfDischarge", b =>
                {
                    b.Navigation("COM_MasterLC");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PortOfLoading", b =>
                {
                    b.Navigation("COM_MasterLC");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ProductModel", b =>
                {
                    b.Navigation("ColorList");

                    b.Navigation("CostCalculated");

                    b.Navigation("DamageItems");

                    b.Navigation("InternalTransferItems");

                    b.Navigation("IssueItems");

                    b.Navigation("ProductImages");

                    b.Navigation("ProductReviews");

                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("PurchaseItems");

                    b.Navigation("PurchaseReturnItems");

                    b.Navigation("SalesItems");

                    b.Navigation("SalesReturnItems");

                    b.Navigation("SizeList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseBatchItemsModel", b =>
                {
                    b.Navigation("SalesBatchItems");

                    b.Navigation("WarrentyList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseItemsCategoryModel", b =>
                {
                    b.Navigation("PurchaseItemsCategory");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseItemsModel", b =>
                {
                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("PurchaseItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseModel", b =>
                {
                    b.Navigation("AccountTransaction");

                    b.Navigation("CostCalculations");

                    b.Navigation("Items");

                    b.Navigation("ItemsCategory");

                    b.Navigation("PurchasePayments");

                    b.Navigation("PurchaseProductTax");

                    b.Navigation("PurchaseReturn");

                    b.Navigation("PurchaseTags");

                    b.Navigation("PurchaseTerms");

                    b.Navigation("RecurringDetails");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseReturnItemsModel", b =>
                {
                    b.Navigation("BatchSerialItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.PurchaseReturnModel", b =>
                {
                    b.Navigation("AccountTransaction");

                    b.Navigation("CostCalculations");

                    b.Navigation("Items");

                    b.Navigation("PurchaseReturnPayments");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesExchangeItemsModel", b =>
                {
                    b.Navigation("BatchSerialItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesItemsModel", b =>
                {
                    b.Navigation("BatchSerialItems");

                    b.Navigation("SalesParentItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesModel", b =>
                {
                    b.Navigation("AccountTransaction");

                    b.Navigation("CostCalculations");

                    b.Navigation("Items");

                    b.Navigation("RecurringDetails");

                    b.Navigation("SalesPayments");

                    b.Navigation("SalesProductTax");

                    b.Navigation("SalesReturn");

                    b.Navigation("SalesTags");

                    b.Navigation("SalesTerms");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesReturnItemsModel", b =>
                {
                    b.Navigation("BatchSerialItems");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SalesReturnModel", b =>
                {
                    b.Navigation("AccountTransaction");

                    b.Navigation("CostCalculations");

                    b.Navigation("ExchangeItems");

                    b.Navigation("Items");

                    b.Navigation("SalesReturnPayments");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ShopModel", b =>
                {
                    b.Navigation("Member");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.ShortLinkModel", b =>
                {
                    b.Navigation("ShortLinkHitList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.StyleModel", b =>
                {
                    b.Navigation("ColorsChilds");

                    b.Navigation("SizesChilds");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.SupplierModel", b =>
                {
                    b.Navigation("AccountsDailyTransaction");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TaskToDoModel", b =>
                {
                    b.Navigation("SubTaskList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TermsMainModel", b =>
                {
                    b.Navigation("TermsSubs");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TokenSalesModel", b =>
                {
                    b.Navigation("TokenBillList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TransactionModel", b =>
                {
                    b.Navigation("TransactionDetails");

                    b.Navigation("TransactionTagsList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.TroubleTicketModel", b =>
                {
                    b.Navigation("TroubleTicketComment");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.UnitGroup", b =>
                {
                    b.Navigation("UnitMaster");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.UnitMaster", b =>
                {
                    b.Navigation("ExportOrders");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.UnitModel", b =>
                {
                    b.Navigation("ProductList");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.UserAccountModel", b =>
                {
                    b.Navigation("UserActivationList");

                    b.Navigation("UserTransaction");

                    b.Navigation("UserWallet");

                    b.Navigation("UserloginInfo");
                });

            modelBuilder.Entity("Atrai.Model.Core.Entity.WorkOrderMaster", b =>
                {
                    b.Navigation("COM_MachineryLCDetailss");
                });
#pragma warning restore 612, 618
        }
    }
}
