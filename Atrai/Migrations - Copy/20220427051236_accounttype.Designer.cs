// <auto-generated />
using System;
using Invoice.Data.AppDataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Invoice.Migrations
{
    [DbContext(typeof(InvoiceDbContext))]
    [Migration("20220427051236_accounttype")]
    partial class accounttype
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Invoice.Core.Entity.Acc_FiscalHalfYear", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FYId")
                        .HasColumnType("int");

                    b.Property<string>("HyearName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HyearNameBangla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("dtFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtTo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Acc_FiscalHalfYear");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_FiscalMonthModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("ClosingdtTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FYId")
                        .HasColumnType("int");

                    b.Property<int>("HYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MonthName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthNameBangla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OpeningdtFrom")
                        .HasColumnType("datetime2");

                    b.Property<int>("QtrId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("dtFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("isLockedAccounts")
                        .HasColumnType("bit");

                    b.Property<bool>("isLockedAttendance")
                        .HasColumnType("bit");

                    b.Property<bool>("isLockedSalary")
                        .HasColumnType("bit");

                    b.Property<bool>("isLockedStore")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Acc_FiscalMonth");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_FiscalQtr", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FYId")
                        .HasColumnType("int");

                    b.Property<int>("HYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("QtrName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QtrNameBangla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("dtFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtTo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Acc_FiscalQtr");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_FiscalYearModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ClDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FYName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FYNameBangla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("OpDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OpeningDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("isRunning")
                        .HasColumnType("bit");

                    b.Property<bool>("isWorking")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Acc_FiscalYear");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_VoucherMainModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<double>("ConvRate")
                        .HasColumnType("float");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("CountryIdLocal")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCash")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdApprove")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdCheck")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("PrdUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Referance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferanceThree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferanceTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("VAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VoucherInputDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherNo")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<int>("VoucherSerialId")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherTranGroupId")
                        .HasColumnType("int");

                    b.Property<string>("VoucherTranGroupList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VoucherTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("YearlyVoucherTypeWiseSerial")
                        .HasColumnType("int");

                    b.Property<bool>("isAutoEntry")
                        .HasColumnType("bit");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.Property<string>("vAmountInWords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("vAmountLocal")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("CountryId");

                    b.HasIndex("CountryIdLocal");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PrdUnitId");

                    b.HasIndex("VoucherTranGroupId");

                    b.HasIndex("VoucherTypeId");

                    b.ToTable("Acc_VoucherMain");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_VoucherNoCreatedTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherNoCreatedTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherNoCreatedTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Acc_VoucherNoCreatedType");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_VoucherNoPrefixModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherShortPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VoucherTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("isVisible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("VoucherTypeId");

                    b.ToTable("Acc_VoucherNoPrefix");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_VoucherSubChecknoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ChkNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Criteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdApprove")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdCheck")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowNoChk")
                        .HasColumnType("int");

                    b.Property<int?>("SRowNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherSubId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dtChk")
                        .HasColumnType("datetime2");

                    b.Property<string>("dtChkClear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dtChkTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isClear")
                        .HasColumnType("bit");

                    b.Property<bool>("isManualEntry")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("VoucherSubId");

                    b.ToTable("Acc_VoucherSubCheckno");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_VoucherSubModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrencyForeignId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<double>("CurrencyRate")
                        .HasColumnType("float");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("Note1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseReturnId")
                        .HasColumnType("int");

                    b.Property<int?>("RefId")
                        .HasColumnType("int");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<int?>("SLNo")
                        .HasColumnType("int");

                    b.Property<int>("SRowNo")
                        .HasColumnType("int");

                    b.Property<int?>("SalesId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesReturnId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<double>("TKCredit")
                        .HasColumnType("float");

                    b.Property<double>("TKCreditLocal")
                        .HasColumnType("float");

                    b.Property<double>("TKDebit")
                        .HasColumnType("float");

                    b.Property<double>("TKDebitLocal")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherTranGroupIdRow")
                        .HasColumnType("int");

                    b.Property<int>("ccId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccId");

                    b.HasIndex("ComId");

                    b.HasIndex("CurrencyForeignId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmpId");

                    b.HasIndex("LuserId");

                    b.HasIndex("MemberId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("PurchaseReturnId");

                    b.HasIndex("SalesId");

                    b.HasIndex("SalesReturnId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("VoucherId");

                    b.HasIndex("VoucherTranGroupIdRow");

                    b.ToTable("Acc_VoucherSub");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_VoucherSubSectionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Note1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RowNoSSec")
                        .HasColumnType("int");

                    b.Property<int>("SRowNo")
                        .HasColumnType("int");

                    b.Property<int>("SubSectId")
                        .HasColumnType("int");

                    b.Property<int?>("SubSectionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.Property<int>("VoucherSubId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SubSectionId");

                    b.HasIndex("VoucherSubId");

                    b.ToTable("Acc_VoucherSubSection");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_VoucherTranGroupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.Property<int>("VoucherTranGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("VoucherId");

                    b.HasIndex("VoucherTranGroupId");

                    b.ToTable("Acc_VoucherTranGroup");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_VoucherTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherTypeButtonClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherTypeClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherTypeNameShort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isSystem")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Acc_VoucherType");
                });

            modelBuilder.Entity("Invoice.Core.Entity.AccountCategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AccountCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentAccountCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ParentAccountCategoryId");

                    b.ToTable("AccountCategory");
                });

            modelBuilder.Entity("Invoice.Core.Entity.AccountHeadModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AccCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AccName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("AccType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AccountCategory")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("AccountCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("AccumulatedDepId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepExpenseId")
                        .HasColumnType("int");

                    b.Property<string>("DepreciationRate")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsBankItem")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCashItem")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChkRef")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsItemAccmulateddDep")
                        .HasColumnType("bit");

                    b.Property<bool>("IsItemBS")
                        .HasColumnType("bit");

                    b.Property<bool>("IsItemCS")
                        .HasColumnType("bit");

                    b.Property<bool>("IsItemDepExp")
                        .HasColumnType("bit");

                    b.Property<bool>("IsItemPL")
                        .HasColumnType("bit");

                    b.Property<bool>("IsItemTA")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("NumericNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("OpCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpCreditLocal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("OpDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OpDebit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OpDebitLocal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInactive")
                        .HasColumnType("bit");

                    b.Property<bool>("isItemConsumed")
                        .HasColumnType("bit");

                    b.Property<bool>("isItemInventory")
                        .HasColumnType("bit");

                    b.Property<bool>("isSystem")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountCategoryId");

                    b.HasIndex("ComId");

                    b.HasIndex("CountryId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ParentId");

                    b.ToTable("AccountHead");
                });

            modelBuilder.Entity("Invoice.Core.Entity.AccountHeadPermissionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int>("LuserIdAllow")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("AccountHeadPermission");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ActivationTicketModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ActivatedbyLUserId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AreaZone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("ContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FusionTeamLUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MRC")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ONUFrom")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("OTC")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<string>("Priority")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("PromiseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ROUTERFrom")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("ReferanceBy")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("TicketNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ActivatedbyLUserId");

                    b.HasIndex("FusionTeamLUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PackageId");

                    b.HasIndex("ComId", "TicketNo")
                        .IsUnique()
                        .HasFilter("[TicketNo] IS NOT NULL");

                    b.ToTable("ActivationTicket");
                });

            modelBuilder.Entity("Invoice.Core.Entity.AndroidMenuModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ColorOne")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ColorThree")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ColorTwo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("FontColor")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("GradiantStyle")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("IconName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("IconPath")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("MenuCaption")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("MenuPage")
                        .HasColumnType("int");

                    b.Property<string>("MenuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Radius")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AndroidMenu");
                });

            modelBuilder.Entity("Invoice.Core.Entity.AndroidMenuPermission_DetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AndroidMenuPermissionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleteP")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReport")
                        .HasColumnType("bit");

                    b.Property<bool>("IsView")
                        .HasColumnType("bit");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AndroidMenuPermissionId");

                    b.HasIndex("MenuId");

                    b.ToTable("AndroidMenuPermission_Details");
                });

            modelBuilder.Entity("Invoice.Core.Entity.AndroidMenuPermission_MasterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LUserIdPermission")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LUserIdPermission");

                    b.ToTable("AndroidMenuPermission_Master");
                });

            modelBuilder.Entity("Invoice.Core.Entity.AndroidMenuPermissionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AndroidMenuId")
                        .HasColumnType("int");

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AndroidMenuId");

                    b.HasIndex("BusinessTypeId");

                    b.ToTable("AndroidMenuPermission");
                });

            modelBuilder.Entity("Invoice.Core.Entity.BarcodePrintModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("BarcodePrintInfo");
                });

            modelBuilder.Entity("Invoice.Core.Entity.BookModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("MobileImages");
                });

            modelBuilder.Entity("Invoice.Core.Entity.BusinessTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AppsName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BusinessTypeName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("BusinessTypeRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BusinessType");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Cat_DepartmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeptBangla")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("DeptCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<short?>("Slno")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Cat_Department");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Cat_DesignationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DesigName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("DesigNameB")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Cat_Designation");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Cat_Integration_Setting_Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<string>("ColNameFour")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ColNameFourGroupBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColNameOne")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ColNameOneGroupBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColNameThree")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ColNameThreeGroupBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColNameTwo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ColNameTwoGroupBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("ConditionCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupByCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IntegrationSettingMainId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDebit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubtract")
                        .HasColumnType("bit");

                    b.Property<string>("PcName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<string>("SelectColumnNameOne")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SelectStatement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("WhereCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("colNameFourValue")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("colNameOneValue")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("colNameThreeValue")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("colNameTwoValue")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AccId");

                    b.HasIndex("IntegrationSettingMainId");

                    b.ToTable("IntegrationSettingDetails");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Cat_Integration_Setting_Main", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IntegrationRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntegrationSettingName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IntegrationTableName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MainSLNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VoucherTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("VoucherTypeId");

                    b.ToTable("IntegrationSettingMain");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Cat_PayrollIntegrationSummary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Note1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SLNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TKCreditLocal")
                        .HasColumnType("float");

                    b.Property<double>("TKDebitLocal")
                        .HasColumnType("float");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccId");

                    b.HasIndex("ComId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("LuserId");

                    b.ToTable("PayrollIntegration");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Cat_Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeptId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("SectName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("SectNameB")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Slno")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("DeptId");

                    b.HasIndex("LuserId");

                    b.ToTable("Cat_Section");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Cat_SubSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtInput")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("SectId")
                        .HasColumnType("int");

                    b.Property<short>("Slno")
                        .HasColumnType("smallint");

                    b.Property<string>("SubSectName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("SubSectNameB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("DeptId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SectId");

                    b.ToTable("Cat_SubSection");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CategoryParentId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryParentId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ColorModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInactive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CompanyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyCode")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyShortName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ContDesig")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<string>("PrimaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecoundaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubscriptionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VoucherNoCreatedTypeId")
                        .HasColumnType("int");

                    b.Property<string>("comEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("comWeb")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("isChequeDetails")
                        .HasColumnType("bit");

                    b.Property<bool>("isEmailSerivce")
                        .HasColumnType("bit");

                    b.Property<bool>("isMultiCurrency")
                        .HasColumnType("bit");

                    b.Property<bool>("isMultiDebitCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("isSMSService")
                        .HasColumnType("bit");

                    b.Property<bool>("isVoucherDistributionEntry")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("CountryId");

                    b.HasIndex("SubscriptionTypeId");

                    b.HasIndex("VoucherNoCreatedTypeId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CompanyPermissionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isChecked")
                        .HasColumnType("bit");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("CompanyPermission");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CostCalculatedModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CalculatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CalculatedPrice")
                        .HasColumnType("decimal(18,5)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrPrice")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("CurrQty")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("DamageId")
                        .HasColumnType("int");

                    b.Property<string>("DeletedDocNo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("InternalTransferId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTransferIn")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTransferOut")
                        .HasColumnType("bit");

                    b.Property<int?>("IssueId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("PrevPrice")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("PrevQty")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseReturnId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesExchangeId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesReturnId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCurrPrice")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("TotalPrevPrice")
                        .HasColumnType("decimal(18,5)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<bool>("isManualProcess")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("DamageId");

                    b.HasIndex("InternalTransferId");

                    b.HasIndex("IssueId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("PurchaseReturnId");

                    b.HasIndex("SalesId");

                    b.HasIndex("SalesReturnId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("CostCalculated");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CountryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CountryShortName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureInfo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrencyShortName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CurrencySymbol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DialCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FlagClass")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CustomerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CustParentId")
                        .HasColumnType("int");

                    b.Property<string>("CustType")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<string>("LoginId")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("MonthlyTarget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NextPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("OpBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PrimaryAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SalesRepresentativeId")
                        .HasColumnType("int");

                    b.Property<string>("SecoundaryAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("TradeTermsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("CustParentId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SalesRepresentativeId");

                    b.HasIndex("TradeTermsId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DamageBatchItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BatchSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DamageItemId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseBatchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("DamageItemId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseBatchId");

                    b.ToTable("DamageBatchItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DamageItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<double>("AvgCostPrice")
                        .HasColumnType("float");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DamageId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("SerialItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("DamageId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("DamageItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DamageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DamageCode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("DamageDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReferanceOne")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReferanceTwo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseIdMain")
                        .HasColumnType("int");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("WarehouseIdMain");

                    b.HasIndex("ComId", "DamageCode")
                        .IsUnique()
                        .HasFilter("[DamageCode] IS NOT NULL");

                    b.ToTable("Damage");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DeliveryServiceCommentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("CommentToLuserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeliveryServiceId")
                        .HasColumnType("int");

                    b.Property<int?>("DeliveryServiceModelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("CommentToLuserId");

                    b.HasIndex("DeliveryServiceId");

                    b.HasIndex("DeliveryServiceModelId");

                    b.HasIndex("LuserId");

                    b.ToTable("DeliveryServiceComment");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DeliveryServiceDistanceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DistanceDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DistanceName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("FigureForCalculation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("DeliveryServiceDistance");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DeliveryServiceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("BillAmount")
                        .HasColumnType("real");

                    b.Property<string>("BillNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("BilledDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryClientAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeliveryClientName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeliveryClientPhoneNo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("DeliveryTimingId")
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<int?>("DistanceId")
                        .HasColumnType("int");

                    b.Property<string>("InWords")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PickupPoint")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("PreferableDateTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("ReceivedAmount")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WeightId")
                        .HasColumnType("int");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<bool>("isSystem")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeliveryTimingId");

                    b.HasIndex("DistanceId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("WeightId");

                    b.HasIndex("ComId", "BillNo")
                        .IsUnique()
                        .HasFilter("[BillNo] IS NOT NULL");

                    b.ToTable("DeliveryService");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DeliveryServiceTimingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FigureForCalculation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("TimingDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TimingName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("DeliveryServiceTiming");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DeliveryServiceWeightModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FigureForCalculation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WeightDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WeightName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("isInActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("DeliveryServiceWeight");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DiagnosisReportModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("DiagnosisReport");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DocTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DocType");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DurationTimeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DurationName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInactive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("DurationTime");
                });

            modelBuilder.Entity("Invoice.Core.Entity.EmailSettingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("MailPort")
                        .HasColumnType("int");

                    b.Property<string>("MailServer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("EmailSettings");
                });

            modelBuilder.Entity("Invoice.Core.Entity.EmployeeAttendanceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeLuerId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePathBack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePathFront")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LocationName")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("OutTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PunchDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PunchDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("EmployeeAttendance");
                });

            modelBuilder.Entity("Invoice.Core.Entity.EmployeeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("Designationid")
                        .HasColumnType("int");

                    b.Property<string>("EmergencyContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactRelationship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyMobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntroducerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntroducerContctNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntroducerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExistImage")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Salary")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("Designationid");

                    b.HasIndex("LuserId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ExpireDateExtendModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("NewExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("OldExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.ToTable("ExpireDateExtend");
                });

            modelBuilder.Entity("Invoice.Core.Entity.FromWarehousePermissionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int>("LuserIdAllow")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("FromWarehousePermission");
                });

            modelBuilder.Entity("Invoice.Core.Entity.GalleryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BookModelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookModelId");

                    b.ToTable("ImagesGallery");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternalTransferBatchItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BatchSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InternalTransferItemId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseBatchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("InternalTransferItemId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseBatchId");

                    b.ToTable("InternalTransferBatchItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternalTransferItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("FromWarehouseId")
                        .HasColumnType("int");

                    b.Property<int>("InternalTransferId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("SerialItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ToWarehouseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("FromWarehouseId");

                    b.HasIndex("InternalTransferId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ToWarehouseId");

                    b.ToTable("InternalTransferItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternalTransferModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InternalTransferCode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("InternalTransferDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReferanceOne")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReferanceTwo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseIdMain")
                        .HasColumnType("int");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("WarehouseIdMain");

                    b.HasIndex("ComId", "InternalTransferCode")
                        .IsUnique()
                        .HasFilter("[InternalTransferCode] IS NOT NULL");

                    b.ToTable("InternalTransfer");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternetComplainModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("ComplainName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("InternetComplain");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternetPackageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("PackageActiveDay")
                        .HasColumnType("int");

                    b.Property<float>("PackageAmount")
                        .HasColumnType("real");

                    b.Property<string>("PackageDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Speed")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("InternetPackage");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternetUserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("ConnectionPointAddress")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FileExtension")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastBilledDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MobileNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NationalIdCard")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ONUMac")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<string>("PaidStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TotalDue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UserStatusId")
                        .HasColumnType("int");

                    b.Property<string>("UserType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("LuserId");

                    b.HasIndex("PackageId");

                    b.HasIndex("UserStatusId");

                    b.HasIndex("ComId", "UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("InternetUser");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternetUserStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserStatusLong")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserStatusShort")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("InternetUserStatus");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InvoiceBillModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AccountReceiveHeadId")
                        .HasColumnType("int");

                    b.Property<decimal>("BadDebt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BillAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BillNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("BilledDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ExpiredDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("InWords")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NextFollowDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ReceivedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<bool>("isSystem")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountReceiveHeadId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ComId", "BillNo")
                        .IsUnique()
                        .HasFilter("[BillNo] IS NOT NULL");

                    b.ToTable("InvoiceBill");
                });

            modelBuilder.Entity("Invoice.Core.Entity.IssueBatchItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BatchSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("IssueItemId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseBatchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("IssueItemId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseBatchId");

                    b.ToTable("IssueBatchItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.IssueItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<double>("AvgCostPrice")
                        .HasColumnType("float");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IssueId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("SerialItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("IssueId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("IssueItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.IssueModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("IssueCode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReferanceOne")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReferanceTwo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseIdMain")
                        .HasColumnType("int");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("WarehouseIdMain");

                    b.HasIndex("ComId", "IssueCode")
                        .IsUnique()
                        .HasFilter("[IssueCode] IS NOT NULL");

                    b.ToTable("Issue");
                });

            modelBuilder.Entity("Invoice.Core.Entity.LinkShareModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<Guid>("SecretKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("LinkShare");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MarketModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ActiveMember")
                        .HasColumnType("int");

                    b.Property<int?>("ClosedShop")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FifthFloor")
                        .HasColumnType("int");

                    b.Property<int?>("FirstFloor")
                        .HasColumnType("int");

                    b.Property<int?>("Floors")
                        .HasColumnType("int");

                    b.Property<int?>("FourthFloor")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MarketCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MarketNameBng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MarketNameEng")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PrName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PrPhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresidentFileExtension")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PresidentImagePath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SecName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SecPhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SecoundFloor")
                        .HasColumnType("int");

                    b.Property<string>("SecretaryFileExtension")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SecretaryImagePath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ThirdFloor")
                        .HasColumnType("int");

                    b.Property<int?>("TotalShop")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Website")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Market");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MemberModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AppliedRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ApprovalRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BloodGroup")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BusinessAddressBng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BusinessAddressEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CanceledRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CheckedRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("EducationalQualification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FathersNameBng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FathersNameEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FixedAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HoldingNoBng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HoldingNoEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsApplied")
                        .HasMaxLength(200)
                        .HasColumnType("bit");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExistImage")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("MarketId")
                        .HasColumnType("int");

                    b.Property<string>("MarketName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("MemberAccessId")
                        .HasColumnType("int");

                    b.Property<string>("MemberBarcodeId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberHomePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberImagePath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("MemberStatusId")
                        .HasColumnType("int");

                    b.Property<string>("MemberType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MembersNameBng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MembersNameEng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NID")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Occupation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OwnerShipType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Photo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProposerMemberNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProposerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ShopId")
                        .HasColumnType("int");

                    b.Property<string>("ShopNameBng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopNameEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SupporterMemberNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SupporterName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerifiedRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("isCanceled")
                        .HasColumnType("bit");

                    b.Property<bool>("isVerified")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("MarketId");

                    b.HasIndex("MemberStatusId");

                    b.HasIndex("ShopId");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MemberStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MemberStatusLong")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MemberStatusShort")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("MemberStatus");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MenuModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AllActionName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("FirstParameter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstValue")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsCreateAction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleteAction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEditAction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsListAction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReportAction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsViewAction")
                        .HasColumnType("bit");

                    b.Property<string>("MenuClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MenuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("isParent")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MenuPermission_DetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleteP")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReport")
                        .HasColumnType("bit");

                    b.Property<bool>("IsView")
                        .HasColumnType("bit");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("MenuPermissionId")
                        .HasColumnType("int");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("MenuPermissionId");

                    b.ToTable("MenuPermission_Details");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MenuPermission_MasterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LUserIdPermission")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LUserIdPermission");

                    b.ToTable("MenuPermission_Master");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MenuPermissionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuPermission");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MobileTextAnimationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AnimationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("TextMessageOne")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("TextMessageOneColor")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TextMessageOneSize")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TextMessageThree")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("TextMessageThreeColor")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TextMessageThreeSize")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TextMessageTwo")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("TextMessageTwoColor")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TextMessageTwoSize")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Type")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TypeColor")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TypeSize")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("MobileTextAnimation");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MonthlySalesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("MonthId")
                        .HasColumnType("int");

                    b.Property<string>("MonthName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalSales")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("MonthlySales");
                });

            modelBuilder.Entity("Invoice.Core.Entity.NotificationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("NotifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TextMessage")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("Invoice.Core.Entity.NotificationSeenModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("NotificationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("NotificationId");

                    b.ToTable("NotificationSeen");
                });

            modelBuilder.Entity("Invoice.Core.Entity.OrdersItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("OrdersId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrdersItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.OrdersModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("DisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DisPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EmailId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OrderCode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("OrdersDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PrimaryAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SecoundaryAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("ServiceCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("TotalVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ComId", "OrderCode")
                        .IsUnique()
                        .HasFilter("[OrderCode] IS NOT NULL");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Invoice.Core.Entity.OrdersPaymentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentCardNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("OrdersId");

                    b.ToTable("OrdersPayment");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PackageActivationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActiveFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ActiveToDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ActiveYesNo")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BillingName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrxId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("ValidityDay")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("LuserId");

                    b.HasIndex("PackageId");

                    b.HasIndex("ComId", "InvoiceNo")
                        .IsUnique()
                        .HasFilter("[InvoiceNo] IS NOT NULL");

                    b.ToTable("PackageActivation");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PaymentTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeliveryService")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrading")
                        .HasColumnType("bit");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TypeShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PaymentType");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PrdUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PrdUnitBanglaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrdUnitCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PrdUnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrdUnitShortName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isPrdUnit")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("PrdUnit");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ProcessLock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtToDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FiscalMonthId")
                        .HasColumnType("int");

                    b.Property<int?>("FiscalYearId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLock")
                        .HasColumnType("bit");

                    b.Property<string>("LockType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("FiscalMonthId");

                    b.HasIndex("FiscalYearId");

                    b.HasIndex("LuserId");

                    b.ToTable("ProcessLock");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ProductLedgerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PrdDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReceivedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Referance")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Subject")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TeamType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TicketId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductLedger");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ProductModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AccIdConsumption")
                        .HasColumnType("int");

                    b.Property<int?>("AccIdInventory")
                        .HasColumnType("int");

                    b.Property<int?>("AccIdPurchaseVAT")
                        .HasColumnType("int");

                    b.Property<int?>("AccIdSales")
                        .HasColumnType("int");

                    b.Property<int?>("AccIdSalesVAT")
                        .HasColumnType("int");

                    b.Property<string>("BrandName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CategoryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ColorName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<decimal>("CommissionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CommissionPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNonInventory")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("LocalName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("MOQ")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModelName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("OldPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PCTN")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ROL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ROLStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("ROLThree")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ROLTwo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ROQ")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SizeName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UnitId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarrentyId")
                        .HasColumnType("int");

                    b.Property<decimal>("WholeSalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AccIdConsumption");

                    b.HasIndex("AccIdInventory");

                    b.HasIndex("AccIdPurchaseVAT");

                    b.HasIndex("AccIdSales");

                    b.HasIndex("AccIdSalesVAT");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LuserId");

                    b.HasIndex("UnitId");

                    b.HasIndex("WarrentyId");

                    b.HasIndex("ComId", "Code")
                        .IsUnique();

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ProductReviewsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Ratings")
                        .HasColumnType("int");

                    b.Property<string>("Reviews")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductReviews");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ProductSecUnitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SecUnitRemarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("ProductSecoundaryUnit");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseBatchItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BatchRemarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BatchSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReturn")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("PurchaseBatchAmount")
                        .HasColumnType("float");

                    b.Property<double>("PurchaseBatchPrice")
                        .HasColumnType("float");

                    b.Property<int>("PurchaseBatchQuantity")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseItemId")
                        .HasColumnType("int");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseItemId");

                    b.ToTable("PurchaseBatchItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("IndDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IndShippingProportion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("ProfitPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalesUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<bool>("isDisPerRow")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("PurchaseItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ChequeNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("ChkPer")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DisPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<decimal>("DueAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EmailId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PaidAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("PrimaryAddress")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("PurchaseCode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SecoundaryAddress")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal>("ServiceCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseIdMain")
                        .HasColumnType("int");

                    b.Property<bool>("isBatchPurchase")
                        .HasColumnType("bit");

                    b.Property<bool>("isDisPer")
                        .HasColumnType("bit");

                    b.Property<bool>("isPOSPurchase")
                        .HasColumnType("bit");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("LuserId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("WarehouseIdMain");

                    b.HasIndex("ComId", "PurchaseCode")
                        .IsUnique()
                        .HasFilter("[PurchaseCode] IS NOT NULL");

                    b.ToTable("Purchase");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchasePaymentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AccountHeadId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PaymentCardNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountHeadId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("TransactionId");

                    b.HasIndex("VoucherId");

                    b.ToTable("PurchasePayment");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseReturnBatchItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BatchSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseBatchId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseReturnItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseBatchId");

                    b.HasIndex("PurchaseReturnItemId");

                    b.ToTable("PurchaseReturnBatchItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseReturnItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<double>("CommissionAmount")
                        .HasColumnType("float");

                    b.Property<double>("CommissionPer")
                        .HasColumnType("float");

                    b.Property<double>("CostPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseReturnId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SerialItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("UserCommissionAmount")
                        .HasColumnType("float");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseReturnId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("PurchaseReturnItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseReturnModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("ChkPer")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DisPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DueAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EmailId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("FinalCostingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PaidAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PrimaryAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Profit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ProfitPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<string>("PurchaseReturnCode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("PurchaseReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecoundaryAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("ServiceCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalCommisionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseIdMain")
                        .HasColumnType("int");

                    b.Property<bool>("isPOSPurchaseReturn")
                        .HasColumnType("bit");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.Property<bool>("isSerialPurchaseReturn")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("WarehouseIdMain");

                    b.HasIndex("ComId", "PurchaseReturnCode")
                        .IsUnique()
                        .HasFilter("[PurchaseReturnCode] IS NOT NULL");

                    b.ToTable("PurchaseReturn");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseReturnPaymentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AccountHeadId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PaymentCardNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PurchaseReturnId")
                        .HasColumnType("int");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountHeadId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PurchaseReturnId");

                    b.HasIndex("TransactionId");

                    b.HasIndex("VoucherId");

                    b.ToTable("PurchaseReturnPayment");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ReportStyleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<string>("ReportFor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReportStyleName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ReportStyleRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ReportStyle");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesBatchItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BatchSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseBatchId")
                        .HasColumnType("int");

                    b.Property<double>("SalesBatchAmount")
                        .HasColumnType("float");

                    b.Property<double>("SalesBatchPrice")
                        .HasColumnType("float");

                    b.Property<int>("SalesBatchQuantity")
                        .HasColumnType("int");

                    b.Property<int>("SalesItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseBatchId");

                    b.HasIndex("SalesItemId");

                    b.ToTable("SalesBatchItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesExchangeBatchItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BatchSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseBatchId")
                        .HasColumnType("int");

                    b.Property<int>("SalesExchangeItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseBatchId");

                    b.HasIndex("SalesExchangeItemId");

                    b.ToTable("SalesExchangeBatchItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesExchangeItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<double>("CommissionAmount")
                        .HasColumnType("float");

                    b.Property<double>("CommissionPer")
                        .HasColumnType("float");

                    b.Property<double>("CostPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SalesReturnId")
                        .HasColumnType("int");

                    b.Property<string>("SerialItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("UserCommissionAmount")
                        .HasColumnType("float");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SalesReturnId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("SalesExchangeItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<double>("AvgCostPrice")
                        .HasColumnType("float");

                    b.Property<double>("CartonQty")
                        .HasColumnType("float");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<double>("CommissionAmount")
                        .HasColumnType("float");

                    b.Property<double>("CommissionPer")
                        .HasColumnType("float");

                    b.Property<double>("CostPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("IndDiscount")
                        .HasColumnType("float");

                    b.Property<double>("IndDiscountProportion")
                        .HasColumnType("float");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("PCTN")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("SalesId")
                        .HasColumnType("int");

                    b.Property<string>("SerialItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("UserCommissionAmount")
                        .HasColumnType("float");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<bool>("isDisPerRow")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SalesId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("SalesItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("ChangeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("DisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DisPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DocTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("DueAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EmailId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("FinalCostingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PaidAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("PrevDue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PrimaryAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Profit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ProfitPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SaleCode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("SalesDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecoundaryAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("ServiceCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalCommisionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarehouseIdMain")
                        .HasColumnType("int");

                    b.Property<bool>("isDisPer")
                        .HasColumnType("bit");

                    b.Property<bool>("isPOSSales")
                        .HasColumnType("bit");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.Property<bool>("isSerialSales")
                        .HasColumnType("bit");

                    b.Property<bool>("isWholeSales")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DocTypeId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("WarehouseIdMain");

                    b.HasIndex("ComId", "SaleCode")
                        .IsUnique()
                        .HasFilter("[SaleCode] IS NOT NULL");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesPaymentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AccountHeadId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PaymentCardNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PaymentTypeModelId")
                        .HasColumnType("int");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<int>("SalesId")
                        .HasColumnType("int");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountHeadId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("PaymentTypeModelId");

                    b.HasIndex("SalesId");

                    b.HasIndex("TransactionId");

                    b.HasIndex("VoucherId");

                    b.ToTable("SalesPayment");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesReturnBatchItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BatchSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseBatchId")
                        .HasColumnType("int");

                    b.Property<int>("SalesReturnItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseBatchId");

                    b.HasIndex("SalesReturnItemId");

                    b.ToTable("SalesReturnBatchItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesReturnItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<double>("CommissionAmount")
                        .HasColumnType("float");

                    b.Property<double>("CommissionPer")
                        .HasColumnType("float");

                    b.Property<double>("CostPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("SalesReturnId")
                        .HasColumnType("int");

                    b.Property<string>("SerialItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("UserCommissionAmount")
                        .HasColumnType("float");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SalesReturnId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("SalesReturnItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesReturnModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("ChkPer")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("DisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DisPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DueAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EmailId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("FinalCostingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrandTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PaidAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PrimaryAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Profit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ProfitPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SaleId")
                        .HasColumnType("int");

                    b.Property<string>("SalesReturnCode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("SalesReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecoundaryAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("ServiceCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalCommisionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseIdMain")
                        .HasColumnType("int");

                    b.Property<bool>("isPOSSalesReturn")
                        .HasColumnType("bit");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.Property<bool>("isSerialSalesReturn")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SaleId");

                    b.HasIndex("WarehouseIdMain");

                    b.HasIndex("ComId", "SalesReturnCode")
                        .IsUnique()
                        .HasFilter("[SalesReturnCode] IS NOT NULL");

                    b.ToTable("SalesReturn");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesReturnPaymentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AccountHeadId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PaymentCardNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<int>("SalesReturnId")
                        .HasColumnType("int");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountHeadId");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SalesReturnId");

                    b.HasIndex("TransactionId");

                    b.HasIndex("VoucherId");

                    b.ToTable("SalesReturnPayment");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SendSMSModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("CommandType")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SMSText")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("SendingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TextLength")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("SendSMS");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ShopModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HoldingNoBng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HoldingNoEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("MarketId")
                        .HasColumnType("int");

                    b.Property<string>("ShopBusinessAddressBng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopBusinessAddressEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShopDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShopFileExtension")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("ShopImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ShopImagePath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShopNameBng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopNameEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopOwnerBng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopOwnerEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopTypeItemProduct")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopWebSite")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("MarketId");

                    b.ToTable("Shop");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ShortLinkHitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LongString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Platform")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("ShortLinkId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WebBrowserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("WebLink")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("ShortLinkId");

                    b.ToTable("ShortLinkHit");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ShortLinkModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("ShortLink");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SizeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInactive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.ToTable("Size");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SMSBalanceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SMSPurchaseQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("SMSPurchaseRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SMSUsedQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidityDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.ToTable("SMSBalance");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SmsSettingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("SmsProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("smsAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsSender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("smsUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("SmsSetting");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SoftwarePackageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("ActiveYesNo")
                        .HasColumnType("bit");

                    b.Property<int?>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("DiscountPercentage")
                        .HasColumnType("real");

                    b.Property<float>("Duration")
                        .HasColumnType("real");

                    b.Property<int?>("DurationId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LinkAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PackagePrice")
                        .HasColumnType("real");

                    b.Property<string>("SoftwarePackageCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwarePackageDescription")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SoftwarePackageFileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoftwarePackageImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("DurationId");

                    b.ToTable("SoftwarePackage");
                });

            modelBuilder.Entity("Invoice.Core.Entity.StoreSettingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int?>("BarcodeReportStyleId")
                        .HasColumnType("int");

                    b.Property<int>("BaseComId")
                        .HasColumnType("int");

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomizedReportFormatName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Days")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HeaderCaption")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirstLetterUpperCase")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFixedSalesValue")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneTwo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("RedirectToEcommercePage")
                        .HasColumnType("bit");

                    b.Property<string>("ReportCaptionSmall")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ReportStyleId")
                        .HasColumnType("int");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SubscriptionTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VoucherNoCreatedTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Web")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("isBackDatePermission")
                        .HasColumnType("bit");

                    b.Property<bool>("isChequeDetails")
                        .HasColumnType("bit");

                    b.Property<bool>("isEmailSerivce")
                        .HasColumnType("bit");

                    b.Property<bool>("isMultiCurrency")
                        .HasColumnType("bit");

                    b.Property<bool>("isMultiDebitCredit")
                        .HasColumnType("bit");

                    b.Property<bool>("isSMSService")
                        .HasColumnType("bit");

                    b.Property<bool>("isTaxExcluded")
                        .HasColumnType("bit");

                    b.Property<bool>("isVoucherDistributionEntry")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BarcodeReportStyleId");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("ComId");

                    b.HasIndex("CountryId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ReportStyleId");

                    b.HasIndex("SubscriptionTypeId");

                    b.HasIndex("VoucherNoCreatedTypeId");

                    b.ToTable("StoreSetting");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SubscriptionActivationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ActiveFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ActiveToDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<int?>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubscriptionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("ValidityDay")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SubscriptionTypeId");

                    b.ToTable("SubscriptionActivation");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SubscriptionTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<float>("SubscriptionAmount")
                        .HasColumnType("real");

                    b.Property<string>("SubscriptionName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SubscriptionRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ValidationRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ValidityDay")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTypeId");

                    b.ToTable("SubscriptionType");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SupplierModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("OpBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecoundaryAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SupParentId")
                        .HasColumnType("int");

                    b.Property<string>("SupType")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SupParentId");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TaskToDoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("AssaignToPerson")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("TaskColour")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TaskDetails")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("TaskPercentage")
                        .HasColumnType("int");

                    b.Property<string>("TaskRemarks")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("TaskTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TaskToDoParentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("TaskToDoParentId");

                    b.ToTable("TaskToDo");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TermsMainModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("TermsName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TermsRemarks")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("TermsMain");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TermsSubModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Terms")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TermsDescription")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("TermsId")
                        .HasColumnType("int");

                    b.Property<int>("TermsSerialNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("TermsId");

                    b.ToTable("TermsSub");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TestRouterOnuTrackingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GivenBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MacSerial")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PrdDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WithdrawnBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("WithdrawnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.ToTable("TestRouterOnuTracking");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ToDoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AssaignFusionTeam")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("StaffComment")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Subject")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TicketId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.ToTable("ToDo");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ToWarehousePermissionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int>("LuserIdAllow")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("ToWarehousePermission");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TradeTermsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("TradeTermCaption")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInactive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TradeTerms");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TransactionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AccountPayTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetLiabilityAccountId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DamageId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("IssueId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseReturnId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesReturnId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("TransactionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("TransferInId")
                        .HasColumnType("int");

                    b.Property<int?>("TransferOutId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<bool>("isSystem")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("AccountPayTypeId");

                    b.HasIndex("AssetLiabilityAccountId");

                    b.HasIndex("ComId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DamageId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("IssueId");

                    b.HasIndex("LuserId");

                    b.HasIndex("MemberId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("PurchaseReturnId");

                    b.HasIndex("SalesId");

                    b.HasIndex("SalesReturnId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TransferInId");

                    b.HasIndex("TransferOutId");

                    b.ToTable("AccountsDailyTransaction");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TroubleTicketCommentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("CommentToLuserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("TroubleTicketId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("CommentToLuserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("TroubleTicketId");

                    b.ToTable("TroubleTicketComment");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TroubleTicketModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DiagnosisReportId")
                        .HasColumnType("int");

                    b.Property<int?>("DiagonosisByLUserId")
                        .HasColumnType("int");

                    b.Property<int?>("InternetComplainId")
                        .HasColumnType("int");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Priority")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Recommendation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SupportByLUserId")
                        .HasColumnType("int");

                    b.Property<string>("TicketNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DiagnosisReportId");

                    b.HasIndex("DiagonosisByLUserId");

                    b.HasIndex("InternetComplainId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.HasIndex("SupportByLUserId");

                    b.HasIndex("ComId", "TicketNo")
                        .IsUnique()
                        .HasFilter("[TicketNo] IS NOT NULL");

                    b.ToTable("TroubleTicket");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UnitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UserAccountModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBaseUser")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInacitve")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPhoneVerified")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("OTP")
                        .HasMaxLength(6)
                        .HasColumnType("VARCHAR(6)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LuserId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("UserAccount");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UserLogingInfoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LoginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LongString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MacAddress")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PcName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Platform")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebBrowserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("WebLink")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("UserLogingInfo");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UserRoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("RoleRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTypeId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UserTerminateModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceUpdate")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MobileNoIfNecessary")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("NextFollowDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("TerminateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("LuserId");

                    b.ToTable("UserTerminate");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UserTransactionLogModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ActionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("CommandType")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ControllerName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentReferance")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("FlagValue")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("FromDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ToDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionStatement")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WebLink")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("UserTransactionLog");
                });

            modelBuilder.Entity("Invoice.Core.Entity.VGMModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AddressOfWeightBridge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("ContainerNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContainerSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContainerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("IssuedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("NameofShipper")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviouslyDeclaredweight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TareWeight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VGAMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VGANo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VGMPerformedShipperBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VGMWeightbyCPA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifiedGrossMass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeightBridgeRegistrationNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.ToTable("VGM");
                });

            modelBuilder.Entity("Invoice.Core.Entity.VoucherTranGroupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VoucherTranGroupName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("VoucherTranGroup");
                });

            modelBuilder.Entity("Invoice.Core.Entity.WarehouseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StoreAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WhName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WhShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WhType")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ParentId");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("Invoice.Core.Entity.WarrantyItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("ComplainNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Complainer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("NextFollowDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Problem")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseBatchId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ReplacedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReplacedSerialNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SalesId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LuserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseBatchId");

                    b.HasIndex("SalesId");

                    b.ToTable("WarrentyItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.WarrentyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("DurationTimeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInactive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DurationTimeId");

                    b.ToTable("Warrenty");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_FiscalHalfYear", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_FiscalMonthModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_FiscalQtr", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_FiscalYearModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_VoucherMainModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CountryModel", "Acc_Currency")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CountryModel", "Acc_CurrencyLocal")
                        .WithMany()
                        .HasForeignKey("CountryIdLocal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.Acc_FiscalMonthModel", "Acc_FiscalMonths")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("Invoice.Core.Entity.Acc_FiscalYearModel", "Acc_FiscalYears")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PrdUnit", "PrdUnits")
                        .WithMany()
                        .HasForeignKey("PrdUnitId");

                    b.HasOne("Invoice.Core.Entity.VoucherTranGroupModel", "VoucherTranGroups")
                        .WithMany()
                        .HasForeignKey("VoucherTranGroupId");

                    b.HasOne("Invoice.Core.Entity.Acc_VoucherTypeModel", "Acc_VoucherTypes")
                        .WithMany("VoucherMains")
                        .HasForeignKey("VoucherTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_Currency");

                    b.Navigation("Acc_CurrencyLocal");

                    b.Navigation("Acc_FiscalMonths");

                    b.Navigation("Acc_FiscalYears");

                    b.Navigation("Acc_VoucherTypes");

                    b.Navigation("CompanyList");

                    b.Navigation("PrdUnits");

                    b.Navigation("UserAccountList");

                    b.Navigation("VoucherTranGroups");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_VoucherNoPrefixModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.Acc_VoucherTypeModel", "vVoucherTypes")
                        .WithMany("VoucherNoPrefixs")
                        .HasForeignKey("VoucherTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");

                    b.Navigation("vVoucherTypes");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_VoucherSubChecknoModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "vAcc_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.Acc_VoucherSubModel", "Acc_VoucherSub")
                        .WithMany("VoucherSubChecnoes")
                        .HasForeignKey("VoucherSubId");

                    b.Navigation("Acc_VoucherSub");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");

                    b.Navigation("vAcc_ChartOfAccount");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_VoucherSubModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "Acc_ChartOfAccount")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CountryModel", "CountryForeign")
                        .WithMany()
                        .HasForeignKey("CurrencyForeignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CountryModel", "Country")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CustomerModel", "Customers")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Invoice.Core.Entity.EmployeeModel", "EmployeeData")
                        .WithMany()
                        .HasForeignKey("EmpId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.MemberModel", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.HasOne("Invoice.Core.Entity.PurchaseModel", "Purchase")
                        .WithMany()
                        .HasForeignKey("PurchaseId");

                    b.HasOne("Invoice.Core.Entity.PurchaseReturnModel", "PurchaseReturn")
                        .WithMany()
                        .HasForeignKey("PurchaseReturnId");

                    b.HasOne("Invoice.Core.Entity.SalesModel", "Sale")
                        .WithMany()
                        .HasForeignKey("SalesId");

                    b.HasOne("Invoice.Core.Entity.SalesReturnModel", "SalesReturn")
                        .WithMany()
                        .HasForeignKey("SalesReturnId");

                    b.HasOne("Invoice.Core.Entity.SupplierModel", "Suppliers")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("Invoice.Core.Entity.Acc_VoucherMainModel", "Acc_VoucherMain")
                        .WithMany("VoucherSubs")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.VoucherTranGroupModel", "VoucherTranGroups")
                        .WithMany()
                        .HasForeignKey("VoucherTranGroupIdRow");

                    b.Navigation("Acc_ChartOfAccount");

                    b.Navigation("Acc_VoucherMain");

                    b.Navigation("CompanyList");

                    b.Navigation("Country");

                    b.Navigation("CountryForeign");

                    b.Navigation("Customers");

                    b.Navigation("EmployeeData");

                    b.Navigation("Member");

                    b.Navigation("Purchase");

                    b.Navigation("PurchaseReturn");

                    b.Navigation("Sale");

                    b.Navigation("SalesReturn");

                    b.Navigation("Suppliers");

                    b.Navigation("UserAccountList");

                    b.Navigation("VoucherTranGroups");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_VoucherSubSectionModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.Cat_SubSection", "SubSection")
                        .WithMany()
                        .HasForeignKey("SubSectionId");

                    b.HasOne("Invoice.Core.Entity.Acc_VoucherSubModel", "Acc_VoucherSub")
                        .WithMany("VoucherSubSections")
                        .HasForeignKey("VoucherSubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_VoucherSub");

                    b.Navigation("CompanyList");

                    b.Navigation("SubSection");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_VoucherTranGroupModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.Acc_VoucherMainModel", "acc_vouchermains")
                        .WithMany("Acc_VoucherTranGroups")
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.VoucherTranGroupModel", "VoucherTranGroups")
                        .WithMany()
                        .HasForeignKey("VoucherTranGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");

                    b.Navigation("VoucherTranGroups");

                    b.Navigation("acc_vouchermains");
                });

            modelBuilder.Entity("Invoice.Core.Entity.AccountCategoryModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AccountCategoryModel", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentAccountCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("Invoice.Core.Entity.AccountHeadModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AccountCategoryModel", "AccountCategorys")
                        .WithMany()
                        .HasForeignKey("AccountCategoryId");

                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CountryModel", "Currency")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "vAccountGroupHead")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("AccountCategorys");

                    b.Navigation("CompanyList");

                    b.Navigation("Currency");

                    b.Navigation("UserAccountList");

                    b.Navigation("vAccountGroupHead");
                });

            modelBuilder.Entity("Invoice.Core.Entity.AccountHeadPermissionModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "AccountHeadList")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountHeadList");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ActivationTicketModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "ActivatedbyUser")
                        .WithMany()
                        .HasForeignKey("ActivatedbyLUserId");

                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "FusionTeamAssaign")
                        .WithMany()
                        .HasForeignKey("FusionTeamLUserId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.InternetPackageModel", "InternetPackageList")
                        .WithMany()
                        .HasForeignKey("PackageId");

                    b.Navigation("ActivatedbyUser");

                    b.Navigation("CompanyList");

                    b.Navigation("FusionTeamAssaign");

                    b.Navigation("InternetPackageList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.AndroidMenuPermission_DetailsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AndroidMenuPermission_MasterModel", "AndroidMenuPermissionMasters")
                        .WithMany("AndroidMenuPermission_Details")
                        .HasForeignKey("AndroidMenuPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.AndroidMenuModel", "AndroidMenus")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AndroidMenuPermissionMasters");

                    b.Navigation("AndroidMenus");
                });

            modelBuilder.Entity("Invoice.Core.Entity.AndroidMenuPermission_MasterModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "Company")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccount")
                        .WithMany()
                        .HasForeignKey("LUserIdPermission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Invoice.Core.Entity.AndroidMenuPermissionModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AndroidMenuModel", "AndroidMenus")
                        .WithMany()
                        .HasForeignKey("AndroidMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.BusinessTypeModel", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AndroidMenus");

                    b.Navigation("BusinessType");
                });

            modelBuilder.Entity("Invoice.Core.Entity.BarcodePrintModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.BookModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Cat_DepartmentModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Cat_DesignationModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Cat_Integration_Setting_Details", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "Acc_ChartOfAccounts")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.Cat_Integration_Setting_Main", "Cat_Integration_Setting_Mains")
                        .WithMany("Cat_Integration_Setting_Details")
                        .HasForeignKey("IntegrationSettingMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_ChartOfAccounts");

                    b.Navigation("Cat_Integration_Setting_Mains");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Cat_Integration_Setting_Main", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.Acc_VoucherTypeModel", "Acc_VoucherType")
                        .WithMany()
                        .HasForeignKey("VoucherTypeId");

                    b.Navigation("Acc_VoucherType");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Cat_PayrollIntegrationSummary", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "Acc_ChartOfAccounts")
                        .WithMany()
                        .HasForeignKey("AccId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.Acc_FiscalMonthModel", "Acc_FiscalMonths")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("Invoice.Core.Entity.Acc_FiscalYearModel", "Acc_FiscalYears")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_ChartOfAccounts");

                    b.Navigation("Acc_FiscalMonths");

                    b.Navigation("Acc_FiscalYears");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Cat_Section", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.Cat_DepartmentModel", "Dept")
                        .WithMany("Cat_Section")
                        .HasForeignKey("DeptId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Dept");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Cat_SubSection", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.Cat_DepartmentModel", "Dept")
                        .WithMany("Cat_SubSection")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.Cat_Section", "Sect")
                        .WithMany("Cat_SubSection")
                        .HasForeignKey("SectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Dept");

                    b.Navigation("Sect");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CategoryModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CategoryModel", "Categories")
                        .WithMany("ChildCategoryList")
                        .HasForeignKey("CategoryParentId");

                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ColorModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId");

                    b.Navigation("CompanyList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CompanyModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.BusinessTypeModel", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CountryModel", "Currency")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.SubscriptionTypeModel", "SubscriptionType")
                        .WithMany()
                        .HasForeignKey("SubscriptionTypeId");

                    b.HasOne("Invoice.Core.Entity.Acc_VoucherNoCreatedTypeModel", "VoucherNoCreatedTypes")
                        .WithMany()
                        .HasForeignKey("VoucherNoCreatedTypeId");

                    b.Navigation("BusinessType");

                    b.Navigation("Currency");

                    b.Navigation("SubscriptionType");

                    b.Navigation("VoucherNoCreatedTypes");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CompanyPermissionModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CostCalculatedModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.DamageModel", "Damage")
                        .WithMany("CostCalculations")
                        .HasForeignKey("DamageId");

                    b.HasOne("Invoice.Core.Entity.InternalTransferModel", "InternalTransfer")
                        .WithMany("CostCalculations")
                        .HasForeignKey("InternalTransferId");

                    b.HasOne("Invoice.Core.Entity.IssueModel", "Issue")
                        .WithMany("CostCalculations")
                        .HasForeignKey("IssueId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Product")
                        .WithMany("CostCalculated")
                        .HasForeignKey("ProductId");

                    b.HasOne("Invoice.Core.Entity.PurchaseModel", "Purchase")
                        .WithMany("CostCalculations")
                        .HasForeignKey("PurchaseId");

                    b.HasOne("Invoice.Core.Entity.PurchaseReturnModel", "PurchaseReturn")
                        .WithMany("CostCalculations")
                        .HasForeignKey("PurchaseReturnId");

                    b.HasOne("Invoice.Core.Entity.SalesModel", "Sales")
                        .WithMany("CostCalculations")
                        .HasForeignKey("SalesId");

                    b.HasOne("Invoice.Core.Entity.SalesReturnModel", "SalesReturn")
                        .WithMany("CostCalculations")
                        .HasForeignKey("SalesReturnId");

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("CompanyList");

                    b.Navigation("Damage");

                    b.Navigation("InternalTransfer");

                    b.Navigation("Issue");

                    b.Navigation("Product");

                    b.Navigation("Purchase");

                    b.Navigation("PurchaseReturn");

                    b.Navigation("Sales");

                    b.Navigation("SalesReturn");

                    b.Navigation("UserAccountList");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CustomerModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CustomerModel", "Customers")
                        .WithMany()
                        .HasForeignKey("CustParentId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.EmployeeModel", "SalesRepresentative")
                        .WithMany()
                        .HasForeignKey("SalesRepresentativeId");

                    b.HasOne("Invoice.Core.Entity.TradeTermsModel", "TradeTerms")
                        .WithMany()
                        .HasForeignKey("TradeTermsId");

                    b.Navigation("CompanyList");

                    b.Navigation("Customers");

                    b.Navigation("SalesRepresentative");

                    b.Navigation("TradeTerms");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DamageBatchItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.DamageItemsModel", "DamageItems")
                        .WithMany("BatchSerialItems")
                        .HasForeignKey("DamageItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PurchaseBatchItemsModel", "PurchaseBatchItems")
                        .WithMany()
                        .HasForeignKey("PurchaseBatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("DamageItems");

                    b.Navigation("Products");

                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DamageItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.DamageModel", "DamageModel")
                        .WithMany("Items")
                        .HasForeignKey("DamageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Product")
                        .WithMany("DamageItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("CompanyList");

                    b.Navigation("DamageModel");

                    b.Navigation("Product");

                    b.Navigation("UserAccountList");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DamageModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "Warehouses")
                        .WithMany()
                        .HasForeignKey("WarehouseIdMain");

                    b.Navigation("CompanyList");

                    b.Navigation("InternetUserList");

                    b.Navigation("UserAccountList");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DeliveryServiceCommentModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "CommentToUserList")
                        .WithMany()
                        .HasForeignKey("CommentToLuserId");

                    b.HasOne("Invoice.Core.Entity.DeliveryServiceCommentModel", "DeliveryServiceList")
                        .WithMany()
                        .HasForeignKey("DeliveryServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.DeliveryServiceModel", null)
                        .WithMany("DeliveryServiceComment")
                        .HasForeignKey("DeliveryServiceModelId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommentToUserList");

                    b.Navigation("CompanyList");

                    b.Navigation("DeliveryServiceList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DeliveryServiceDistanceModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DeliveryServiceModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CategoryModel", "CategoryList")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CustomerModel", "CustomerList")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Invoice.Core.Entity.DeliveryServiceTimingModel", "DeliveryTiming")
                        .WithMany()
                        .HasForeignKey("DeliveryTimingId");

                    b.HasOne("Invoice.Core.Entity.DeliveryServiceDistanceModel", "DistanceList")
                        .WithMany()
                        .HasForeignKey("DistanceId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PaymentTypeModel", "PaymentTypeList")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId");

                    b.HasOne("Invoice.Core.Entity.DeliveryServiceWeightModel", "WeightList")
                        .WithMany()
                        .HasForeignKey("WeightId");

                    b.Navigation("CategoryList");

                    b.Navigation("CompanyList");

                    b.Navigation("CustomerList");

                    b.Navigation("DeliveryTiming");

                    b.Navigation("DistanceList");

                    b.Navigation("PaymentTypeList");

                    b.Navigation("UserAccountList");

                    b.Navigation("WeightList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DeliveryServiceTimingModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DeliveryServiceWeightModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DiagnosisReportModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.EmailSettingModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.EmployeeAttendanceModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.EmployeeModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.Cat_DepartmentModel", "DepartmentList")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Invoice.Core.Entity.Cat_DesignationModel", "DesignationList")
                        .WithMany()
                        .HasForeignKey("Designationid");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("DepartmentList");

                    b.Navigation("DesignationList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ExpireDateExtendModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("InternetUserList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.FromWarehousePermissionModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "WarehouseList")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");

                    b.Navigation("WarehouseList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.GalleryModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.BookModel", null)
                        .WithMany("Gallery")
                        .HasForeignKey("BookModelId");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternalTransferBatchItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.InternalTransferItemsModel", "InternalTransferItems")
                        .WithMany("BatchSerialItems")
                        .HasForeignKey("InternalTransferItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PurchaseBatchItemsModel", "PurchaseBatchItems")
                        .WithMany()
                        .HasForeignKey("PurchaseBatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("InternalTransferItems");

                    b.Navigation("Products");

                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternalTransferItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "FromWarehouse")
                        .WithMany()
                        .HasForeignKey("FromWarehouseId");

                    b.HasOne("Invoice.Core.Entity.InternalTransferModel", "InternalTransferModel")
                        .WithMany("Items")
                        .HasForeignKey("InternalTransferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Product")
                        .WithMany("InternalTransferItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "ToWarehouse")
                        .WithMany()
                        .HasForeignKey("ToWarehouseId");

                    b.Navigation("CompanyList");

                    b.Navigation("FromWarehouse");

                    b.Navigation("InternalTransferModel");

                    b.Navigation("Product");

                    b.Navigation("ToWarehouse");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternalTransferModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "Warehouses")
                        .WithMany()
                        .HasForeignKey("WarehouseIdMain");

                    b.Navigation("CompanyList");

                    b.Navigation("InternetUserList");

                    b.Navigation("UserAccountList");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternetComplainModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternetPackageModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternetUserModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.InternetPackageModel", "InternetPackageList")
                        .WithMany()
                        .HasForeignKey("PackageId");

                    b.HasOne("Invoice.Core.Entity.InternetUserStatusModel", "UserStatus")
                        .WithMany()
                        .HasForeignKey("UserStatusId");

                    b.Navigation("CompanyList");

                    b.Navigation("InternetPackageList");

                    b.Navigation("UserAccountList");

                    b.Navigation("UserStatus");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternetUserStatusModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InvoiceBillModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "AccountReceiveByHead")
                        .WithMany()
                        .HasForeignKey("AccountReceiveHeadId");

                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany("InvoiceBill")
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountReceiveByHead");

                    b.Navigation("CompanyList");

                    b.Navigation("InternetUserList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.IssueBatchItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.IssueItemsModel", "IssueItems")
                        .WithMany("BatchSerialItems")
                        .HasForeignKey("IssueItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PurchaseBatchItemsModel", "PurchaseBatchItems")
                        .WithMany()
                        .HasForeignKey("PurchaseBatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("IssueItems");

                    b.Navigation("Products");

                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.IssueItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.IssueModel", "IssueModel")
                        .WithMany("Items")
                        .HasForeignKey("IssueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Product")
                        .WithMany("IssueItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("CompanyList");

                    b.Navigation("IssueModel");

                    b.Navigation("Product");

                    b.Navigation("UserAccountList");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("Invoice.Core.Entity.IssueModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "Warehouses")
                        .WithMany()
                        .HasForeignKey("WarehouseIdMain");

                    b.Navigation("CompanyList");

                    b.Navigation("InternetUserList");

                    b.Navigation("UserAccountList");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("Invoice.Core.Entity.LinkShareModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MarketModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MemberModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.MarketModel", "Market")
                        .WithMany()
                        .HasForeignKey("MarketId");

                    b.HasOne("Invoice.Core.Entity.MemberStatusModel", "MemberStatus")
                        .WithMany()
                        .HasForeignKey("MemberStatusId");

                    b.HasOne("Invoice.Core.Entity.ShopModel", "Shop")
                        .WithMany("Member")
                        .HasForeignKey("ShopId");

                    b.Navigation("CompanyList");

                    b.Navigation("Market");

                    b.Navigation("MemberStatus");

                    b.Navigation("Shop");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MemberStatusModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MenuModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.MenuModel", "ParentMenu")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("ParentMenu");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MenuPermission_DetailsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.MenuModel", "Menus")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.MenuPermission_MasterModel", "MenuPermissionMasters")
                        .WithMany("MenuPermission_Details")
                        .HasForeignKey("MenuPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuPermissionMasters");

                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MenuPermission_MasterModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "Company")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccount")
                        .WithMany()
                        .HasForeignKey("LUserIdPermission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MenuPermissionModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.BusinessTypeModel", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.MenuModel", "Menus")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessType");

                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MobileTextAnimationModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MonthlySalesModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.NotificationModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.NotificationSeenModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.NotificationModel", "Notificaioninfo")
                        .WithMany("NotificationSeenList")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Notificaioninfo");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.OrdersItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.OrdersModel", "OrdersModel")
                        .WithMany("Items")
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("OrdersModel");

                    b.Navigation("Product");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.OrdersModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CustomerModel", "CustomerModel")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("CustomerModel");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.OrdersPaymentModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.OrdersModel", "OrdersMain")
                        .WithMany("OrdersPayments")
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("OrdersMain");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PackageActivationModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.SoftwarePackageModel", "SoftwarePackage")
                        .WithMany()
                        .HasForeignKey("PackageId");

                    b.Navigation("CompanyList");

                    b.Navigation("SoftwarePackage");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PrdUnit", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ProcessLock", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.Acc_FiscalMonthModel", "Acc_FiscalMonths")
                        .WithMany()
                        .HasForeignKey("FiscalMonthId");

                    b.HasOne("Invoice.Core.Entity.Acc_FiscalYearModel", "Acc_FiscalYears")
                        .WithMany()
                        .HasForeignKey("FiscalYearId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acc_FiscalMonths");

                    b.Navigation("Acc_FiscalYears");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ProductLedgerModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "ProductList")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("CompanyList");

                    b.Navigation("InternetUserList");

                    b.Navigation("ProductList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ProductModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "ConsumptionAccount")
                        .WithMany()
                        .HasForeignKey("AccIdConsumption");

                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "InventoryAccounts")
                        .WithMany()
                        .HasForeignKey("AccIdInventory");

                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "PurcahseVATAccount")
                        .WithMany()
                        .HasForeignKey("AccIdPurchaseVAT");

                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "SalesAccount")
                        .WithMany()
                        .HasForeignKey("AccIdSales");

                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "SalesVATAccount")
                        .WithMany()
                        .HasForeignKey("AccIdSalesVAT");

                    b.HasOne("Invoice.Core.Entity.CategoryModel", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UnitModel", "Unit")
                        .WithMany("ProductList")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarrentyModel", "Warrenty")
                        .WithMany()
                        .HasForeignKey("WarrentyId");

                    b.Navigation("Category");

                    b.Navigation("CompanyList");

                    b.Navigation("ConsumptionAccount");

                    b.Navigation("InventoryAccounts");

                    b.Navigation("PurcahseVATAccount");

                    b.Navigation("SalesAccount");

                    b.Navigation("SalesVATAccount");

                    b.Navigation("Unit");

                    b.Navigation("UserAccountList");

                    b.Navigation("Warrenty");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ProductReviewsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.ProductModel", "Product")
                        .WithMany("ProductReviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ProductSecUnitModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UnitModel", "Units")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Product");

                    b.Navigation("Units");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseBatchItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Products")
                        .WithMany("PurchaseBatchItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PurchaseItemsModel", "PurchaseItems")
                        .WithMany("PurchaseBatchItems")
                        .HasForeignKey("PurchaseItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Products");

                    b.Navigation("PurchaseItems");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Product")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PurchaseModel", "PurchaseModel")
                        .WithMany("Items")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("CompanyList");

                    b.Navigation("Product");

                    b.Navigation("PurchaseModel");

                    b.Navigation("UserAccountList");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.SupplierModel", "SupplierModel")
                        .WithMany("Purchase")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "Warehouses")
                        .WithMany()
                        .HasForeignKey("WarehouseIdMain");

                    b.Navigation("CompanyList");

                    b.Navigation("SupplierModel");

                    b.Navigation("UserAccountList");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchasePaymentModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "vChartofAccounts")
                        .WithMany()
                        .HasForeignKey("AccountHeadId");

                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PurchaseModel", "PurchaseMain")
                        .WithMany("PurchasePayments")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.TransactionModel", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId");

                    b.HasOne("Invoice.Core.Entity.Acc_VoucherMainModel", "Voucher")
                        .WithMany()
                        .HasForeignKey("VoucherId");

                    b.Navigation("CompanyList");

                    b.Navigation("PurchaseMain");

                    b.Navigation("Transaction");

                    b.Navigation("UserAccountList");

                    b.Navigation("Voucher");

                    b.Navigation("vChartofAccounts");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseReturnBatchItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PurchaseBatchItemsModel", "PurchaseBatchItems")
                        .WithMany()
                        .HasForeignKey("PurchaseBatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PurchaseReturnItemsModel", "PurchaseReturnItems")
                        .WithMany("BatchSerialItems")
                        .HasForeignKey("PurchaseReturnItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Products");

                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("PurchaseReturnItems");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseReturnItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Product")
                        .WithMany("PurchaseReturnItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PurchaseReturnModel", "PurchaseReturnModel")
                        .WithMany("Items")
                        .HasForeignKey("PurchaseReturnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("CompanyList");

                    b.Navigation("Product");

                    b.Navigation("PurchaseReturnModel");

                    b.Navigation("UserAccountList");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseReturnModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PurchaseModel", "PurchaseInfo")
                        .WithMany()
                        .HasForeignKey("PurchaseId");

                    b.HasOne("Invoice.Core.Entity.SupplierModel", "SupplierModel")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "Warehouses")
                        .WithMany()
                        .HasForeignKey("WarehouseIdMain");

                    b.Navigation("CompanyList");

                    b.Navigation("InternetUserList");

                    b.Navigation("PurchaseInfo");

                    b.Navigation("SupplierModel");

                    b.Navigation("UserAccountList");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseReturnPaymentModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "vChartofAccounts")
                        .WithMany()
                        .HasForeignKey("AccountHeadId");

                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PurchaseReturnModel", "PurchaseReturnMain")
                        .WithMany("PurchaseReturnPayments")
                        .HasForeignKey("PurchaseReturnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.TransactionModel", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId");

                    b.HasOne("Invoice.Core.Entity.Acc_VoucherMainModel", "Voucher")
                        .WithMany()
                        .HasForeignKey("VoucherId");

                    b.Navigation("CompanyList");

                    b.Navigation("PurchaseReturnMain");

                    b.Navigation("Transaction");

                    b.Navigation("UserAccountList");

                    b.Navigation("Voucher");

                    b.Navigation("vChartofAccounts");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesBatchItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PurchaseBatchItemsModel", "PurchaseBatchItems")
                        .WithMany("SalesBatchItems")
                        .HasForeignKey("PurchaseBatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.SalesItemsModel", "SalesItems")
                        .WithMany("BatchSerialItems")
                        .HasForeignKey("SalesItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Products");

                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("SalesItems");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesExchangeBatchItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PurchaseBatchItemsModel", "PurchaseBatchItems")
                        .WithMany()
                        .HasForeignKey("PurchaseBatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.SalesExchangeItemsModel", "SalesExchangeItems")
                        .WithMany("BatchSerialItems")
                        .HasForeignKey("SalesExchangeItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Products");

                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("SalesExchangeItems");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesExchangeItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.SalesReturnModel", "SalesReturnModel")
                        .WithMany("ExchangeItems")
                        .HasForeignKey("SalesReturnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("CompanyList");

                    b.Navigation("Product");

                    b.Navigation("SalesReturnModel");

                    b.Navigation("UserAccountList");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Product")
                        .WithMany("SalesItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.SalesModel", "SalesModel")
                        .WithMany("Items")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("CompanyList");

                    b.Navigation("Product");

                    b.Navigation("SalesModel");

                    b.Navigation("UserAccountList");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CustomerModel", "CustomerModel")
                        .WithMany("Sales")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.DocTypeModel", "DocTypeList")
                        .WithMany()
                        .HasForeignKey("DocTypeId");

                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "Warehouses")
                        .WithMany()
                        .HasForeignKey("WarehouseIdMain")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("CustomerModel");

                    b.Navigation("DocTypeList");

                    b.Navigation("InternetUserList");

                    b.Navigation("UserAccountList");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesPaymentModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "vChartofAccounts")
                        .WithMany()
                        .HasForeignKey("AccountHeadId");

                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PaymentTypeModel", null)
                        .WithMany("vTypeSalesSubs")
                        .HasForeignKey("PaymentTypeModelId");

                    b.HasOne("Invoice.Core.Entity.SalesModel", "SalesMain")
                        .WithMany("SalesPayments")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.TransactionModel", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId");

                    b.HasOne("Invoice.Core.Entity.Acc_VoucherMainModel", "Voucher")
                        .WithMany()
                        .HasForeignKey("VoucherId");

                    b.Navigation("CompanyList");

                    b.Navigation("SalesMain");

                    b.Navigation("Transaction");

                    b.Navigation("UserAccountList");

                    b.Navigation("Voucher");

                    b.Navigation("vChartofAccounts");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesReturnBatchItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PurchaseBatchItemsModel", "PurchaseBatchItems")
                        .WithMany()
                        .HasForeignKey("PurchaseBatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.SalesReturnItemsModel", "SalesReturnItems")
                        .WithMany("BatchSerialItems")
                        .HasForeignKey("SalesReturnItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("Products");

                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("SalesReturnItems");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesReturnItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Product")
                        .WithMany("SalesReturnItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.SalesReturnModel", "SalesReturnModel")
                        .WithMany("Items")
                        .HasForeignKey("SalesReturnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("CompanyList");

                    b.Navigation("Product");

                    b.Navigation("SalesReturnModel");

                    b.Navigation("UserAccountList");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesReturnModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CustomerModel", "CustomerModel")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.SalesModel", "SalesInfo")
                        .WithMany()
                        .HasForeignKey("SaleId");

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "Warehouses")
                        .WithMany()
                        .HasForeignKey("WarehouseIdMain");

                    b.Navigation("CompanyList");

                    b.Navigation("CustomerModel");

                    b.Navigation("InternetUserList");

                    b.Navigation("SalesInfo");

                    b.Navigation("UserAccountList");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesReturnPaymentModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "vChartofAccounts")
                        .WithMany()
                        .HasForeignKey("AccountHeadId");

                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.SalesReturnModel", "SalesReturnMain")
                        .WithMany("SalesReturnPayments")
                        .HasForeignKey("SalesReturnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.TransactionModel", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId");

                    b.HasOne("Invoice.Core.Entity.Acc_VoucherMainModel", "Voucher")
                        .WithMany()
                        .HasForeignKey("VoucherId");

                    b.Navigation("CompanyList");

                    b.Navigation("SalesReturnMain");

                    b.Navigation("Transaction");

                    b.Navigation("UserAccountList");

                    b.Navigation("Voucher");

                    b.Navigation("vChartofAccounts");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SendSMSModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ShopModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.MarketModel", "Market")
                        .WithMany()
                        .HasForeignKey("MarketId");

                    b.Navigation("CompanyList");

                    b.Navigation("Market");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ShortLinkHitModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.ShortLinkModel", "ShortLinkInfo")
                        .WithMany("ShortLinkHitList")
                        .HasForeignKey("ShortLinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShortLinkInfo");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ShortLinkModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SizeModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId");

                    b.Navigation("CompanyList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SMSBalanceModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SmsSettingModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SoftwarePackageModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.BusinessTypeModel", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId");

                    b.HasOne("Invoice.Core.Entity.DurationTimeModel", "DurationType")
                        .WithMany()
                        .HasForeignKey("DurationId");

                    b.Navigation("BusinessType");

                    b.Navigation("DurationType");
                });

            modelBuilder.Entity("Invoice.Core.Entity.StoreSettingModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.ReportStyleModel", "BarcodeReportStyle")
                        .WithMany()
                        .HasForeignKey("BarcodeReportStyleId");

                    b.HasOne("Invoice.Core.Entity.BusinessTypeModel", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany("storeinfo")
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CountryModel", "Currency")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ReportStyleModel", "ReportStyle")
                        .WithMany()
                        .HasForeignKey("ReportStyleId");

                    b.HasOne("Invoice.Core.Entity.SubscriptionTypeModel", "SubscriptionType")
                        .WithMany()
                        .HasForeignKey("SubscriptionTypeId");

                    b.HasOne("Invoice.Core.Entity.Acc_VoucherNoCreatedTypeModel", "VoucherNoCreatedTypes")
                        .WithMany()
                        .HasForeignKey("VoucherNoCreatedTypeId");

                    b.Navigation("BarcodeReportStyle");

                    b.Navigation("BusinessType");

                    b.Navigation("CompanyList");

                    b.Navigation("Currency");

                    b.Navigation("ReportStyle");

                    b.Navigation("SubscriptionType");

                    b.Navigation("UserAccountList");

                    b.Navigation("VoucherNoCreatedTypes");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SubscriptionActivationModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccount")
                        .WithMany("UserActivationList")
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.SubscriptionTypeModel", "SubscriptionType")
                        .WithMany()
                        .HasForeignKey("SubscriptionTypeId");

                    b.Navigation("CompanyList");

                    b.Navigation("SubscriptionType");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SubscriptionTypeModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.BusinessTypeModel", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId");

                    b.Navigation("BusinessType");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SupplierModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.SupplierModel", "Suppliers")
                        .WithMany()
                        .HasForeignKey("SupParentId");

                    b.Navigation("CompanyList");

                    b.Navigation("Suppliers");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TaskToDoModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.TaskToDoModel", "ParentTaskToDo")
                        .WithMany("SubTaskList")
                        .HasForeignKey("TaskToDoParentId");

                    b.Navigation("CompanyList");

                    b.Navigation("ParentTaskToDo");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TermsMainModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TermsSubModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.TermsMainModel", "TermsMain")
                        .WithMany("TermsSubs")
                        .HasForeignKey("TermsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("TermsMain");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TestRouterOnuTrackingModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "ProductList")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("CompanyList");

                    b.Navigation("InternetUserList");

                    b.Navigation("ProductList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ToDoModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("InternetUserList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ToWarehousePermissionModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "WarehouseList")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");

                    b.Navigation("WarehouseList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TransactionModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "AccountPayType")
                        .WithMany()
                        .HasForeignKey("AccountPayTypeId");

                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "AccountAssetLiability")
                        .WithMany()
                        .HasForeignKey("AssetLiabilityAccountId");

                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CustomerModel", "Customer")
                        .WithMany("AccountsDailyTransaction")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Invoice.Core.Entity.DamageModel", "Damage")
                        .WithMany()
                        .HasForeignKey("DamageId");

                    b.HasOne("Invoice.Core.Entity.EmployeeModel", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUser")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Invoice.Core.Entity.IssueModel", "Issue")
                        .WithMany()
                        .HasForeignKey("IssueId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.MemberModel", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.HasOne("Invoice.Core.Entity.PurchaseModel", "Purchase")
                        .WithMany("AccountTransaction")
                        .HasForeignKey("PurchaseId");

                    b.HasOne("Invoice.Core.Entity.PurchaseReturnModel", "PurchaseReturn")
                        .WithMany("AccountTransaction")
                        .HasForeignKey("PurchaseReturnId");

                    b.HasOne("Invoice.Core.Entity.SalesModel", "Sales")
                        .WithMany("AccountTransaction")
                        .HasForeignKey("SalesId");

                    b.HasOne("Invoice.Core.Entity.SalesReturnModel", "SalesReturn")
                        .WithMany("AccountTransaction")
                        .HasForeignKey("SalesReturnId");

                    b.HasOne("Invoice.Core.Entity.SupplierModel", "Supplier")
                        .WithMany("AccountsDailyTransaction")
                        .HasForeignKey("SupplierId");

                    b.HasOne("Invoice.Core.Entity.InternalTransferModel", "TransferIn")
                        .WithMany()
                        .HasForeignKey("TransferInId");

                    b.HasOne("Invoice.Core.Entity.InternalTransferModel", "TransferOut")
                        .WithMany()
                        .HasForeignKey("TransferOutId");

                    b.Navigation("Account");

                    b.Navigation("AccountAssetLiability");

                    b.Navigation("AccountPayType");

                    b.Navigation("CompanyList");

                    b.Navigation("Customer");

                    b.Navigation("Damage");

                    b.Navigation("Employee");

                    b.Navigation("InternetUser");

                    b.Navigation("Issue");

                    b.Navigation("Member");

                    b.Navigation("Purchase");

                    b.Navigation("PurchaseReturn");

                    b.Navigation("Sales");

                    b.Navigation("SalesReturn");

                    b.Navigation("Supplier");

                    b.Navigation("TransferIn");

                    b.Navigation("TransferOut");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TroubleTicketCommentModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "CommentToUserList")
                        .WithMany()
                        .HasForeignKey("CommentToLuserId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.TroubleTicketModel", "TroubleTicket")
                        .WithMany("TroubleTicketComment")
                        .HasForeignKey("TroubleTicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommentToUserList");

                    b.Navigation("CompanyList");

                    b.Navigation("TroubleTicket");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TroubleTicketModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.DiagnosisReportModel", "DiagnosisReport")
                        .WithMany()
                        .HasForeignKey("DiagnosisReportId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "DiagonosisByUser")
                        .WithMany()
                        .HasForeignKey("DiagonosisByLUserId");

                    b.HasOne("Invoice.Core.Entity.InternetComplainModel", "InternetComplain")
                        .WithMany()
                        .HasForeignKey("InternetComplainId");

                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUser")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "SupportByUser")
                        .WithMany()
                        .HasForeignKey("SupportByLUserId");

                    b.Navigation("CompanyList");

                    b.Navigation("DiagnosisReport");

                    b.Navigation("DiagonosisByUser");

                    b.Navigation("InternetComplain");

                    b.Navigation("InternetUser");

                    b.Navigation("SupportByUser");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UnitModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UserAccountModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.EmployeeModel", "EmployeeList")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserRoleModel", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId");

                    b.Navigation("CompanyList");

                    b.Navigation("EmployeeList");

                    b.Navigation("UserAccountList");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UserLogingInfoModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany("UserloginInfo")
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UserRoleModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.BusinessTypeModel", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId");

                    b.Navigation("BusinessType");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UserTerminateModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("InternetUserList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UserTransactionLogModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany("UserTransaction")
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.VGMModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.WarehouseModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "Warehouses")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("CompanyList");

                    b.Navigation("UserAccountList");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("Invoice.Core.Entity.WarrantyItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "CompanyList")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccountList")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("Invoice.Core.Entity.PurchaseBatchItemsModel", "PurchaseBatchItems")
                        .WithMany()
                        .HasForeignKey("PurchaseBatchId");

                    b.HasOne("Invoice.Core.Entity.SalesModel", "Sales")
                        .WithMany()
                        .HasForeignKey("SalesId");

                    b.Navigation("CompanyList");

                    b.Navigation("Products");

                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("Sales");

                    b.Navigation("UserAccountList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.WarrentyModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.DurationTimeModel", "DurationTime")
                        .WithMany()
                        .HasForeignKey("DurationTimeId");

                    b.Navigation("DurationTime");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_VoucherMainModel", b =>
                {
                    b.Navigation("Acc_VoucherTranGroups");

                    b.Navigation("VoucherSubs");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_VoucherSubModel", b =>
                {
                    b.Navigation("VoucherSubChecnoes");

                    b.Navigation("VoucherSubSections");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Acc_VoucherTypeModel", b =>
                {
                    b.Navigation("VoucherMains");

                    b.Navigation("VoucherNoPrefixs");
                });

            modelBuilder.Entity("Invoice.Core.Entity.AndroidMenuPermission_MasterModel", b =>
                {
                    b.Navigation("AndroidMenuPermission_Details");
                });

            modelBuilder.Entity("Invoice.Core.Entity.BookModel", b =>
                {
                    b.Navigation("Gallery");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Cat_DepartmentModel", b =>
                {
                    b.Navigation("Cat_Section");

                    b.Navigation("Cat_SubSection");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Cat_Integration_Setting_Main", b =>
                {
                    b.Navigation("Cat_Integration_Setting_Details");
                });

            modelBuilder.Entity("Invoice.Core.Entity.Cat_Section", b =>
                {
                    b.Navigation("Cat_SubSection");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CategoryModel", b =>
                {
                    b.Navigation("ChildCategoryList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CompanyModel", b =>
                {
                    b.Navigation("storeinfo");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CustomerModel", b =>
                {
                    b.Navigation("AccountsDailyTransaction");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DamageItemsModel", b =>
                {
                    b.Navigation("BatchSerialItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DamageModel", b =>
                {
                    b.Navigation("CostCalculations");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("Invoice.Core.Entity.DeliveryServiceModel", b =>
                {
                    b.Navigation("DeliveryServiceComment");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternalTransferItemsModel", b =>
                {
                    b.Navigation("BatchSerialItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternalTransferModel", b =>
                {
                    b.Navigation("CostCalculations");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternetUserModel", b =>
                {
                    b.Navigation("InvoiceBill");
                });

            modelBuilder.Entity("Invoice.Core.Entity.IssueItemsModel", b =>
                {
                    b.Navigation("BatchSerialItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.IssueModel", b =>
                {
                    b.Navigation("CostCalculations");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MenuPermission_MasterModel", b =>
                {
                    b.Navigation("MenuPermission_Details");
                });

            modelBuilder.Entity("Invoice.Core.Entity.NotificationModel", b =>
                {
                    b.Navigation("NotificationSeenList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.OrdersModel", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("OrdersPayments");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PaymentTypeModel", b =>
                {
                    b.Navigation("vTypeSalesSubs");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ProductModel", b =>
                {
                    b.Navigation("CostCalculated");

                    b.Navigation("DamageItems");

                    b.Navigation("InternalTransferItems");

                    b.Navigation("IssueItems");

                    b.Navigation("ProductReviews");

                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("PurchaseItems");

                    b.Navigation("PurchaseReturnItems");

                    b.Navigation("SalesItems");

                    b.Navigation("SalesReturnItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseBatchItemsModel", b =>
                {
                    b.Navigation("SalesBatchItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseItemsModel", b =>
                {
                    b.Navigation("PurchaseBatchItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseModel", b =>
                {
                    b.Navigation("AccountTransaction");

                    b.Navigation("CostCalculations");

                    b.Navigation("Items");

                    b.Navigation("PurchasePayments");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseReturnItemsModel", b =>
                {
                    b.Navigation("BatchSerialItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseReturnModel", b =>
                {
                    b.Navigation("AccountTransaction");

                    b.Navigation("CostCalculations");

                    b.Navigation("Items");

                    b.Navigation("PurchaseReturnPayments");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesExchangeItemsModel", b =>
                {
                    b.Navigation("BatchSerialItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesItemsModel", b =>
                {
                    b.Navigation("BatchSerialItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesModel", b =>
                {
                    b.Navigation("AccountTransaction");

                    b.Navigation("CostCalculations");

                    b.Navigation("Items");

                    b.Navigation("SalesPayments");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesReturnItemsModel", b =>
                {
                    b.Navigation("BatchSerialItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesReturnModel", b =>
                {
                    b.Navigation("AccountTransaction");

                    b.Navigation("CostCalculations");

                    b.Navigation("ExchangeItems");

                    b.Navigation("Items");

                    b.Navigation("SalesReturnPayments");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ShopModel", b =>
                {
                    b.Navigation("Member");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ShortLinkModel", b =>
                {
                    b.Navigation("ShortLinkHitList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SupplierModel", b =>
                {
                    b.Navigation("AccountsDailyTransaction");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TaskToDoModel", b =>
                {
                    b.Navigation("SubTaskList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TermsMainModel", b =>
                {
                    b.Navigation("TermsSubs");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TroubleTicketModel", b =>
                {
                    b.Navigation("TroubleTicketComment");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UnitModel", b =>
                {
                    b.Navigation("ProductList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UserAccountModel", b =>
                {
                    b.Navigation("UserActivationList");

                    b.Navigation("UserTransaction");

                    b.Navigation("UserloginInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
