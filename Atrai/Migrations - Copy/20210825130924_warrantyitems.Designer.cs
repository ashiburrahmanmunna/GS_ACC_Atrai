// <auto-generated />
using System;
using Invoice.Data.AppDataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Invoice.Migrations
{
    [DbContext(typeof(InvoiceDbContext))]
    [Migration("20210825130924_warrantyitems")]
    partial class warrantyitems
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Invoice.Core.Entity.AccountHeadModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("AccType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("AccountCategory")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("NumericNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isSystem")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("AccountHead");
                });

            modelBuilder.Entity("Invoice.Core.Entity.BusinessTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusinessTypeName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("BusinessTypeRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BusinessType");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CompanyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyCode")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyShortName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ContDesig")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<string>("PrimaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecoundaryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubscriptionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("comEmail")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("comPhone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("comWeb")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("CountryId");

                    b.HasIndex("SubscriptionTypeId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CostCalculatedModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CalculatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CalculatedPrice")
                        .HasColumnType("decimal(18,5)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrPrice")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("CurrQty")
                        .HasColumnType("decimal(18,6)");

                    b.Property<string>("DeletedDocNo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("InternalTransferId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTransferIn")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTransferOut")
                        .HasColumnType("bit");

                    b.Property<int?>("IssueId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("PrevPrice")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("PrevQty")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCurrPrice")
                        .HasColumnType("decimal(18,5)");

                    b.Property<decimal>("TotalPrevPrice")
                        .HasColumnType("decimal(18,5)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.Property<bool>("isManualProcess")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InternalTransferId");

                    b.HasIndex("IssueId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("SalesId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("CostCalculated");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CountryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CountryShortName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CultureInfo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CurrencyShortName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CurrencySymbol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DialCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FlagClass")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CustomerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrimaryAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SecoundaryAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Invoice.Core.Entity.EmployeeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyContactRelationship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmergencyMobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntroducerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntroducerContctNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntroducerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExistImage")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermanentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Salary")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ExpireDateExtendModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("NewExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("OldExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InternetUserId");

                    b.ToTable("ExpireDateExtend");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternalTransferBatchItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BatchSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InternalTransferItemId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseBatchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InternalTransferItemId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseBatchId");

                    b.ToTable("InternalTransferBatchItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternalTransferItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("FromWarehouseId")
                        .HasColumnType("int");

                    b.Property<int>("InternalTransferId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SerialItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ToWarehouseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FromWarehouseId");

                    b.HasIndex("InternalTransferId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ToWarehouseId");

                    b.ToTable("InternalTransferItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternalTransferModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InternalTransferCode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("InternalTransferDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReferanceOne")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReferanceTwo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("ComId", "InternalTransferCode")
                        .IsUnique()
                        .HasFilter("[InternalTransferCode] IS NOT NULL");

                    b.ToTable("InternalTransfer");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternetPackageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("PackageActiveDay")
                        .HasColumnType("int");

                    b.Property<float>("PackageAmount")
                        .HasColumnType("real");

                    b.Property<string>("PackageDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Speed")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("InternetPackage");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternetUserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("ConnectionPointAddress")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FileExtension")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastBilledDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MobileNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NationalIdCard")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ONUMac")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PackageId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UserStatusId")
                        .HasColumnType("int");

                    b.Property<string>("UserType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("PackageId");

                    b.HasIndex("UserStatusId");

                    b.HasIndex("ComId", "UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("InternetUser");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternetUserStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserStatusLong")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserStatusShort")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("InternetUserStatus");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InvoiceBillModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountReceiveHeadId")
                        .HasColumnType("int");

                    b.Property<float>("BadDebt")
                        .HasColumnType("real");

                    b.Property<float>("BillAmount")
                        .HasColumnType("real");

                    b.Property<string>("BillNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("BilledDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ExpiredDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("InWords")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NextFollowDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("ReceivedAmount")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<bool>("isSystem")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountReceiveHeadId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("ComId", "BillNo")
                        .IsUnique()
                        .HasFilter("[BillNo] IS NOT NULL");

                    b.ToTable("InvoiceBill");
                });

            modelBuilder.Entity("Invoice.Core.Entity.IssueBatchItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BatchSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("IssueItemId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseBatchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IssueItemId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseBatchId");

                    b.ToTable("IssueBatchItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.IssueItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("IssueId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SerialItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IssueId");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("IssueItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.IssueModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("IssueCode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReferanceOne")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReferanceTwo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("ComId", "IssueCode")
                        .IsUnique()
                        .HasFilter("[IssueCode] IS NOT NULL");

                    b.ToTable("Issue");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MarketModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActiveMember")
                        .HasColumnType("int");

                    b.Property<int?>("ClosedShop")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FifthFloor")
                        .HasColumnType("int");

                    b.Property<int?>("FirstFloor")
                        .HasColumnType("int");

                    b.Property<int?>("Floors")
                        .HasColumnType("int");

                    b.Property<int?>("FourthFloor")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MarketCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MarketNameBng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MarketNameEng")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PrName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PrPhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresidentFileExtension")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PresidentImagePath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SecName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SecPhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SecoundFloor")
                        .HasColumnType("int");

                    b.Property<string>("SecretaryFileExtension")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SecretaryImagePath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ThirdFloor")
                        .HasColumnType("int");

                    b.Property<int?>("TotalShop")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Website")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Market");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MemberModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppliedRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ApprovalRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BloodGroup")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BusinessAddressBng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BusinessAddressEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CanceledRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CheckedRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("EducationalQualification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FathersNameBng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FathersNameEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FixedAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HoldingNoBng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HoldingNoEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsApplied")
                        .HasMaxLength(200)
                        .HasColumnType("bit");

                    b.Property<bool>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExistImage")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("MarketId")
                        .HasColumnType("int");

                    b.Property<string>("MarketName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("MemberAccessId")
                        .HasColumnType("int");

                    b.Property<string>("MemberBarcodeId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemberHomePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberImagePath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("MemberStatusId")
                        .HasColumnType("int");

                    b.Property<string>("MemberType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MembersNameBng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MembersNameEng")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NID")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Occupation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OwnerShipType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Photo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProposerMemberNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProposerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ShopId")
                        .HasColumnType("int");

                    b.Property<string>("ShopNameBng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopNameEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SupporterMemberNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SupporterName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerifiedRemarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("isCanceled")
                        .HasColumnType("bit");

                    b.Property<bool>("isVerified")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MarketId");

                    b.HasIndex("MemberStatusId");

                    b.HasIndex("ShopId");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MemberStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MemberStatusLong")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MemberStatusShort")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MemberStatus");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MenuModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AllActionName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<bool>("IsCreateAction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleteAction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEditAction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsListAction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReportAction")
                        .HasColumnType("bit");

                    b.Property<bool>("IsViewAction")
                        .HasColumnType("bit");

                    b.Property<string>("MenuClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MenuRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("isParent")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MenuPermissionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuPermission");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MenuPermission_DetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCreate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleteP")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEdit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReport")
                        .HasColumnType("bit");

                    b.Property<bool>("IsView")
                        .HasColumnType("bit");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("MenuPermissionId")
                        .HasColumnType("int");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDefault")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("MenuPermissionId");

                    b.ToTable("MenuPermission_Details");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MenuPermission_MasterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LUserIdPermission")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ComId");

                    b.HasIndex("LUserIdPermission");

                    b.ToTable("MenuPermission_Master");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PaymentTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TypeShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PaymentType");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ProductLedgerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PrdDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReceivedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Referance")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Subject")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TeamType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TicketId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductLedger");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ProductModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CategoryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ColorName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<double>("CostPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("MOQ")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModelName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("OldPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<decimal>("ROL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ROQ")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SizeName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("UnitId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarrentyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UnitId");

                    b.HasIndex("WarrentyId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ProductSecUnitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SecUnitRemarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("ProductSecoundaryUnit");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseBatchItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BatchRemarks")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BatchSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SLNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseItemId");

                    b.ToTable("PurchaseBatchItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("PurchaseItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountPayTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CardNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ChequeNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("ChkPer")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DisPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<decimal>("DueAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EmailId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("GrandTotal")
                        .HasColumnType("float");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PaidAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("PrimaryAddress")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("PurchaseCode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SecoundaryAddress")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal>("ServiceCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isPOSPurchase")
                        .HasColumnType("bit");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.Property<decimal>("ttlCountQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndDisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlSumAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlSumQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AccountPayTypeId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("ComId", "PurchaseCode")
                        .IsUnique()
                        .HasFilter("[PurchaseCode] IS NOT NULL");

                    b.ToTable("Purchase");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchasePaymentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountHeadId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PaymentCardNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountHeadId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("PurchasePayment");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesBatchItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BatchSerialNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseBatchId")
                        .HasColumnType("int");

                    b.Property<int>("SalesItemId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseBatchId");

                    b.HasIndex("SalesItemId");

                    b.ToTable("SalesBatchItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SalesId")
                        .HasColumnType("int");

                    b.Property<string>("SerialItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SalesId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("SalesItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountPayTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CardNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("ChkPer")
                        .HasColumnType("bit");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("DisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DisPer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<decimal>("DueAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EmailId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("GrandTotal")
                        .HasColumnType("float");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("PaidAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PrimaryAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SaleCode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("SalesDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecoundaryAddress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("ServiceCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Shipping")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<decimal>("TotalVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isPOSSales")
                        .HasColumnType("bit");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.Property<bool>("isSerialSales")
                        .HasColumnType("bit");

                    b.Property<decimal>("ttlCountQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndDisAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlIndVat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlSumAmt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlSumQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ttlUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AccountPayTypeId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("ComId", "SaleCode")
                        .IsUnique()
                        .HasFilter("[SaleCode] IS NOT NULL");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesPaymentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountHeadId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PaymentCardNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("RowNo")
                        .HasColumnType("int");

                    b.Property<int>("SalesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isPosted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountHeadId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("SalesId");

                    b.ToTable("SalesPayment");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ShopModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HoldingNoBng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HoldingNoEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInActive")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("MarketId")
                        .HasColumnType("int");

                    b.Property<string>("ShopBusinessAddressBng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopBusinessAddressEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShopDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShopFileExtension")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("ShopImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ShopImagePath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShopNameBng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopNameEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopOwnerBng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopOwnerEng")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopTypeItemProduct")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ShopWebSite")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MarketId");

                    b.ToTable("Shop");
                });

            modelBuilder.Entity("Invoice.Core.Entity.StoreSettingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomizedReportFormatName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneTwo")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ReportCaptionSmall")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SubscriptionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Web")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTypeId");

                    b.HasIndex("CountryId");

                    b.HasIndex("SubscriptionTypeId");

                    b.ToTable("StoreSetting");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SubscriptionActivationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ActiveFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ActiveToDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubscriptionTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ValidityDay")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LuserId");

                    b.HasIndex("SubscriptionTypeId");

                    b.ToTable("SubscriptionActivation");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SubscriptionTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<float>("SubscriptionAmount")
                        .HasColumnType("real");

                    b.Property<string>("SubscriptionName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SubscriptionRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ValidationRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ValidityDay")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTypeId");

                    b.ToTable("SubscriptionType");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SupplierModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TestRouterOnuTrackingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GivenBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MacSerial")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PrdDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WithdrawnBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("WithdrawnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("ProductId");

                    b.ToTable("TestRouterOnuTracking");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ToDoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssaignFusionTeam")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("StaffComment")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Subject")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TicketId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InternetUserId");

                    b.ToTable("ToDo");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TransactionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("AccountPayTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("AssetLiabilityAccountId")
                        .HasColumnType("int");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InputDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("IssueId")
                        .HasColumnType("int");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesId")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<float>("TransactionAmount")
                        .HasColumnType("real");

                    b.Property<string>("TransactionCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("TransferInId")
                        .HasColumnType("int");

                    b.Property<int?>("TransferOutId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isPost")
                        .HasColumnType("bit");

                    b.Property<bool>("isSystem")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("AccountPayTypeId");

                    b.HasIndex("AssetLiabilityAccountId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InternetUserId");

                    b.HasIndex("IssueId");

                    b.HasIndex("MemberId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("SalesId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TransferInId");

                    b.HasIndex("TransferOutId");

                    b.ToTable("AccountsDailyTransaction");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UnitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitNameBangla")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnitShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UserAccountModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsBaseUser")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserRoleId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("UserAccount");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UserLogingInfoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("LoginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LongString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MacAddress")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PcName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Platform")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebBrowserName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("WebLink")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("UserLogingInfo");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UserRoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BusinessTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("RoleRemarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTypeId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UserTerminateModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceUpdate")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("InternetUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("MobileNoIfNecessary")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("NextFollowDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("TerminateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InternetUserId");

                    b.ToTable("UserTerminate");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UserTransactionLogModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("CommandType")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ControllerName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentReferance")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("FlagValue")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("FromDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("PcName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ToDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransactionStatement")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WebLink")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("UserTransactionLog");
                });

            modelBuilder.Entity("Invoice.Core.Entity.VGMModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressOfWeightBridge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("ContainerNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContainerSize")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContainerType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("IssuedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("NameofShipper")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviouslyDeclaredweight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TareWeight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VGAMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VGANo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VGMPerformedShipperBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VGMWeightbyCPA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerifiedGrossMass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeightBridgeRegistrationNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VGM");
                });

            modelBuilder.Entity("Invoice.Core.Entity.WarehouseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WhName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WhShortName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WhType")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("Invoice.Core.Entity.WarrantyItemsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComId")
                        .HasColumnType("int");

                    b.Property<string>("ComplainNo")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Complainer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("LuserId")
                        .HasColumnType("int");

                    b.Property<int?>("LuserIdUpdate")
                        .HasColumnType("int");

                    b.Property<string>("Problem")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseBatchId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("SalesId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseBatchId");

                    b.HasIndex("SalesId");

                    b.ToTable("WarrentyItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.WarrentyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("DayMonthYear")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isInactive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Warrenty");
                });

            modelBuilder.Entity("Invoice.Core.Entity.AccountHeadModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "vAccountGroupHead")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("vAccountGroupHead");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CompanyModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.BusinessTypeModel", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CountryModel", "Currency")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.SubscriptionTypeModel", "SubscriptionType")
                        .WithMany()
                        .HasForeignKey("SubscriptionTypeId");

                    b.Navigation("BusinessType");

                    b.Navigation("Currency");

                    b.Navigation("SubscriptionType");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CostCalculatedModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.InternalTransferModel", "InternalTransfer")
                        .WithMany("CostCalculations")
                        .HasForeignKey("InternalTransferId");

                    b.HasOne("Invoice.Core.Entity.IssueModel", "Issue")
                        .WithMany("CostCalculations")
                        .HasForeignKey("IssueId");

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Product")
                        .WithMany("CostCalculated")
                        .HasForeignKey("ProductId");

                    b.HasOne("Invoice.Core.Entity.PurchaseModel", "Purchase")
                        .WithMany("CostCalculations")
                        .HasForeignKey("PurchaseId");

                    b.HasOne("Invoice.Core.Entity.SalesModel", "Sales")
                        .WithMany("CostCalculations")
                        .HasForeignKey("SalesId");

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("InternalTransfer");

                    b.Navigation("Issue");

                    b.Navigation("Product");

                    b.Navigation("Purchase");

                    b.Navigation("Sales");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ExpireDateExtendModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternetUserList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternalTransferBatchItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.InternalTransferItemsModel", "InternalTransferItems")
                        .WithMany("BatchSerialItems")
                        .HasForeignKey("InternalTransferItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PurchaseBatchItemsModel", "PurchaseBatchItems")
                        .WithMany()
                        .HasForeignKey("PurchaseBatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternalTransferItems");

                    b.Navigation("Products");

                    b.Navigation("PurchaseBatchItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternalTransferItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "FromWarehouse")
                        .WithMany()
                        .HasForeignKey("FromWarehouseId");

                    b.HasOne("Invoice.Core.Entity.InternalTransferModel", "InternalTransferModel")
                        .WithMany("Items")
                        .HasForeignKey("InternalTransferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Product")
                        .WithMany("InternalTransferItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "ToWarehouse")
                        .WithMany()
                        .HasForeignKey("ToWarehouseId");

                    b.Navigation("FromWarehouse");

                    b.Navigation("InternalTransferModel");

                    b.Navigation("Product");

                    b.Navigation("ToWarehouse");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternalTransferModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.Navigation("InternetUserList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternetUserModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.InternetPackageModel", "InternetPackageList")
                        .WithMany()
                        .HasForeignKey("PackageId");

                    b.HasOne("Invoice.Core.Entity.InternetUserStatusModel", "UserStatus")
                        .WithMany()
                        .HasForeignKey("UserStatusId");

                    b.Navigation("InternetPackageList");

                    b.Navigation("UserStatus");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InvoiceBillModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "AccountReceiveByHead")
                        .WithMany()
                        .HasForeignKey("AccountReceiveHeadId");

                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany("InvoiceBill")
                        .HasForeignKey("InternetUserId");

                    b.Navigation("AccountReceiveByHead");

                    b.Navigation("InternetUserList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.IssueBatchItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.IssueItemsModel", "IssueItems")
                        .WithMany("BatchSerialItems")
                        .HasForeignKey("IssueItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PurchaseBatchItemsModel", "PurchaseBatchItems")
                        .WithMany()
                        .HasForeignKey("PurchaseBatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IssueItems");

                    b.Navigation("Products");

                    b.Navigation("PurchaseBatchItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.IssueItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.IssueModel", "IssueModel")
                        .WithMany("Items")
                        .HasForeignKey("IssueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.ProductModel", "Product")
                        .WithMany("IssueItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("IssueModel");

                    b.Navigation("Product");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("Invoice.Core.Entity.IssueModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.Navigation("InternetUserList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MemberModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.MarketModel", "Market")
                        .WithMany()
                        .HasForeignKey("MarketId");

                    b.HasOne("Invoice.Core.Entity.MemberStatusModel", "MemberStatus")
                        .WithMany()
                        .HasForeignKey("MemberStatusId");

                    b.HasOne("Invoice.Core.Entity.ShopModel", "Shop")
                        .WithMany("Member")
                        .HasForeignKey("ShopId");

                    b.Navigation("Market");

                    b.Navigation("MemberStatus");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MenuModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.MenuModel", "ParentMenu")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("ParentMenu");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MenuPermissionModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.BusinessTypeModel", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.MenuModel", "Menus")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessType");

                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MenuPermission_DetailsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.MenuModel", "Menus")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.MenuPermission_MasterModel", "MenuPermissionMasters")
                        .WithMany("MenuPermission_Details")
                        .HasForeignKey("MenuPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuPermissionMasters");

                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MenuPermission_MasterModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CompanyModel", "Company")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccount")
                        .WithMany()
                        .HasForeignKey("LUserIdPermission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ProductLedgerModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Invoice.Core.Entity.ProductModel", "ProductList")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("InternetUserList");

                    b.Navigation("ProductList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ProductModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.CategoryModel", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UnitModel", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarrentyModel", "Warrenty")
                        .WithMany()
                        .HasForeignKey("WarrentyId");

                    b.Navigation("Category");

                    b.Navigation("Unit");

                    b.Navigation("Warrenty");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ProductSecUnitModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.ProductModel", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.UnitModel", "Units")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Units");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseBatchItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.ProductModel", "Products")
                        .WithMany("PurchaseBatchItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PurchaseItemsModel", "PurchaseItems")
                        .WithMany("PurchaseBatchItems")
                        .HasForeignKey("PurchaseItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("PurchaseItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.ProductModel", "Product")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PurchaseModel", "PurchaseModel")
                        .WithMany("Items")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("Product");

                    b.Navigation("PurchaseModel");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "AccountPayType")
                        .WithMany()
                        .HasForeignKey("AccountPayTypeId");

                    b.HasOne("Invoice.Core.Entity.SupplierModel", "SupplierModel")
                        .WithMany("Purchase")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountPayType");

                    b.Navigation("SupplierModel");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchasePaymentModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "vChartofAccounts")
                        .WithMany()
                        .HasForeignKey("AccountHeadId");

                    b.HasOne("Invoice.Core.Entity.PaymentTypeModel", "vPaymentType")
                        .WithMany()
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PurchaseModel", "PurchaseMain")
                        .WithMany("PurchasePayments")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseMain");

                    b.Navigation("vChartofAccounts");

                    b.Navigation("vPaymentType");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesBatchItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.ProductModel", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.PurchaseBatchItemsModel", "PurchaseBatchItems")
                        .WithMany("SalesBatchItems")
                        .HasForeignKey("PurchaseBatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.SalesItemsModel", "SalesItems")
                        .WithMany("BatchSerialItems")
                        .HasForeignKey("SalesItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Products");

                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("SalesItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.ProductModel", "Product")
                        .WithMany("SalesItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.SalesModel", "SalesModel")
                        .WithMany("Items")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "vWarehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("Product");

                    b.Navigation("SalesModel");

                    b.Navigation("vWarehouse");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "AccountPayType")
                        .WithMany()
                        .HasForeignKey("AccountPayTypeId");

                    b.HasOne("Invoice.Core.Entity.CustomerModel", "CustomerModel")
                        .WithMany("Sales")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.Navigation("AccountPayType");

                    b.Navigation("CustomerModel");

                    b.Navigation("InternetUserList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesPaymentModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "vChartofAccounts")
                        .WithMany()
                        .HasForeignKey("AccountHeadId");

                    b.HasOne("Invoice.Core.Entity.PaymentTypeModel", "vPaymentType")
                        .WithMany("vTypeSalesSubs")
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.SalesModel", "SalesMain")
                        .WithMany("SalesPayments")
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalesMain");

                    b.Navigation("vChartofAccounts");

                    b.Navigation("vPaymentType");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ShopModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.MarketModel", "Market")
                        .WithMany()
                        .HasForeignKey("MarketId");

                    b.Navigation("Market");
                });

            modelBuilder.Entity("Invoice.Core.Entity.StoreSettingModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.BusinessTypeModel", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.CountryModel", "Currency")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.SubscriptionTypeModel", "SubscriptionType")
                        .WithMany()
                        .HasForeignKey("SubscriptionTypeId");

                    b.Navigation("BusinessType");

                    b.Navigation("Currency");

                    b.Navigation("SubscriptionType");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SubscriptionActivationModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.UserAccountModel", "UserAccount")
                        .WithMany()
                        .HasForeignKey("LuserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Invoice.Core.Entity.SubscriptionTypeModel", "SubscriptionType")
                        .WithMany()
                        .HasForeignKey("SubscriptionTypeId");

                    b.Navigation("SubscriptionType");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SubscriptionTypeModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.BusinessTypeModel", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId");

                    b.Navigation("BusinessType");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TestRouterOnuTrackingModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Invoice.Core.Entity.ProductModel", "ProductList")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("InternetUserList");

                    b.Navigation("ProductList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ToDoModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.Navigation("InternetUserList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.TransactionModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "AccountPayType")
                        .WithMany()
                        .HasForeignKey("AccountPayTypeId");

                    b.HasOne("Invoice.Core.Entity.AccountHeadModel", "AccountAssetLiability")
                        .WithMany()
                        .HasForeignKey("AssetLiabilityAccountId");

                    b.HasOne("Invoice.Core.Entity.CustomerModel", "Customer")
                        .WithMany("AccountsDailyTransaction")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Invoice.Core.Entity.EmployeeModel", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUser")
                        .WithMany()
                        .HasForeignKey("InternetUserId");

                    b.HasOne("Invoice.Core.Entity.IssueModel", "Issue")
                        .WithMany()
                        .HasForeignKey("IssueId");

                    b.HasOne("Invoice.Core.Entity.MemberModel", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId");

                    b.HasOne("Invoice.Core.Entity.PurchaseModel", "Purchase")
                        .WithMany()
                        .HasForeignKey("PurchaseId");

                    b.HasOne("Invoice.Core.Entity.SalesModel", "Sales")
                        .WithMany()
                        .HasForeignKey("SalesId");

                    b.HasOne("Invoice.Core.Entity.SupplierModel", "Supplier")
                        .WithMany("AccountsDailyTransaction")
                        .HasForeignKey("SupplierId");

                    b.HasOne("Invoice.Core.Entity.InternalTransferModel", "TransferIn")
                        .WithMany()
                        .HasForeignKey("TransferInId");

                    b.HasOne("Invoice.Core.Entity.InternalTransferModel", "TransferOut")
                        .WithMany()
                        .HasForeignKey("TransferOutId");

                    b.Navigation("Account");

                    b.Navigation("AccountAssetLiability");

                    b.Navigation("AccountPayType");

                    b.Navigation("Customer");

                    b.Navigation("Employee");

                    b.Navigation("InternetUser");

                    b.Navigation("Issue");

                    b.Navigation("Member");

                    b.Navigation("Purchase");

                    b.Navigation("Sales");

                    b.Navigation("Supplier");

                    b.Navigation("TransferIn");

                    b.Navigation("TransferOut");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UserAccountModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.UserRoleModel", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId");

                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("UserRole");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UserRoleModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.BusinessTypeModel", "BusinessType")
                        .WithMany()
                        .HasForeignKey("BusinessTypeId");

                    b.Navigation("BusinessType");
                });

            modelBuilder.Entity("Invoice.Core.Entity.UserTerminateModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.InternetUserModel", "InternetUserList")
                        .WithMany()
                        .HasForeignKey("InternetUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternetUserList");
                });

            modelBuilder.Entity("Invoice.Core.Entity.WarehouseModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.WarehouseModel", "Warehouses")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("Invoice.Core.Entity.WarrantyItemsModel", b =>
                {
                    b.HasOne("Invoice.Core.Entity.ProductModel", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("Invoice.Core.Entity.PurchaseBatchItemsModel", "PurchaseBatchItems")
                        .WithMany()
                        .HasForeignKey("PurchaseBatchId");

                    b.HasOne("Invoice.Core.Entity.SalesModel", "Sales")
                        .WithMany()
                        .HasForeignKey("SalesId");

                    b.Navigation("Products");

                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Invoice.Core.Entity.CustomerModel", b =>
                {
                    b.Navigation("AccountsDailyTransaction");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternalTransferItemsModel", b =>
                {
                    b.Navigation("BatchSerialItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternalTransferModel", b =>
                {
                    b.Navigation("CostCalculations");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("Invoice.Core.Entity.InternetUserModel", b =>
                {
                    b.Navigation("InvoiceBill");
                });

            modelBuilder.Entity("Invoice.Core.Entity.IssueItemsModel", b =>
                {
                    b.Navigation("BatchSerialItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.IssueModel", b =>
                {
                    b.Navigation("CostCalculations");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("Invoice.Core.Entity.MenuPermission_MasterModel", b =>
                {
                    b.Navigation("MenuPermission_Details");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PaymentTypeModel", b =>
                {
                    b.Navigation("vTypeSalesSubs");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ProductModel", b =>
                {
                    b.Navigation("CostCalculated");

                    b.Navigation("InternalTransferItems");

                    b.Navigation("IssueItems");

                    b.Navigation("PurchaseBatchItems");

                    b.Navigation("PurchaseItems");

                    b.Navigation("SalesItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseBatchItemsModel", b =>
                {
                    b.Navigation("SalesBatchItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseItemsModel", b =>
                {
                    b.Navigation("PurchaseBatchItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.PurchaseModel", b =>
                {
                    b.Navigation("CostCalculations");

                    b.Navigation("Items");

                    b.Navigation("PurchasePayments");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesItemsModel", b =>
                {
                    b.Navigation("BatchSerialItems");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SalesModel", b =>
                {
                    b.Navigation("CostCalculations");

                    b.Navigation("Items");

                    b.Navigation("SalesPayments");
                });

            modelBuilder.Entity("Invoice.Core.Entity.ShopModel", b =>
                {
                    b.Navigation("Member");
                });

            modelBuilder.Entity("Invoice.Core.Entity.SupplierModel", b =>
                {
                    b.Navigation("AccountsDailyTransaction");

                    b.Navigation("Purchase");
                });
#pragma warning restore 612, 618
        }
    }
}
