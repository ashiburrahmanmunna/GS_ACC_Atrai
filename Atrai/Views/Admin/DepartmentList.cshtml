@model IEnumerable<Atrai.Model.Core.Entity.Cat_DepartmentModel>
@{
    ViewData["Title"] = "Department List";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}


<link href="https://unpkg.com/tabulator-tables@5.5.0/dist/css/tabulator.min.css" rel="stylesheet">




<style>
    .table > :not(:first-child) {
        border-top: 0;
    }

    #treegridTable th {
        text-align: center;
        font-weight: 600;
        border: 1px solid #BABEC5;
        /*font-size: 14px;*/
    }

    .table > tbody > tr > td {
        line-height: 15px !important;
        border: 1px solid #c9c9c9;
    }


    .table tbody tr td {
        /* border: 1px solid #c9c9c9;*/
        font: 14px;
        color: #8A8A8A;
        line-height: 15px;
    }
    /*    .table>:not(caption)>*>* {

                     border-bottom-width: 0px;

                }*/
    .text-red {
        color: #FF0000 !important;
    }

    #body td:not(:first-child) {
        text-align: center;
    }

    .root-node {
        font-weight: 500;
    }

    /*   .tabulator-table .tabulator-row {
        background-color: white;
    } */

    .upper-form-style {
        background: #e9ecef6b;
        /*padding-top: 62px*/
    }

    .report-text-style {
        color: #0000ce;
    }

    .company-and-other-text-style {
        margin-top: 40px;
    }

    .customize-btn {
        background: #e9ecef6b;
        border: 1px solid black;
    }

    .customize-btn-another {
        background: #2CA01C;
        border: 1px solid black;
        border-radius: 20px;
        color: #FFFFFF;
        border: 1px solid #2CA01C;
    }

        .customize-btn-another:hover {
            background: #2CA01C;
            border: 1px solid black;
            border-radius: 20px;
            color: #FFFFFF;
            border: 1px solid #2CA01C;
        }

    .customize-btn:hover {
        background: #e9ecef6b;
        border: 1px solid black;
    }

    .customization-btn {
        background: #2CA01C;
        color: white;
        /*border: 1px solid black;*/
        border-radius: 20px;
    }

        .customization-btn:hover {
            background: #235d1b;
            color: white;
            border-radius: 20px;
        }

    .dropdown-button-style {
        border: 1px solid #ced4da;
        background: white;
    }

        .dropdown-button-style:hover {
            border: 1px solid #ced4da;
            background: white;
        }

    .gear-dropdown.show {
        width: 360px;
    }

    .modal-dialog {
        max-width: 90%;
        margin: 2rem auto;
    }

    .report-print-setting-style {
        background: #e9ecef6b;
    }

    .total-accname {
        border-bottom: 5px double black !important;
    }

    #loader {
        position: fixed;
        left: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        z-index: 9999;
        background: url('/assets/loading-load.gif') 50% 50% no-repeat rgb(249, 249, 249);
        opacity: .6;
    }

    .tabulator {
        border: none;
    }

    .tabulator-col .tabulator-col-title {
        text-align: center;
    }

    .tabulator-tableholder {
        background-color: white;
    }

    .tabulator[tabulator-layout=fitDataTable] {
        display: inherit;
    }

    .tabulator .tabulator-header .tabulator-col .tabulator-col-content {
        margin-top: 7px;
    }

    .tabulator .tabulator-header .tabulator-col, .tabulator .tabulator-header {
        background-color: white;
        border-bottom: 1px solid #aaaaaa38;
        border-right: 1px solid #aaaaaa38;
    }

    .tabulator-row .tabulator-cell.tabulator-frozen.tabulator-frozen-left {
        border-right: 2px solid #aaaaaa38;
    }

    .tabulator-row .tabulator-cell {
        border-right: none;
        border-left: none;
        padding-left: 10px;
        border: 1px solid #aaaaaa29;
    }

    .tabulator-cell {
        padding-top: 10px;
        padding-bottom: 10px;
        /*margin-top: 27px;*/
    }

    .tabulator .tabulator-row .active-cell {
        overflow: visible;
        /* Add any other styles you need for the active cell */
    }

    .tabulator-row {
        /*   border: 1px solid #aaaaaa38;*/
        border-left: none;
        border-right: none;
    }

    input[type="checkbox"] {
        width: 20px; /* Set the width */
        height: 20px; /* Set the height */
    }

    .nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active {
        border-top-color: transparent !important;
        border-left-color: transparent !important;
        border-right-color: transparent !important;
        border-bottom: 4px solid green;
    }

        .nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active:hover {
            background-color: #F8F8F8;
            border-top-color: transparent !important;
            border-left-color: transparent !important;
            border-right-color: transparent !important;
        }

    .nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link:hover {
        background-color: #F8F8F8;
        border-top-color: transparent !important;
        border-left-color: transparent !important;
        border-right-color: transparent !important;
    }

    .customize-btnew {
        background: transparent;
        border: 1px solid black;
        border-radius: 20px;
    }

        .customize-btnew:hover {
            background: #ffffff;
            border: 1px solid black;
            color: black;
            border-radius: 20px;
        }

    .tabulator-row .tabulator-cell.tabulator-editing {
        border: 1px solid #404c5d;
        outline: none;
        padding: 0;
    }

    .filter-dropdown > .filter-dropdown-class.show {
        width: 580px;
    }

    p {
        margin: 1em 0;
    }

    .button {
        -webkit-tap-highlight-color: rgba(0,0,0,0);
        position: relative;
        background: #aa0000;
        padding: 10px 15px;
        color: white;
        box-shadow: 0 2px black;
        text-decoration: none;
        border-radius: 5px;
        /*text-shadow: 0 1px 1px black;*/
    }

        .button:hover {
            top: -2px;
            box-shadow: 0 7px #000000a3;
        }

        .button:active {
            top: 1px;
            box-shadow: 0 7px #000000a3;
        }


    .tabulator .tabulator-footer .tabulator-paginator .tabulator-page:hover {
        background-color: deepskyblue;
    }

    .tabulator .tabulator-footer {
        background-color: #fff;
        color: black;
    }

        .tabulator .tabulator-footer .tabulator-calcs-holder .tabulator-row {
            background: white !important;
        }




    .tabulator-row:nth-child(even) {
        background-color: white;
    }

    .separator {
        display: flex;
        align-items: center;
        text-align: center;
        color: #999;
        font-size: 12px;
    }

        .separator::before,
        .separator::after {
            content: '';
            flex: 1;
            border-bottom: 1px solid #999;
        }

        .separator:not(:empty)::before {
            margin-right: .25em;
        }

        .separator:not(:empty)::after {
            margin-left: .25em;
        }
</style>






<div class="page-wrapper">
    <div class="container-fluid">

        @*

            </div>*@

        <!-- Start Page Content -->
        <div class="row">
            <div class="col-12">
                <div class="card">

                    <div class="card-header">

                        @*<div class="row mb-1">
                            <div class="col-md-2 col-12">
                                <h4>Department List</h4>
                            </div>
                            <div class="col-md-2 col-12">
                                @Html.ActionLink("Create Department", "AddDepartment", null, null, new { @class = "btn btn-sm btn-outline-info btn-block rounded-0", @id = "btnBack" })
                            </div>

                        </div>*@
                        <div class="row py-3" style="background: #e9ecef6b;">
                            <div class="col-lg">
                                <p class="fs-4 fw-bold">Department List</p>
                            </div>
                            <div class="col-lg">
                                <div class="float-end d-flex">
                                    @Html.ActionLink("Create Department", "AddDepartment", null, null, new { @class = "btn btn-success fw-bold ms-3 h-100 radius-30", @id = "btnBack" })

                                    @*<div class="dropdown">
                                        <button class="btn btn-success dropdown-toggle fw-bold ms-3 h-100 radius-30" type="button" data-bs-toggle="dropdown">
                                            New transaction
                                        </button>
                                    </div>*@
                                </div>


                            </div>
                        </div>

                    </div>

                    <div>
                        <input type="text" class="textbox search_box ms-2" id="searchInput" name="keywords" autocomplete="off" placeholder="Search" style="width: 350px; border: 1px solid #8080807d; padding: 7px;border-radius: 30px;" />

                        <div title="Settings" class="dropdown1 mt-3 custom-grid" style="display:inline-block;">
                            <a href="#" id="print-table" class="text-decoration-none text-black ms-3">
                                <i class="bi bi-printer fs-5"></i>
                            </a>
                            <a href="#" id="download-xlsx" class="text-decoration-none text-black ms-2">
                                <i class="bi bi-file-earmark-excel fs-5"></i>
                            </a>
                            <a href="#" class="text-decoration-none text-black ms-2" id="dropdownMenuButton1" data-bs-toggle="dropdown"
                               aria-expanded="false">
                                <i class="bi bi-gear fs-5"></i>
                            </a>
                            <div class="dropdown-menu gear-dropdown" aria-labelledby="dropdownMenuButton-expense">
                                <div class="row p-4 main-dropdown-size" style="overflow:hidden;">
                                    <div class="col">
                                        <span class="fw-bold ms-3">Columns</span>
                                        <hr class="m-0 w-75 ms-3 w-sm-50 " />
                                        <ul class="list-unstyled">
                                            <li>
                                                <div id="expenseColumnList" class="custom-grid">
                                                </div>
                                            </li>
                                        </ul>

                                    </div>

                                    <div class="ms-3">
                                        <label>Rows</label> <br />
                                        <select name="rows" id="expense-rows" class="cursor-pointer" style="padding: 10px 0 10px 5px; width: 70px;">
                                            <option value="0" disabled selected>Rows</option>
                                            <option value="5" selected>5</option>
                                            <option value="10">10</option>
                                            <option value="20">20</option>
                                            <option value="50">50</option>
                                            <option value="100">100</option>
                                            <option value="1000">1000</option>
                                        </select>
                                    </div>
                                </div>
                            </div>


                        </div>
                    </div>

                    <div id="department-table"></div>

                </div>
            </div>
        </div>
        <!-- End PAge Content -->
    </div>
</div>





@section scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tabulator/5.3.0/js/tabulator.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


    @*scripts for pdf generation*@
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.8.0/html2pdf.bundle.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.29/jspdf.plugin.autotable.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tabulator/5.3.0/js/tabulator.min.js"></script>
    <script src="https://unpkg.com/xlsx/dist/xlsx.full.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script type="text/javascript">
        var DepartmanentListTable;

        function getDepartmentList() {
        var DepartmanentApiUrl = '@Url.Action("GetDepartmentList", "Admin")';
 DepartmanentListTable = new Tabulator("#department-table", {
       // data: dataTableFilter,
        dataTree: true,
        dataTreeStartExpanded: true ,
        dataTreeChildField: "children",
     layout: "fitColumns",
     frozenRows: 1,
     selectable:1,
        pagination: true,
        paginationMode: "remote",
        paginationSize: 5,
        paginationInitialPage: 1,
        paginationSizeSelector: [5, 10, 25, 50, 100, true],
        paginationCounter: "rows",
        ajaxURL: DepartmanentApiUrl,
        ajaxConfig: "get",
        ajaxContentType: "json",

            ajaxResponse: function (url, params, response) {
                DepartmanentListTable.setMaxPage(response.last_page);
           // //console.log("response.last_page", response.last_page);

            dataLoadExpense = response.data;
            console.log("Department table list:", dataLoadExpense);

            return {

                data: dataLoadExpense,
                last_page: response.last_page,

            };
        },

        columns: [
            {
                title: "DEPARTMENT CODE",
                headerHozAlign: "center",
                field: "DeptCode",
                vertAlign: "middle",
                hozAlign: "center",
            },
            { title: "DEPARTMENT NAME", headerHozAlign: "center", field: "DeptName", vertAlign: "middle", hozAlign: "center", },
            {
                title: "ACTIONS", field: "button", headerHozAlign: "center", headerSort: false, vertAlign: "middle", hozAlign: "center", resizable: false/*, width: "9px"*/, formatter: function (cell, formatterParams, onRendered) {
                                    var data = cell.getData();
                                    var myUrlGet = '@Url.Action("EditDepartment", "Admin")?DepartmentId=' + data.Id;
                var Delete = `setDeleteUrl(${data.Id})`

                                    var deleteHtml = `
            <a onclick='${Delete}' class='text-decoration-none text-black ms-3 mt-1' href='#' id='InActive'>
                <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
            </a>
                 <div class='dropdown-divider m-0'></div>
                         `;


                        var statusDependentHtml =  deleteHtml;
                var html = `
    <div class='dropdown ms-1'>
        <a href='${myUrlGet}' target="_blank" class='fw-bolder mt-2'>View/Edit</a>
        <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
       <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' >
            ${statusDependentHtml}

        </ul>
    </div>
`;


            return html;
         },
         visible: true,cellClick: function(e, cell) {
        // Add a custom class to the cell when it's clicked
        cell.getElement().classList.add('active-cell');
      },
    },
        ],
        dataBound: function () {
            // Freeze the top 1 row (index 0) after the table is created
            var rows = table.getRows();
            if (rows.length > 0) {
                var cells = rows[0].getCells();
                cells.forEach(cell => {
                    cell.freeze();
                });
            }
        },
 });
        };




        var globalFieldsForExpenseList = [
                        {
                title: "DEPARTMENT CODE",
                headerHozAlign: "center",
                field: "DeptCode",
                vertAlign: "middle",
                hozAlign: "center",
            },
            { title: "DEPARTMENT NAME", headerHozAlign: "center", field: "DeptName", vertAlign: "middle", hozAlign: "center", },
            {
                title: "ACTIONS", field: "button", headerHozAlign: "center", headerSort: false, vertAlign: "middle", hozAlign: "center", resizable: false/*, width: "9px"*/, formatter: function (cell, formatterParams, onRendered) {
                                    var data = cell.getData();
                                    var myUrlGet = '@Url.Action("EditDepartment", "Admin")?DepartmentId=' + data.Id;
                var Delete = `setDeleteUrl(${data.Id})`

                                    var deleteHtml = `
            <a onclick='${Delete}' class='text-decoration-none text-black ms-3 mt-1' href='#' id='InActive'>
                <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
            </a>
                 <div class='dropdown-divider m-0'></div>
                         `;


                        var statusDependentHtml =  deleteHtml;
                var html = `
    <div class='dropdown ms-1'>
        <a href='${myUrlGet}' target="_blank" class='fw-bolder mt-2'>View/Edit</a>
        <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
       <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' >
            ${statusDependentHtml}

        </ul>
    </div>
`;


            return html;
         },
         visible: true,cellClick: function(e, cell) {
        // Add a custom class to the cell when it's clicked
        cell.getElement().classList.add('active-cell');
      },
    },
        ]
        var columnListExpense = $("#expenseColumnList");
      $.each(globalFieldsForExpenseList, function (index, field) {
          ////console.log("GLOBAL 2::",field);
          var title = field.title;
          var name = field.field;
          var visible = true;
          if (field.visible == false) {
              visible = false;
          }
          titles = `<li>
                      <a class="dropdown-item" href="#">
                      <div class="custom-control custom-checkbox" >
                      <input type="checkbox" class="custom-control-input title-input" id="${name}" value="${name}">
                              <label class="custom-control-label w-100 cursor-pointer" id="${name}" for="${name}">${title}</label>
                      </div>
                      </a>
                      </li>`;
          columnListExpense.append(titles);

          document.querySelector(`#${name}`).addEventListener('click', function (event) {
              var checkbox = event.target;
              var isChecked = checkbox.checked;

              if (isChecked) {
                  DepartmanentListTable.showColumn(name);
              } else {
                  DepartmanentListTable.hideColumn(name);
              }
          });


          $(`${'#' + name}`).prop('checked', visible);


          $('.custom-control-label').on('click', function (e) {
              e.stopPropagation();
          });
          $('#dropdown-titles').on('click', function (e) {
              e.stopPropagation();
          });

          //Add event listener to the rows select input
          $("#expense-rows").on("change", function () {
              var selectedRows = $(this).val();
              if (selectedRows !== null) {
                  var pageSize = parseInt(selectedRows);
                  if (!isNaN(pageSize)) {
                      DepartmanentListTable.setPageSize(pageSize);
                  }
              }
          });

      });






        getDepartmentList();

 function setDeleteUrl(data) {
    Swal.fire({
        title: "Are you sure?",
        text: "You won't be able to revert this!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes"
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                url: '@Url.Action("DeleteDepartment", "Admin")',
                type: "get",
                data: { DepartmentId: data },
                traditional: true,
                success: function (response) {

                    if (response.success == "1") {
                        toastr.success(response.msg, "", {
                            "toastClass": "toast-green",
                        });
                        getDepartmentList();
                    }
                    else if (response.success == "0") {
                        toastr.error(response.msg, "", {
                            "toastClass": "toast-red",
                        });
                        getDepartmentList();
                    }
                },
                error: function (xhr, status, error) {
                    console.error(xhr.responseText);
                    toastr.error("Error during delete.", "", { "toastClass": "toast-red" });
                }
            });
        }
    })
        };

        $('#searchInput').on('input', function() {
       var inputValue = $(this).val();
       var url = '@Url.Action("GetDepartmentList", "Admin")' + '?searchquery=' + inputValue;
       DepartmanentListTable.setData(url);

   });
        document.getElementById("print-table").addEventListener("click", function () {
            DepartmanentListTable.print(false, true);
        });
        document.getElementById("download-xlsx").addEventListener("click", function () {
            DepartmanentListTable.download("xlsx", "Expenses.xlsx", { sheetName: "Expenses" });
        });
    </script>

}