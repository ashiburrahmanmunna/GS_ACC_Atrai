@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@model IEnumerable<Atrai.Model.Core.Entity.AccountHeadModel>
@{
    ViewData["Title"] = "AccountHead List";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}


<link href="~/css/accountHeadListGearDropdown.css" rel="stylesheet" />
<link href="~/admin_theme_gtr/assets/css/multistep-custom.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<script src="https://kit.fontawesome.com/47bfbe2b1b.js" crossorigin="anonymous"></script>
<style>
    /*style written by shahinur*/
    .jsgrid-grid-body {
        overflow: auto;
    }

    .hand-cursor {
        cursor: pointer;
    }

    .btn-pos {
        margin-left: 580px;
    }

      tr.highlight td.jsgrid-cell {
        background-color: #16c0f3 !important;
        color: white;
    }

</style>
<!-- Start Page Content -->
<div class="row">
    <div class="col-12">
        <div class="card">
              @Html.Hidden("FromDate", null, new { @class = "form-control text-center FromDate", @placeholder = "From Date", @autocomplete = "off", name = "FromDate" })
              @Html.Hidden("ToDate", null, new { @class = "form-control text-center ToDate", @placeholder = "To Date", @autocomplete = "off", name = "ToDate" })
            @*main offcanvas*@
            <div class="card-body">
                <div class="row account_offcanvas">
                    <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasRight" aria-labelledby="offcanvasRightLabel">
                        <div class="offcanvas-header">
                            <h5 class="offcanvas-title" id="offcanvasRightLabel">Account</h5>
                            <button onclick="clearModalData()" type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                        </div>
                        <div class="offcanvas-body">
                            <div id="accountSave">
                                <div class="form-upper-text">
                                    Categories are for tax time and accounting. Tags might be a better way for you
                                    to get custom insights.<a class="text-decoration-none">Find out more about tags</a>
                                </div>
                                <input type="hidden" id="AccId" value="0" />

                                <div class="mt-3">
                                    <div><label for="accountName" class="account-head-name">Account Name</label></div>
                                    <input placeholder="Salary Expense" type="text" id="accountName" name="accountName" class="account-name-input form-control">
                                </div>
                                <div class="mt-2">
                                    <span class="account-head-name d-block">Create category under*</span>
                                    <a href="#" id="OpenCategoryListModal"
                                       class="text-decoration-none account-head-name text-primary d-none">Select Category</a>
                                    <input type="text" id="OpenCategoryListModalValue" name="OpenCategoryListModalValue" class="drebit-credit form-control d-none">
                                </div>
                                <div class="mt-2">
                                    <span class="account-head-name">Create Base / Parent Head under*</span> <br>
                                    <a href="#" id="OpenParentHeadListModal"
                                       class="text-decoration-none account-head-name text-primary">Select Base / Parent Head</a>
                                    <input type="text" id="OpenParentHeadListModalValue" name="OpenParentHeadListModalValue" class="drebit-credit form-control d-none">
                                </div>
                                <div class="row mt-3">
                                    <div class="col-lg-6">
                                        <div><label for="accountCode" class="account-head-name">Account Code</label></div>
                                        @*@Html.EditorFor(model => model.AccCode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Salary Expense" } })
                                        @Html.ValidationMessageFor(model => model.AccCode, "", new { @class = "text-danger" })*@
                                        <input type="text" id="accountcode" name="accountcode" class="drebit-credit w-100">
                                    </div>

                                    <div class="col-lg-6" id="AccountType">
                                        <div><label for="accountCode" class="account-head-name">Account Type</label></div>
                                        @Html.DropDownList("AccTypes", new List<SelectListItem>
                                        {
                                        new SelectListItem() {Text = "Ledger", Value="L", Selected = true},
                                        new SelectListItem() {Text = "Group", Value="G"},

                                        }, "Select Account Type", new { @id = "AccTypes", @class = "form-control" })
                                        @Html.ValidationMessage("AccTypes", "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-lg-2 mt-3">
                                        <div><label for="currency" class="account-head-name">Currency</label></div>
                                        <select id="currency" name="currency" class="currency w-20">
                                        </select>
                                    </div>

                                    <div class="col-lg-5 mt-3">
                                        <div><label for="debit" class="account-head-name">OP.Debit Balance</label> </div>
                                        <input value="0" type="text" id="debit" name="debit" class="drebit-credit w-100">
                                       
                                    </div>

                                    <div class="col-lg-5 mt-3">
                                        <div> <label for="credit" class="account-head-name">OP.Credits Balance</label></div>
                                        <input value="0" type="text" id="credit" name="credit" class="drebit-credit w-100">
                                    </div>
                                    <span id="debitCreditValidation" class="text-danger" style="display: none;">Both Debit and Credit Balance are not allowed</span>
                                </div>

                                <div class="mt-3">
                                    <div><label for="description" class="account-head-name">Description:</label></div>
                                    <textarea id="description" name="description" class="description w-100"></textarea>
                                </div>
                                <!-- <input type="submit" value="Submit"> -->
                                <div class="modal-footer my-2">
                                    <button type="button" class="btn cancel-btn cancel-text" data-bs-dismiss="offcanvas" onclick="clearModalData()">Cancel</button>
                                    <button id="accountSaveBtn" type="button" class="btn next-btn text-white mx-2">Save</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row mb-1 pt-1">
                    <div class="col-md-6 mb-3">
                        <h3>Chart of Accounts</h3>
                    </div>


                    <div class="col-md-6 text-end button-position account_offcanvas">          
                        <!-- Example split danger button -->
                        <div class="btn-group ">

                            <div style="display: flex;">
                                <div class="" style=" margin-left: 20px; ">
                                    <div class="input-group  mb-2" style=" width: 290px; ">
                                        <input type="text" class="form-control" name="date" id="daterange-btn">
                                        <button id='btnDec' type="button" class="btn btn-danger btn-sm rounded-0" title='Decrement month'><i class="bi bi-calendar-minus" aria-hidden="true"></i></button>
                                        <button id='btnInc' type="button" class="btn btn-primary btn-sm" title='Increment month'><i class="bi bi-calendar-plus" aria-hidden="true"></i></button>
                                    </div>

                                </div>

                                <div class="" style=" margin-left: 10px; ">
                                    <div class="dropdown">
                                        <button class="btn btn-primary dropdown-toggle radius-30" style=" " type="button" data-bs-toggle="dropdown">
                                            <span>Reports</span>
                                        </button>

                                        <div class="dropdown-menu" id="button-container">
                                            <button class="dropdown-item btnReport" type="button" onclick="ReportPrintAccount('ViewLedger')"><i class="icon-pencil icon-white"></i><span class="mx-2">View</span> </button>
                                            <button class="dropdown-item btnReport" type="button" onclick="ReportPrintAccount('ViewLedgerNotPosted')"><i class="icon-pencil icon-white"></i><span class="mx-2">View Ledger [Not-Posted]</span></button>
                                            <button class="dropdown-item btnReport" type="button" onclick="ReportPrintAccount('PrintLedger')"><i class="icon-pencil icon-white"></i><span class="mx-2">Print Ledger</span></button>
                                        </div>
                                    </div>
                                </div>
                            

                            <div class="btn-group" style=" margin-left: 10px; ">
                            <button class="btn btn-primary rounded-start" style="height: fit-content;" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight">New</button>
                            <button type="button" class="btn btn-primary dropdown-toggle dropdown-toggle-split" style="height: fit-content;" data-bs-toggle="dropdown" aria-expanded="false">
                                <span class="visually-hidden">Toggle Dropdown</span>
                            </button>
                            <ul class="dropdown-menu">
                                <li class="custom-width"><a class="dropdown-item" href="/Accounts/importaccount"><img src="~/assets/excel 1.png" alt="">import</a></li>
                                <li class="custom-width"><a class="dropdown-item hand-cursor" onclick="accountsRefresh()"><img src="~/assets/Atrai 1.png" alt="">Refresh</a></li>
                                        <li class="custom-width"><a class="dropdown-item hand-cursor" onclick="gotoAccoundHead()"><i class="bi bi-aspect-ratio"></i>Classical</a></li>
                            </ul>
                            </div>
                           </div>
                        </div>

                        <div class="offcanvas offcanvas-end" tabindex="-1" id="CategoryOffcanvas">
                            <div class="offcanvas-header">
                                <a href="#" id="categoryBackButton"><img src="../assets/VectorBack.png" /> &nbsp;<span class="back-text">Back</span></a>
                                <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                                @*<button class="btn-close" id="CategoryOffcanvasClose"></button>*@
                            </div>
                            <div class="offcanvas-body">
                                <h5 class="text-center mt-3">Move Category Under*</h5>
                                <input type="text" class="search w-100" id="search-list-1">
                                <div class="overflow-auto" style="max-height:500px;">
                                    <div id="list">
                                        <!-- List of data with radio checkbox will be added here -->
                                        <div class="mt-3">
                                            <div id="list">
                                                @{
                                                    var i = 1;
                                                        @foreach (var item in ViewBag.AccountCategoryId)
                                                    {
                                                            <div id="categoryListItem" class="form-check text-start ms-3 mt-2">
                                                                <input class="form-check-input radio-style" type="radio" name="exampleRadios" id="exampleRadios@(i)" value="@item.Value" />
                                                                <div class="categorylis">
                                                                    <label class="form-check-label label-style list-text cursor-pointer ms-3" for="exampleRadios@(i)">
                                                                        @item.Text
                                                                        <br />
                                                                        <span id="span-hide" class="list-item-span">Money your business earns</span>
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        i++;
                                                    }
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="offcanvas-footer mb-2">
                                    <button class="btn cancel-btn cancel-text cancel-off-canvas" data-bs-dismiss="offcanvas" id="category-list-close">Cancel</button>
                                    <button id="saveChanges" type="button" class="btn next-btn text-white">Next</button>
                                </div>
                            </div>
                        </div>

                        @*parenthead list offcanvas*@
                        <div class="offcanvas offcanvas-end" tabindex="-1" id="ParentHeadOffcanvas">
                            <div class="offcanvas-header">
                                <a href="#" id="parentHeadBackButton"><img src="/assets/VectorBack.png" /> &nbsp;<span class="back-text">Back</span></a>
                                @*<button class="btn-close" id="ParentHeadOffcanvasClose"></button>*@
                                <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                            </div>
                            <div class="offcanvas-body">
                                <h5 class="text-center mt-3">Move ParentHead Under*</h5>
                                <div class="overflow-auto" style="max-height:500px;">
                                    <input type="text" class="search w-100" id="search-list-2">
                                    <div id="parent-list">
                                        <div class="mt-3">
                                            <div id="parent-list">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="offcanvas-footer">
                                    <button class="btn cancel-btn cancel-text" data-bs-dismiss="offcanvas" id="parent-list-close">Cancel</button>
                                    <button id="ParentHeadSaveChanges" type="button" class="btn next-btn text-white">Ok</button>
                                </div>
                            </div>
                        </div>


                    </div>


                </div>
                <div class="col-md-6 mb-2"> 

                    <div class="btn-group">
                        <button class="btn btn-sm border border-end-0" type="button" id="exportUl">
                            <img src="~/assets/excel 1.png" alt="">
                        </button>
                        <button type="button" class="btn btn-sm border border-start-0 dropdown-toggle dropdown-toggle-split" id="exportBtn" data-bs-toggle="dropdown" data-target="#exportUll" aria-expanded="false">
                            <span class="visually-hidden">Toggle Dropdown</span>
                        </button>
                        <ul class="dropdown-menu" id="exportPDF">
                            <li><a class="dropdown-item" href="#"><img src="~/assets/pdf 1.png" alt="">PDF</a></li>
                        </ul>
                    </div>
                    <div class="dropdown1" style="display:inline-block;">
                        <button class="btn btn-white border-0" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown"
                                aria-expanded="false">
                            <i class="bi bi-gear" me-1"></i>
                        </button>
                        @* <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1"> *@
                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                            <div class="row row-cols-lg-3 p-4 main-dropdown-size" style="overflow:hidden;">
                                <div class="col" style="width: 188px; float:left;">
                                    <li class="fw-bold ms-3">Columns</li>
                                    <hr class="m-0 w-75 ms-3 w-sm-50 " />
                                    <li>
                                        <div id="dropdown-titles">
                                        </div>
                                    </li>
                                </div>
                                <div class="vertical-hr">

                                    <div class="col right-dropdown" style="width: 188px;">
                                        <li class="fw-bold ms-3">Others</li>
                                        <hr class="m-0 w-75 w-sm-50  ms-3" />
                                        <li><a id="show-all" value="100" class="dropdown-item" href="#">Show all</a></li>
                                        <li><a id="hide-all" class="dropdown-item" href="#">Hide all</a></li>
                                        <li><a id="restore" class="dropdown-item" href="#">Restore</a></li>


                                        <li>
                                            <select name="rows" id="rows" class="border-0 cursor-pointer" style="margin-left: 13px;padding: 10px 0;width: 70px; ">
                                                @*<option value="0" class="w-100">Rows</option>*@
                                                <option value="0" disabled selected>Rows</option>
                                                <option value="5">5</option>
                                                <option value="10" selected>10</option>
                                                <option value="20">20</option>
                                                <option value="50">50</option>
                                                <option value="100">100</option>
                                                <option value="1000">1000</option>
                                            </select>
                                        </li>
                                        <li>
                                            <a class="dropdown-item" href="#">
                                                <div class="custom-control custom-checkbox">
                                                    <input type="checkbox" class="custom-control-input title-input" id="with-group" value="with-group">
                                                    <label class="custom-control-label cursor-pointer" id="with-group-label" for="with-group">With Group</label>
                                                </div>
                                            </a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item" href="#">
                                                <div class="custom-control custom-checkbox">
                                                    <input type="checkbox" class="custom-control-input title-input" id="with-inactive" value="with-inactive">
                                                    <label class="custom-control-label cursor-pointer" id="with-inactive-label" for="with-inactive">With Inactive</label>
                                                </div>
                                            </a>
                                        </li>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                    </ul>


                </div>




                <div class="row">
                    <div class="col-12 col-md-12">
                        <div id="jsFilterGrid" style="font-size:14px;"></div>
                    </div>
                </div>
            </div>

        </div>
    </div>
    <!-- End PAge Content -->
    @section Scripts{
        <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.2/xlsx.full.min.js"></script>

        <script type="text/javascript">
            const parentHeadBackButton = document.getElementById("parentHeadBackButton");
            const categoryBackButton = document.getElementById("categoryBackButton");
            const categoryOffcanvas = new bootstrap.Offcanvas(document.getElementById('CategoryOffcanvas'));
            const parentHeadOffcanvas = new bootstrap.Offcanvas(document.getElementById('ParentHeadOffcanvas'));
            const mainOffcanvas = new bootstrap.Offcanvas(document.getElementById('offcanvasRight'));

            var nameTaker = [];
            var titleTaker = [];
            var jsonKey = [];
            var titleKey = [];

            $('#Importmodal').click(function () {
                $('#staticBackdrop').modal('show');

            });


            parentHeadBackButton.addEventListener("click", () => {
                parentHeadOffcanvas.hide();
                categoryOffcanvas.show();
            });
            categoryBackButton.addEventListener("click", () => {
                categoryOffcanvas.hide();
                mainOffcanvas.show();
            });

            var selectedRowData = [];

            var globalData = [];
            var globalIds = [];
            var Titles = [];
            //Global fields for jsgrid table starts
            var globalFields = [
                {
                    name: "CheckBox", title: 'Check Box', headerTemplate: function () {
                        return $("<button>").attr("type", "button").css({
                            'border': '0'
                        }).html("<i class='fas fa-trash'></i>") //text("Delete")
                            .on("click", function () {
                                deleteSelectedItems();
                                initjsGrid();
                            });
                    },
                    itemTemplate: function (_, item) {
                        return $("<input>").attr("type", "checkbox").css({
                            'width': '20px',
                            'height': '20px'
                        }).prop("checked", $.inArray(item, selectedItems) > -1)
                            .on("change", function () {
                                $(this).is(":checked") ? selectItem(item) : unselectItem(item);
                            });
                    },

                    align: "center",
                    width: 50
                },
                { name: "AccType", title: 'Type', type: "text", width: 220, visible: false },
                { name: "AccountCategory", title: 'Category', type: "text", width: 120, },
                { name: "AccCode", title: 'Code', type: "text" },
                { name: "AccName", title: 'Account Head', type: "text", width: 150, },
                { name: "ParentName", title: 'Group Head', type: "text", },
                { name: "AccountBalance", title: 'Balance', type: "lable", align: "right" },
                /* { name: "AccountType", title: 'Account Type', type: "text", visible: false},*/
                {
                    name: "button", width: '80', title: 'Action', align: 'center', itemTemplate: function (value, data) {
                        //var options = [
                        //    { value: "Edit", text: "<i class='fa-solid fa-pen-to-square'></i> Edit"},
                        //    { value: "Delete", text: "<i class='fa-sharp fa-solid fa-trash'></i> Delete" },
                        //];
                        //console.log(data);
                        var myUrledit = '@Url.Action("EditAccountHead", "Admin")?AccountHeadId=' + data.Id;
                        var myUrldelete = '@Url.Action("DeleteCOA", "Admin")?AccountHeadId=' + data.Id;
                        var myUrlGet = `editAccountHead(${data.Id})`;
                        var message = `return confirm('Are you sure you want to Remove the AccountHead Information ?')`;

                        var $dropdown = $("<div class='dropdown'>").append(
                            $("<button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'>")
                        ).append(
                            $("<ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1'>").css({
                                'margin-left': '-105px'
                            }).append(function () {
                                return $("<li>").append(
                                    $(`<a onclick=${myUrlGet} class='text-decoration-none text-black ms-3 mt-1'>`).attr("href", "#").html("<i class='bi bi-pencil-square pe-1'></i> <span>Edit</span>  <br />"),
                                    $(`<div class="dropdown-divider m-0"></div>`),
                                    $(`<a class='text-decoration-none text-black ms-3 mt-1'>`).attr("href", `#`)
                                        .html("<i class='bi bi-x-lg pe-1'></i><span class=' mt-2' >Delete</span>")
                                        .click(function () {
                                            setDeleteUrl(data.Id);
                                        }),
                                    $(`<div class="dropdown-divider m-0"></div>`),
                                    $(`<a class='text-decoration-none text-black ms-3 mt-1'>`).attr("href", `#`)
                                        .html("<i class='bi bi-eye-slash pe-1'></i><span>Make inactive</span>")
                                        .click(function () {
                                            setInactiveUrl(data.Id);
                                        }),
                                    // $(`<div class="dropdown-divider m-0"></div>`),
                                    //         $(`<a href='${myUrlGet}' target="_blank" class=" text-decoration-none text-black ms-3 mt-1"><i class="bi bi-printer pe-1"></i> <span>Make inactive</span></a>`)
                                );
                            }));


                        var $iconButton = $(`<a href='#' class="fw-bolder mt-2" >Run Report</a>`).click(function (e) {
                            e.preventDefault();
                            getReport(data.Id, data.type);
                            //alert('checjed');
                        });
                        var $flex = $("<div class='d-flex justify-content-center'></div>").append($iconButton).append($dropdown)
                        var $result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                        return $result.add($flex);
                    }
                }

                // { name: "Currency", title: 'Currency', type: "text" },
            ]
            //Global fields for jsgrid table ends

            //console.log(globalFields[7].name);
            var globalPageSize = 5;
            var showAllPageSize;
            var accType = 'L';
            var IncludingInactive = false;
            var globalIdsForDelete = [];
            var eachGlobalIdForDelete = [];

            for (var i = 0; i < globalFields.length; i++) {
                //console.log(globalFields[i].title);
                Titles.push(globalFields[i].title);
            }
            let titles = '';
            //console.log(data.BankBalance);

            //restore dropwodn funstion starts
            function restoreDropdown() {
                $("#dropdown-titles").empty();
                for (var i = 0; i < globalFields.length; i++) {
                    var title = globalFields[i].title;
                    var name = globalFields[i].name;
                    var visible = true;
                    if (globalFields[i].visible == false) {
                        visible = false;
                    }
                    //console.log(visible);
                    titles = `<li>
                                                    <a class="dropdown-item" href="#">
                                                    <div class="custom-control custom-checkbox" >
                                                    <input type="checkbox" class="custom-control-input title-input" id="${name}" value="${name}">
                                                    <label class="custom-control-label w-100 cursor-pointer" id="${name}" for="${name}">${title}</label>
                                                    </div>
                                                    </a>
                                                    </li>`;

                    $("#dropdown-titles").append(titles);

                    document.querySelector(`${'#' + name}`).addEventListener('click', function () {
                        var checkbox = event.target;
                        var isChecked = checkbox.checked;
                        if (isChecked) {
                            $("#jsFilterGrid").jsGrid("fieldOption", this.value, "visible", true);
                        }
                        else {
                            $("#jsFilterGrid").jsGrid("fieldOption", this.value, "visible", false);
                        }
                    });

                    $(`${'#' + name}`).prop('checked', visible);


                    $('.custom-control-label').on('click', function (e) {
                        e.stopPropagation();
                    });
                    $('#dropdown-titles').on('click', function (e) {
                        e.stopPropagation();
                    });

                    //console.log(data.BankBalance[i].AccName);
                }

                accType = 'L';
                IncludingInactive = false;
            }
            //restore dropwodn funstion ends



            // functions in gear button starts
            document.getElementById("rows").addEventListener("change", function (e) {
                e.stopPropagation();
                e.preventDefault();
                //console.log(this.value);
                globalPageSize = this.value;
                initjsGrid();
            });
            document.getElementById("show-all").addEventListener("click", function (e) {
                e.stopPropagation();
                e.preventDefault();
                globalPageSize = 100;
                //alert(showAllPageSize);
                //filterSeacrhDbFunc();
                initjsGrid();
                $("#rows").prop('selectedIndex', 0);

            });
            document.getElementById("hide-all").addEventListener("click", function (e) {
                e.stopPropagation();
                e.preventDefault();
                globalPageSize = 5;
                /* alert('hide');*/
                initjsGrid();
                $("#rows").prop('selectedIndex', 0);

            });
            document.getElementById("restore").addEventListener("click", function (e) {
                e.stopPropagation();
                e.preventDefault();
                globalPageSize = 5;
                //alert(showAllPageSize);
                //filterSeacrhDbFunc();
                initjsGrid();
                restoreDropdown();
                $('#with-group').prop('checked', false);
                $('#with-inactive').prop('checked', false);
                //$('#rows').value(0);
                $("#rows").prop('selectedIndex', 0);

            });
            document.getElementById("with-group").addEventListener("click", function (e) {
                e.stopPropagation();
                //e.preventDefault();
                accType = "G";
                initjsGrid();
                restoreDropdown();
                //filterSeacrhDbFunc();
                //alert(AccType);
                //alert('With group');

            });
            document.getElementById("with-inactive").addEventListener("click", function (e) {
                e.stopPropagation();
                //e.preventDefault();
                IncludingInactive = true;
                initjsGrid();
                restoreDropdown();
                alert(IncludingInactive);
                //alert('SAS');
            });
            // functions in gear button ends


            //console.log(showAllPageSize);
            //console.log(globalPageSize);


            //Search for jsgrid table starts
            var filterSearchUrl = '@Url.Action("GetCOAList", "Admin")';
            function initjsGrid() {
                var filterSearchDb = {
                    loadData: function (filter) {

                        var d = $.Deferred();
                        $.ajax({
                            type: "GET",
                            async: false,
                            url: filterSearchUrl,
                            //headers: {
                            //    contentType: "application/json; charset=utf-8",
                            //    Authorization: token
                            //},
                            data: { AccType: accType, IncludingInactive: IncludingInactive, searchquery: JSON.stringify(filter) },
                            contentType: "application/json; charset=utf-8",
                            dataType: "json"
                        })
                            .done(function (result) {
                                d.resolve(result);
                                //console.log(result.AccountHeadList);
                                globalData = [...result.AccountHeadList]
                                for (var i = 0; i < globalData.length; i++) {
                                    globalIds.push(globalData[i].Id);
                                }
                            });
                        return d.promise().then(function (q) {

                            //console.log(q);
                            return {

                                data: q.AccountHeadList,
                                itemsCount: parseInt(q.PageInfo.TotalRecordCount)
                            }
                        });


                    }

                }
                //Search for jsgrid table ends

                
                //jsgrid table show functionalities starts
                $("#jsFilterGrid").jsGrid({

                    width: "100%",
                    //height: 'auto',
                    height: 500,
                    filtering: true,
                    autoload: true,
                    selecting: true,
                    pageLoading: true,
                    pageSize: globalPageSize, //5,
                    pageIndex: 1,
                    paging: true,
                    controller: filterSearchDb,
                    pagerFormat: "{prev} {pages} {next}   Results: {pageIndex} - {pageCount} of {itemCount}",
                    pagePrevText: "<",
                    pageNextText: ">",
                    // pageFirstText: "First",
                    //pageLastText: "Last",
                    // pageNavigatorNextText: "...",
                    //pageNavigatorPrevText: "...",
                    fields: globalFields,
                    rowClick: function (args) {
                        $checkbox = $(args.event.currentTarget).find("input[type=checkbox]");
                        if ($(args.event.target).closest("td").index() !== 6 && $(args.event.target).closest("td").index() !== 0) {                                                                                 
                            $("#jsFilterGrid input[type=checkbox]").not($checkbox).prop("checked", false);                         
                            $checkbox.prop("checked", !$checkbox.prop("checked"));

                            // $(".jsgrid-row, .jsgrid-alt-row").removeClass("highlight");
                            // gRow = this.rowByItem(args.item);
                            // gRow.addClass("highlight");                           
                            // selectedRowData = args.item;

                            if ($checkbox.prop("checked")) {
                                // If the checkbox is checked, highlight the row and select the item
                                $(".jsgrid-row, .jsgrid-alt-row").removeClass("highlight");
                                gRow = this.rowByItem(args.item);
                                gRow.addClass("highlight");
                                selectedRowData = args.item;
                                selectItem(args.item);
                            } else {
                                // If the checkbox is unchecked, remove the highlight and deselect the item
                                $(".jsgrid-row, .jsgrid-alt-row").removeClass("highlight");
                                unselectItem(args.item);
                            }

                            // Update selected items array
                            if ($checkbox.prop("checked")) {
                                selectItem(args.item);
                            } else {
                                unselectItem(args.item);
                            }
                        }

                         console.log('Munna',args.item);
                    },                
                    //rowClick: function (args) {
                    //    $checkbox = $(args.event.currentTarget).find("input[type=checkbox]");
                    //    $checkbox.prop("checked", !$checkbox.prop("checked"));

                    //    // Update selected items array
                    //    if ($checkbox.prop("checked")) {
                    //        selectItem(args.item);
                    //    } else {
                    //        unselectItem(args.item);
                    //    }
                    //},

                })

            }
            //jsgrid table show functionalities ends

            function gotoAccoundHead() {
                window.open('@Url.Action("AddAccountHead", "Admin")', '_blank');
            }

            //functions to select/unselect and manage batch delete starts
            var selectedItems = [];

            var selectItem = function (item) {
                selectedItems.push(item);
            };

            var unselectItem = function (item) {
                selectedItems = $.grep(selectedItems, function (i) {               
                    return i !== item;
                });            
            };

            var deleteSelectedItems = function () {
                if (!selectedItems.length || !confirm("Are you sure?"))
                    return;

                deleteClientsFromDb(selectedItems);

                var $grid = $("#jsFilterGrid");
                $grid.jsGrid("option", "pageIndex", 1);
                $grid.jsGrid("loadData");

                selectedItems = [];
                eachGlobalIdForDelete = [];
            };

            var deleteClientsFromDb = function (deletingClients) {
                globalIdsForDelete = [...deletingClients]
                for (var i = 0; i < globalIdsForDelete.length; i++) {
                    eachGlobalIdForDelete.push(globalIdsForDelete[i].Id);
                }

                for (var i = 0; i < eachGlobalIdForDelete.length; i++) {
                    var myUrldelete = '@Url.Action("DeleteCOA", "Admin")?AccountHeadId=' + eachGlobalIdForDelete[i];
                    $.ajax({
                        type: "get",
                        url: myUrldelete,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            if (response.success == "1") {
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-green",
                                });
                            }
                            else if (response.success == "0") {
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-red",
                                });
                            }
                            //initjsGrid();
                            //console.log(response);
                        },
                        error: function (error) {
                            console.error(error);
                        }
                    });
                }
            };
            //functions to select/unselect and manage batch delete starts


            //var deleteClientsFromDb = function (deletingClients) {
            //    globalIdsForDelete = [...deletingClients]
            //    //console.log(globalIdsForDelete);
            //    for (var i = 0; i < globalIdsForDelete.length; i++) {
            //        //console.log(globalIdsForDelete[i].Id);
            //        eachGlobalIdForDelete.push(globalIdsForDelete[i].Id);
            //    }
            //    console.log(eachGlobalIdForDelete);
            //};

            var selectedRow;

            $("#jsFilterGrid").on("click", ".jsgrid-row", function () {
                if (selectedRow) {
                    $(selectedRow).removeClass("selected");
                }
                selectedRow = this;
                $(selectedRow).addClass("selected");
            });

            //for (var i = 0; i < globalIdsForDelete.length; i++) {
            //    //console.log(globalIdsForDelete[i].Id);
            //    eachGlobalIdForDelete.push(globalIdsForDelete[i].Id);
            //}
            //console.log(eachGlobalIdForDelete);

            @* to save data from first modal *@
                $(document).ready(function () {
                    //filterSeacrhDbFunc();
                    initjsGrid();
                    restoreDropdown();
                    $('#importBtn').click(function (e) {
                        e.stopPropagation();
                        $($(this).data('target')).toggle();
                    });

                    $('#exportBtn').click(function (e) {
                        e.stopPropagation();
                        $($(this).data('target')).toggle();
                    });

                    function handleInput() {
                        $("#debitCreditValidation").hide();
                    }

                    $("#debit, #credit").on("input", handleInput);

                    $("#accountSaveBtn").click(function () {

                        var debitValue = $("#debit").val();
                        var creditValue = $("#credit").val();

                        if (debitValue > 0 && creditValue > 0) {                            
                            $("#debitCreditValidation").show();
                        } else if (debitValue >= 0 || creditValue >= 0) {
                            $("#debitCreditValidation").hide();
                            Saveproductinfo();
                            setTimeout(function () { $("#offcanvasRight").offcanvas('hide'); }, 1400);
                        }
                    });
                    $('.offcanvas').on('shown.bs.offcanvas', function () {
                        $(".account-name-input").focus();
                    });

                    function Saveproductinfo() {
                        //$("#AccId").val(0);
                        var AccountId = $("#AccId").val();
                        var AccountName = $("#accountName").val();
                        //var AccountCode = $("#accountcode").val();
                        var CategoryModalLabel = $("#OpenCategoryListModalValue").val();
                        var ParentHeadModalLabel = $("#OpenParentHeadListModalValue").val();
                        var AccountCode = $("#accountcode").val();
                        var AccTypeValue = $("#AccTypes").val();
                        var Currency = $("#currency").val();
                        var Debit = $("#debit").val();
                        var Credit = $("#credit").val();
                        console.log(AccTypeValue);
                        var Description = $("#description").val();


                        var ComId = '@HttpContextAccessor.HttpContext.Session.GetInt32("ComId").ToString()';
                        var UserId = '@HttpContextAccessor.HttpContext.Session.GetInt32("UserId").ToString()';

                        var AccountHead = {
                            ComId: ComId,
                            LuserId: UserId,
                            Id: AccountId,
                            AccName: AccountName,
                            AccountCategoryId: CategoryModalLabel,
                            ParentId: ParentHeadModalLabel,
                            AccCode: AccountCode,
                            AccType: AccTypeValue,
                            CountryId: Currency,
                            OpDebit: Debit,
                            OpCredit: Credit,
                            Description: Description

                        }
                        console.log(AccountHead);
                        //alert(`${Code} ${Name} ${CostPrice} ${Price}`);

                        //console.log(AccountHead);
                        $.ajax({
                            url: '@Url.Action("AddAccountHeadABC", "Admin")',
                            data: { model: AccountHead }, //use id here
                            //data: JSON.stringify(purchasesmain),
                            type: 'POST',
                            async: true,
                            //contentType: 'application/json;',
                            dataType: 'json',
                            success: function (result) {
                                if (result.success == "1") {
                                    toastr.success(result.message, "", {
                                        "toastClass": "toast-green",
                                    });
                                    $('#exampleModal').modal('hide');
                                    /*  $("#OpenCategoryListModalValue").val("");*/
                                    /* $('#OpenCategoryListModal').empty();*/
                                    //$('#tbllist').DataTable().destroy();
                                    //refreshTable();
                                    initjsGrid();
                                    clearModalData();
                                }

                            },
                            error: function () {
                                toastr.error('Unable to Save');
                                //alert('Unable to Save');
                            }
                        });
                    }
                });

            //$(document).click(function () {
            //    $('.dropdown-menu').hide();
            //});


            let parentHeadWithCategoryOffcanvas = '';
            function GroupHeadConfiguration(AccId) {
                var SelectedCategoryValue = document.querySelector('input[name="exampleRadios"]:checked').value;
                //document.getElementById("OpenParentHeadListModalValue").value = selectedOptionValue;
                /* alert(SelectedCategoryValue);*/
                //alert($("#Customer").val());
                // tblaccountList.rows().remove().draw(false);
                var MyAppUrlSettings = {
                    MyUsefulUrl: '@Url.Action("ParentListByCategoryId", "Admin")'
                }
                //alert('test');
                $.ajax({
                    type: 'POST',
                    url: MyAppUrlSettings.MyUsefulUrl,
                    dataType: 'json',
                    data: { CategoryId: SelectedCategoryValue }, //, saleid: $("#Id").val()
                    success: function (result) {
                        console.log(result);
                        //console.log(result.ParentHeadList[0].AccName);
                        //console.log(result.ParentHeadList[0].AccCode);
                        //console.log(result.ParentHeadList[0].Id);
                        $("#parent-list").html('');
                        for (var m = 0; m < result.ParentHeadList.length; m++) {
                            console.log(result.ParentHeadList[m].AccName);
                            var parentHeadList = `<div id="categoryListItem" class="form-check text-start ms-3 mt-2">
                                                                                        <input class="form-check-input radio-style" type="radio" name="exampleParentHeadRadios" id="exampleParentHeadRadios(${m})" value="${result.ParentHeadList[m].Id}"/>
                                                                                        <div class="categorylis">
                                                                                            <label class="form-check-label label-style list-text cursor-pointer  ms-3" for="exampleParentHeadRadios(${m})">
                                                                                               ${result.ParentHeadList[m].AccName}
                                                                                                <br />
                                                                                                <span id="span-hide" class="list-item-span">Money your business earns</span>
                                                                                            </label>
                                                                                        </div>
                                                                                    </div>`
                            $("#parent-list").append(parentHeadList)

                        }

                    },
                    error: function (ex) {
                        alert('Failed.' + ex);
                    }
                });
                return false;
            };

            function ParentHeadConfiguration(AccId) {
                var selectedOptionValue = document.querySelector('input[name="exampleParentHeadRadios"]:checked').value;
                //document.getElementById("OpenParentHeadListModalValue").value = selectedOptionValue;
                /*  alert(selectedOptionValue);*/
                //alert($("#Customer").val());
                // tblaccountList.rows().remove().draw(false);
                var MyAppUrlSettings = {
                    MyUsefulUrl: '@Url.Action("ParentAccountInfo", "Admin")'
                }
                //alert('test');
                $.ajax({
                    type: 'POST',
                    url: MyAppUrlSettings.MyUsefulUrl,
                    dataType: 'json',
                    data: { id: selectedOptionValue }, //, saleid: $("#Id").val()
                    success: function (result) {
                        //console.log(result);
                        //console.log(result.AccountHeadinfo);
                        //console.log(result.AccountHeadList);
                        //var AccId = $("#Id").val();
                        //if (AccId > 0)
                        {
                            $("#accountcode").val(result.AccountHeadinfo.AccCode);
                            //$("#AccountCategoryId").val(result.AccountHeadinfo.AccountCategoryId);

                        }


                        //$.each(result.AccountHeadList, function (i, v) {


                        //    //$('#tblAccountList').dataTable().fnAddData([v.AccName, v.AccCode, v.NumericNumber]);

                        //});

                        //if (Customerss.CreditLimit > 0)
                        //{
                        //    $('#CreditLimit').val(Customerss.CreditLimit);
                        //    $('#PrevDue').val(Customerss.PrevDue).change();
                        //   var totalcollection = $('#TotalCollectionAmount').text();
                        //   $('#TotalDue').val(Customerss.CreditLimit - totalcollection).change();

                        ////alert($('#PrevDue').val());
                        //}



                    },
                    error: function (ex) {
                        alert('Failed.' + ex);
                    }
                });
                return false;
            };


            //To open one modal to another
            $(document).ready(function () {
                //$("#OpenCategoryListModal").click(function () {
                //    //alert('aa');
                //    $("#CategoryModal").modal("show");
                //});
                $("#OpenCategoryListModal").click(function () {
                    //alert('aa');
                    // GroupHeadConfiguration();
                    $("#CategoryOffcanvas").offcanvas("show");
                });
            });
            //To open one modal to parent head
            $(document).ready(function () {
                //$("#OpenParentHeadListModal").click(function () {
                //    //alert('aa');
                //    $("#ParentHeadModal").modal("show");
                //});
                $("#OpenParentHeadListModal").click(function () {
                    //alert('aa');
                    /$("#ParentHeadOffcanvas").offcanvas("show");/
                    $("#CategoryOffcanvas").offcanvas("show");
                });
            });
            //To open one modal to categorylist modal more
            //$(document).ready(function () {
            //    $("#categoryListItem").click(function () {
            //        //alert('aa');
            //        $("#CategoryModalMore").modal("show");
            //    });
            //});

            //To show categorylist data in main modal
            var categorySelectedOptionText = '';
            var categorySelectedOptionValue = '';
            document.getElementById("saveChanges").addEventListener("click", function () {
                var selectedOption = document.querySelector('input[name="exampleRadios"]:checked');
                categorySelectedOptionValue = document.querySelector('input[name="exampleRadios"]:checked').value;
                categorySelectedOptionText = selectedOption.nextElementSibling.textContent;
                //var selectedOptionValue = document.querySelector('input[name="exampleRadios"]:checked').value;
                //var selectedOptionText = selectedOption.nextElementSibling.textContent;
                //document.getElementById("OpenCategoryListModal").innerHTML = selectedOptionText;
                //document.getElementById("OpenCategoryListModalValue").value = selectedOptionValue;
                /alert(selectedOptionValue);/
                $('#CategoryOffcanvas').offcanvas('hide');
                $("#ParentHeadOffcanvas").offcanvas("show");
                GroupHeadConfiguration();
            });
            //document.getElementById("saveChanges").addEventListener("click", function () {
            //    var selectedOption = document.querySelector('input[name="exampleRadios"]:checked');
            //    var selectedOptionValue = document.querySelector('input[name="exampleRadios"]:checked').value;
            //    var selectedOptionText = selectedOption.nextElementSibling.textContent;
            //    document.getElementById("OpenCategoryListModal").innerHTML = selectedOptionText;
            //    document.getElementById("OpenCategoryListModalValue").value = selectedOptionValue;
            //    $('#CategoryModal').modal('hide');
            //});

            //To show parenthead list data in main modal
            document.getElementById("ParentHeadSaveChanges").addEventListener("click", function () {
                var selectedOption = document.querySelector('input[name="exampleParentHeadRadios"]:checked');
                var selectedOptionValue = document.querySelector('input[name="exampleParentHeadRadios"]:checked').value;
                var selectedOptionText = selectedOption.nextElementSibling.textContent;
                var selectedOptionCategoryId = document.querySelector('input[name="exampleParentHeadRadios"]:checked').data;
                /alert(selectedOptionCategoryId);/
                document.getElementById("OpenParentHeadListModal").innerHTML = selectedOptionText;
                document.getElementById("OpenParentHeadListModalValue").value = selectedOptionValue;
                document.getElementById("accountcode").value = selectedOptionText;
                document.getElementById("OpenCategoryListModal").innerHTML = categorySelectedOptionText;
                document.getElementById("OpenCategoryListModalValue").value = categorySelectedOptionValue;
                $('#ParentHeadOffcanvas').offcanvas('hide');
                $("#OpenCategoryListModal").toggleClass("d-none");
                ParentHeadConfiguration();
            });
            //document.getElementById("ParentHeadSaveChanges").addEventListener("click", function () {
            //    var selectedOption = document.querySelector('input[name="exampleParentHeadRadios"]:checked');
            //    var selectedOptionValue = document.querySelector('input[name="exampleParentHeadRadios"]:checked').value;
            //    var selectedOptionText = selectedOption.nextElementSibling.textContent;
            //    document.getElementById("OpenParentHeadListModal").innerHTML = selectedOptionText;
            //    document.getElementById("OpenParentHeadListModalValue").value = selectedOptionValue;
            //    document.getElementById("accountcode").value = selectedOptionText;
            //    $('#ParentHeadModal').modal('hide');
            //    ParentHeadConfiguration();
            //});

            //To clear data after closing edit modal
            function clearModalData() {
                $("#accountSaveBtn").text('Save');
                $("#AccId").val(0);
                $('#accountName').val('');
                $(this).find("input[type=text], input[type=hidden], textarea").val("");
                $("input[type=radio]").prop("checked", false);
                $("#CategoryModal input[type=text]").val("");
                $("#ParentHeadModal input[type=text]").val("");
                $("#OpenCategoryListModal").text("");
                $("#OpenCategoryListModalValue").val("");
                $("#OpenParentHeadListModal").text("Select Base / Parent Head");
                $("#OpenParentHeadListModalValue").val("");
                $('#OpenCategoryListModalValue').val('');
                $('#OpenParentHeadListModalValue').val('');
                $('#accountcode').val('');
                $('#AccType').val('');
                $('#currency').val('');
                //$('#currency').val('');
                $('#debit').val(0);
                $('#credit').val(0);
                $('#description').val('');
                $('.parent-head-search').val('');
                $("#OpenCategoryListModal").removeClass("d-block");
                getCurrencyDropdown();
            }

            //code to get Currency dropdown
            function getCurrencyDropdown() {
                $.ajax({
                    //async: false,
                    url: '@Url.Action("GetCurrencyDropdown", "Admin")',//url: "https://www.pqstec.com/InvoiceApps/values/GetCustomerDropdown",
                    success: function (data) {
                        const select = document.querySelector('#currency');
                        for (var i = 0; i < data.length; i++) {
                            const option = document.createElement('option');
                            option.value = data[i].Value;
                            option.text = data[i].Text
                            select.appendChild(option);
                        }
                    }
                });

            }
            getCurrencyDropdown();
            document.querySelector('#search-list-1').addEventListener('keyup', function () {
                let value = this.value.toLowerCase().trim();
                let formchecks = document.querySelectorAll('#list .form-check');
                formchecks.forEach(function (formcheck) {
                    let formcheckText = formcheck.textContent.toLowerCase().trim();
                    if (formcheckText.indexOf(value) !== -1) {
                        formcheck.style.display = 'block';
                    } else {
                        formcheck.style.display = 'none';
                    }
                });
            });
            document.querySelector('#search-list-2').addEventListener('keyup', function () {
                let value = this.value.toLowerCase().trim();
                let formchecks = document.querySelectorAll('#parent-list .form-check');
                formchecks.forEach(function (formcheck) {
                    let formcheckText = formcheck.textContent.toLowerCase().trim();
                    if (formcheckText.indexOf(value) !== -1) {
                        formcheck.style.display = 'block';
                    } else {
                        formcheck.style.display = 'none';
                    }
                });
            });
            var nameTaker = [];
            var jsonKey = [];
            $('#exportPDF').click(function () {
                alert('PDF exportation is under construction!! \nthank you!!');

            });
            //$('#exportUl').click(function () {



            //    for (var i = 0; i < globalFields.length; i++) {

            //        if (globalFields[i].name != 'button' && globalFields[i].visible != false) {
            //            nameTaker.push(globalFields[i]);

            //        }
            //    }

            //    var parentJson = $('#jsFilterGrid').jsGrid('option', 'data');
            //    if (parentJson == '')
            //        return;




            //    var csv = convertJsonToCsvWithoutchild(parentJson);


            //    nameTaker = [];
            //    jsonKey = [];
            //    var blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
            //    var link = document.createElement("a");
            //    link.href = URL.createObjectURL(blob);
            //    link.download = "data.csv";
            //    link.click();
            //});

            //function convertJsonToCsvWithoutchild(jsonData) {


            //    var csv = '';
            //    var keys = Object.keys(jsonData[0]);
            //    for (var k = 0; k < keys.length; k++) {
            //        for (var i = 0; i < nameTaker.length; i++) {

            //            if (nameTaker[i].name == keys[k]) {
            //                jsonKey[i] = keys[k];

            //            }
            //        }
            //    }


            //    csv += jsonKey.join(',') + '\n';
            //    jsonData.forEach(function (item) {
            //        csv += jsonKey.map(function (key) {

            //            for (var i = 0; i < nameTaker.length; i++) {
            //                if (nameTaker[i].name == key) {
            //                    return item[key];
            //                }
            //            }

            //        }).join(',') + '\n';

            //    });
            //    return csv;
            //}
            function setDeleteUrl(data) {
                var myUrldelete = '@Url.Action("DeleteCOA", "Admin")';
                alert('Are you sure want to delete?');
                $.ajax({
                    type: "get",
                    data: { AccountHeadId: data },
                    url: myUrldelete,
                    success: function (response) {
                        if (response.success == "1") {
                            toastr.success(response.msg, "", {
                                "toastClass": "toast-green",
                            });
                            initjsGrid();
                        }
                        else if (response.success == "0") {
                            //alert()
                            toastr.success(response.msg, "", {
                                "toastClass": "toast-red",
                            });
                            initjsGrid();
                        }
                    }
                });
            };


            function setInactiveUrl(data) {
                var myUrlInactive = '@Url.Action("InactiveCOA", "Admin")';
                alert('Are you sure want to Inactive?');
                $.ajax({
                    type: "get",
                    data: { AccountHeadId: data },
                    url: myUrlInactive,
                    success: function (response) {
                        if (response.success == "1") {
                            toastr.success(response.msg, "", {
                                "toastClass": "toast-green",
                            });
                            initjsGrid();
                        }
                        else if (response.success == "0") {
                            //alert()
                            toastr.success(response.msg, "", {
                                "toastClass": "toast-red",
                            });
                            initjsGrid();
                        }
                    }
                });
            };


            //To load get data in main modal
            function editAccountHead(data) {
                var myUrlGet = '@Url.Action("GetAccountHead", "Admin")?AccountHeadId=' + data;
                $.ajax({
                    type: "GET",
                    url: myUrlGet,
                    success: function (result) {
                        console.log(result);
                        console.log(result.data.AccountCategoryId);
                        if (result.success == "1") {
                            //alert('get accounthead modal')
                            $("#offcanvasRight").offcanvas("show");
                            $("#accountSaveBtn").text('Update').addClass("w-25");
                            $("#CategoryModal input[value='" + result.data.AccountCategoryId + "']").prop("checked", true);
                            $("#ParentHeadModal input[value='" + result.data.ParentId + "']").prop("checked", true);
                            $("#AccId").val(result.data.Id);
                            $("#accountName").val(result.data.AccName);
                            $("#OpenCategoryListModal").text(result.data.CategoryName);
                            $("#OpenCategoryListModalValue").val(result.data.AccountCategoryId);
                            $("#OpenParentHeadListModal").text(result.data.parentName);
                            $("#OpenParentHeadListModalValue").val(result.data.ParentId);
                            $("#accountcode").val(result.data.AccCode);
                            $("#AccType").val(result.data.AccType);
                            $("#currency").val(result.data.CountryId);
                            $("#debit").val(result.data.OpDebit);
                            $("#credit").val(result.data.OpCredit);
                            $("#description").val(result.data.Description);
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert("Error: " + xhr.status);
                    }
                });
            }
            function getReport(Id, type) {
                var isViewPageReport = 1;
                var btnvalue = "PrintLedger";
                //var type = "Account";
                var reporttype = 'pdf';
                var FromDate = '1jan2020';
                var ToDate = '31dec2022';
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("SubsidiaryLedger", "Admin")',
                    dataType: 'json',
                    async: true,
                    data: { rptFormat: reporttype, action: btnvalue, Id: Id, Type: type, FromDate: FromDate, ToDate: ToDate, isViewPageReport: isViewPageReport },
                    success: function (response) {
                        window.open(response.Url, '_blank')

                    },
                    error: function (ex) {
                        alert('Failed.' + ex);
                    }

                });

            }

            function ReportPrint(btnvalue) {

                var peopleList = $('#tbllist').DataTable();
                var rows = peopleList.rows('.selected').data();

                var reporttype = $("input[name=RptType]:checked").val();
                var FromDate = $(".FromDate").val();
                var ToDate = $(".ToDate").val();

                // alert(FromDate);

                var productidlist = [];
                var pid = 0;
                var type = "Account";


                if (rows.length > 0) {
                    pid = rows[0]["Id"];
                    type = rows[0]["AccountCategory"];

                }
                //console.log(pid);
                //alert(WarehouseId);
                //alert(btnvalue);
                var isViewPageReport = 1;

                if (btnvalue == "PrintLedger") {
                    isViewPageReport = 0;

                    if ((pid == null) || (pid == "")) {
                        toastr.error("Please Select Account Head from the List.");
                        return true;
                    }
                    //alert('Wait');
                }
            }

            var downloadBtn = document.getElementById("exportUl");
            downloadBtn.addEventListener("click", function () {
                // Get table header
                var tableHeader = [];
                //console.log('ss', tableHeader);
                $('#jsFilterGrid th').each(function (colIndex, col) {
                    var columnText = col.textContent.trim();
                    if (columnText !== 'Action' && columnText !== "") {
                        tableHeader.push(columnText);
                    }
                });
                // Get table data
                var tableData = [];

                $('#jsFilterGrid .jsgrid-grid-body tr').each(function (rowIndex, row) {
                    var rowData = [];
                    $(row).find('.jsgrid-cell').each(function (colIndex, col) {
                        console.log(col);
                        var columnText = col.textContent.trim();
                        if (columnText != "Run Report Edit  Delete" && columnText != "") {
                            rowData.push(columnText);

                        }
                    });
                    tableData.push(rowData);
                });

                // Add header to table data
                tableData.unshift(tableHeader);

                // Create workbook and sheet
                var workbook = XLSX.utils.book_new();
                var worksheet = XLSX.utils.aoa_to_sheet(tableData);

                // Add sheet to workbook and download file
                XLSX.utils.book_append_sheet(workbook, worksheet, "Sheet1");
                XLSX.writeFile(workbook, "data.xlsx");
            });

            function accountsRefresh() {
                $.ajax({
                    url: '@Url.Action("AccRefresh", "Admin")',
                    type: 'GET',
                    success: function (response) {
                        if (response.success) {
                            // Display toast message
                            toastr.success(response.message, "", {
                                "toastClass": "toast-green",

                            });

                        } else {
                            // Display toast message with red color
                            toastr.error(response.error, "", {
                                "toastClass": "toast-red",
                            });
                        }
                        //setTimeout(function () {
                        //    window.location.href = '@Url.Action("AccountHeadList", "Admin")';
                        //}, 2000);
                    },
                    error: function (xhr, status, error) {
                        // Handle error
                        console.error(error);
                    }
                });
            }
           
            
            function ReportPrintAccount(btnvalue) {
            // var peopleList = $('#tbllist').DataTable();
            // var rows = peopleList.rows('.selected').data();              
                   
                var selectedData = selectedRowData;
                var Id = selectedData.Id;


                var reporttype = $("input[name=RptType]:checked").val();
                var FromDate = $(".FromDate").val();
                var ToDate = $(".ToDate").val();
         

                var productidlist = [];
                var pid = Id;
                var type = "Account";              

                // if (rows.length > 0) {
                //     pid = rows[0]["Id"];
                //     type = rows[0]["AccountCategory"];

                // }

                   if (Id.length > 0) {
                       pid = Id;
                    }

                //console.log(pid);
                //alert(WarehouseId);
                //alert(btnvalue);
                 var isViewPageReport = 1;
                var IsPosted = 1;


                if (btnvalue == "PrintLedger" || btnvalue == "ViewLedger" || btnvalue == "ViewLedgerNotPosted") {


                    if (btnvalue == "PrintLedger")
                    {
                        isViewPageReport = 0;

                    }
                    else if (btnvalue == "ViewLedgerNotPosted")
                    {
                        IsPosted = 0;
                    }


                    if ((pid == null) || (pid == ""))
                    {
                        toastr.error("Please Select Account Head from the List.");
                        return true;
                    }
                    //alert('Wait');
                }


                
            $.ajax({
                type: 'POST',
                url: '@Url.Action("SubsidiaryLedger", "Admin")',
                dataType: 'json',
                async: true,
                    data: { rptFormat: reporttype, action: btnvalue, Id: pid, Type: type, FromDate: FromDate, ToDate: ToDate, isViewPageReport: isViewPageReport, IsPosted: IsPosted },
                success: function (response) {

                    //setTimeout(function () {
                    //    window.open(response.Url, '_blank')
                    //}, 3000);

                    window.open(response.Url, '_blank')

                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }

            });               

            }




                  CurrentDate();

        $(".FromDate").datepicker({

            dateFormat: "dd-M-y",
            changeMonth: true,
            changeYear: true

        });
        $(".ToDate").datepicker({

            dateFormat: "dd-M-y",
            changeMonth: true,
            changeYear: true

        });

        function CurrentDate() {
            var date = new Date();
            var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
                "Aug", "Sep", "Oct", "Nov", "Dec"];
            var val = date.getDate() + "-" + months[date.getMonth()] + "-" + date.getFullYear().toString().substr(-2);


            if ($(".FromDate").val() == '') {
                $(".FromDate").val(val);
            }
            if ($(".ToDate").val() == '') {
                $(".ToDate").val(val);
            }


        }


        </script>
    }
