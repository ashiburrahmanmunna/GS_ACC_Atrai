@*@model IEnumerable<Atrai.Model.Core.Entity.EmployeeModel>*@
@{
    ViewData["Title"] = "Employee List";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}
<style>
    .table > :not(:first-child) {
        border-top: 0;
    }

    #treegridTable th {
        text-align: center;
        font-weight: 600;
        border: 1px solid #BABEC5;
        /*font-size: 14px;*/
    }

    .table > tbody > tr > td {
        line-height: 15px !important;
        border: 1px solid #c9c9c9;
    }


    .table tbody tr td {
        /* border: 1px solid #c9c9c9;*/
        font: 14px;
        color: #8A8A8A;
        line-height: 15px;
    }
    /*    .table>:not(caption)>*>* {

                     border-bottom-width: 0px;

                }*/
    .text-red {
        color: #FF0000 !important;
    }

    #body td:not(:first-child) {
        text-align: center;
    }

    .root-node {
        font-weight: 500;
    }

    /*   .tabulator-table .tabulator-row {
        background-color: white;
    } */

    .upper-form-style {
        background: #e9ecef6b;
        /*padding-top: 62px*/
    }

    .report-text-style {
        color: #0000ce;
    }

    .company-and-other-text-style {
        margin-top: 40px;
    }

    .customize-btn {
        background: #e9ecef6b;
        border: 1px solid black;
    }

    .customize-btn-another {
        background: #2CA01C;
        border: 1px solid black;
        border-radius: 20px;
        color: #FFFFFF;
        border: 1px solid #2CA01C;
    }

        .customize-btn-another:hover {
            background: #2CA01C;
            border: 1px solid black;
            border-radius: 20px;
            color: #FFFFFF;
            border: 1px solid #2CA01C;
        }

    .customize-btn:hover {
        background: #e9ecef6b;
        border: 1px solid black;
    }

    .customization-btn {
        background: #2CA01C;
        color: white;
        /*border: 1px solid black;*/
        border-radius: 20px;
    }

        .customization-btn:hover {
            background: #235d1b;
            color: white;
            border-radius: 20px;
        }

    .dropdown-button-style {
        border: 1px solid #ced4da;
        background: white;
    }

        .dropdown-button-style:hover {
            border: 1px solid #ced4da;
            background: white;
        }

    .gear-dropdown.show {
        width: 360px;
    }

    .modal-dialog {
        max-width: 90%;
        margin: 2rem auto;
    }

    .report-print-setting-style {
        background: #e9ecef6b;
    }

    .total-accname {
        border-bottom: 5px double black !important;
    }

    #loader {
        position: fixed;
        left: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        z-index: 9999;
        background: url('/assets/loading-load.gif') 50% 50% no-repeat rgb(249, 249, 249);
        opacity: .6;
    }

    .tabulator {
        border: none;
    }

    .tabulator-col .tabulator-col-title {
        text-align: center;
    }

    .tabulator-tableholder {
        background-color: white;
    }

    .tabulator[tabulator-layout=fitDataTable] {
        display: inherit;
    }

    .tabulator .tabulator-header .tabulator-col .tabulator-col-content {
        margin-top: 7px;
    }

    .tabulator .tabulator-header .tabulator-col, .tabulator .tabulator-header {
        background-color: white;
        border-bottom: 1px solid #aaaaaa38;
        border-right: 1px solid #aaaaaa38;
    }

    .tabulator-row .tabulator-cell.tabulator-frozen.tabulator-frozen-left {
        border-right: 2px solid #aaaaaa38;
    }

    .tabulator-row .tabulator-cell {
        border-right: none;
        border-left: none;
        padding-left: 10px;
        border: 1px solid #aaaaaa29;
    }

    .tabulator-cell {
        padding-top: 10px;
        padding-bottom: 10px;
        /*margin-top: 27px;*/
    }

    .tabulator .tabulator-row .active-cell {
        overflow: visible;
        /* Add any other styles you need for the active cell */
    }

    .tabulator-row {
        /*   border: 1px solid #aaaaaa38;*/
        border-left: none;
        border-right: none;
    }

    input[type="checkbox"] {
        width: 20px; /* Set the width */
        height: 20px; /* Set the height */
    }

    .nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active {
        border-top-color: transparent !important;
        border-left-color: transparent !important;
        border-right-color: transparent !important;
        border-bottom: 4px solid green;
    }

        .nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active:hover {
            background-color: #F8F8F8;
            border-top-color: transparent !important;
            border-left-color: transparent !important;
            border-right-color: transparent !important;
        }

    .nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link:hover {
        background-color: #F8F8F8;
        border-top-color: transparent !important;
        border-left-color: transparent !important;
        border-right-color: transparent !important;
    }

    .customize-btnew {
        background: transparent;
        border: 1px solid black;
        border-radius: 20px;
    }

        .customize-btnew:hover {
            background: #ffffff;
            border: 1px solid black;
            color: black;
            border-radius: 20px;
        }

    .tabulator-row .tabulator-cell.tabulator-editing {
        border: 1px solid #404c5d;
        outline: none;
        padding: 0;
    }

    .filter-dropdown > .filter-dropdown-class.show {
        width: 580px;
    }

    p {
        margin: 1em 0;
    }

    .button {
        -webkit-tap-highlight-color: rgba(0,0,0,0);
        position: relative;
        background: #aa0000;
        padding: 10px 15px;
        color: white;
        box-shadow: 0 2px black;
        text-decoration: none;
        border-radius: 5px;
        /*text-shadow: 0 1px 1px black;*/
    }

        .button:hover {
            top: -2px;
            box-shadow: 0 7px #000000a3;
        }

        .button:active {
            top: 1px;
            box-shadow: 0 7px #000000a3;
        }


    .tabulator .tabulator-footer .tabulator-paginator .tabulator-page:hover {
        background-color: deepskyblue;
    }

    .tabulator .tabulator-footer {
        background-color: #fff;
        color: black;
    }

        .tabulator .tabulator-footer .tabulator-calcs-holder .tabulator-row {
            background: white !important;
        }




    .tabulator-row:nth-child(even) {
        background-color: white;
    }

    .separator {
        display: flex;
        align-items: center;
        text-align: center;
        color: #999;
        font-size: 12px;
    }

        .separator::before,
        .separator::after {
            content: '';
            flex: 1;
            border-bottom: 1px solid #999;
        }

        .separator:not(:empty)::before {
            margin-right: .25em;
        }

        .separator:not(:empty)::after {
            margin-left: .25em;
        }
</style>
<div class="page-wrapper">
    <div class="container-fluid">
        <!-- Start Page Content -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row py-3" style="background: #e9ecef6b;">
                            <div class="col-lg">
                                <p class="fs-4 fw-bold">Employee List</p>
                            </div>
                            <div class="col-lg">
                                <div class="float-end d-flex">
                                    @Html.ActionLink("Create Employee", "AddEmployee", null, null, new { @class = "btn btn-success fw-bold ms-3 h-100 radius-30", @id = "btnBack" })
                                    <div class="btn-group ms-2" role="group" aria-label="Button group with nested dropdown">
                                        <a class="btn btn-primary fw-bold">
                                            <i class="bi bi-eye"></i> View report
                                        </a>
                                        <div class="btn-group" role="group">
                                            <button id="btnGroupDrop1" type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false"></button>
                                            <ul class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                                                <li><a class="dropdown-item" href="#"><i class="bi bi-card-list"></i> Employee list</a></li>
                                                <li>
                                                    <a href="@Url.Action("EmployeeBalanceViewReport", "Admin")" class="dropdown-item">
                                                        <i class="bi bi-cash-coin"></i> All employee balance
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>
                                        @*<button type="button" class="btn btn-success fw-bold"><i class="bi bi-eye"></i>View report</button>*@

                                    </div>
                                </div>
                            </div>
                        </div>

                        <div>
                            <input type="text" class="textbox search_box ms-2" id="searchInput" name="keywords" autocomplete="off" placeholder="Search" style="width: 350px; border: 1px solid #8080807d; padding: 7px;border-radius: 30px;" />

                            <div title="Settings" class="dropdown1 mt-3 custom-grid" style="display:inline-block;">
                                <a href="#" id="print-table" class="text-decoration-none text-black ms-3">
                                    <i class="bi bi-printer fs-5"></i>
                                </a>
                                <a href="#" id="download-xlsx" class="text-decoration-none text-black ms-2">
                                    <i class="bi bi-file-earmark-excel fs-5"></i>
                                </a>
                                <a href="#" class="text-decoration-none text-black ms-2" id="dropdownMenuButton1" data-bs-toggle="dropdown"
                                   aria-expanded="false">
                                    <i class="bi bi-gear fs-5"></i>
                                </a>
                                <div class="dropdown-menu gear-dropdown" aria-labelledby="dropdownMenuButton-expense" style="width: 500px">
                                    <div class="row p-4 main-dropdown-size" style="overflow:hidden;">
                                        <div class="col">
                                            <span class="fw-bold ms-3">Columns</span>
                                            <hr class="m-0 ms-3 w-sm-50 " />
                                            <ul class="list-unstyled mt-3">
                                                <li class="d-flex">
                                                    <div id="expenseColumnList" class="custom-grid">
                                                    </div>
                                                    <div id="expenseColumnListTwo" class="custom-grid">
                                                    </div>
                                                </li>
                                            </ul>

                                        </div>

                                        <div class="ms-3">
                                            <label>Rows</label> <br />
                                            <select name="rows" id="expense-rows" class="cursor-pointer" style="padding: 10px 0 10px 5px; width: 80px;">
                                                <option value="0" disabled selected>Rows</option>
                                                <option value="5" selected>5</option>
                                                <option value="10">10</option>
                                                <option value="20">20</option>
                                                <option value="50">50</option>
                                                <option value="100">100</option>
                                                <option value="1000">1000</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>


                            </div>
                        </div>

                        <div id="department-table"></div>

                    </div>
                </div>

            </div>
        </div>
        <!-- End PAge Content -->
    </div>
</div>



@section scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tabulator/5.3.0/js/tabulator.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


    @*scripts for pdf generation*@
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.8.0/html2pdf.bundle.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.29/jspdf.plugin.autotable.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tabulator/5.3.0/js/tabulator.min.js"></script>
    <script src="https://unpkg.com/xlsx/dist/xlsx.full.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script type="text/javascript">
        var DepartmanentListTable;

        function getDepartmentList() {
        var DepartmanentApiUrl = '@Url.Action("GetEmployetListAll", "Association")';
 DepartmanentListTable = new Tabulator("#department-table", {
       // data: dataTableFilter,
        dataTree: true,
        dataTreeStartExpanded: true ,
        dataTreeChildField: "children",
        layout: "fitColumns",
        height: "350px",
        selectable:1,
        pagination: true,
        paginationMode: "remote",        
        paginationSize: 5,
        paginationInitialPage: 1,
        paginationSizeSelector: [5, 10, 25, 50, 100, true],
        paginationCounter: "rows",
        ajaxURL: DepartmanentApiUrl,
        ajaxConfig: "get",
        ajaxContentType: "json",

            ajaxResponse: function (url, params, response) {
                DepartmanentListTable.setMaxPage(response.last_page);
           // //console.log("response.last_page", response.last_page);

            dataLoadExpense = response.data;
            console.log("Department table list:", dataLoadExpense);

            return {

                data: dataLoadExpense,
                last_page: response.last_page,

            };
        },

        columns: [
            { title: "SLNo", headerHozAlign: "center", field: "SLNo", vertAlign: "middle", hozAlign: "center",visible: false },
            { title: "CODE", headerHozAlign: "center", field: "EmployeeCode", vertAlign: "middle", hozAlign: "center", },
            { title: "CARD/FINGER ID", headerHozAlign: "center", field: "FingerId", vertAlign: "middle", hozAlign: "center",visible: false },
            { title: "EMPLOYEE NAME", headerHozAlign: "center", field: "EmployeeName", vertAlign: "middle", hozAlign: "center", },
            { title: "DESIGNATION", headerHozAlign: "center", field: "DesigName", vertAlign: "middle", hozAlign: "center", },
            { title: "DEPARTMENT", headerHozAlign: "center", field: "DeptName", vertAlign: "middle", hozAlign: "center", },
            { title: "SHIFT", headerHozAlign: "center", field: "ShiftName", vertAlign: "middle", hozAlign: "center",visible: false },
            { title: "SECTION", headerHozAlign: "center", field: "SectName", vertAlign: "middle", hozAlign: "center", },
            { title: "EMPLOYEE TYPE", headerHozAlign: "center", field: "EmployeeType", vertAlign: "middle", hozAlign: "center", },
            { title: "JOIN DATE", headerHozAlign: "center", field: "DtJoin", vertAlign: "middle", hozAlign: "center", },
            { title: "GS", headerHozAlign: "center", field: "GrossSalary", vertAlign: "middle", hozAlign: "center", },
            { title: "ADVANCE", headerHozAlign: "center", field: "EmpAdvanceBalance", vertAlign: "middle", hozAlign: "center",visible: false },
            { title: "LOAN", headerHozAlign: "center", field: "EmpLoanBalance", vertAlign: "middle", hozAlign: "center",visible: false },
            { title: "EMAIL", headerHozAlign: "center", field: "EmpEmail", vertAlign: "middle", hozAlign: "center",visible: false },
            { title: "MOBILE NO", headerHozAlign: "center", field: "MobileNo", vertAlign: "middle", hozAlign: "center", },
            {
                title: "ACTIONS", field: "button", headerHozAlign: "center", headerSort: false, vertAlign: "middle", hozAlign: "center", resizable: false, formatter: function (cell, formatterParams, onRendered) {
                                    var data = cell.getData();
                    var myUrlGet = '@Url.Action("EditEmployee", "Association")?Id=' + data.Id;
                var Delete = `setDeleteUrl(${data.Id})`

                                    var deleteHtml = `
            <a onclick='${Delete}' class='text-decoration-none text-black ms-3 mt-1' href='#' id='Delete'>
                <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
            </a>
                 <div class='dropdown-divider m-0'></div>
                         `;


                        var statusDependentHtml =  deleteHtml;
                var html = `
    <div class='dropdown ms-1'>
        <a href='${myUrlGet}' target="_blank" class='fw-bolder mt-2'>View/Edit</a>
        <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
       <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' >
            ${statusDependentHtml}

        </ul>
    </div>
`;


            return html;
         },
         visible: true,cellClick: function(e, cell) {
        // Add a custom class to the cell when it's clicked
        cell.getElement().classList.add('active-cell');
      },
    },
        ],
        dataBound: function () {
            // Freeze the top 1 row (index 0) after the table is created
            var rows = table.getRows();
            if (rows.length > 0) {
                var cells = rows[0].getCells();
                cells.forEach(cell => {
                    cell.freeze();
                });
            }
        },
 });
        };




        var globalFieldsForExpenseList =
            [
                { title: "SLNo", headerHozAlign: "center", field: "SLNo", vertAlign: "middle", hozAlign: "center",visible: false },
                { title: "CODE", headerHozAlign: "center", field: "EmployeeCode", vertAlign: "middle", hozAlign: "center", },
                { title: "CARD/FINGER ID", headerHozAlign: "center", field: "FingerId", vertAlign: "middle", hozAlign: "center",visible: false },
                { title: "EMPLOYEE NAME", headerHozAlign: "center", field: "EmployeeName", vertAlign: "middle", hozAlign: "center", },
                { title: "DESIGNATION", headerHozAlign: "center", field: "DesigName", vertAlign: "middle", hozAlign: "center", },
                { title: "DEPARTMENT", headerHozAlign: "center", field: "DeptName", vertAlign: "middle", hozAlign: "center", },
                { title: "SHIFT", headerHozAlign: "center", field: "ShiftName", vertAlign: "middle", hozAlign: "center",visible: false },
                { title: "SECTION", headerHozAlign: "center", field: "SectName", vertAlign: "middle", hozAlign: "center", },
                { title: "EMPLOYEE TYPE", headerHozAlign: "center", field: "EmployeeType", vertAlign: "middle", hozAlign: "center", },
                { title: "JOIN DATE", headerHozAlign: "center", field: "DtJoin", vertAlign: "middle", hozAlign: "center", },
                { title: "GS", headerHozAlign: "center", field: "GrossSalary", vertAlign: "middle", hozAlign: "center", },
                { title: "ADVANCE", headerHozAlign: "center", field: "EmpAdvanceBalance", vertAlign: "middle", hozAlign: "center",visible: false },
                { title: "LOAN", headerHozAlign: "center", field: "EmpLoanBalance", vertAlign: "middle", hozAlign: "center",visible: false },
                { title: "EMAIL", headerHozAlign: "center", field: "EmpEmail", vertAlign: "middle", hozAlign: "center",visible: false },
                { title: "MOBILE NO", headerHozAlign: "center", field: "MobileNo", vertAlign: "middle", hozAlign: "center", },
            {
                title: "ACTIONS", field: "button", headerHozAlign: "center", headerSort: false, vertAlign: "middle", hozAlign: "center", resizable: false, formatter: function (cell, formatterParams, onRendered) {
                                    var data = cell.getData();
                    var myUrlGet = '@Url.Action("EditEmployee", "Association")?Id=' + data.Id;
                var Delete = `setDeleteUrl(${data.Id})`

                                    var deleteHtml = `
            <a onclick='${Delete}' class='text-decoration-none text-black ms-3 mt-1' href='#' id='InActive'>
                <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
            </a>
                 <div class='dropdown-divider m-0'></div>
                         `;


                        var statusDependentHtml =  deleteHtml;
                var html = `
    <div class='dropdown ms-1'>
        <a href='${myUrlGet}' target="_blank" class='fw-bolder mt-2'>View/Edit</a>
        <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
       <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' >
            ${statusDependentHtml}

        </ul>
    </div>
`;


            return html;
         },
         visible: true,cellClick: function(e, cell) {
        // Add a custom class to the cell when it's clicked
        cell.getElement().classList.add('active-cell');
      },
    },
            ]

        var columnListExpense = $("#expenseColumnList");
        var columnListExpenseTwo = $("#expenseColumnListTwo");

        var firstSevenFields = globalFieldsForExpenseList.slice(0, 8);
        var restFields = globalFieldsForExpenseList.slice(8);
        console.log("firstSevenFields", firstSevenFields);
        $.each(firstSevenFields, function (index, field) {
            var title = field.title;
            var name = field.field;
            var visible = true;
            if (field.visible == false) {
                visible = false;
            }
            titles = `<li>
                <a class="dropdown-item" href="#">
                <div class="custom-control custom-checkbox" >
                <input type="checkbox" class="custom-control-input title-input" id="${name}" value="${name}">
                        <label class="custom-control-label w-100 cursor-pointer" id="${name}" for="${name}">${title}</label>
                </div>
                </a>
                </li>`;
            columnListExpense.append(titles);

            document.querySelector(`#${name}`).addEventListener('click', function (event) {
                var checkbox = event.target;
                var isChecked = checkbox.checked;

                if (isChecked) {
                    DepartmanentListTable.showColumn(name);
                } else {
                    DepartmanentListTable.hideColumn(name);
                }
            });


            $(`${'#' + name}`).prop('checked', visible);


            $('.custom-control-label').on('click', function (e) {
                e.stopPropagation();
            });
            $('#dropdown-titles').on('click', function (e) {
                e.stopPropagation();
            });

            //Add event listener to the rows select input
            $("#expense-rows").on("change", function () {
                var selectedRows = $(this).val();
                if (selectedRows !== null) {
                    var pageSize = parseInt(selectedRows);
                    if (!isNaN(pageSize)) {
                        DepartmanentListTable.setPageSize(pageSize);
                    }
                }
            });

        });
        $.each(restFields, function (index, field) {
            var title = field.title;
            var name = field.field;
            var visible = true;
            if (field.visible == false) {
                visible = false;
            }
            titles = `<li>
                <a class="dropdown-item" href="#">
                <div class="custom-control custom-checkbox" >
                <input type="checkbox" class="custom-control-input title-input" id="${name}" value="${name}">
                        <label class="custom-control-label w-100 cursor-pointer" id="${name}" for="${name}">${title}</label>
                </div>
                </a>
                </li>`;
            columnListExpenseTwo.append(titles);

            document.querySelector(`#${name}`).addEventListener('click', function (event) {
                var checkbox = event.target;
                var isChecked = checkbox.checked;

                if (isChecked) {
                    DepartmanentListTable.showColumn(name);
                } else {
                    DepartmanentListTable.hideColumn(name);
                }
            });


            $(`${'#' + name}`).prop('checked', visible);


            $('.custom-control-label').on('click', function (e) {
                e.stopPropagation();
            });
            $('#dropdown-titles').on('click', function (e) {
                e.stopPropagation();
            });

            //Add event listener to the rows select input
            $("#expense-rows").on("change", function () {
                var selectedRows = $(this).val();
                if (selectedRows !== null) {
                    var pageSize = parseInt(selectedRows);
                    if (!isNaN(pageSize)) {
                        DepartmanentListTable.setPageSize(pageSize);
                    }
                }
            });

        });






        getDepartmentList();

 function setDeleteUrl(data) {
    Swal.fire({
        title: "Are you sure?",
        text: "You won't be able to revert this!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes"
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                url: '@Url.Action("DeleteEmployee", "Association")',
                type: "get",
                data: { EmployeeId: data },
                traditional: true,
                success: function (response) {

                    if (response.success == "1") {
                        toastr.success(response.msg, "", {
                            "toastClass": "toast-green",
                        });
                        getDepartmentList();
                    }
                    else if (response.success == "0") {
                        toastr.error(response.msg, "", {
                            "toastClass": "toast-red",
                        });
                        getDepartmentList();
                    }
                },
                error: function (xhr, status, error) {
                    console.error(xhr.responseText);
                    toastr.error("Error during delete.", "", { "toastClass": "toast-red" });
                }
            });
        }
    })
        };

        $('#searchInput').on('input', function() {
       var inputValue = $(this).val();
       var url = '@Url.Action("GetEmployetListAll", "Association")' + '?searchquery=' + inputValue;
       DepartmanentListTable.setData(url);

   });
        document.getElementById("print-table").addEventListener("click", function () {
            DepartmanentListTable.print(false, true);
        });
        document.getElementById("download-xlsx").addEventListener("click", function () {
            DepartmanentListTable.download("xlsx", "Expenses.xlsx", { sheetName: "Expenses" });
        });
    </script>

}



@*======================previous code==============*@

@*@section Scripts{

        <script type="text/javascript">
            $(function () {

                //function getDateString(dateObj) {


                //    if (dateObj == null) { return ''; };

                //    var date = new Date(parseInt(dateObj.substr(6)));
                //    var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
                //        "Aug", "Sep", "Oct", "Nov", "Dec"];
                //    //var month = dateObj.getMonth() + 1;
                //    //var day = dateObj.getDate();
                //    //var year = dateObj.getFullYear();
                //    //var date = day + "/" + month + "/" + year;

                //    var formatdate = date.getDate() + "-" + months[date.getMonth()] + "-" + date.getFullYear();

                //    //alert(val);


                //    return formatdate;

                //    //return dateObj.toDateString();
                //}

                var peopleList = $('#tbllist').DataTable({

                    serverSide: true,  "scrollX": true,
                    processing: true,

                    ajax: {
                        url: '@Url.Action("GetEmployeeList", "Association")',
                        data: {filter: 'All'},
                        type: "POST",
                        dataType: 'json',
                    },
                    dom: 'Blfrtip',
                     //'dom': 'Rlfrtip'
                    buttons: [
                      //  'copy', 'csv', 'excel'
                    ],
                    rowId: 'Id',
                    "iDisplayLength": 5,
                    "lengthMenu": [[5, 10, 25, 50, 500], [5, 10, 25, 50, "All"]],
                    columns: [
                        { "title": "Employee Id", "data": "Id", "searchable": false, "visible": false },
                        { "title": "Employee Code", "data": "EmployeeCode", "searchable": true },
                        { "title": "Employees Name", "data": "EmployeeName", "searchable": true },
                        { "title": "Fathers Name", "data": "FathersName", "searchable": true },

                        { "title": "Present Address", "data": "PresentAddress", "searchable": true },
                        { "title": "Permanent Address", "data": "PermanentAddress", "searchable": true },


                        { "title": "Position Title", "data": "PositionTitle", "searchable": true },
                        { "title": "Department", "data": "Department", "searchable": true },
                        { "title": "NID", "data": "NID", "searchable": true },


                        { "title": "Introducer Name", "data": "IntroducerName", "searchable": true },
                        { "title": "Introducer ContctNo", "data": "IntroducerContctNo", "searchable": true },
                        { "title": "Introducer Address", "data": "IntroducerAddress", "searchable": true },


                        { "title": "Emergency Contact Name", "data": "EmergencyContactName", "searchable": true },
                        { "title": "Emergency Contact Relationship", "data": "EmergencyContactRelationship", "searchable": true },
                        { "title": "Emergency Mobile No", "data": "EmergencyMobileNo", "searchable": true },


                        //{
                        //    "title": "DOB", "data": "DOB",
                        //    "render": function (data) { return getDateString(data); }
                        //},

                        //{
                        //    "type": 'datetime',
                        //    "def": function () { return new Date(); },
                        //    "format": 'M/D/YYYY',
                        //    "fieldInfo": 'US style m/d/y format', "data": "DOB", "title": "DOB", "searchable": false
                        //},

                        { "title": "DOB", "data": "DOBString", "searchable": false },
                        { "title": "Joining Date", "data": "JoiningDateString", "searchable": false },
                        { "title": "IsActive", "data": "IsActiveString", "searchable": false },
                        { "title": "Blood Group", "data": "BloodGroup", "searchable": true },
                        { "title": "Mobile No", "data": "MobileNo", "searchable": true },

                        {
                            "title": "Image", "data": "EmployeeImagePath", "searchable": false, "render": function (data) {
                                console.log(data);
                                //return '<img src="..' + data + '" class="img-thumbnail" width="80px">';
                                //console.log(data);
                                return '<img src="..' + data + '" class="img-thumbnail" width="80px" onerror=this.onerror=null;this.src="../Content/EmployeeImages/0.png">';

                            }
                        },

                        {
                            "title": "Action",
                            "data": "Id",
                            "render": function (data, type, row) {
                                var myUrledit = '@Url.Action("EditEmployee", "Association")?EmployeeId=' + data;
                                var myUrldelete = '@Url.Action("DeleteEmployee", "Association")?EmployeeId=' + data;
                                var myUrlViewCard = '@Url.Action("ViewCardEmployee", "Association")?EmployeeId=' + data;

                                var message = `return confirm('Are you sure you want to Remove this Employee ?')`;


                                return '<span data-toggle="tooltip" title="View Card"> <a href=\"' + myUrlViewCard + '\" class=\"btn btn-icon btn-info btn-sm rounded-0 mb-1\" target=\"_blank\"><i class="bi bi-printer"></i></a></span>' +
                                    '<span data-toggle="tooltip" title="Edit"> <a href=\"' + myUrledit + '\" class=\"btn btn-icon btn-warning btn-sm rounded-0 mb-1\" target=\"_blank\"><i class="bi bi-pencil-square"></i></a></span>' +
                                    '<span data-toggle="tooltip" title="Delete"> <a href=\"' + myUrldelete + '\"  onclick = \"' + message + '\"   class=\"btn btn-icon btn-danger btn-sm rounded-0 mb-1\" target=\"_blank\"><i class="bi bi-x"></i></a></span>';

                            }

                        }
                    ]
                });


            });
        </script>
    }*@
