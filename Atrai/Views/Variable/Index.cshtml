@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@using Atrai.Model.Core.Entity;
@using Atrai.Model.Core.Common;
@{
    ViewData["Title"] = "Variable";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
    var ListType = ViewBag.ListType as string;
}

<link href="~/css/accountHeadListGearDropdown.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<link href="https://unpkg.com/tabulator-tables@5.5.0/dist/css/tabulator.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">


<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">


<style>
    .select2-search__field {
        z-index: 9999; /* Set a higher z-index value */
    }

    /*li {
        cursor: pointer;
        padding: 10px;
        margin: 5px;
        border: 1px solid #ccc;
    }*/

    /* Set the anchor tag to have full width */
    li a {
        display: block;
        width: 100%;
    }

    .full-width {
        display: block;
        width: 100%;
    }

    .table > :not(:first-child) {
        border-top: 0;
    }

    #treegridTable th {
        text-align: center;
        font-weight: 600;
        border: 1px solid #BABEC5;
        /*font-size: 14px;*/
    }

    .table > tbody > tr > td {
        line-height: 15px !important;
        border: 1px solid #c9c9c9;
    }


    .table tbody tr td {
        /* border: 1px solid #c9c9c9;*/
        font: 14px;
        color: #8A8A8A;
        line-height: 15px;
    }
    /*    .table>:not(caption)>*>* {

                     border-bottom-width: 0px;

                }*/
    .text-red {
        color: #FF0000 !important;
    }

    #body td:not(:first-child) {
        text-align: center;
    }

    .root-node {
        font-weight: 500;
    }

    /*   .tabulator-table .tabulator-row {
        background-color: white;
    } */

    .upper-form-style {
        background: #e9ecef6b;
        /*padding-top: 62px*/
    }

    .report-text-style {
        color: #0000ce;
    }

    .company-and-other-text-style {
        margin-top: 40px;
    }

    .customize-btn {
        background: #e9ecef6b;
        border: 1px solid black;
    }

    .customize-btn-another {
        background: #2CA01C;
        border: 1px solid black;
        border-radius: 20px;
        color: #FFFFFF;
        border: 1px solid #2CA01C;
    }

        .customize-btn-another:hover {
            background: #2CA01C;
            border: 1px solid black;
            border-radius: 20px;
            color: #FFFFFF;
            border: 1px solid #2CA01C;
        }

    .customize-btn:hover {
        background: #e9ecef6b;
        border: 1px solid black;
    }

    .customization-btn {
        background: #2CA01C;
        color: white;
        /*border: 1px solid black;*/
        border-radius: 20px;
    }

        .customization-btn:hover {
            background: #235d1b;
            color: white;
            border-radius: 20px;
        }

    .dropdown-button-style {
        border: 1px solid #ced4da;
        background: white;
    }

        .dropdown-button-style:hover {
            border: 1px solid #ced4da;
            background: white;
        }

    .gear-dropdown.show {
        width: 360px;
    }

    .modal-dialog {
        max-width: 90%;
        margin: 2rem auto;
    }

    .report-print-setting-style {
        background: #e9ecef6b;
    }

    .total-accname {
        border-bottom: 5px double black !important;
    }

    #loader {
        position: fixed;
        left: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        z-index: 9999;
        background: url('/assets/loading-load.gif') 50% 50% no-repeat rgb(249, 249, 249);
        opacity: .6;
    }

    .tabulator {
        border: none;
    }

    .tabulator-col .tabulator-col-title {
        text-align: center;
    }

    .tabulator-tableholder {
        background-color: white;
    }

    .tabulator[tabulator-layout=fitDataTable] {
        display: inherit;
    }

    .tabulator .tabulator-header .tabulator-col .tabulator-col-content {
        margin-top: 7px;
    }

    .tabulator .tabulator-header .tabulator-col, .tabulator .tabulator-header {
        background-color: white;
        border-bottom: 1px solid #aaaaaa38;
        border-right: 1px solid #aaaaaa38;
        /*border-left: 1px solid #aaaaaa38;*/
        /* padding-left: 2px;*/
    }
    /*    .tabulator-row .tabulator-cell, .tabulator-row .tabulator-cell.tabulator-frozen.tabulator-frozen-left {
                border-right: none;
                border-left: none;
            }*/
    .tabulator-row .tabulator-cell.tabulator-frozen.tabulator-frozen-left {
        border-right: 2px solid #aaaaaa38;
    }

    .tabulator-row .tabulator-cell {
        border-right: none;
        border-left: none;
        padding-left: 10px;
        border: 1px solid #aaaaaa29;
    }

    .tabulator-cell {
        padding-top: 10px;
        padding-bottom: 10px;
        /*margin-top: 27px;*/
    }

    .tabulator .tabulator-row .active-cell {
        overflow: visible;
        /* Add any other styles you need for the active cell */
    }

    .tabulator-row {
        /*   border: 1px solid #aaaaaa38;*/
        border-left: none;
        border-right: none;
    }

    input[type="checkbox"] {
        width: 15px; /* Set the width */
        height: 20px; /* Set the height */
    }

    .nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active {
        border-top-color: transparent !important;
        border-left-color: transparent !important;
        border-right-color: transparent !important;
        border-bottom: 4px solid green;
    }

        .nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active:hover {
            background-color: #F8F8F8;
            border-top-color: transparent !important;
            border-left-color: transparent !important;
            border-right-color: transparent !important;
        }

    .nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link:hover {
        background-color: #F8F8F8;
        border-top-color: transparent !important;
        border-left-color: transparent !important;
        border-right-color: transparent !important;
    }

    .customize-btnew {
        background: transparent;
        border: 1px solid black;
        border-radius: 20px;
    }

        .customize-btnew:hover {
            background: #ffffff;
            border: 1px solid black;
            color: black;
            border-radius: 20px;
        }

    .tabulator-row .tabulator-cell.tabulator-editing {
        border: 1px solid #404c5d;
        outline: none;
        padding: 0;
    }

    .tabulator-cell.tabulator-editable[tabulator-field="AccName"] {
        border: 1px solid #0003;
        margin-bottom: 10px;
    }

    .filter-dropdown > .filter-dropdown-class.show {
        width: 580px;
    }

    p {
        margin: 1em 0;
    }

    .button {
        -webkit-tap-highlight-color: rgba(0,0,0,0);
        position: relative;
        background: #aa0000;
        padding: 10px 15px;
        color: white;
        box-shadow: 0 2px black;
        text-decoration: none;
        border-radius: 5px;
        /*text-shadow: 0 1px 1px black;*/
    }

        .button:hover {
            top: -2px;
            box-shadow: 0 7px #000000a3;
        }

        .button:active {
            top: 1px;
            box-shadow: 0 7px #000000a3;
        }

    .unbilledbtn.clicked {
        top: -2px;
        box-shadow: 0 7px #000000a3;
    }

    .overduebtn.clicked {
        top: -2px;
        box-shadow: 0 7px #000000a3;
    }

    .openbtn.clicked {
        top: -2px;
        box-shadow: 0 7px #000000a3;
    }

    .paidbtn.clicked {
        top: -2px;
        box-shadow: 0 7px #000000a3;
    }

    .scrollable-offcanvas {
        /* max-height: 80vh;*/ /* Adjust the maximum height as needed */
        overflow-y: auto;
    }

    .tabulator .tabulator-footer .tabulator-paginator .tabulator-page:hover {
        background-color: deepskyblue;
    }

    .tabulator .tabulator-footer {
        background-color: #fff;
        color: black;
    }

        .tabulator .tabulator-footer .tabulator-calcs-holder .tabulator-row {
            background: white !important;
        }


    .offcanvas {
        /* Add position relative to its parent */
        display: flex;
        flex-direction: column;
        height: 100vh; /* Ensure offcanvas takes full viewport height */
    }

    .offcanvas-footer {
        margin-top: auto; /* Push footer to the bottom */
        width: 100%; /* Occupy full width */
    }

    .modal-footer {
        width: 100%; /* Ensure buttons occupy full width */
        padding: 10px; /* Add padding for better appearance */
    }

    .w-15 {
        width: fit-content !important;
    }

    .tabulator-row:nth-child(even) {
        background-color: white;
    }

    .separator {
        display: flex;
        align-items: center;
        text-align: center;
        color: #999;
        font-size: 12px;
    }

        .separator::before,
        .separator::after {
            content: '';
            flex: 1;
            border-bottom: 1px solid #999;
        }

        .separator:not(:empty)::before {
            margin-right: .25em;
        }

        .separator:not(:empty)::after {
            margin-left: .25em;
        }

    .tabulator-row.tabulator-selected {
        background-color: #9abcea !important;
    }

    .rating {
        display: flex;
        flex-direction: row-reverse;
        justify-content: center;
        align-items: center;
    }

        .rating input {
            display: none;
        }

        .rating label {
            cursor: pointer;
            padding: 5px;
            font-size: 24px;
        }

            .rating label:before {
                content: '\2605'; /* Unicode star character */
            }

        .rating input:checked ~ label:before {
            color: gold; /* Change color of selected stars */
        }

    .child-table-hidden {
        display: none;
    }

    .tabulator .tabulator-tableholder .tabulator-table .tabulator-row.tabulator-calcs {
        background: #fff !important;
    }

    .tabulator .tabulator-footer {
        border-top: 1px solid #fff;
    }

    #file-drop-area {
        border: 2px dashed #ccc;
        padding: 20px;
        text-align: center;
        cursor: pointer;
    }

    #image-uploadify {
        display: none;
    }

    .footerButton {
        margin-top: 40px;
    }   

    .notify-grid {
        display: grid;
        grid-template-columns: repeat(3, 180px);
        background-color: white;
            
    } 

    .report-grid {
        display: grid;
        grid-template-columns: repeat(3, 180px);
        background-color: white;
            
    } 

    .gear-dropdown1.show {
        width: 690px;
    }

    .gear-dropdown2.show {
        width: 565px;
    }

</style>
@*expenses tag and navs starts*@
<div class="col-lg-2">
    <p class="fs-4 fw-bold">VARIABLE</p>
</div>
<ul class="nav nav-tabs mt-5">
    <li class="nav-item">
        @{
            var AllChildMenu = HttpContextAccessor.HttpContext.Session.GetObject<List<UserMenuPermissionViewModel>>("UserChildMenu");
            
            var filterparentmenu = AllChildMenu.Where(x => x.ControllerName == "Variable" && x.ActionName == "Index" && x.IsView == true).ToList();
            var i = 0;
            foreach (var childitem in filterparentmenu)
            {

                if (childitem.FirstParameter != null)
                {

                    if (i == 0)
                    {
                                <li class="nav-item">
                                    <a class="nav-link  fw-semibold active" href="#" id=@childitem.FirstValue>@childitem.MenuName</a>
                                </li>

                    }
                    else
                    {
                                <li class="nav-item">
                                    <a class="nav-link  fw-semibold" href="#" id=@childitem.FirstValue>@childitem.MenuName</a>
                                </li>

                    }


                }

                i++;
            }
        }

    </li>
  
    @* <li class="nav-item">
        <a class="nav-link  fw-semibold active" href="#" id="PortOfLoading">PORT OF LOADING</a>
    </li>        
    <li class="nav-item">
        <a class="nav-link fw-semibold" href="#" id="PortOFDischarge">PORT OF DISCHARGE</a>
    </li>
    <li class="nav-item">
        <a class="nav-link fw-semibold" href="#" id="FinalDestination">FINAL DESTINATION</a>
    </li>
    <li class="nav-item">
        <a class="nav-link fw-semibold" href="#" id="ItemGroup">ITEM GROUP</a>
    </li>
    <li class="nav-item">
        <a class="nav-link fw-semibold" href="#" id="ItemDescription">ITEM DESCRIPTION</a>
    </li>
    <li class="nav-item">
        <a class="nav-link fw-semibold" href="#" id="DynamicReport">DYNAMIC REPORTING</a>
    </li>
    <li class="nav-item">
        <a class="nav-link fw-semibold" href="#" id="NotifyParty">NOTIFY PARTY</a>
    </li>
    <li class="nav-item">
        <a class="nav-link fw-semibold" href="#" id="BuyerGroup">BUYER GROUP</a>
    </li>
    <li class="nav-item">
        <a class="nav-link fw-semibold" href="#" id="companyInfo">COMPANY INFO</a>
    </li>
    <li class="nav-item">
        <a class="nav-link fw-semibold" href="#" id="Concern">CONCERN BANK</a>
    </li>
    <li class="nav-item">
        <a class="nav-link fw-semibold" href="#" id="buyerSupplierBank">BUYER/SUPPLIER BANK</a>
    </li>
    <li class="nav-item">
        <a class="nav-link fw-semibold" href="#" id="buyerSupplierBankAcc">BUYER/SUPPLIER BANK ACC</a>
    </li>
    <li class="nav-item">
        <a class="nav-link fw-semibold" href="#" id="bankAccountNo">CONCERN BANK ACCOUNT NO</a>
    </li> *@
</ul>
@*expenses tag and navs ends*@


@*-------------port of loading all html tags starts--------------*@
<div id="PortOFLoadingView" @*class="d-none"*@>
    @*suppliers tag and buttons starts*@
    <div id="PortOFLoadingDiv" class="row py-3" style="background: #e9ecef6b;">
        <div class="col-lg-3">
            <p class="fs-4 fw-bold">PORT OF LOADING</p>
        </div>
        <div class="col-lg">
            <div class="float-end">
                <button class="btn btn-success fw-bold ms-3 h-100 radius-30" type="button" data-bs-toggle="offcanvas" data-bs-target="#POLOffcanvas">
                    New
                </button>
            </div>
            @*offcanvas for add colors starts*@
            <div class="offcanvas offcanvas-end scrollable-offcanvas" tabindex="-1" id="POLOffcanvas" data-bs-backdrop="false" style="width: 50%;">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title">Add New</h5>
                    <button onclick="clearOffCanvasPOL()" id="offcanvasCloseBtn" type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <input type="hidden" id="POLId" name="Id" value="" />

                    <div id="nameParent" class="mt-4">
                        <label class="fw-bold">Name</label>
                        <input id="PolName" class="form-control" />
                        <span class="text-danger" id="PolNameValidation"></span>
                    </div>
                    <div id="nameParent" class="mt-4">
                        <label class="fw-bold">Code</label>
                        <input id="Polcode" class="form-control" />
                    </div>
                    <div id="nameParent" class="mt-4">
                        <label class="fw-bold">Country</label>
                        <select id="Polcountry" class="form-control select2">

                        </select>
                    </div>
                </div>

                <div class="offcanvas-footer">
                    <div class="modal-footer my-2">
                        <button id="closePOLffcanvasBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #949494; margin-right: 15px;">Cancel</button>
                        <button id="SavePOLBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #2ca01c;margin-right: 15px;">Save</button>
                    </div>
                </div>
            </div>

            @*offcanvas for add por of discharge ends*@
        </div>

    </div>
    @*suppliers tag and buttons ends*@

    @*gear icon and other two buttons starts*@
    <div class="d-flex justify-content-between">
        <div>
            <div class="d-flex mt-3">
                   <input type="text" class="textbox search_box ms-3 mt-3" id="searchInputPol" name="keywords" autocomplete="off" placeholder="Search" style="width: 350px; border: 1px solid #8080807d;height: 40px; border-radius: 25px;padding-left: 15px;" />
            </div>
        </div>

        <div>
        </div>

        <div>
            <a href="#" id="print-table-pol" class="text-decoration-none text-black me-1">
                <i class="bi bi-printer fs-5"></i>
            </a>
            <a href="#" id="download-xlsx-pol" class="text-decoration-none text-black me-1">
                <i class="bi bi-file-earmark-excel fs-5"></i>
            </a>
            <div title="Settings" class="dropdown1 mt-3 custom-grid" style="display:inline-block;">
                <a href="#" class="text-decoration-none text-black me-1" id="dropdownMenuButton1" data-bs-toggle="dropdown"
                   aria-expanded="false">
                    <i class="bi bi-gear fs-5"></i>
                </a>
                <div class="dropdown-menu gear-dropdown" aria-labelledby="dropdownMenuButton-expense">
                    <div class="row p-4 main-dropdown-size" style="overflow:hidden;">
                        <div class="col">
                            <span class="fw-bold ms-3">Columns</span>
                            <hr class="m-0 w-75 ms-3 w-sm-50 " />
                            <ul class="list-unstyled">
                                <li>
                                    <div id="POLColumnList" class="custom-grid">
                                    </div>
                                </li>
                            </ul>

                        </div>

                        <div class="ms-3">
                            <label>Rows</label> <br />
                            <select name="rows" id="POLRows" class="cursor-pointer" style="padding: 10px 0 10px 5px; width: 70px;">
                                <option value="0" disabled selected>Rows</option>
                                <option value="5" selected>5</option>
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="50">50</option>
                                <option value="100">100</option>
                                <option value="1000">1000</option>
                            </select>
                        </div>
                    </div>
                </div>


            </div>

        </div>

    </div>

    @*gear icon and other two buttons ends*@
    @*suppliers tabulators starts*@
    <div id="supplierTaableContainer" class="mt-4">
        <div id="PortOFLoadingTable"  style="min-height:100%"></div>
    </div>
    @*suppliers tabulators ends*@
</div>



@*port of discharge all html tags starts*@
<div id="PortOFDischargeView" class="d-none">
    @*expenses tag and buttons starts*@
    <div class="row py-3" style="background: #e9ecef6b;">
        <div class="col-lg">
            <p class="fs-4 fw-bold">PORT OF DISCHARGE</p>
        </div>
        <div class="col-lg">
            <div class="float-end">
                <button class="btn btn-success fw-bold ms-3 h-100 radius-30" type="button" data-bs-toggle="offcanvas" data-bs-target="#PODOffcanvas">
                    New
                </button>
            </div>
            @*offcanvas for add colors starts*@
            <div class="offcanvas offcanvas-end scrollable-offcanvas" tabindex="-1" id="PODOffcanvas" data-bs-backdrop="false" style="width: 50%;">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title">Add New</h5>
                    <button onclick="clearOffCanvasPOD()" id="offcanvasCloseBtn" type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <input type="hidden" id="PODId" name="Id" value="" />

                    <div id="nameParent" class="mt-4">
                        <label class="fw-bold">Name</label>
                        <input id="PodName" class="form-control" />
                        <span class="text-danger" id="PodNameValidation"></span>
                    </div>
                    <div id="nameParent" class="mt-4">
                        <label class="fw-bold">Code</label>
                        <input id="Podcode" class="form-control" />
                    </div>
                    <div id="nameParent" class="mt-4">
                        <label class="fw-bold">Country</label>
                        <select id="Podcountry" class="form-control select2">
                        </select>
                    </div>
                </div>
                <div class="offcanvas-footer">
                    <div class="modal-footer my-2">
                        <button id="closePODffcanvasBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #949494; margin-right: 15px;">Cancel</button>
                        <button id="SavePODBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #2ca01c;margin-right: 15px;">Save</button>
                    </div>
                </div>
            </div>

            @*offcanvas for add por of discharge ends*@
        </div>
    </div>
    @*expenses tag and buttons ends*@

    @*gear icon and other two buttons starts*@
    <div class="d-flex justify-content-between">
      
            <div class="d-flex mt-3">
                   <input type="text" class="textbox search_box ms-3 mt-3" id="searchInputpob" name="keywords" autocomplete="off" placeholder="Search" style="width: 350px; border: 1px solid #8080807d;height: 40px; border-radius: 25px;padding-left: 15px;" />
            </div>

        <div>
            <a href="#" id="print-table-pod" class="text-decoration-none text-black me-1">
                <i class="bi bi-printer fs-5"></i>
            </a>
            <a href="#" id="download-xlsx-pod" class="text-decoration-none text-black me-1">
                <i class="bi bi-file-earmark-excel fs-5"></i>
            </a>
            <div title="Settings" class="dropdown1 mt-3 custom-grid" style="display:inline-block;">
                <a href="#" class="text-decoration-none text-black me-1" id="dropdownMenuButton1" data-bs-toggle="dropdown"
                   aria-expanded="false">
                    <i class="bi bi-gear fs-5"></i>
                </a>
                <div class="dropdown-menu gear-dropdown" aria-labelledby="dropdownMenuButton-expense">
                    <div class="row p-4 main-dropdown-size" style="overflow:hidden;">
                        <div class="col">
                            <span class="fw-bold ms-3">Columns</span>
                            <hr class="m-0 w-75 ms-3 w-sm-50 " />
                            <ul class="list-unstyled">
                                <li>
                                    <div id="PODColumnList" class="custom-grid">
                                    </div>
                                </li>
                            </ul>

                        </div>

                        <div class="ms-3">
                            <label>Rows</label> <br />
                            <select name="rows" id="PODColorRows" class="cursor-pointer" style="padding: 10px 0 10px 5px; width: 70px;">
                                <option value="0" disabled selected>Rows</option>
                                <option value="5" selected>5</option>
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="50">50</option>
                                <option value="100">100</option>
                                <option value="1000">1000</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>

    @*gear icon and other two buttons ends*@

    @*expenses tabulators starts*@
    <div id="tableContainer" class="mt-4">
        <div id="PODTable" style="min-height:100%"></div>
    </div>
</div>








@*-------------final destination all html tags starts--------------*@
<div id="FDView" class="d-none">
    @*expenses tag and buttons starts*@
    <div class="row py-3" style="background: #e9ecef6b;">
        <div class="col-lg-3">
            <p class="fs-4 fw-bold">FINAL DESTINATION</p>
        </div>
        <div class="col-lg">
            <div class="float-end">
                <button class="btn btn-success fw-bold ms-3 h-100 radius-30" type="button" data-bs-toggle="offcanvas" data-bs-target="#FDOffcanvas">
                    New
                </button>
            </div>
            @*offcanvas for add sizes starts*@
            <div class="offcanvas offcanvas-end scrollable-offcanvas" tabindex="-1" id="FDOffcanvas" data-bs-backdrop="false" style="width: 50%;">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title">Add New</h5>
                    <button onclick="clearOffCanvasFD()" id="offcanvasCloseBtn" type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <input type="hidden" id="FDId" name="Id" value="" />

                    <div class="mt-4">
                        <label class="fw-bold">Destination Search Name</label>
                        <input id="fdSearchName" class="form-control" />
                        <span class="text-danger" id="fdSearchNameValidation"></span>
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Destination Name</label>
                        <input id="fdName" class="form-control" />
                        <span class="text-danger" id="fdNameValidation"></span>
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Code</label>
                        <input id="fdCode" class="form-control" />
                    </div>
                    <div id="nameParent" class="mt-4">
                        <label class="fw-bold">Country</label>
                        <select id="Fdcountry" class="form-control select2">
                        </select>
                    </div>
                </div>

                <div class="offcanvas-footer">
                    <div class="modal-footer my-2">
                        <button id="closeFDOffcanvasBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #949494; margin-right: 15px;">Cancel</button>
                        <button id="SaveFDBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #2ca01c;margin-right: 15px;">Save</button>
                    </div>
                </div>
            </div>

            @*offcanvas for add sizes ends*@
        </div>
    </div>

    @*gear icon and other two buttons starts*@
    <div class="d-flex justify-content-between">
        <div class="dropdown batch-dropdown mt-3">
                    <input type="text" class="textbox search_box ms-3 mt-3" id="searchInputfd" name="keywords" autocomplete="off" placeholder="Search" style="width: 350px; border: 1px solid #8080807d;height: 40px; border-radius: 25px;padding-left: 15px;" />
        </div>

        <div>
        </div>
        <div>
            <a href="#" id="print-table-fd" class="text-decoration-none text-black me-1">
                <i class="bi bi-printer fs-5"></i>
            </a>
            <a href="#" id="download-xlsx-fd" class="text-decoration-none text-black me-1">
                <i class="bi bi-file-earmark-excel fs-5"></i>
            </a>
            <div title="Settings" class="dropdown1 mt-3 custom-grid" style="display:inline-block;">
                <a href="#" class="text-decoration-none text-black me-1" id="dropdownMenuButton1" data-bs-toggle="dropdown"
                   aria-expanded="false">
                    <i class="bi bi-gear fs-5"></i>
                </a>
                <div class="dropdown-menu gear-dropdown" aria-labelledby="dropdownMenuButton-expense">
                    <div class="row p-4 main-dropdown-size" style="overflow:hidden;">
                        <div class="col">
                            <span class="fw-bold ms-3">Columns</span>
                            <hr class="m-0 w-75 ms-3 w-sm-50 " />
                            <ul class="list-unstyled">
                                <li>
                                    <div id="FDColumnList" class="custom-grid">
                                    </div>
                                </li>
                            </ul>

                        </div>

                        <div class="ms-3">
                            <label>Rows</label> <br />
                            <select name="rows" id="FDRows" class="cursor-pointer" style="padding: 10px 0 10px 5px; width: 70px;">
                                <option value="0" disabled selected>Rows</option>
                                <option value="5" selected>5</option>
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="50">50</option>
                                <option value="100">100</option>
                                <option value="1000">1000</option>
                            </select>
                        </div>
                    </div>
                </div>


            </div>

        </div>

    </div>

    @*gear icon and other two buttons ends*@

    @*suppliers tabulators starts*@
    <div id="PaymentTableContainer" class="mt-4">
        <div id="FDTable" style="min-height:100%"></div>
    </div>
    @*suppliers tabulators ends*@
</div>


@*-------------item group all html tags starts--------------*@
<div id="IGView" class="d-none">
    @*expenses tag and buttons starts*@
    <div class="row py-3" style="background: #e9ecef6b;">
        <div class="col-lg-2">
            <p class="fs-4 fw-bold">ITEM GROUP</p>
        </div>
        <div class="col-lg">
            <div class="float-end">
                <button class="btn btn-success fw-bold ms-3 h-100 radius-30" type="button" data-bs-toggle="offcanvas" data-bs-target="#IGOffcanvas">
                    New
                </button>
            </div>
            @*offcanvas for add sizes starts*@
            <div class="offcanvas offcanvas-end scrollable-offcanvas" tabindex="-1" id="IGOffcanvas" data-bs-backdrop="false" style="width: 50%;">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title">Add New</h5>
                    <button onclick="clearOffCanvasIG()" id="offcanvasCloseBtn" type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <input type="hidden" id="IGId" name="Id" value="" />
                    
                    <div class="mt-4">
                        <label class="fw-bold">Item Group Name</label>
                        <input id="ig" class="form-control" />
                        <span class="text-danger" id="igCodeValidation"></span>
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Short Name</label>
                        <input id="shortName" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Item Group Code</label>
                        <input id="igCode" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">HS Code</label>
                        <input id="hsCode" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Item Margin [Bill Discounting]</label>
                        <input id="imbd" class="form-control" />
                    </div>
                </div>

                <div class="offcanvas-footer">
                    <div class="modal-footer my-2">
                        <button id="closeIGOffcanvasBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #949494; margin-right: 15px;">Cancel</button>
                        <button id="SaveIGBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #2ca01c;margin-right: 15px;">Save</button>
                    </div>
                </div>
            </div>

            @*offcanvas for add sizes ends*@
        </div>
    </div>

    @*gear icon and other two buttons starts*@
    <div class="d-flex justify-content-between">
        <div class="dropdown batch-dropdown mt-3">
                    <input type="text" class="textbox search_box ms-3 mt-3" id="searchInputig" name="keywords" autocomplete="off" placeholder="Search" style="width: 350px; border: 1px solid #8080807d;height: 40px; border-radius: 25px;padding-left: 15px;" />
        </div>

        <div>
        </div>
        <div>
            <a href="#" id="print-table-ig" class="text-decoration-none text-black me-1">
                <i class="bi bi-printer fs-5"></i>
            </a>
            <a href="#" id="download-xlsx-ig" class="text-decoration-none text-black me-1">
                <i class="bi bi-file-earmark-excel fs-5"></i>
            </a>
            <div title="Settings" class="dropdown1 mt-3 custom-grid" style="display:inline-block;">
                <a href="#" class="text-decoration-none text-black me-1" id="dropdownMenuButton1" data-bs-toggle="dropdown"
                   aria-expanded="false">
                    <i class="bi bi-gear fs-5"></i>
                </a>
                <div class="dropdown-menu gear-dropdown" aria-labelledby="dropdownMenuButton-expense">
                    <div class="row p-4 main-dropdown-size" style="overflow:hidden;">
                        <div class="col">
                            <span class="fw-bold ms-3">Columns</span>
                            <hr class="m-0 w-75 ms-3 w-sm-50 " />
                            <ul class="list-unstyled">
                                <li>
                                    <div id="IGColumnList" class="custom-grid">
                                    </div>
                                </li>
                            </ul>

                        </div>

                        <div class="ms-3">
                            <label>Rows</label> <br />
                            <select name="rows" id="IGRows" class="cursor-pointer" style="padding: 10px 0 10px 5px; width: 70px;">
                                <option value="0" disabled selected>Rows</option>
                                <option value="5" selected>5</option>
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="50">50</option>
                                <option value="100">100</option>
                                <option value="1000">1000</option>
                            </select>
                        </div>
                    </div>
                </div>


            </div>

        </div>

    </div>

    @*gear icon and other two buttons ends*@

    @*suppliers tabulators starts*@
    <div id="PaymentTableContainer" class="mt-4">
        <div id="IGTable" style="min-height:100%"></div>
    </div>
    @*suppliers tabulators ends*@
</div>

@*-------------item desc all html tags starts--------------*@
<div id="IDView" class="d-none">
    @*expenses tag and buttons starts*@
    <div class="row py-3" style="background: #e9ecef6b;">
        <div class="col-lg-3">
            <p class="fs-4 fw-bold">ITEM DESCRIPTION</p>
        </div>
        <div class="col-lg">
            <div class="float-end">
                <button class="btn btn-success fw-bold ms-3 h-100 radius-30" type="button" data-bs-toggle="offcanvas" data-bs-target="#ITOffcanvas">
                    New
                </button>
            </div>
            @*offcanvas for add sizes starts*@
            <div class="offcanvas offcanvas-end scrollable-offcanvas" tabindex="-1" id="ITOffcanvas" data-bs-backdrop="false" style="width: 50%;">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title">Add New</h5>
                    <button onclick="clearOffCanvasIT()" id="offcanvasCloseBtn" type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <input type="hidden" id="IDId" name="Id" value="" />

                    <div class="mt-4">
                        <label class="fw-bold">Item Description Name</label>
                        <input id="it" class="form-control" />
                        <span class="text-danger" id="itCodeValidation"></span>
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Short Name</label>
                        <input id="IDshortName" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Item Description Code</label>
                        <input id="iTCode" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">HS Code</label>
                        <input id="IDhsCode" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Item Group</label>
                        <select id="itemGroupDropdown" class="form-control select2">
                        </select>
                    </div>
                </div>

                <div class="offcanvas-footer">
                    <div class="modal-footer my-2">
                        <button id="closeITOffcanvasBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #949494; margin-right: 15px;">Cancel</button>
                        <button id="SaveITBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #2ca01c;margin-right: 15px;">Save</button>
                    </div>
                </div>
            </div>

            @*offcanvas for add sizes ends*@
        </div>
    </div>

    @*gear icon and other two buttons starts*@
    <div class="d-flex justify-content-between">
        <div class="dropdown batch-dropdown mt-3">
                    <input type="text" class="textbox search_box ms-3 mt-3" id="searchInputit" name="keywords" autocomplete="off" placeholder="Search" style="width: 350px; border: 1px solid #8080807d;height: 40px; border-radius: 25px;padding-left: 15px;" />
        </div>

        <div>
        </div>
        <div>
            <a href="#" id="print-table-id" class="text-decoration-none text-black me-1">
                <i class="bi bi-printer fs-5"></i>
            </a>
            <a href="#" id="download-xlsx-id" class="text-decoration-none text-black me-1">
                <i class="bi bi-file-earmark-excel fs-5"></i>
            </a>
            <div title="Settings" class="dropdown1 mt-3 custom-grid" style="display:inline-block;">
                <a href="#" class="text-decoration-none text-black me-1" id="dropdownMenuButton1" data-bs-toggle="dropdown"
                   aria-expanded="false">
                    <i class="bi bi-gear fs-5"></i>
                </a>
                <div class="dropdown-menu gear-dropdown" aria-labelledby="dropdownMenuButton-expense">
                    <div class="row p-4 main-dropdown-size" style="overflow:hidden;">
                        <div class="col">
                            <span class="fw-bold ms-3">Columns</span>
                            <hr class="m-0 w-75 ms-3 w-sm-50 " />
                            <ul class="list-unstyled">
                                <li>
                                    <div id="IDColumnList" class="custom-grid">
                                    </div>
                                </li>
                            </ul>

                        </div>

                        <div class="ms-3">
                            <label>Rows</label> <br />
                            <select name="rows" id="IDRows" class="cursor-pointer" style="padding: 10px 0 10px 5px; width: 70px;">
                                <option value="0" disabled selected>Rows</option>
                                <option value="5" selected>5</option>
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="50">50</option>
                                <option value="100">100</option>
                                <option value="1000">1000</option>
                            </select>
                        </div>
                    </div>
                </div>


            </div>

        </div>

    </div>

    @*gear icon and other two buttons ends*@

    @*suppliers tabulators starts*@
    <div id="PaymentTableContainer" class="mt-4">
        <div id="IDTable"></div>
    </div>
    @*suppliers tabulators ends*@
</div>





@*dynamic reporting all html tags starts*@
<div id="drView" class="d-none">
    @*expenses tag and buttons starts*@
    <div class="row py-3" style="background: #e9ecef6b;">
        <div class="col-lg">
            <p class="fs-4 fw-bold">DYNAMIC REPORTING</p>
        </div>
        <div class="col-lg">
            <div class="float-end">
                <button class="btn btn-success fw-bold ms-3 h-100 radius-30" type="button" data-bs-toggle="offcanvas" data-bs-target="#DROffcanvas">
                    New
                </button>
            </div>
            @*offcanvas for add colors starts*@
            <div class="offcanvas offcanvas-end scrollable-offcanvas" tabindex="-1" id="DROffcanvas" data-bs-backdrop="false" style="width: 50%;">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title">Add New</h5>
                    <button onclick="clearOffCanvasDR()" id="offcanvasCloseBtn" type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <input type="hidden" id="DRId" name="Id" value="" />

                    <div id="nameParent" class="mt-4">
                        <label class="fw-bold">Export invoice report</label>
                        <input id="exportInvoiceReport" class="form-control" />
                        <span class="text-danger" id="exportInvoiceReportValidation"></span>
                    </div>
                    <div id="nameParent" class="mt-4">
                        <label class="fw-bold">Packing list report</label>
                        <input id="packingListReport" class="form-control" />
                    </div>
                    <div id="nameParent" class="mt-4">
                        <label class="fw-bold">Packing details report</label>
                        <input id="packingDetailsReport" class="form-control" />
                    </div>
                    <div id="nameParent" class="mt-4">
                        <label class="fw-bold">Report Caption</label>
                        <input id="reportCaption" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">BUYER</label>
                        <select id="drBuyer" class="form-control select2">
                        </select>
                    </div>
                    <div id="nameParent" class="mt-4">
                        <label class="fw-bold">Dynamic Report Controller</label>
                        <input id="dynamicReportController" class="form-control" />
                    </div>
                    <div id="nameParent" class="mt-4">
                        <label class="fw-bold">Dynamic Report Action</label>
                        <input id="dynamicReportAction" class="form-control" />
                    </div>
                    <div id="nameParent" class="mt-4">
                        <label class="fw-bold">Design Person Name</label>
                        <input id="dynamicPersonName" class="form-control" />
                    </div>
                    <div id="nameParent" class="mt-4">
                        <label class="fw-bold">Report Location</label>
                        <input id="reportLocation" class="form-control" />
                    </div>
                    <div id="nameParent" class="mt-4">
                        <label class="fw-bold">Verified By Person</label>
                        <input id="verifiedBtyPerson" class="form-control" />
                    </div>
                    <div id="nameParent" class="mt-4">
                        <label class="fw-bold">Complete Per [%] </label>
                        <input id="CompletePercnt" class="form-control" />
                        <span class="text-danger" id="percent-validation"></span>
                    </div>
                    <div id="nameParent" class="mt-4">
                        <label class="fw-bold">Remarks</label>
                        <input id="remarKs" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="" id="IsVerified">
                            <label class="form-check-label" for="flexCheckDefault">
                                Is verified
                            </label>
                        </div>
                    </div>
                </div>
                <div class="offcanvas-footer">
                    <div class="modal-footer my-2">
                        <button id="closeDRffcanvasBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #949494; margin-right: 15px;">Cancel</button>
                        <button id="SaveDRBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #2ca01c;margin-right: 15px;">Save</button>
                    </div>
                </div>
            </div>

            @*offcanvas for add por of discharge ends*@
        </div>
    </div>
    @*expenses tag and buttons ends*@

    @*gear icon and other two buttons starts*@
    <div class="d-flex justify-content-between">
        <div style="display: flex;">
                    <input type="text" class="textbox search_box ms-3 mt-3" id="searchInputdr" name="keywords" autocomplete="off" placeholder="Search" style="width: 350px; border: 1px solid #8080807d;height: 40px; border-radius: 25px;padding-left: 15px;" />
        </div>

        <div>
            <a href="#" id="print-table-dr" class="text-decoration-none text-black me-1">
                <i class="bi bi-printer fs-5"></i>
            </a>
            <a href="#" id="download-xlsx-dr" class="text-decoration-none text-black me-1">
                <i class="bi bi-file-earmark-excel fs-5"></i>
            </a>
            <div title="Settings" class="dropdown1 mt-3 custom-grid" style="display:inline-block;">
                <a href="#" class="text-decoration-none text-black me-1" id="dropdownMenuButton1" data-bs-toggle="dropdown"
                   aria-expanded="false">
                    <i class="bi bi-gear fs-5"></i>
                </a>
                <div class="dropdown-menu gear-dropdown2" aria-labelledby="dropdownMenuButton-expense">
                    <div class="row p-4 main-dropdown-size" style="overflow:hidden;">
                        <div class="col">
                            <span class="fw-bold ms-3">Columns</span>
                            <hr class="m-0 w-75 ms-3 w-sm-50 " />
                            <ul class="list-unstyled">
                                <li>
                                    <div id="DRColumnList" class="report-grid">
                                    </div>
                                </li>
                            </ul>

                        </div>

                        <div class="ms-3">
                            <label>Rows</label> <br />
                            <select name="rows" id="DRRows" class="cursor-pointer" style="padding: 10px 0 10px 5px; width: 70px;">
                                <option value="0" disabled selected>Rows</option>
                                <option value="5" selected>5</option>
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="50">50</option>
                                <option value="100">100</option>
                                <option value="1000">1000</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>

    @*gear icon and other two buttons ends*@

    @*expenses tabulators starts*@
    <div id="tableContainer" class="mt-4">
        <div id="DRable" style="min-height:100%"></div>
    </div>
</div>



@*-------------notify party all html tags starts--------------*@
<div id="NPView" class="d-none">
    @*expenses tag and buttons starts*@
    <div class="row py-3" style="background: #e9ecef6b;">
        <div class="col-lg-3">
            <p class="fs-4 fw-bold">NOTIFY PARTY</p>
        </div>
        <div class="col-lg">
            <div class="float-end">
                <button class="btn btn-success fw-bold ms-3 h-100 radius-30" type="button" data-bs-toggle="offcanvas" data-bs-target="#NPOffcanvas">
                    New
                </button>
            </div>
            @*offcanvas for add sizes starts*@
            <div class="offcanvas offcanvas-end scrollable-offcanvas" tabindex="-1" id="NPOffcanvas" data-bs-backdrop="false" style="width: 50%;">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title">Add New</h5>
                    <button onclick="clearOffCanvasNP()" id="offcanvasCloseBtn" type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <input type="hidden" id="NPId" name="Id" value="" />
                    
                    <div class="mt-4">
                        <label class="fw-bold">Notify Party Name</label>
                        <input id="npName" class="form-control" />
                        <span class="text-danger" id="catNameValidation"></span>
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Notify Party Search Name</label>
                        <input id="npsName" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Shop code</label>
                        <input id="shopCode" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Email</label>
                        <input id="email" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="" id="inactive">
                            <label class="form-check-label" for="flexCheckDefault">
                                inactive
                            </label>
                        </div>
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">SL No.</label>
                        <input id="slNo" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Buyer</label>
                        <select id="buyer" class="form-control select2">
                        </select>
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Country</label>
                        <select id="npCountry" class="form-control select2">
                        </select>
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Port of discharge</label>
                        <select id="pod" class="form-control select2">
                        </select>
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Report link</label>
                        <select id="rptlink" class="form-control select2">
                        </select>
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Phone</label>
                       <input id="phone" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Address</label>
                        <div class="form-floating">
                            <textarea class="form-control" placeholder="Leave a comment here" id="adrs1" style="height: 100px"></textarea>
                        </div>
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Address 2</label>
                        <div class="form-floating">
                            <textarea class="form-control" placeholder="Leave a comment here" id="adrs2" style="height: 100px"></textarea>
                        </div>
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Shipped to</label>
                        <div class="form-floating">
                            <textarea class="form-control" placeholder="Leave a comment here" id="shpto" style="height: 100px"></textarea>
                        </div>
                    </div>
                </div>

                <div class="offcanvas-footer">
                    <div class="modal-footer my-2">
                        <button id="closeNPOffcanvasBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #949494; margin-right: 15px;">Cancel</button>
                        <button id="SaveNPtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #2ca01c;margin-right: 15px;">Save</button>
                    </div>
                </div>
            </div>

            @*offcanvas for add sizes ends*@
        </div>
    </div>

    @*gear icon and other two buttons starts*@
    <div class="d-flex justify-content-between">
        <div class="dropdown batch-dropdown mt-3">
                    <input type="text" class="textbox search_box ms-3 mt-3" id="searchInputnp" name="keywords" autocomplete="off" placeholder="Search" style="width: 350px; border: 1px solid #8080807d;height: 40px; border-radius: 25px;padding-left: 15px;" />
        </div>

        <div>
        </div>
        <div>
            <a href="#" id="print-table-np" class="text-decoration-none text-black me-1">
                <i class="bi bi-printer fs-5"></i>
            </a>
            <a href="#" id="download-xlsx-np" class="text-decoration-none text-black me-1">
                <i class="bi bi-file-earmark-excel fs-5"></i>
            </a>
            <div title="Settings" class="dropdown1 mt-3 custom-grid" style="display:inline-block;">
                <a href="#" class="text-decoration-none text-black me-1" id="dropdownMenuButton1" data-bs-toggle="dropdown"
                   aria-expanded="false">
                    <i class="bi bi-gear fs-5"></i>
                </a>
                <div class="dropdown-menu gear-dropdown1" aria-labelledby="dropdownMenuButton-expense">
                    <div class="row p-4 main-dropdown-size" style="overflow:hidden;">
                        <div class="col">
                            <span class="fw-bold ms-3">Columns</span>
                            <hr class="m-0 w-75 ms-3 w-sm-50 " />
                            <ul class="list-unstyled">
                                <li>
                                    <div id="NPColumnList" class="notify-grid">
                                    </div>
                                </li>
                            </ul>

                        </div>

                        <div class="ms-3">
                            <label>Rows</label> <br />
                            <select name="rows" id="NPRows" class="cursor-pointer" style="padding: 10px 0 10px 5px; width: 70px;">
                                <option value="0" disabled selected>Rows</option>
                                <option value="5" selected>5</option>
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="50">50</option>
                                <option value="100">100</option>
                                <option value="1000">1000</option>
                            </select>
                        </div>
                    </div>
                </div>


            </div>

        </div>

    </div>

    @*gear icon and other two buttons ends*@

    @*suppliers tabulators starts*@
    <div id="PaymentTableContainer" class="mt-4">
        <div id="NPTable" style="min-height:100%"></div>
    </div>
    @*suppliers tabulators ends*@
</div>




@*-------------buyer group all html tags starts--------------*@
<div id="BGView" class="d-none">
    @*expenses tag and buttons starts*@
    <div class="row py-3" style="background: #e9ecef6b;">
        <div class="col-lg-2">
            <p class="fs-4 fw-bold">BUYER GROUP</p>
        </div>
        <div class="col-lg">
            <div class="float-end">
                <button class="btn btn-success fw-bold ms-3 h-100 radius-30" type="button" data-bs-toggle="offcanvas" data-bs-target="#BGOffcanvas">
                    New
                </button>
            </div>
            @*offcanvas for add sizes starts*@
            <div class="offcanvas offcanvas-end scrollable-offcanvas" tabindex="-1" id="BGOffcanvas" data-bs-backdrop="false" style="width: 50%;">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title">Add New</h5>
                    <button onclick="clearOffCanvasBG()" id="offcanvasCloseBtn" type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <input type="hidden" id="BGId" name="Id" value="" />

                    <div class="mt-4">
                        <label class="fw-bold">Name</label>
                        <input id="bgName" class="form-control" />
                        <span class="text-danger" id="bgNameValidation"></span>
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Short Name</label>
                        <input id="bgShortName" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Code</label>
                        <input id="bgCode" class="form-control" />
                    </div>
                </div>

                <div class="offcanvas-footer">
                    <div class="modal-footer my-2">
                        <button id="closeBGOffcanvasBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #949494; margin-right: 15px;">Cancel</button>
                        <button id="SaveBGtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #2ca01c;margin-right: 15px;">Save</button>
                    </div>
                </div>
            </div>

            @*offcanvas for add sizes ends*@
        </div>
    </div>

    @*gear icon and other two buttons starts*@
    <div class="d-flex justify-content-between">
        <div class="dropdown batch-dropdown mt-3">
                    <input type="text" class="textbox search_box ms-3 mt-3" id="searchInputbg" name="keywords" autocomplete="off" placeholder="Search" style="width: 350px; border: 1px solid #8080807d;height: 40px; border-radius: 25px;padding-left: 15px;" />
        </div>

        <div>
        </div>
        <div>
            <a href="#" id="print-table-bg" class="text-decoration-none text-black me-1">
                <i class="bi bi-printer fs-5"></i>
            </a>
            <a href="#" id="download-xlsx-bg" class="text-decoration-none text-black me-1">
                <i class="bi bi-file-earmark-excel fs-5"></i>
            </a>
            <div title="Settings" class="dropdown1 mt-3 custom-grid" style="display:inline-block;">
                <a href="#" class="text-decoration-none text-black me-1" id="dropdownMenuButton1" data-bs-toggle="dropdown"
                   aria-expanded="false">
                    <i class="bi bi-gear fs-5"></i>
                </a>
                <div class="dropdown-menu gear-dropdown" aria-labelledby="dropdownMenuButton-expense">
                    <div class="row p-4 main-dropdown-size" style="overflow:hidden;">
                        <div class="col">
                            <span class="fw-bold ms-3">Columns</span>
                            <hr class="m-0 w-75 ms-3 w-sm-50 " />
                            <ul class="list-unstyled">
                                <li>
                                    <div id="BGColumnList" class="custom-grid">
                                    </div>
                                </li>
                            </ul>

                        </div>

                        <div class="ms-3">
                            <label>Rows</label> <br />
                            <select name="rows" id="BGRows" class="cursor-pointer" style="padding: 10px 0 10px 5px; width: 70px;">
                                <option value="0" disabled selected>Rows</option>
                                <option value="5" selected>5</option>
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="50">50</option>
                                <option value="100">100</option>
                                <option value="1000">1000</option>
                            </select>
                        </div>
                    </div>
                </div>


            </div>

        </div>

    </div>

    @*gear icon and other two buttons ends*@

    @*suppliers tabulators starts*@
    <div id="PaymentTableContainer" class="mt-4">
        <div id="BGTable" style="min-height:100%"></div>
    </div>
    @*suppliers tabulators ends*@
</div>




@*-------------concern informtaion all html tags starts--------------*@
<div id="CIView" class="d-none">
    @*expenses tag and buttons starts*@
    <div class="row py-3" style="background: #e9ecef6b;">
        <div class="col-lg-4">
            <p class="fs-4 fw-bold">COMPANY INFORMATION</p>
        </div>
        <div class="col-lg">
            <div class="float-end">
                <button class="btn btn-success fw-bold ms-3 h-100 radius-30" type="button" data-bs-toggle="offcanvas" data-bs-target="#CIOffcanvas">
                    New
                </button>
            </div>
            @*offcanvas for add sizes starts*@
            <div class="offcanvas offcanvas-end scrollable-offcanvas" tabindex="-1" id="CIOffcanvas" data-bs-backdrop="false" style="width: 50%;">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title">Add New</h5>
                    <button onclick="clearOffCanvasCI()" id="offcanvasCloseBtn" type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <input type="hidden" id="CIId" name="Id" value="" />

                    <div class="mt-4">
                        <label class="fw-bold">Concern</label>
                        <input id="concern" class="form-control" />
                        <span class="text-danger" id="concernValidation"></span>
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Short name</label>
                        <input id="shorTname" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Address</label>
<textarea class="form-control" id="conAdrs1" style="height: 100px"></textarea>                    
</div>
                    <div class="mt-4">
                        <label class="fw-bold">Address 2</label>
<textarea class="form-control" id="conAdrs2" style="height: 100px"></textarea>                    
</div>
                    <div class="mt-4">
                        <label class="fw-bold">Application Short Address</label>
<textarea class="form-control" id="conAdrs3" style="height: 50px"></textarea>
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Phone no</label>
                        <input id="concernPhone" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Factory Phone no</label>
                        <input id="concernFactoryPhone" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Fax</label>
                        <input id="concernFax" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Email</label>
                        <input id="concernEmail" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Contact Person</label>
                        <input id="concernContactPerson" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Cont. Designation</label>
                        <input id="concernContDes" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Business Type</label>
                        <input id="concernBusType" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Trade License No</label>
                        <input id="tradeLic" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">TIN No</label>
                        <input id="tin" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">VAT No</label>
                        <input id="vat" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">IRC No</label>
                        <input id="irc" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">BKMEA Reg No</label>
                        <input id="bkmea" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Shipping Marks</label>
                        <input id="ShippingMarks" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="" id="status">
                            <label class="form-check-label" for="flexCheckDefault">
                                Status
                            </label>
                        </div>
                    </div>
                </div>

                <div class="offcanvas-footer">
                    <div class="modal-footer my-2">
                        <button id="closeCIOffcanvasBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #949494; margin-right: 15px;">Cancel</button>
                        <button id="SaveCItn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #2ca01c;margin-right: 15px;">Save</button>
                    </div>
                </div>
            </div>

            @*offcanvas for add sizes ends*@
        </div>
    </div>

    @*gear icon and other two buttons starts*@
    <div class="d-flex justify-content-between">
        <div class="dropdown batch-dropdown mt-3">
                    <input type="text" class="textbox search_box ms-3 mt-3" id="searchInputci" name="keywords" autocomplete="off" placeholder="Search" style="width: 350px; border: 1px solid #8080807d;height: 40px; border-radius: 25px;padding-left: 15px;" />
        </div>

        <div>
        </div>
        <div>
            <a href="#" id="print-table-ci" class="text-decoration-none text-black me-1">
                <i class="bi bi-printer fs-5"></i>
            </a>
            <a href="#" id="download-xlsx-ci" class="text-decoration-none text-black me-1">
                <i class="bi bi-file-earmark-excel fs-5"></i>
            </a>
            <div title="Settings" class="dropdown1 mt-3 custom-grid" style="display:inline-block;">
                <a href="#" class="text-decoration-none text-black me-1" id="dropdownMenuButton1" data-bs-toggle="dropdown"
                   aria-expanded="false">
                    <i class="bi bi-gear fs-5"></i>
                </a>
                <div class="dropdown-menu gear-dropdown" aria-labelledby="dropdownMenuButton-expense">
                    <div class="row p-4 main-dropdown-size" style="overflow:hidden;">
                        <div class="col">
                            <span class="fw-bold ms-3">Columns</span>
                            <hr class="m-0 w-75 ms-3 w-sm-50 " />
                            <ul class="list-unstyled">
                                <li>
                                    <div id="CIColumnList" class="custom-grid">
                                    </div>
                                </li>
                            </ul>

                        </div>

                        <div class="ms-3">
                            <label>Rows</label> <br />
                            <select name="rows" id="CIRows" class="cursor-pointer" style="padding: 10px 0 10px 5px; width: 70px;">
                                <option value="0" disabled selected>Rows</option>
                                <option value="5" selected>5</option>
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="50">50</option>
                                <option value="100">100</option>
                                <option value="1000">1000</option>
                            </select>
                        </div>
                    </div>
                </div>


            </div>

        </div>

    </div>

    @*gear icon and other two buttons ends*@

    @*suppliers tabulators starts*@
    <div id="PaymentTableContainer" class="mt-4">
        <div id="CITable" style="min-height:100%"></div>
    </div>
    @*suppliers tabulators ends*@
</div>

@*-------------conern all html tags starts--------------*@
<div id="ConcernView" class="d-none">
    @*expenses tag and buttons starts*@
    <div class="row py-3" style="background: #e9ecef6b;">
        <div class="col-lg-3">
            <p class="fs-4 fw-bold">CONCERN BANK</p>
        </div>
        <div class="col-lg">
            <div class="float-end">
                <button class="btn btn-success fw-bold ms-3 h-100 radius-30" type="button" data-bs-toggle="offcanvas" data-bs-target="#ConcernOffcanvas">
                    New
                </button>
            </div>
            @*offcanvas for add sizes starts*@
            <div class="offcanvas offcanvas-end scrollable-offcanvas" tabindex="-1" id="ConcernOffcanvas" data-bs-backdrop="false" style="width: 50%;">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title">Add New</h5>
                    <button onclick="clearOffCanvasDataConcern()" id="offcanvasCloseBtn" type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <input type="hidden" id="ConcernnId" name="Id" value="" />
                    <div class="row">
                            
                    <div class="mt-4">
                        <label class="fw-bold">Conern Bank</label>
                        <input id="concernBank" class="form-control" />
                        <span class="text-danger" id="concernBankValidation"></span>
                    </div>
                            <div class="mt-4">
                                <label class="fw-bold">Swift Code</label>
                                <input id="swiftCode" class="form-control" />
                            </div>
                    </div>
                    <div class="row">
                        
                    <div class="mt-4">
                        <label class="fw-bold">Branch Address</label>
                        <div class="form-floating">
                            <textarea class="form-control" placeholder="Leave a comment here" id="concernbranchAddress" style="height: 100px"></textarea>
                        </div>
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Country</label>
                            <select id="concernCountry" class="form-control select2">
                        </select>
                    </div>
                    </div>
                    <div class="row">
                        
                    <div class="mt-4 ">
                        <label class="fw-bold">Branch Address 2</label>
                        <div class="form-floating">
                            <textarea class="form-control" placeholder="Leave a comment here" id="concernbranchAddress2" style="height: 100px"></textarea>
                        </div>
                    </div>
                    <div class="mt-4 ">
                        <label class="fw-bold">Phone No</label>
                        <input id="concernphoneNo" class="form-control" />
                    </div>
                        <div class="mt-4">
                            <label class="fw-bold">Short Name</label>
                            <input id="concernShortName" class="form-control" />
                        </div>
                    <div class="mt-4">
                        <label class="fw-bold">Remarks</label>
                        <div class="form-floating">
                            <textarea class="form-control" placeholder="Leave a comment here" id="concernRemarks" style="height: 100px"></textarea>
                        </div>
                    </div>
                    </div>
                </div>
                
                <div class="offcanvas-footer">
                    <div class="modal-footer my-2">
                        <button id="closeConcernOffcanvasBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #949494; margin-right: 15px;">Cancel</button>
                        <button id="SaveConcernBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #2ca01c;margin-right: 15px;">Save</button>
                    </div>
                </div>
            </div>

            @*offcanvas for add sizes ends*@
        </div>
    </div>

    @*gear icon and other two buttons starts*@
    <div class="d-flex justify-content-between">
        <div class="dropdown batch-dropdown mt-3">
            <input type="text" class="textbox search_box ms-3 mt-3" id="searchInputnp" name="keywords" autocomplete="off" placeholder="Search" style="width: 350px; border: 1px solid #8080807d;height: 40px; border-radius: 25px;padding-left: 15px;" />
        </div>

        <div>
        </div>
        <div>
            <a href="#" id="print-table-concern" class="text-decoration-none text-black me-1">
                <i class="bi bi-printer fs-5"></i>
            </a>
            <a href="#" id="download-xlsx-concern" class="text-decoration-none text-black me-1">
                <i class="bi bi-file-earmark-excel fs-5"></i>
            </a>
            <div title="Settings" class="dropdown1 mt-3 custom-grid" style="display:inline-block;">
                <a href="#" class="text-decoration-none text-black me-1" id="dropdownMenuButton1" data-bs-toggle="dropdown"
                   aria-expanded="false">
                    <i class="bi bi-gear fs-5"></i>
                </a>
                <div class="dropdown-menu gear-dropdown" aria-labelledby="dropdownMenuButton-expense">
                    <div class="row p-4 main-dropdown-size" style="overflow:hidden;">
                        <div class="col">
                            <span class="fw-bold ms-3">Columns</span>
                            <hr class="m-0 w-75 ms-3 w-sm-50 " />
                            <ul class="list-unstyled">
                                <li>
                                    <div id="concernColumnList" class="custom-grid">
                                    </div>
                                </li>
                            </ul>

                        </div>

                        <div class="ms-3">
                            <label>Rows</label> <br />
                            <select name="rows" id="concernRows" class="cursor-pointer" style="padding: 10px 0 10px 5px; width: 70px;">
                                <option value="0" disabled selected>Rows</option>
                                <option value="5" selected>5</option>
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="50">50</option>
                                <option value="100">100</option>
                                <option value="1000">1000</option>
                            </select>
                        </div>
                    </div>
                </div>


            </div>

        </div>

    </div>

    @*gear icon and other two buttons ends*@

    @*suppliers tabulators starts*@
    <div id="PaymentTableContainer" class="mt-4">
        <div id="concernTable" style="min-height:100%"></div>
    </div>
    @*suppliers tabulators ends*@
</div>

@*-------------buyer supplier bank all html tags starts--------------*@
<div id="LBView" class="d-none">
    @*expenses tag and buttons starts*@
    <div class="row py-3" style="background: #e9ecef6b;">
        <div class="col-lg-4">
            <p class="fs-4 fw-bold">BUYER/SUPPLIER BANK</p>
        </div>
        <div class="col-lg">
            <div class="float-end">
                <button class="btn btn-success fw-bold ms-3 h-100 radius-30" type="button" data-bs-toggle="offcanvas" data-bs-target="#LBOffcanvas">
                    New
                </button>
            </div>
            @*offcanvas for add sizes starts*@
            <div class="offcanvas offcanvas-end scrollable-offcanvas" tabindex="-1" id="LBOffcanvas" data-bs-backdrop="false" style="width: 50%;">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title">Add New</h5>
                    <button onclick="clearOffCanvasLB()" id="offcanvasCloseBtn" type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <input type="hidden" id="LBId" name="Id" value="" />

                    <div class="mt-4">
                        <label class="fw-bold">Buyer/Supplier Bank</label>
                        <input id="buyerSupplierBankName" class="form-control" />
                        <span class="text-danger" id="buyerSupplierBankValidation"></span>
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Swift code</label>
                        <input id="swiftName" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Branch address</label>
<textarea class="form-control" id="bAdrs1" style="height: 100px"></textarea>                    </div>
                    <div id="nameParent" class="mt-4">
                        <label class="fw-bold">Country</label>
                        <select id="Lbcountry" class="form-control select2">
                        </select>
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Branch address 2</label>
<textarea class="form-control" id="bAdrs2" style="height: 100px"></textarea>                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Phone no</label>
                        <input id="LBpHONE" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Remarks</label>
                        <input id="branchRemarks" class="form-control" />
                    </div>
                </div>

                <div class="offcanvas-footer">
                    <div class="modal-footer my-2">
                        <button id="closeLBOffcanvasBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #949494; margin-right: 15px;">Cancel</button>
                        <button id="SaveLBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #2ca01c;margin-right: 15px;">Save</button>
                    </div>
                </div>
            </div>

            @*offcanvas for add sizes ends*@
        </div>
    </div>

    @*gear icon and other two buttons starts*@
    <div class="d-flex justify-content-between">
        <div class="dropdown batch-dropdown mt-3">
                    <input type="text" class="textbox search_box ms-3 mt-3" id="searchInputlb" name="keywords" autocomplete="off" placeholder="Search" style="width: 350px; border: 1px solid #8080807d;height: 40px; border-radius: 25px;padding-left: 15px;" />
        </div>

        <div>
        </div>
        <div>
            <a href="#" id="print-table-lb" class="text-decoration-none text-black me-1">
                <i class="bi bi-printer fs-5"></i>
            </a>
            <a href="#" id="download-xlsx-lb" class="text-decoration-none text-black me-1">
                <i class="bi bi-file-earmark-excel fs-5"></i>
            </a>
            <div title="Settings" class="dropdown1 mt-3 custom-grid" style="display:inline-block;">
                <a href="#" class="text-decoration-none text-black me-1" id="dropdownMenuButton1" data-bs-toggle="dropdown"
                   aria-expanded="false">
                    <i class="bi bi-gear fs-5"></i>
                </a>
                <div class="dropdown-menu gear-dropdown" aria-labelledby="dropdownMenuButton-expense">
                    <div class="row p-4 main-dropdown-size" style="overflow:hidden;">
                        <div class="col">
                            <span class="fw-bold ms-3">Columns</span>
                            <hr class="m-0 w-75 ms-3 w-sm-50 " />
                            <ul class="list-unstyled">
                                <li>
                                    <div id="LBColumnList" class="custom-grid">
                                    </div>
                                </li>
                            </ul>

                        </div>

                        <div class="ms-3">
                            <label>Rows</label> <br />
                            <select name="rows" id="LBRows" class="cursor-pointer" style="padding: 10px 0 10px 5px; width: 70px;">
                                <option value="0" disabled selected>Rows</option>
                                <option value="5" selected>5</option>
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="50">50</option>
                                <option value="100">100</option>
                                <option value="1000">1000</option>
                            </select>
                        </div>
                    </div>
                </div>


            </div>

        </div>

    </div>

    @*gear icon and other two buttons ends*@

    @*suppliers tabulators starts*@
    <div id="PaymentTableContainer" class="mt-4">
        <div id="LBTable" style="min-height:100%"></div>
    </div>
    @*suppliers tabulators ends*@
</div>

@*-------------lien Bank Acc html tags starts--------------*@
<div id="LienBankAccView" class="d-none">
    @*expenses tag and buttons starts*@
    <div class="row py-3" style="background: #e9ecef6b;">
        <div class="col-lg-4">
            <p class="fs-4 fw-bold">BUYER/SUPPLIER BANK ACC</p>
        </div>
        <div class="col-lg">
            <div class="float-end">
                <button class="btn btn-success fw-bold ms-3 h-100 radius-30" type="button" data-bs-toggle="offcanvas" data-bs-target="#LienBankAccOffcanvas">
                    New
                </button>
            </div>
            @*offcanvas for add sizes starts*@
            <div class="offcanvas offcanvas-end scrollable-offcanvas" tabindex="-1" id="LienBankAccOffcanvas" data-bs-backdrop="false" style="width: 50%;">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title">Add New</h5>
                    <button onclick="clearOffCanvasDataLienBankAcc()" id="offcanvasCloseBtn" type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <input type="hidden" id="lienBankAccId" name="Id" value="" />
                    <div class="row">
                            
                       <div class=" mt-4">
                            <label class="fw-bold">Bank Account Number </label>
                        <input id="LienBankAcc" class="form-control" />
                            <span class="text-danger" id="LienBankAccValidation"></span>
                       </div>
                        <div class=" mt-4">
                            <label class="fw-bold">Bank Account Name</label>
                            <input id="BankAccountName" class="form-control" />
                        </div>
                         <div class=" mt-4">
                              <label class="fw-bold">Swift Code</label>
                              <input id="LienBankAccswiftCode" class="form-control" />
                         </div>
                       
                    </div>
                    <div class="row">
                    </div>
                    <div class="row">
                       <div class="mt-4 ">
                          <label class="fw-bold">Country</label>
                           <select id="lienBankAccCountry" class="form-control select2">
                          </select>
                       </div>

                      <div class="mt-4 ">
                        <label class="fw-bold">Company</label>
                            <select id="lienBankAccCompnay" class="form-control select2">
                        </select>
                      </div>
                       <div class="mt-4 ">
                        <label class="fw-bold">Buyer / Supplier Bank</label>
                            <select id="lienBankAccLienBank" class="form-control select2">
                        </select>
                        </div>
                                             
                    </div>
                    <div class="row">
                        <div class="mt-4 ">
                            <label class="fw-bold">Supplier</label>
                            <select id="lienBankAccSupplier" class="form-control select2">
                            </select>
                        </div>
                        <div class="mt-4 ">
                            <label class="fw-bold">Buyer</label>
                            <select id="lienBankAccBuyer" class="form-control select2">
                            </select>
                        </div>

                    </div>
                </div>

                <div class="offcanvas-footer">
                    <div class="modal-footer my-2">
                        <button id="closeLienBankAccOffcanvasBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #949494; margin-right: 15px;">Cancel</button>
                        <button id="SaveLienBankAccBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #2ca01c;margin-right: 15px;">Save</button>
                    </div>
                </div>
            </div>

            @*offcanvas for add sizes ends*@
        </div>
    </div>

    @*gear icon and other two buttons starts*@
    <div class="d-flex justify-content-between">
        <div class="dropdown batch-dropdown mt-3">
            <input type="text" class="textbox search_box ms-3 mt-3" id="searchInputLienBankAcc" name="keywords" autocomplete="off" placeholder="Search" style="width: 350px; border: 1px solid #8080807d;height: 40px; border-radius: 25px;padding-left: 15px;" />
        </div>

        <div>
        </div>
        <div>
            <a href="#" id="print-table-LienBankAcc" class="text-decoration-none text-black me-1">
                <i class="bi bi-printer fs-5"></i>
            </a>
            <a href="#" id="download-xlsx-LienBankAcc" class="text-decoration-none text-black me-1">
                <i class="bi bi-file-earmark-excel fs-5"></i>
            </a>
            <div title="Settings" class="dropdown1 mt-3 custom-grid" style="display:inline-block;">
                <a href="#" class="text-decoration-none text-black me-1" id="dropdownMenuButton1" data-bs-toggle="dropdown"
                   aria-expanded="false">
                    <i class="bi bi-gear fs-5"></i>
                </a>
                <div class="dropdown-menu gear-dropdown" aria-labelledby="dropdownMenuButton-expense">
                    <div class="row p-4 main-dropdown-size" style="overflow:hidden;">
                        <div class="col">
                            <span class="fw-bold ms-3">Columns</span>
                            <hr class="m-0 w-75 ms-3 w-sm-50 " />
                            <ul class="list-unstyled">
                                <li>
                                    <div id="LienBankAccColumnList" class="custom-grid">
                                    </div>
                                </li>
                            </ul>

                        </div>

                        <div class="ms-3">
                            <label>Rows</label> <br />
                            <select name="rows" id="LienBankAccRows" class="cursor-pointer" style="padding: 10px 0 10px 5px; width: 70px;">
                                <option value="0" disabled selected>Rows</option>
                                <option value="5" selected>5</option>
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="50">50</option>
                                <option value="100">100</option>
                                <option value="1000">1000</option>
                            </select>
                        </div>
                    </div>
                </div>


            </div>

        </div>

    </div>

    @*gear icon and other two buttons ends*@

    @*suppliers tabulators starts*@
    <div id="PaymentTableContainer" class="mt-4">
        <div id="LienBankAccTable" style="min-height:100%"></div>
    </div>
    @*suppliers tabulators ends*@
</div>


@*-------------bank account all html tags starts--------------*@
<div id="BAView" class="d-none">
    @*expenses tag and buttons starts*@
    <div class="row py-3" style="background: #e9ecef6b;">
        <div class="col-lg-4">
            <p class="fs-4 fw-bold">CONECRN BANK ACCOUNT NO</p>
        </div>
        <div class="col-lg">
            <div class="float-end">
                <button class="btn btn-success fw-bold ms-3 h-100 radius-30" type="button" data-bs-toggle="offcanvas" data-bs-target="#BAOffcanvas">
                    New
                </button>
            </div>
            @*offcanvas for add sizes starts*@
            <div class="offcanvas offcanvas-end scrollable-offcanvas" tabindex="-1" id="BAOffcanvas" data-bs-backdrop="false" style="width: 50%;">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title">Add New</h5>
                    <button onclick="clearOffCanvasBA()" id="offcanvasCloseBtn" type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <input type="hidden" id="BAId" name="Id" value="" />

                    <div class="mt-4">
                        <label class="fw-bold">Bank account no</label>
                        <input id="bankAccountNum" class="form-control" />
                        <span class="text-danger" id="bankAccountNoValidation"></span>
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Company</label>
                        <select id="Bacom" class="form-control select2">
                        </select>
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Concer Bank</label>
                        <select id="baconcernBank" class="form-control select2">
                        </select>
                    </div>
                </div>

                <div class="offcanvas-footer">
                    <div class="modal-footer my-2">
                        <button id="closeBAOffcanvasBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #949494; margin-right: 15px;">Cancel</button>
                        <button id="SaveBAtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #2ca01c;margin-right: 15px;">Save</button>
                    </div>
                </div>
            </div>

            @*offcanvas for add sizes ends*@
        </div>
    </div>

    @*gear icon and other two buttons starts*@
    <div class="d-flex justify-content-between">
        <div class="dropdown batch-dropdown mt-3">
                    <input type="text" class="textbox search_box ms-3 mt-3" id="searchInputba" name="keywords" autocomplete="off" placeholder="Search" style="width: 350px; border: 1px solid #8080807d;height: 40px; border-radius: 25px;padding-left: 15px;" />
        </div>

        <div>
        </div>
        <div>
            <a href="#" id="print-table-ba" class="text-decoration-none text-black me-1">
                <i class="bi bi-printer fs-5"></i>
            </a>
            <a href="#" id="download-xlsx-ba" class="text-decoration-none text-black me-1">
                <i class="bi bi-file-earmark-excel fs-5"></i>
            </a>
            <div title="Settings" class="dropdown1 mt-3 custom-grid" style="display:inline-block;">
                <a href="#" class="text-decoration-none text-black me-1" id="dropdownMenuButton1" data-bs-toggle="dropdown"
                   aria-expanded="false">
                    <i class="bi bi-gear fs-5"></i>
                </a>
                <div class="dropdown-menu gear-dropdown" aria-labelledby="dropdownMenuButton-expense">
                    <div class="row p-4 main-dropdown-size" style="overflow:hidden;">
                        <div class="col">
                            <span class="fw-bold ms-3">Columns</span>
                            <hr class="m-0 w-75 ms-3 w-sm-50 " />
                            <ul class="list-unstyled">
                                <li>
                                    <div id="BAColumnList" class="custom-grid">
                                    </div>
                                </li>
                            </ul>

                        </div>

                        <div class="ms-3">
                            <label>Rows</label> <br />
                            <select name="rows" id="BARows" class="cursor-pointer" style="padding: 10px 0 10px 5px; width: 70px;">
                                <option value="0" disabled selected>Rows</option>
                                <option value="5" selected>5</option>
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="50">50</option>
                                <option value="100">100</option>
                                <option value="1000">1000</option>
                            </select>
                        </div>
                    </div>
                </div>


            </div>

        </div>

    </div>

    @*gear icon and other two buttons ends*@

    @*suppliers tabulators starts*@
    <div id="PaymentTableContainer" class="mt-4">
        <div id="BATable" style="min-height:100%"></div>
    </div>
    @*suppliers tabulators ends*@
</div>

<div id="MeasurementView" class="d-none">
    @*expenses tag and buttons starts*@
    <div class="row py-3" style="background: #e9ecef6b;">
        <div class="col-lg-4">
            <p class="fs-4 fw-bold">BOX MEASUREMENT</p>
        </div>
        <div class="col-lg">
            <div class="float-end">
                <button class="btn btn-success fw-bold ms-3 h-100 radius-30" type="button" data-bs-toggle="offcanvas" data-bs-target="#BOXOffcanvas">
                    New
                </button>
            </div>
            @*offcanvas for add sizes starts*@
            <div class="offcanvas offcanvas-end scrollable-offcanvas" tabindex="-1" id="BOXOffcanvas" data-bs-backdrop="false" style="width: 50%;">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title">Add New</h5>
                    <button onclick="clearOffCanvasBOX()" id="offcanvasCloseBtn" type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <input type="hidden" id="BOXId" name="Id" value="" />

                    <div class="mt-4">
                        <label class="fw-bold">Measurement No</label>
                        <input id="MeasurementNo" class="form-control" />
                        @* <span class="text-danger" id="bankAccountNoValidation"></span> *@
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Measurement Name</label>
                        <input id="MeasurementName" class="form-control" />
                    </div>
                    <div class="mt-4">
                        <label class="fw-bold">Box Height</label>
                        <input id="BoxHeight" class="form-control" />
                    </div>
                     <div class="mt-4">
                        <label class="fw-bold">Box Width</label>
                        <input id="BoxWidth" class="form-control" />
                    </div>
                     <div class="mt-4">
                        <label class="fw-bold">Box Length</label>
                        <input id="BoxLength" class="form-control" />
                    </div>
                     <div class="mt-4">
                        <label class="fw-bold">Calculation</label>
                        <input id="Calculation" class="form-control" />
                    </div>
                </div>

                <div class="offcanvas-footer">
                    <div class="modal-footer my-2">
                        <button id="closeBOXOffcanvasBtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #949494; margin-right: 15px;">Cancel</button>
                        <button id="SaveBOXbtn" type="submit" class="btn float-lg-end px-5 py-2 text-white fw-bolder" style="background: #2ca01c;margin-right: 15px;">Save</button>
                    </div>
                </div>
            </div>

            @*offcanvas for add sizes ends*@
        </div>
    </div>

    @*gear icon and other two buttons starts*@
    <div class="d-flex justify-content-between">
        <div class="dropdown batch-dropdown mt-3">
            <input type="text" class="textbox search_box ms-3 mt-3" id="searchInputbox" name="keywords" autocomplete="off" placeholder="Search" style="width: 350px; border: 1px solid #8080807d;height: 40px; border-radius: 25px;padding-left: 15px;" />
        </div>

        <div>
        </div>
        <div>
            <a href="#" id="print-table-box" class="text-decoration-none text-black me-1">
                <i class="bi bi-printer fs-5"></i>
            </a>
            <a href="#" id="download-xlsx-box" class="text-decoration-none text-black me-1">
                <i class="bi bi-file-earmark-excel fs-5"></i>
            </a>
            <div title="Settings" class="dropdown1 mt-3 custom-grid" style="display:inline-block;">
                <a href="#" class="text-decoration-none text-black me-1" id="dropdownMenuButton1" data-bs-toggle="dropdown"
                   aria-expanded="false">
                    <i class="bi bi-gear fs-5"></i>
                </a>
                <div class="dropdown-menu gear-dropdown" aria-labelledby="dropdownMenuButton-expense">
                    <div class="row p-4 main-dropdown-size" style="overflow:hidden;">
                        <div class="col">
                            <span class="fw-bold ms-3">Columns</span>
                            <hr class="m-0 w-75 ms-3 w-sm-50 " />
                            <ul class="list-unstyled">
                                <li>
                                    <div id="BOXColumnList" class="custom-grid">
                                    </div>
                                </li>
                            </ul>

                        </div>

                        <div class="ms-3">
                            <label>Rows</label> <br />
                            <select name="rows" id="BOXRows" class="cursor-pointer" style="padding: 10px 0 10px 5px; width: 70px;">
                                <option value="0" disabled selected>Rows</option>
                                <option value="5" selected>5</option>
                                <option value="10">10</option>
                                <option value="20">20</option>
                                <option value="50">50</option>
                                <option value="100">100</option>
                                <option value="1000">1000</option>
                            </select>
                        </div>
                    </div>
                </div>


            </div>

        </div>

    </div>

    @*gear icon and other two buttons ends*@

    @*suppliers tabulators starts*@
    <div id="PaymentTableContainer" class="mt-4">
        <div id="BOXTable" style="min-height:100%"></div>
    </div>
    @*suppliers tabulators ends*@
</div>

@section scripts{
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script type="text/javascript" src="https://oss.sheetjs.com/sheetjs/xlsx.full.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.20/jspdf.plugin.autotable.min.js"></script>
    <script type="text/javascript">


         $(document).ready(function () {
            $(".select2").select2({
                //dropdownParent: $("#POLOffcanvas")
            });
            $("#POLOffcanvas .select2").select2({
                dropdownParent: $("#POLOffcanvas")
            });
            $("#PODOffcanvas .select2").select2({
                dropdownParent: $("#PODOffcanvas")
            });
            $("#FDOffcanvas .select2").select2({
                dropdownParent: $("#FDOffcanvas")
            });
            $("#IGOffcanvas .select2").select2({
                dropdownParent: $("#IGOffcanvas")
            });
            $("#ITOffcanvas .select2").select2({
                dropdownParent: $("#ITOffcanvas")
            });
            $("#DROffcanvas .select2").select2({
                dropdownParent: $("#DROffcanvas")
            });
            $("#NPOffcanvas .select2").select2({
                dropdownParent: $("#NPOffcanvas")
            });           
            $("#CIOffcanvas .select2").select2({
                dropdownParent: $("#CIOffcanvas")
            });
            $("#ConcernOffcanvas .select2").select2({
                dropdownParent: $("#ConcernOffcanvas")
            });
            $("#LBOffcanvas .select2").select2({
                dropdownParent: $("#LBOffcanvas")
            });
            $("#LienBankAccOffcanvas .select2").select2({
                dropdownParent: $("#LienBankAccOffcanvas")
            });
            $("#BAOffcanvas .select2").select2({
                dropdownParent: $("#BAOffcanvas")
            });                      
        });

        //======nav functionalities starts========
        $(".nav-link").click(function () {
            // Remove the "active" class from all nav links
            $(".nav-link").removeClass("active");

            // Add the "active" class to the clicked nav link
            $(this).addClass("active");
        });

        if ('@ListType' === "PortofDischarge") {
            $("#PortofLoading").removeClass("active");
            $("#PortofDischarge").addClass("active");
            $("#FinalDestination").removeClass("active");
            $("#ItemGroup").removeClass("active");
            $("#ItemDescription").removeClass("active");
            $("#DynamicReport").removeClass("active");
            $("#NotifyParty").removeClass("active");
            $("#BuyerGroup").removeClass("active");
            $("#CompanyInfo").removeClass("active");
            $("#ConcernBank").removeClass("active");
            $("#BuyerSupplierBank").removeClass("active");
            $("#BuyerSupplierBankAccount").removeClass("active");
            $("#ConcernBankAccountNo").removeClass("active");
            $("#BoxMeasurement").removeClass("active");

            $("#PortOFLoadingView").addClass("d-none");
            $("#PortOFDischargeView").removeClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            PODGetData();
            Podcountry();
        }

        $("#PortofDischarge").on("click", function () {
            $("#PortOFLoadingView").addClass("d-none");
            $("#PortOFDischargeView").removeClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            Podcountry();
            // Check if POLTable is initialized and has rows
            if (PODTable && PODTable.getRows().length > 0) {
                // POLTable exists and has rows, do not call POLGetData
                return;
            } else {
                // POLTable does not exist or has no rows, call POLGetData
                PODGetData();
            }

        })

        if ('@ListType' === "PortofLoading") {
            $("#PortofLoading").addClass("active");
            $("#PortofDischarge").removeClass("active");
            $("#FinalDestination").removeClass("active");
            $("#ItemGroup").removeClass("active");
            $("#ItemDescription").removeClass("active"); 
            $("#DynamicReport").removeClass("active"); 
            $("#NotifyParty").removeClass("active"); 
            $("#BuyerGroup").removeClass("active");
            $("#CompanyInfo").removeClass("active");
            $("#ConcernBank").removeClass("active");
            $("#BuyerSupplierBank").removeClass("active");
            $("#BuyerSupplierBankAccount").removeClass("active");
            $("#ConcernBankAccountNo").removeClass("active");
            $("#BoxMeasurement").removeClass("active");

            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").removeClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            POLGetData();
            Polcountry();
        }

        $("#PortofLoading").on("click", function () {
            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").removeClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            Polcountry();
            // Check if POLTable is initialized and has rows
            if (POLTable && POLTable.getRows().length > 0) {
                // POLTable exists and has rows, do not call POLGetData
                return;
            } else {
                // POLTable does not exist or has no rows, call POLGetData
                POLGetData();
            }

        })
       

        if ('@ListType' === "FinalDestination") {
            $("#PortofLoading").removeClass("active");
            $("#PortofDischarge").removeClass("active");
            $("#FinalDestination").addClass("active");
            $("#ItemGroup").removeClass("active");
            $("#ItemDescription").removeClass("active");
            $("#DynamicReport").removeClass("active");
            $("#NotifyParty").removeClass("active");
            $("#BuyerGroup").removeClass("active");
            $("#CompanyInfo").removeClass("active");
            $("#ConcernBank").removeClass("active");
            $("#BuyerSupplierBank").removeClass("active");
            $("#BuyerSupplierBankAccount").removeClass("active");
            $("#ConcernBankAccountNo").removeClass("active");
            $("#BoxMeasurement").removeClass("active");

            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").removeClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            FDGetData();
            Fdcountry();
        }

        $("#FinalDestination").on("click", function () {
            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").removeClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            Fdcountry();
            // Check if POLTable is initialized and has rows
            if (FDTable && FDTable.getRows().length > 0) {
                // POLTable exists and has rows, do not call POLGetData
                return;
            } else {
                // POLTable does not exist or has no rows, call POLGetData
                FDGetData();
            }
        })

        if ('@ListType' === "ItemGroup") {
            $("#PortofLoading").removeClass("active");
            $("#PortofDischarge").removeClass("active");
            $("#FinalDestination").removeClass("active");
            $("#ItemGroup").addClass("active");
            $("#ItemDescription").removeClass("active");
            $("#DynamicReport").removeClass("active");
            $("#NotifyParty").removeClass("active");
            $("#BuyerGroup").removeClass("active");
            $("#CompanyInfo").removeClass("active");
            $("#ConcernBank").removeClass("active");
            $("#BuyerSupplierBank").removeClass("active");
            $("#BuyerSupplierBankAccount").removeClass("active");
            $("#ConcernBankAccountNo").removeClass("active");
            $("#BoxMeasurement").removeClass("active");

            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").removeClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            IGGetData();
        }

        $("#ItemGroup").on("click", function () {
            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").removeClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            
            // Check if POLTable is initialized and has rows
            if (IGTable && IGTable.getRows().length > 0) {
                // POLTable exists and has rows, do not call POLGetData
                return;
            } else {
                // POLTable does not exist or has no rows, call POLGetData
                IGGetData();
            }
        })

        if ('@ListType' === "ItemDescription") {
            $("#PortofLoading").removeClass("active");
            $("#PortofDischarge").removeClass("active");
            $("#FinalDestination").removeClass("active");
            $("#ItemGroup").removeClass("active");
            $("#ItemDescription").addClass("active");
            $("#DynamicReport").removeClass("active");
            $("#NotifyParty").removeClass("active");
            $("#BuyerGroup").removeClass("active");
            $("#CompanyInfo").removeClass("active");
            $("#ConcernBank").removeClass("active");
            $("#BuyerSupplierBank").removeClass("active");
            $("#BuyerSupplierBankAccount").removeClass("active");
            $("#ConcernBankAccountNo").removeClass("active");
            $("#BoxMeasurement").removeClass("active");

            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").removeClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            IDGetData();
            itemGroupList();
        }

        $("#ItemDescription").on("click", function () {
            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").removeClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            itemGroupList();
            // Check if POLTable is initialized and has rows
            if (IDTable && IDTable.getRows().length > 0) {
                // POLTable exists and has rows, do not call POLGetData
                return;
            } else {
                // POLTable does not exist or has no rows, call POLGetData
                IDGetData();
            }
        })

        if ('@ListType' === "DynamicReport") {
            $("#PortofLoading").removeClass("active");
            $("#PortofDischarge").removeClass("active");
            $("#FinalDestination").removeClass("active");
            $("#ItemGroup").removeClass("active");
            $("#ItemDescription").removeClass("active");
            $("#DynamicReport").addClass("active");
            $("#NotifyParty").removeClass("active");
            $("#BuyerGroup").removeClass("active");
            $("#CompanyInfo").removeClass("active");
            $("#ConcernBank").removeClass("active");
            $("#BuyerSupplierBank").removeClass("active");
            $("#BuyerSupplierBankAccount").removeClass("active");
            $("#ConcernBankAccountNo").removeClass("active");
            $("#BoxMeasurement").removeClass("active");

            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").removeClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            DRGetData();
            drBuyer();
        }

        $("#DynamicReport").on("click", function () {
            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").removeClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            drBuyer();
            // Check if POLTable is initialized and has rows
            if (DRable && DRable.getRows().length > 0) {
                // POLTable exists and has rows, do not call POLGetData
                return;
            } else {
                // POLTable does not exist or has no rows, call POLGetData
                DRGetData();
            }
        })

        if ('@ListType' === "NotifyParty") {
            $("#PortofLoading").removeClass("active");
            $("#PortofDischarge").removeClass("active");
            $("#FinalDestination").removeClass("active");
            $("#ItemGroup").removeClass("active");
            $("#ItemDescription").removeClass("active");
            $("#DynamicReport").removeClass("active");
            $("#NotifyParty").addClass("active");
            $("#BuyerGroup").removeClass("active");
            $("#CompanyInfo").removeClass("active");
            $("#ConcernBank").removeClass("active");
            $("#BuyerSupplierBank").removeClass("active");
            $("#BuyerSupplierBankAccount").removeClass("active");
            $("#ConcernBankAccountNo").removeClass("active");
            $("#BoxMeasurement").removeClass("active");

            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").removeClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            NPGetData();
            npCountry();
            Notifypod();
            notifybuyer();
            getDynamicReportDrodpdown();
        }

        $("#NotifyParty").on("click", function () {
            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").removeClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");
            
            npCountry();
            Notifypod();
            notifybuyer();
            getDynamicReportDrodpdown();
            // Check if POLTable is initialized and has rows
            if (NPTable && NPTable.getRows().length > 0) {
                // POLTable exists and has rows, do not call POLGetData
                return;
            } else {
                // POLTable does not exist or has no rows, call POLGetData
                NPGetData();
            }
        })

        if ('@ListType' === "BuyerGroup") {
            $("#PortofLoading").removeClass("active");
            $("#PortofDischarge").removeClass("active");
            $("#FinalDestination").removeClass("active");
            $("#ItemGroup").removeClass("active");
            $("#ItemDescription").removeClass("active");
            $("#DynamicReport").removeClass("active");
            $("#NotifyParty").removeClass("active");
            $("#BuyerGroup").addClass("active");
            $("#CompanyInfo").removeClass("active");
            $("#ConcernBank").removeClass("active");
            $("#BuyerSupplierBank").removeClass("active");
            $("#BuyerSupplierBankAccount").removeClass("active");
            $("#ConcernBankAccountNo").removeClass("active");
            $("#BoxMeasurement").removeClass("active");

            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").removeClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            BGGetData();
        }

        $("#BuyerGroup").on("click", function () {
            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").removeClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");
            
            // Check if POLTable is initialized and has rows
            if (BGTable && BGTable.getRows().length > 0) {
                // POLTable exists and has rows, do not call POLGetData
                return;
            } else {
                // POLTable does not exist or has no rows, call POLGetData
                BGGetData();
            }
        })

        if ('@ListType' === "CompanyInfo") {
            $("#PortofLoading").removeClass("active");
            $("#PortofDischarge").removeClass("active");
            $("#FinalDestination").removeClass("active");
            $("#ItemGroup").removeClass("active");
            $("#ItemDescription").removeClass("active");
            $("#DynamicReport").removeClass("active");
            $("#NotifyParty").removeClass("active");
            $("#BuyerGroup").removeClass("active");
            $("#CompanyInfo").addClass("active");
            $("#ConcernBank").removeClass("active");
            $("#BuyerSupplierBank").removeClass("active");
            $("#BuyerSupplierBankAccount").removeClass("active");
            $("#ConcernBankAccountNo").removeClass("active");
            $("#BoxMeasurement").removeClass("active");

            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").removeClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            CIGetData();
        }

        $("#CompanyInfo").on("click", function () {
            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").removeClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            
            // Check if POLTable is initialized and has rows
            if (CITable && CITable.getRows().length > 0) {
                // POLTable exists and has rows, do not call POLGetData
                return;
            } else {
                // POLTable does not exist or has no rows, call POLGetData
                CIGetData();
            }
        })

        if ('@ListType' === "BuyerSupplierBank") {
            $("#PortofLoading").removeClass("active");
            $("#PortofDischarge").removeClass("active");
            $("#FinalDestination").removeClass("active");
            $("#ItemGroup").removeClass("active");
            $("#ItemDescription").removeClass("active");
            $("#DynamicReport").removeClass("active");
            $("#NotifyParty").removeClass("active");
            $("#BuyerGroup").removeClass("active");
            $("#CompanyInfo").removeClass("active");
            $("#ConcernBank").removeClass("active");
            $("#BuyerSupplierBank").addClass("active");
            $("#BuyerSupplierBankAccount").removeClass("active");
            $("#ConcernBankAccountNo").removeClass("active");
            $("#BoxMeasurement").removeClass("active");

            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").removeClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            LBGetData();
            Lbcountry();
        }

        $("#BuyerSupplierBank").on("click", function () {
            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").removeClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            Lbcountry();
            // Check if POLTable is initialized and has rows
            if (LBTable && LBTable.getRows().length > 0) {
                // POLTable exists and has rows, do not call POLGetData
                return;
            } else {
                // POLTable does not exist or has no rows, call POLGetData
                LBGetData();
            }
        })

        if ('@ListType' === "BuyerSupplierBankAccount") {
            $("#PortofLoading").removeClass("active");
            $("#PortofDischarge").removeClass("active");
            $("#FinalDestination").removeClass("active");
            $("#ItemGroup").removeClass("active");
            $("#ItemDescription").removeClass("active");
            $("#DynamicReport").removeClass("active");
            $("#NotifyParty").removeClass("active");
            $("#BuyerGroup").removeClass("active");
            $("#CompanyInfo").removeClass("active");
            $("#ConcernBank").removeClass("active");
            $("#BuyerSupplierBank").removeClass("active");
            $("#BuyerSupplierBankAccount").addClass("active");
            $("#ConcernBankAccountNo").removeClass("active");
            $("#BoxMeasurement").removeClass("active");

            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").removeClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            LienBankAccGetData();
            lienBankAccCountry();
            lienBankAccBuyer();
            lienBankAccSupplier();
            buyerSupCompany();
            buyerSuppBank();
        }

        $("#BuyerSupplierBankAccount").on("click", function () {
            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").removeClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            buyerSupCompany();
            lienBankAccCountry();
            buyerSuppBank();
            lienBankAccBuyer();
            lienBankAccSupplier();
            // Check if POLTable is initialized and has rows
            if (LienBankAccTable && LienBankAccTable.getRows().length > 0) {
                // POLTable exists and has rows, do not call POLGetData
                return;
            } else {
                // POLTable does not exist or has no rows, call POLGetData
                LienBankAccGetData();
            }
        })

        if ('@ListType' === "ConcernBankAccountNo") {
            $("#PortofLoading").removeClass("active");
            $("#PortofDischarge").removeClass("active");
            $("#FinalDestination").removeClass("active");
            $("#ItemGroup").removeClass("active");
            $("#ItemDescription").removeClass("active");
            $("#DynamicReport").removeClass("active");
            $("#NotifyParty").removeClass("active");
            $("#BuyerGroup").removeClass("active");
            $("#CompanyInfo").removeClass("active");
            $("#ConcernBank").removeClass("active");
            $("#BuyerSupplierBank").removeClass("active");
            $("#BuyerSupplierBankAccount").removeClass("active");
            $("#ConcernBankAccountNo").addClass("active");
            $("#BoxMeasurement").removeClass("active");

            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").removeClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            BAGetData();
            concernBankList();
            ConbankCompany();
        }

        $("#ConcernBankAccountNo").on("click", function () {
            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").removeClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").addClass("d-none");

            ConbankCompany();
            concernBankList();
            // Check if POLTable is initialized and has rows
            if (BATable && BATable.getRows().length > 0) {
                // POLTable exists and has rows, do not call POLGetData
                return;
            } else {
                // POLTable does not exist or has no rows, call POLGetData
                BAGetData();
            }
        })

        if ('@ListType' === "ConcernBank") {
            $("#PortofLoading").removeClass("active");
            $("#PortofDischarge").removeClass("active");
            $("#FinalDestination").removeClass("active");
            $("#ItemGroup").removeClass("active");
            $("#ItemDescription").removeClass("active");
            $("#DynamicReport").removeClass("active");
            $("#NotifyParty").removeClass("active");
            $("#BuyerGroup").removeClass("active");
            $("#CompanyInfo").removeClass("active");
            $("#ConcernBank").addClass("active");
            $("#BuyerSupplierBank").removeClass("active");
            $("#BuyerSupplierBankAccount").removeClass("active");
            $("#ConcernBankAccountNo").removeClass("active");
            $("#BoxMeasurement").removeClass("active");

            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").removeClass("d-none");
            $("#MeasurementView").addClass("d-none");

            ConcernGetData();
            concernCountry();
        }

        $("#ConcernBank").on("click", function () {
            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").removeClass("d-none");
            $("#MeasurementView").addClass("d-none");

            concernCountry();
            // Check if POLTable is initialized and has rows
            if (ConcernTable && ConcernTable.getRows().length > 0) {
                // POLTable exists and has rows, do not call POLGetData
                return;
            } else {
                // POLTable does not exist or has no rows, call POLGetData
                ConcernGetData();
            }
        })


        if ('@ListType' === "BoxMeasurement") {
            $("#PortofLoading").removeClass("active");
            $("#PortofDischarge").removeClass("active");
            $("#FinalDestination").removeClass("active");
            $("#ItemGroup").removeClass("active");
            $("#ItemDescription").removeClass("active");
            $("#DynamicReport").removeClass("active");
            $("#NotifyParty").removeClass("active");
            $("#BuyerGroup").removeClass("active");
            $("#CompanyInfo").removeClass("active");
            $("#ConcernBank").removeClass("active");
            $("#BuyerSupplierBank").removeClass("active");
            $("#BuyerSupplierBankAccount").removeClass("active");
            $("#ConcernBankAccountNo").removeClass("active");
            $("#BoxMeasurement").addClass("active");

            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").removeClass("d-none");

            BoxGetData();
        }

        $("#BoxMeasurement").on("click", function () {
            $("#PortOFDischargeView").addClass("d-none");
            $("#PortOFLoadingView").addClass("d-none");
            $("#FDView").addClass("d-none");
            $("#IGView").addClass("d-none");
            $("#IDView").addClass("d-none");
            $("#drView").addClass("d-none");
            $("#NPView").addClass("d-none");
            $("#BGView").addClass("d-none");
            $("#CIView").addClass("d-none");
            $("#LBView").addClass("d-none");
            $("#LienBankAccView").addClass("d-none");
            $("#BAView").addClass("d-none");
            $("#ConcernView").addClass("d-none");
            $("#MeasurementView").removeClass("d-none");


            // Check if POLTable is initialized and has rows
            if (BoxTable && BoxTable.getRows().length > 0) {
                // POLTable exists and has rows, do not call POLGetData
                return;
            } else {
                // POLTable does not exist or has no rows, call POLGetData
                BoxGetData();
            }
        })
        //======nav functionalities ends========

               //===========================port of loading functionalities starts=====================

        var POLTable;
        var currentPOLId;
        //POLGetData();
        function POLGetData() {
            var POLAPIURL = '@Url.Action("GetPOLList", "Variable")';
            POLTable = new Tabulator("#PortOFLoadingTable", {
                // data: dataTableFilter,
                dataTree: true,
                //height:300,
                dataTreeStartExpanded: true,
                dataTreeChildField: "children",
                layout: "fitColumns",
                selectable: 1,
                pagination: true,
                paginationMode: "remote",
                paginationSize: 5,
                paginationInitialPage: 1,
                paginationSizeSelector: [5, 10, 25, 50, 100, 500, 1000],
                paginationCounter: "rows",
                ajaxURL: POLAPIURL,
                ajaxConfig: "get",
                ajaxContentType: "json",

                ajaxResponse: function (url, params, response) {
                    POLTable.setMaxPage(response.last_page);
                    // //console.log("response.last_page", response.last_page);

                    dataLoadExpense = response.data;
                    console.log("dataLoadExpense abc:", dataLoadExpense);

                    return {

                        data: dataLoadExpense,
                        last_page: response.last_page,

                    };
                },

                columns: [
                    { title: "NAME", field: "PortOfLoadingName", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "CODE", field: "PortCode", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "COUNTRY", field: "polcountry", hozAlign: "left", headerHozAlign: "center", visible: true },
                    {
                        title: "ACTIONS", field: "polAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editPOLs(${data.Id})`;
                            var inActive = `setInactiveUrlOfPOLs(${data.Id}) `

                            var deleteHtml = `
              <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
              <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
              </a>
              `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                            var statusDependentHtml = deleteHtml;

                            var html = `
              <div class='dropdown ms-1'>
              <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
              <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
              <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                  ${statusDependentHtml}

              </ul>
              </div>
              `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },

                ],
                dataBound: function () {
                    // Freeze the top 1 row (index 0) after the table is created
                    var rows = table.getRows();
                    if (rows.length > 0) {
                        var cells = rows[0].getCells();
                        cells.forEach(cell => {
                            cell.freeze();
                        });
                    }
                },
            });





            //size gear functionalities starts=============
            var globalFieldsSizePol = [
                    { title: "NAME", field: "PortOfLoadingName", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "CODE", field: "PortCode", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "COUNTRY", field: "polcountry", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                {
                    title: "ACTIONS", field: "polAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                        var data = cell.getData();
                        //console.log("seeeee data::", data);
                        var Edit = `editPOLs(${data.Id})`;
                        var inActive = `setInactiveUrlOfPOLs(${data.Id}) `

                        var deleteHtml = `
                      <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                      <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                      </a>
                      `;


                        //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                        var statusDependentHtml = deleteHtml;

                        var html = `
                      <div class='dropdown ms-1'>
                      <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                      <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                      <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                          ${statusDependentHtml}

                      </ul>
                      </div>
                      `;

                        return html;
                    },
                    visible: true, cellClick: function (e, cell) {
                        // Add a custom class to the cell when it's clicked
                        cell.getElement().classList.add('active-cell');
                    },
                },
            ];
            var columnListSizePol = $("#POLColumnList");

            $.each(globalFieldsSizePol, function (index, field) {
                //console.log("GLOBAL 2::",field);
                var title = field.title;
                var name = field.field;
                var visible = true;
                if (field.visible == false) {
                    visible = false;
                }
                var SizetitlesPol = `<li>
                         <a class="dropdown-item" href="#">
                         <div class="custom-control custom-checkbox" >
                         <input type="checkbox" class="custom-control-input title-input" id="${name}" value="${name}">
                                 <label class="custom-control-label w-100 cursor-pointer" id="${name}" for="${name}">${title}</label>
                         </div>
                         </a>
                         </li>`;
                columnListSizePol.append(SizetitlesPol);

                document.querySelector(`#${name}`).addEventListener('click', function (event) {
                    var checkbox = event.target;
                    var isChecked = checkbox.checked;

                    if (isChecked) {
                        POLTable.showColumn(name);
                    } else {
                        POLTable.hideColumn(name);
                    }
                });


                $(`${'#' + name}`).prop('checked', visible);


                $('.custom-control-label').on('click', function (e) {
                    e.stopPropagation();
                });
                $('#dropdown-titles').on('click', function (e) {
                    e.stopPropagation();
                });

                //Add event listener to the rows select input
                $("#POLRows").on("change", function () {
                    var selectedRows = $(this).val();
                    if (selectedRows !== null) {
                        var pageSize = parseInt(selectedRows);
                        if (!isNaN(pageSize)) {
                            POLTable.setPageSize(pageSize);
                        }
                    }
                });

            });
            //gear functionalities ends===============

        };

        $("#SavePOLBtn").click(function () {
            SavePOL();
        });
        function SavePOL() {
            var model = {
                Id: $("#POLId").val() || 0,
                PortOfLoadingName: $("#PolName").val(),
                PortCode: $("#Polcode").val(),
                CountryId: $("#Polcountry option:selected").val(),
            };
            console.log("Size model", model);
            $.ajax({
                async: false,
                type: "POST",
                url: '@Url.Action("AddUpdatePol", "Variable")',
                data: JSON.stringify(model),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    console.log("after save result", result);
                    var PODId = result.Id;

                    if (result.success == "1") {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-green",
                        });
                        $("#POLOffcanvas").offcanvas('hide');
                        clearOffCanvasPOL();
                        POLGetData();
                    } else {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-red",
                        });
                        POLGetData();
                    }
                },
                error: function () {
                    toastr.success(result.message, "", {
                        "toastClass": "toast-red",
                    });
                    POLGetData();
                }
            });
        }
        function clearOffCanvasPOL() {
            $("#POLOffcanvas .offcanvas-title").html("Add New Port of loading");
            $("#POLId").val("");
            $("#PolName").val("");
            $("#Polcode").val("");
            $("#Polcountry").val("0").change();
            $('#SavePOLBtn').text("Save");
            $('#PolNameValidation').html("");
        }


        $("#closePOLffcanvasBtn").on("click", function () {
            $("#POLOffcanvas").offcanvas('hide');
            clearOffCanvasPOL()
        });


        function editPOLs(data) {
            currentPOLId = data;

            var myUrlGet = '@Url.Action("GetPOLEdit", "Variable")?id=' + data;
            $.ajax({
                type: "GET",
                url: myUrlGet,
                success: function (result) {
                    console.log("edit data", result);

                    if (result.Success == "1") {
                        $("#POLOffcanvas .offcanvas-title").html("Edit");
                        $("#POLOffcanvas").offcanvas("show");
                        $("#SavePOLBtn").text('Update');
                        $("#POLId").val(result.data[0].Id);
                        $("#PolName").val(result.data[0].PortOfLoadingName);
                        $("#Polcode").val(result.data[0].PortCode);
                        $("#Polcountry").val(result.data[0].CountryId).change();
                    }
                    else {

                        toastr.success(result.message, "Access Denied", {
                            "toastClass": "toast-red",
                        });
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Error: " + xhr.status);
                }
            });
        }


        function setInactiveUrlOfPOLs(data) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeletePOLs", "Variable")',
                        type: "get",
                        data: { id: data },
                        traditional: true,
                        success: function (response) {
                            if (response.success == "1") {
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-green",
                                });
                                POLGetData();
                            }
                            else if (response.success == "0") {
                                //alert()
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-red",
                                });
                                POLGetData();
                            }
                            else {

                                toastr.success(response.message, "Access Denied", {
                                    "toastClass": "toast-red",
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error(xhr.responseText);
                            toastr.error("Error during delete.", "", { "toastClass": "toast-red" });
                        }
                    });
                }
            });
        };
        document.getElementById("print-table-pol").addEventListener("click", function () {
            POLTable.print(false, true);
        });
        document.getElementById("download-xlsx-pol").addEventListener("click", function () {
            POLTable.download("xlsx", "Port Of Loading.xlsx", { sheetName: "Port Of Loading" });
        });



        var POLSave = document.querySelector('#SavePOLBtn');
        function getAllPOLs(callback) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetPOLList", "Variable")',
                dataType: "json",
                success: function (data) {
                    console.log("data::", data.data);
                    var SizeCodeGetArray = [];

                    data.data.forEach(function (item) {
                        var SizeName = item.PortOfLoadingName;
                        var SizeIdGet = item.Id;
                        var SizeData = {
                            SizeName: SizeName,
                            Id: SizeIdGet
                        };
                        SizeCodeGetArray.push(SizeData);
                    });

                    if (typeof callback === "function") {
                        callback(SizeCodeGetArray);
                    }
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            });
        }

        function checkPOLExists(sizeName) {
            getAllPOLs(function (data) {
                var lowercasedSizeName = sizeName.toLowerCase();

                var sizeExists = data.some(function (item) {
                    console.log("item.Id", item.Id);
                    //console.log("currentSizeIdd", currentSizeIdd);

                    if (currentPOLId && currentPOLId === item.Id) {
                        return false;
                    }

                    return item.SizeName.trim().toLowerCase() === lowercasedSizeName;
                });

                console.log("sizeExists", sizeExists);

                if (sizeExists) {
                    $("#PolNameValidation").html("Already has the same Name!");
                    POLSave.disabled = true;
                } else {
                    $("#PolNameValidation").html("");
                    POLSave.disabled = false;

                }
            });
        }

        var POLNameHandle = document.getElementById("PolName");
        POLNameHandle.addEventListener("input", function () {
            //console.log("currentSizeId", currentSizeIdd);

            var enteredSizeName = POLNameHandle.value;
            checkPOLExists(enteredSizeName);
        });
        //populate country drodpdown
        function Polcountry(){
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetCountryDrodpwon", "Variable")',
                datatype: "Json",
                success: function (data) {

                    $.each(data, function (index, value) {
                        // console.log("value dekhi country er", value);
                        $('#Polcountry').append('<option value="' + value.Id + '">' + value.CountryName + '</option>');
                    });
                }
            });
        }
        

       //===========================pol functionalities ends=======================


        //===========================port of discharge functionalities starts=====================

        var PODTable;
        var currentPODId;
        //PODGetData();
        function PODGetData() {
            var PODAPIURL = '@Url.Action("GetPODList", "Variable")';
            PODTable = new Tabulator("#PODTable", {
                // data: dataTableFilter,
                dataTree: true,
                //height:300,
                dataTreeStartExpanded: true,
                dataTreeChildField: "children",
                layout: "fitColumns",
                selectable: 1,
                pagination: true,
                paginationMode: "remote",
                paginationSize: 5,
                paginationInitialPage: 1,
                paginationSizeSelector: [5, 10, 25, 50, 100, 500, 1000],
                paginationCounter: "rows",
                ajaxURL: PODAPIURL,
                ajaxConfig: "get",
                ajaxContentType: "json",

                ajaxResponse: function (url, params, response) {
                    PODTable.setMaxPage(response.last_page);
                    // //console.log("response.last_page", response.last_page);

                    dataLoadExpense = response.data;
                    ////console.log("dataLoadExpense abc:", dataLoadExpense);

                    return {

                        data: dataLoadExpense,
                        last_page: response.last_page,

                    };
                },

                columns: [
                    { title: "NAME", field: "PortOfDischargeName", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "CODE", field: "podCode", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "COUNTRY", field: "podcountry", hozAlign: "left", headerHozAlign: "center", visible: true },
                    {
                        title: "ACTIONS", field: "podAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editPODs(${data.Id})`;
                            var inActive = `setInactiveUrlOfPODs(${data.Id}) `

                            var deleteHtml = `
                      <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                      <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                      </a>
                      `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                            var statusDependentHtml = deleteHtml;

                            var html = `
                      <div class='dropdown ms-1'>
                      <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                      <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                      <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                          ${statusDependentHtml}

                      </ul>
                      </div>
                      `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },

                ],
                dataBound: function () {
                    // Freeze the top 1 row (index 0) after the table is created
                    var rows = table.getRows();
                    if (rows.length > 0) {
                        var cells = rows[0].getCells();
                        cells.forEach(cell => {
                            cell.freeze();
                        });
                    }
                },
            });





            //size gear functionalities starts=============
            var globalFieldsPOD = [
                { title: "NAME", field: "PortOfDischargeName", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                { title: "CODE", field: "podCode", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "COUNTRY", field: "podcountry", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                {
                    title: "ACTIONS", field: "podAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                        var data = cell.getData();
                        //console.log("seeeee data::", data);
                        var Edit = `editPOLs(${data.Id})`;
                        var inActive = `setInactiveUrlOfPODs(${data.Id}) `

                        var deleteHtml = `
                              <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                              <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                              </a>
                              `;


                        //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                        var statusDependentHtml = deleteHtml;

                        var html = `
                              <div class='dropdown ms-1'>
                              <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                              <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                              <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                  ${statusDependentHtml}

                              </ul>
                              </div>
                              `;

                        return html;
                    },
                    visible: true, cellClick: function (e, cell) {
                        // Add a custom class to the cell when it's clicked
                        cell.getElement().classList.add('active-cell');
                    },
                },
            ];
            var columnListPOD= $("#PODColumnList");

            $.each(globalFieldsPOD, function (index, field) {
                //console.log("GLOBAL 2::",field);
                var title = field.title;
                var name = field.field;
                var visible = true;
                if (field.visible == false) {
                    visible = false;
                }
                var PODtitles = `<li>
                                 <a class="dropdown-item" href="#">
                                 <div class="custom-control custom-checkbox" >
                                 <input type="checkbox" class="custom-control-input title-input" id="${name}" value="${name}">
                                         <label class="custom-control-label w-100 cursor-pointer" id="${name}" for="${name}">${title}</label>
                                 </div>
                                 </a>
                                 </li>`;
                columnListPOD.append(PODtitles);

                document.querySelector(`#${name}`).addEventListener('click', function (event) {
                    var checkbox = event.target;
                    var isChecked = checkbox.checked;

                    if (isChecked) {
                        PODTable.showColumn(name);
                    } else {
                        PODTable.hideColumn(name);
                    }
                });


                $(`${'#' + name}`).prop('checked', visible);


                $('.custom-control-label').on('click', function (e) {
                    e.stopPropagation();
                });
                $('#dropdown-titles').on('click', function (e) {
                    e.stopPropagation();
                });

                //Add event listener to the rows select input
                $("#PODRows").on("change", function () {
                    var selectedRows = $(this).val();
                    if (selectedRows !== null) {
                        var pageSize = parseInt(selectedRows);
                        if (!isNaN(pageSize)) {
                            PODTable.setPageSize(pageSize);
                        }
                    }
                });

            });
            //gear functionalities ends===============

        };

        $("#SavePODBtn").click(function () {
            SavePOD();
        });
        function SavePOD() {

            let podurl= '@Url.Action("AddUpdatePod", "Variable")';
            


            var model = {
                Id: $("#PODId").val() || 0,
                PortOfDischargeName: $("#PodName").val(),
                PortCode: $("#Podcode").val(),
                CountryId: $("#Podcountry option:selected").val(),
            };
            console.log("Size model", model);           

            $.ajax({
                async: false,
                type: "POST",
                url:podurl,
                data: JSON.stringify(model),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    console.log("after save result", result);
                    var PODId = result.Id;

                    if (result.success == "1") {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-green",
                        });
                        $("#PODOffcanvas").offcanvas('hide');
                        clearOffCanvasPOD();
                        PODGetData();
                    } else {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-red",
                        });
                        PODGetData();
                    }
                },
                error: function () {
                    toastr.success(result.message, "", {
                        "toastClass": "toast-red",
                    });
                    PODGetData();
                }
            });
        }
        function clearOffCanvasPOD() {
            $("#PODOffcanvas .offcanvas-title").html("Add New");
            $("#PODId").val("");
            $("#PodName").val("");
            $("#Podcode").val("");
            $("#Podcountry").val("0").change();
            $('#SavePODBtn').text("Save");
            $('#PodNameValidation').html("");
        }


        $("#closePODffcanvasBtn").on("click", function () {
            $("#PODOffcanvas").offcanvas('hide');
            clearOffCanvasPOD()
        });


        function editPODs(data) {
            currentPODId = data;

            var myUrlGet = '@Url.Action("GetPODEdit", "Variable")?id=' + data;
            $.ajax({
                type: "GET",
                url: myUrlGet,
                success: function (result) {
                    console.log("edit data", result);

                    if (result.Success == "1") {
                        $("#PODOffcanvas .offcanvas-title").html("Edit");
                        $("#PODOffcanvas").offcanvas("show");
                        $("#SavePODBtn").text('Update');
                        $("#PODId").val(result.data[0].Id);
                        $("#PodName").val(result.data[0].PortOfDischargeName);
                        $("#Podcode").val(result.data[0].PortCode);
                        $("#Podcountry").val(result.data[0].CountryId).change();
                    }
                    else        
                    {

                        toastr.success(result.message, "Access Denied", {
                            "toastClass": "toast-red",
                        });
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Error: " + xhr.status);
                }
            });
        }


        function setInactiveUrlOfPODs(data) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeletePODs", "Variable")',
                        type: "get",
                        data: { id: data },
                        traditional: true,
                        success: function (response) {
                            if (response.success == "1") {
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-green",
                                });
                                PODGetData();
                            }
                            else if (response.success == "0") {
                                //alert()
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-red",
                                });
                                PODGetData();
                            }
                            else {

                                toastr.success(response.message, "Access Denied", {
                                    "toastClass": "toast-red",
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error(xhr.responseText);
                            toastr.error("Error during delete.", "", { "toastClass": "toast-red" });
                        }
                    });
                }
            });
        };
        document.getElementById("print-table-pod").addEventListener("click", function () {
            PODTable.print(false, true);
        });
        document.getElementById("download-xlsx-pod").addEventListener("click", function () {
            PODTable.download("xlsx", "Port Of Discharge.xlsx", { sheetName: "Port Of Discharge" });
        });



        var PODSave = document.querySelector('#SavePODBtn');
        function getAllPODs(callback) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetPODList", "Variable")',
                dataType: "json",
                success: function (data) {
                    console.log("data::", data.data);
                    var SizeCodeGetArray = [];

                    data.data.forEach(function (item) {
                        var SizeName = item.PortOfDischargeName;
                        var SizeIdGet = item.Id;
                        var SizeData = {
                            SizeName: SizeName,
                            Id: SizeIdGet
                        };
                        SizeCodeGetArray.push(SizeData);
                    });

                    if (typeof callback === "function") {
                        callback(SizeCodeGetArray);
                    }
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            });
        }

        function checkPOLExists(sizeName) {
            getAllPODs(function (data) {
                var lowercasedSizeName = sizeName.toLowerCase();

                var sizeExists = data.some(function (item) {
                    console.log("item.Id", item.Id);
                    //console.log("currentSizeIdd", currentSizeIdd);

                    if (currentPODId && currentPODId === item.Id) {
                        return false;
                    }

                    return item.SizeName.trim().toLowerCase() === lowercasedSizeName;
                });

                console.log("sizeExists", sizeExists);

                if (sizeExists) {
                    $("#PodNameValidation").html("Already has the same Name!");
                    POLSave.disabled = true;
                } else {
                    $("#PodNameValidation").html("");
                    POLSave.disabled = false;

                }
            });
        }

        var PODNameHandle = document.getElementById("PodName");
        PODNameHandle.addEventListener("input", function () {
            //console.log("currentSizeId", currentSizeIdd);

            var enteredSizeName = PODNameHandle.value;
            checkPOLExists(enteredSizeName);
        });
        //populate country drodpdown
        function Podcountry(){
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetCountryDrodpwon", "Variable")',
                datatype: "Json",
                success: function (data) {

                    $.each(data, function (index, value) {
                        // console.log("value dekhi country er", value);
                        $('#Podcountry').append('<option value="' + value.Id + '">' + value.CountryName + '</option>');
                    });
                }
            });
        }
     

        //===========================pod functionalities ends=======================



        //===========================final destination functionalities starts=====================

        var FDTable;
        var currentFDId;
        //FDGetData();
        function FDGetData() {
            var FDAPIURL = '@Url.Action("GetFDList", "Variable")';
            FDTable = new Tabulator("#FDTable", {
                // data: dataTableFilter,
                dataTree: true,
                //height:300,
                dataTreeStartExpanded: true,
                dataTreeChildField: "children",
                layout: "fitColumns",
                selectable: 1,
                pagination: true,
                paginationMode: "remote",
                paginationSize: 5,
                paginationInitialPage: 1,
                paginationSizeSelector: [5, 10, 25, 50, 100, 500, 1000],
                paginationCounter: "rows",
                ajaxURL: FDAPIURL,
                ajaxConfig: "get",
                ajaxContentType: "json",

                ajaxResponse: function (url, params, response) {
                    FDTable.setMaxPage(response.last_page);
                    // //console.log("response.last_page", response.last_page);

                    dataLoadExpense = response.data;
                    ////console.log("dataLoadExpense abc:", dataLoadExpense);

                    return {

                        data: dataLoadExpense,
                        last_page: response.last_page,

                    };
                },

                columns: [
                    { title: "DESTINATION NAME", field: "DestinationName", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "SEARCH NAME", field: "DestinationNameSearch", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "CODE", field: "DestinationCode", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "COUNTRY", field: "fdcountry", hozAlign: "left", headerHozAlign: "center", visible: true },
                    {
                        title: "ACTIONS", field: "fdAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editFDs(${data.Id})`;
                            var inActive = `setInactiveUrlOfFDs(${data.Id}) `

                            var deleteHtml = `
                              <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                              <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                              </a>
                              `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                            var statusDependentHtml = deleteHtml;

                            var html = `
                              <div class='dropdown ms-1'>
                              <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                              <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                              <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                  ${statusDependentHtml}

                              </ul>
                              </div>
                              `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },

                ],
                dataBound: function () {
                    // Freeze the top 1 row (index 0) after the table is created
                    var rows = table.getRows();
                    if (rows.length > 0) {
                        var cells = rows[0].getCells();
                        cells.forEach(cell => {
                            cell.freeze();
                        });
                    }
                },
            });





            //size gear functionalities starts=============
            var globalFieldsFD = [
                { title: "SEARCH NAME", field: "DestinationNameSearch", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                { title: "DESTINATION NAME", field: "DestinationName", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                { title: "CODE", field: "DestinationCode", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "COUNTRY", field: "fdcountry", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                {
                    title: "ACTIONS", field: "fdAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                        var data = cell.getData();
                        //console.log("seeeee data::", data);
                        var Edit = `editFDs(${data.Id})`;
                        var inActive = `setInactiveUrlOfFDs(${data.Id}) `

                        var deleteHtml = `
                                      <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                      <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                      </a>
                                      `;


                        //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                        var statusDependentHtml = deleteHtml;

                        var html = `
                                      <div class='dropdown ms-1'>
                                      <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                      <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                      <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                          ${statusDependentHtml}

                                      </ul>
                                      </div>
                                      `;

                        return html;
                    },
                    visible: true, cellClick: function (e, cell) {
                        // Add a custom class to the cell when it's clicked
                        cell.getElement().classList.add('active-cell');
                    },
                },
            ];
            var columnListFD = $("#FDColumnList");

            $.each(globalFieldsFD, function (index, field) {
                //console.log("GLOBAL 2::",field);
                var title = field.title;
                var name = field.field;
                var visible = true;
                if (field.visible == false) {
                    visible = false;
                }
                var FDtitles = `<li>
                                         <a class="dropdown-item" href="#">
                                         <div class="custom-control custom-checkbox" >
                                         <input type="checkbox" class="custom-control-input title-input" id="${name}" value="${name}">
                                                 <label class="custom-control-label w-100 cursor-pointer" id="${name}" for="${name}">${title}</label>
                                         </div>
                                         </a>
                                         </li>`;
                columnListFD.append(FDtitles);

                document.querySelector(`#${name}`).addEventListener('click', function (event) {
                    var checkbox = event.target;
                    var isChecked = checkbox.checked;

                    if (isChecked) {
                        FDTable.showColumn(name);
                    } else {
                        FDTable.hideColumn(name);
                    }
                });


                $(`${'#' + name}`).prop('checked', visible);


                $('.custom-control-label').on('click', function (e) {
                    e.stopPropagation();
                });
                $('#dropdown-titles').on('click', function (e) {
                    e.stopPropagation();
                });

                //Add event listener to the rows select input
                $("#FDRows").on("change", function () {
                    var selectedRows = $(this).val();
                    if (selectedRows !== null) {
                        var pageSize = parseInt(selectedRows);
                        if (!isNaN(pageSize)) {
                          FDTable.setPageSize(pageSize);
                        }
                    }
                });

            });
            //gear functionalities ends===============

        };

        $("#SaveFDBtn").click(function () {
            SaveFD();
        });
        function SaveFD() {
            var model = {
                Id: $("#FDId").val() || 0,
                DestinationNameSearch: $("#fdSearchName").val(),
                DestinationName: $("#fdName").val(),
                DestinationCode: $("#fdCode").val(),
                CountryId: $("#Fdcountry option:selected").val(),
            };
            console.log("fdestination model", model);
            $.ajax({
                async: false,
                type: "POST",
                url: '@Url.Action("AddUpdateFD", "Variable")',
                data: JSON.stringify(model),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    console.log("after save result", result);
                    var PODId = result.Id;

                    if (result.success == "1") {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-green",
                        });
                        $("#FDOffcanvas").offcanvas('hide');
                        clearOffCanvasFD();
                        FDGetData();
                    } else {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-red",
                        });
                        FDGetData();
                    }
                },
                error: function () {
                    toastr.success(result.message, "", {
                        "toastClass": "toast-red",
                    });
                    FDGetData();
                }
            });
        }
        function clearOffCanvasFD() {
            $("#PODOffcanvas .offcanvas-title").html("Add New");
            $("#FDId").val("");
            $("#fdSearchName").val("");
            $("#fdName").val("");
            $("#fdCode").val("");
            $("#Fdcountry").val("0").change();
            $('#SaveFDBtn').text("Save");
            $('#fdSearchNameValidation').html("");
        }


        $("#closeFDOffcanvasBtn").on("click", function () {
            $("#FDOffcanvas").offcanvas('hide');
            clearOffCanvasFD()
        });


        function editFDs(data) {
            currentFDId = data;

            var myUrlGet = '@Url.Action("GetFDEdit", "Variable")?id=' + data;
            $.ajax({
                type: "GET",
                url: myUrlGet,
                success: function (result) {
                    console.log("edit data", result);

                    if (result.Success == "1") {
                        $("#FDOffcanvas .offcanvas-title").html("Edit");
                        $("#FDOffcanvas").offcanvas("show");
                        $("#SaveFDBtn").text('Update');
                        $("#FDId").val(result.data[0].Id);
                        $("#fdSearchName").val(result.data[0].DestinationNameSearch);
                        $("#fdName").val(result.data[0].DestinationName);
                        $("#fdCode").val(result.data[0].DestinationCode);
                        $("#Fdcountry").val(result.data[0].CountryId).change();
                    }
                    else {

                        toastr.success(result.message, "Access Denied", {
                            "toastClass": "toast-red",
                        });
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Error: " + xhr.status);
                }
            });
        }


        function setInactiveUrlOfFDs(data) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteFDs", "Variable")',
                        type: "get",
                        data: { id: data },
                        traditional: true,
                        success: function (response) {
                            if (response.success == "1") {
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-green",
                                });
                                FDGetData();
                            }
                            else if (response.success == "0") {
                                //alert()
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-red",
                                });
                                FDGetData();
                            }
                            else {

                                toastr.success(response.message, "Access Denied", {
                                    "toastClass": "toast-red",
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error(xhr.responseText);
                            toastr.error("Error during delete.", "", { "toastClass": "toast-red" });
                        }
                    });
                }
            });
        };
        document.getElementById("print-table-fd").addEventListener("click", function () {
            FDTable.print(false, true);
        });
        document.getElementById("download-xlsx-fd").addEventListener("click", function () {
            FDTable.download("xlsx", "Final Destination.xlsx", { sheetName: "Final Destination" });
        });



        var FDSave = document.querySelector('#SaveFDBtn');
        function getAllFDs(callback) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetFDList", "Variable")',
                dataType: "json",
                success: function (data) {
                    console.log("data::", data.data);
                    var SizeCodeGetArray = [];

                    data.data.forEach(function (item) {
                        var SizeName = item.DestinationNameSearch;
                        var SizeIdGet = item.Id;
                        var SizeData = {
                            SizeName: SizeName,
                            Id: SizeIdGet
                        };
                        SizeCodeGetArray.push(SizeData);
                    });

                    if (typeof callback === "function") {
                        callback(SizeCodeGetArray);
                    }
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            });
        }

        function checkFDExists(sizeName) {
            getAllFDs(function (data) {
                var lowercasedSizeName = sizeName.toLowerCase();

                var sizeExists = data.some(function (item) {
                    console.log("item.Id", item.Id);
                    //console.log("currentSizeIdd", currentSizeIdd);

                    if (currentFDId && currentFDId === item.Id) {
                        return false;
                    }

                    return item.SizeName.trim().toLowerCase() === lowercasedSizeName;
                });

                console.log("sizeExists", sizeExists);

                if (sizeExists) {
                    $("#fdSearchNameValidation").html("Already has the same Name!");
                    FDSave.disabled = true;
                } else {
                    $("#fdSearchNameValidation").html("");
                    FDSave.disabled = false;

                }
            });
        }

        var FDNameHandle = document.getElementById("fdSearchName");
        FDNameHandle.addEventListener("input", function () {
            //console.log("currentSizeId", currentSizeIdd);

            var enteredSizeName = FDNameHandle.value;
            checkFDExists(enteredSizeName);
        });
        //populate country drodpdown
        function Fdcountry(){
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetCountryDrodpwon", "Variable")',
                datatype: "Json",
                success: function (data) {

                    $.each(data, function (index, value) {
                        // console.log("value dekhi country er", value);
                        $('#Fdcountry').append('<option value="' + value.Id + '">' + value.CountryName + '</option>');
                    });
                }
            });
        }
       

        //===========================fd functionalities ends=======================



        //===========================item group functionalities starts=====================

        var IGTable;
        var currentIGId;
        //IGGetData();
        function IGGetData() {
            var FDAPIURL = '@Url.Action("GetIGList", "Variable")';
            IGTable = new Tabulator("#IGTable", {
                // data: dataTableFilter,
                dataTree: true,
                //height:300,
                dataTreeStartExpanded: true,
                dataTreeChildField: "children",
                layout: "fitColumns",
                selectable: 1,
                pagination: true,
                paginationMode: "remote",
                paginationSize: 5,
                paginationInitialPage: 1,
                paginationSizeSelector: [5, 10, 25, 50, 100, 500, 1000],
                paginationCounter: "rows",
                ajaxURL: FDAPIURL,
                ajaxConfig: "get",
                ajaxContentType: "json",

                ajaxResponse: function (url, params, response) {
                    IGTable.setMaxPage(response.last_page);
                    // //console.log("response.last_page", response.last_page);

                    dataLoadExpense = response.data;
                    ////console.log("dataLoadExpense abc:", dataLoadExpense);

                    return {

                        data: dataLoadExpense,
                        last_page: response.last_page,

                    };
                },

                columns: [
                    { title: "NAME", field: "ItemGroupName", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "SHORTNAME", field: "ItemGroupShortName", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "CODE", field: "ItemGroupCode", hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "HS CODE", field: "ItemGroupHSCode", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "MARGIN", field: "ItemMargin", hozAlign: "left", headerHozAlign: "center", visible: false },
                    {
                        title: "ACTIONS", field: "igAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editIGs(${data.Id})`;
                            var inActive = `setInactiveUrlOfIGs(${data.Id}) `

                            var deleteHtml = `
                                      <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                      <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                      </a>
                                      `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                            var statusDependentHtml = deleteHtml;

                            var html = `
                                      <div class='dropdown ms-1'>
                                      <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                      <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                      <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                          ${statusDependentHtml}

                                      </ul>
                                      </div>
                                      `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },

                ],
                dataBound: function () {
                    // Freeze the top 1 row (index 0) after the table is created
                    var rows = table.getRows();
                    if (rows.length > 0) {
                        var cells = rows[0].getCells();
                        cells.forEach(cell => {
                            cell.freeze();
                        });
                    }
                },
            });





            //size gear functionalities starts=============
            var globalFieldsIG = [
                                        { title: "NAME", field: "ItemGroupName", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                                                            { title: "SHORTNAME", field: "ItemGroupShortName", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "CODE", field: "ItemGroupCode", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "HS CODE", field: "ItemGroupHSCode", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                { title: "MARGIN", field: "ItemMargin", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                {
                    title: "ACTIONS", field: "igAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                        var data = cell.getData();
                        //console.log("seeeee data::", data);
                        var Edit = `editIGs(${data.Id})`;
                        var inActive = `setInactiveUrlOfIGs(${data.Id}) `

                        var deleteHtml = `
                                              <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                              <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                              </a>
                                              `;


                        //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                        var statusDependentHtml = deleteHtml;

                        var html = `
                                              <div class='dropdown ms-1'>
                                              <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                              <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                              <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                                  ${statusDependentHtml}

                                              </ul>
                                              </div>
                                              `;

                        return html;
                    },
                    visible: true, cellClick: function (e, cell) {
                        // Add a custom class to the cell when it's clicked
                        cell.getElement().classList.add('active-cell');
                    },
                },
            ];
            var columnListIG = $("#IGColumnList");

            $.each(globalFieldsIG, function (index, field) {
                //console.log("GLOBAL 2::",field);
                var title = field.title;
                var name = field.field;
                var visible = true;
                if (field.visible == false) {
                    visible = false;
                }
                var IGtitles = `<li>
                                    <a class="dropdown-item" href="#">
                                    <div class="custom-control custom-checkbox" >
                                    <input type="checkbox" class="custom-control-input title-input" id="${name}" value="${name}">
                                            <label class="custom-control-label w-100 cursor-pointer" id="${name}" for="${name}">${title}</label>
                                    </div>
                                    </a>
                                    </li>`;
                columnListIG.append(IGtitles);

                document.querySelector(`#${name}`).addEventListener('click', function (event) {
                    var checkbox = event.target;
                    var isChecked = checkbox.checked;

                    if (isChecked) {
                        IGTable.showColumn(name);
                    } else {
                        IGTable.hideColumn(name);
                    }
                });


                $(`${'#' + name}`).prop('checked', visible);


                $('.custom-control-label').on('click', function (e) {
                    e.stopPropagation();
                });
                $('#dropdown-titles').on('click', function (e) {
                    e.stopPropagation();
                });

                //Add event listener to the rows select input
                $("#IGRows").on("change", function () {
                    var selectedRows = $(this).val();
                    if (selectedRows !== null) {
                        var pageSize = parseInt(selectedRows);
                        if (!isNaN(pageSize)) {
                            IGTable.setPageSize(pageSize);
                        }
                    }
                });

            });
            //gear functionalities ends===============

        };

        $("#SaveIGBtn").click(function () {
            SaveIG();
        });
        function SaveIG() {
            var model = {
                Id: $("#IGId").val() || 0,
                ItemGroupCode: $("#igCode").val(),
                ItemGroupHSCode: $("#hsCode").val(),
                ItemGroupShortName: $("#shortName").val(),
                ItemGroupName: $("#ig").val(),
                ItemMargin: $("#imbd").val(),
            };
            console.log("fdestination model", model);
            $.ajax({
                async: false,
                type: "POST",
                url: '@Url.Action("AddUpdateIG", "Variable")',
                data: JSON.stringify(model),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    console.log("after save result", result);
                    var PODId = result.Id;

                    if (result.success == "1") {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-green",
                        });
                        $("#IGOffcanvas").offcanvas('hide');
                        clearOffCanvasIG();
                        IGGetData();
                    } else {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-red",
                        });
                        IGGetData();
                    }
                },
                error: function () {
                    toastr.success(result.message, "", {
                        "toastClass": "toast-red",
                    });
                    IGGetData();
                }
            });
        }
        function clearOffCanvasIG() {
            $("#IGOffcanvas .offcanvas-title").html("Add New");
            $("#IGId").val("");
            $("#igCode").val("");
            $("#hsCode").val("");
            $("#shortName").val("");
            $("#ig").val("");
            $("#imbd").val("");
            $('#SaveIGBtn').text("Save");
            $('#igCodeValidation').html("");
        }


        $("#closeIGOffcanvasBtn").on("click", function () {
            $("#IGOffcanvas").offcanvas('hide');
            clearOffCanvasIG()
        });


        function editIGs(data) {
            currentIGId = data;

            var myUrlGet = '@Url.Action("GetIGEdit", "Variable")?id=' + data;
            $.ajax({
                type: "GET",
                url: myUrlGet,
                success: function (result) {
                    console.log("edit data", result);

                    if (result.Success == "1") {
                        $("#IGOffcanvas .offcanvas-title").html("Edit");
                        $("#IGOffcanvas").offcanvas("show");
                        $("#SaveIGBtn").text('Update');
                        $("#IGId").val(result.data[0].Id);
                        $("#igCode").val(result.data[0].ItemGroupCode);
                        $("#hsCode").val(result.data[0].ItemGroupHSCode);
                        $("#shortName").val(result.data[0].ItemGroupShortName);
                        $("#ig").val(result.data[0].ItemGroupName);
                        $("#imbd").val(result.data[0].ItemMargin);
                    }
                    else {

                        toastr.success(result.message, "Access Denied", {
                            "toastClass": "toast-red",
                        });
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Error: " + xhr.status);
                }
            });
        }


        function setInactiveUrlOfIGs(data) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteIGs", "Variable")',
                        type: "get",
                        data: { id: data },
                        traditional: true,
                        success: function (response) {
                            if (response.success == "1") {
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-green",
                                });
                                IGGetData();
                            }
                            else if (response.success == "0") {
                                //alert()
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-red",
                                });
                                IGGetData();
                            }
                            else {

                                toastr.success(response.message, "Access Denied", {
                                    "toastClass": "toast-red",
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error(xhr.responseText);
                            toastr.error("Error during delete.", "", { "toastClass": "toast-red" });
                        }
                    });
                }
            });
        };
        document.getElementById("print-table-ig").addEventListener("click", function () {
            IGTable.print(false, true);
        });
        document.getElementById("download-xlsx-ig").addEventListener("click", function () {
            IGTable.download("xlsx", "Item Group.xlsx", { sheetName: "Item Group" });
        });



        var IGSave = document.querySelector('#SaveIGBtn');
        function getAllIGs(callback) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetIGList", "Variable")',
                dataType: "json",
                success: function (data) {
                    console.log("data::", data.data);
                    var SizeCodeGetArray = [];

                    data.data.forEach(function (item) {
                        var SizeName = item.ItemGroupName;
                        var SizeIdGet = item.Id;
                        var SizeData = {
                            SizeName: SizeName,
                            Id: SizeIdGet
                        };
                        SizeCodeGetArray.push(SizeData);
                    });

                    if (typeof callback === "function") {
                        callback(SizeCodeGetArray);
                    }
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            });
        }

        function checkIGExists(sizeName) {
            getAllIGs(function (data) {
                var lowercasedSizeName = sizeName.toLowerCase();

                var sizeExists = data.some(function (item) {
                    console.log("item.Id", item.Id);
                    //console.log("currentSizeIdd", currentSizeIdd);

                    if (currentIGId && currentIGId === item.Id) {
                        return false;
                    }

                    return item.SizeName.trim().toLowerCase() === lowercasedSizeName;
                });

                console.log("sizeExists", sizeExists);

                if (sizeExists) {
                    $("#igCodeValidation").html("Already has the same Name!");
                    IGSave.disabled = true;
                } else {
                    $("#igCodeValidation").html("");
                    IGSave.disabled = false;

                }
            });
        }

        var IGNameHandle = document.getElementById("ig");
        IGNameHandle.addEventListener("input", function () {
            //console.log("currentSizeId", currentSizeIdd);

            var enteredSizeName = IGNameHandle.value;
            checkIGExists(enteredSizeName);
        });

        //===========================ig functionalities ends=======================

        //===========================item description functionalities starts=====================

        var IDTable;
        var currentIGId;
        //IDGetData();
        function IDGetData() {
            var FDAPIURL = '@Url.Action("GetITList", "Variable")';
            IDTable = new Tabulator("#IDTable", {
                // data: dataTableFilter,
                dataTree: true,
                //height:300,
                dataTreeStartExpanded: true,
                dataTreeChildField: "children",
                layout: "fitColumns",
                selectable: 1,
                pagination: true,
                paginationMode: "remote",
                paginationSize: 5,
                paginationInitialPage: 1,
                paginationSizeSelector: [5, 10, 25, 50, 100, 500, 1000],
                paginationCounter: "rows",
                ajaxURL: FDAPIURL,
                ajaxConfig: "get",
                ajaxContentType: "json",

                ajaxResponse: function (url, params, response) {
                    IDTable.setMaxPage(response.last_page);
                    // //console.log("response.last_page", response.last_page);

                    dataLoadExpense = response.data;
                    ////console.log("dataLoadExpense abc:", dataLoadExpense);

                    return {

                        data: dataLoadExpense,
                        last_page: response.last_page,

                    };
                },

                columns: [
                    { title: "NAME", field: "ItemDescName", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "SHORT NAME", field: "ItemDescShortName", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "CODE", field: "ItemDescCode", hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "HS CODE", field: "ItemDescHSCode", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "GROUP NAME", field: "igName", hozAlign: "left", headerHozAlign: "center", visible: false },
                    {
                        title: "ACTIONS", field: "iDAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editIDs(${data.Id})`;
                            var inActive = `setInactiveUrlOfIDs(${data.Id}) `

                            var deleteHtml = `
                                              <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                              <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                              </a>
                                              `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                            var statusDependentHtml = deleteHtml;

                            var html = `
                                              <div class='dropdown ms-1'>
                                              <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                              <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                              <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                                  ${statusDependentHtml}

                                              </ul>
                                              </div>
                                              `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },

                ],
                dataBound: function () {
                    // Freeze the top 1 row (index 0) after the table is created
                    var rows = table.getRows();
                    if (rows.length > 0) {
                        var cells = rows[0].getCells();
                        cells.forEach(cell => {
                            cell.freeze();
                        });
                    }
                },
            });





            //size gear functionalities starts=============
             var globalFieldsIG = [
                                         { title: "NAME", field: "ItemDescName", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                                                             { title: "SHORT NAME", field: "ItemDescShortName", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                { title: "CODE", field: "ItemDescCode", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                     { title: "HS CODE", field: "ItemDescHSCode", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                     { title: "GROUP NAME", field: "igName", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                {
                    title: "ACTIONS", field: "iDAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                        var data = cell.getData();
                        //console.log("seeeee data::", data);
                        var Edit = `editIDs(${data.Id})`;
                        var inActive = `setInactiveUrlOfIDs(${data.Id}) `

                        var deleteHtml = `
                                                      <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                                      <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                                      </a>
                                                      `;


                        //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                        var statusDependentHtml = deleteHtml;

                        var html = `
                                                      <div class='dropdown ms-1'>
                                                      <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                                      <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                                      <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                                          ${statusDependentHtml}

                                                      </ul>
                                                      </div>
                                                      `;

                        return html;
                    },
                    visible: true, cellClick: function (e, cell) {
                        // Add a custom class to the cell when it's clicked
                        cell.getElement().classList.add('active-cell');
                    },
                },
            ];
            var columnListID = $("#IDColumnList");

            $.each(globalFieldsIG, function (index, field) {
                //console.log("GLOBAL 2::",field);
                var title = field.title;
                var name = field.field;
                var visible = true;
                if (field.visible == false) {
                    visible = false;
                }
                var IDtitles = `<li>
                                    <a class="dropdown-item" href="#">
                                    <div class="custom-control custom-checkbox" >
                                    <input type="checkbox" class="custom-control-input title-input" id="${name}" value="${name}">
                                            <label class="custom-control-label w-100 cursor-pointer" id="${name}" for="${name}">${title}</label>
                                    </div>
                                    </a>
                                    </li>`;
                columnListID.append(IDtitles);

                document.querySelector(`#${name}`).addEventListener('click', function (event) {
                    var checkbox = event.target;
                    var isChecked = checkbox.checked;

                    if (isChecked) {
                        IDTable.showColumn(name);
                    } else {
                        IDTable.hideColumn(name);
                    }
                });


                $(`${'#' + name}`).prop('checked', visible);


                $('.custom-control-label').on('click', function (e) {
                    e.stopPropagation();
                });
                $('#dropdown-titles').on('click', function (e) {
                    e.stopPropagation();
                });

                //Add event listener to the rows select input
                $("#IDRows").on("change", function () {
                    var selectedRows = $(this).val();
                    if (selectedRows !== null) {
                        var pageSize = parseInt(selectedRows);
                        if (!isNaN(pageSize)) {
                            IDTable.setPageSize(pageSize);
                        }
                    }
                });

            });
            //gear functionalities ends===============

        };

        $("#SaveITBtn").click(function () {
            SaveID();
        });
        function SaveID() {
            var model = {
                Id: $("#IDId").val() || 0,
                ItemDescCode: $("#iTCode").val(),
                ItemDescHSCode: $("#IDhsCode").val(),
                ItemDescShortName: $("#IDshortName").val(),
                ItemDescName: $("#it").val(),
                ItemGroupId: $("#itemGroupDropdown").val(),
            };
            console.log("fdestination model", model);
            $.ajax({
                async: false,
                type: "POST",
                url: '@Url.Action("AddUpdateID", "Variable")',
                data: JSON.stringify(model),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    console.log("after save result", result);
                    var PODId = result.Id;

                    if (result.success == "1") {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-green",
                        });
                        $("#ITOffcanvas").offcanvas('hide');
                        clearOffCanvasIT();
                        IDGetData();
                    } else {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-red",
                        });
                        IDGetData();
                    }
                },
                error: function () {
                    toastr.success(result.message, "", {
                        "toastClass": "toast-red",
                    });
                    IDGetData();
                }
            });
        }
        function clearOffCanvasIT() {
            $("#ITOffcanvas .offcanvas-title").html("Add New");
            $("#IDId").val("");
            $("#iTCode").val("");
            $("#IDhsCode").val("");
            $("#IDshortName").val("");
            $("#it").val("");
            $("#itemGroupDropdown").val("");
            $('#SaveITBtn').text("Save");
            $('#itCodeValidation').html("");
        }


        $("#closeITOffcanvasBtn").on("click", function () {
            $("#ITOffcanvas").offcanvas('hide');
            clearOffCanvasIT()
        });


        function editIDs(data) {
            currentIGId = data;

            var myUrlGet = '@Url.Action("GetIDEdit", "Variable")?id=' + data;
            $.ajax({
                type: "GET",
                url: myUrlGet,
                success: function (result) {
                    console.log("edit data", result);

                    if (result.Success == "1") {
                        $("#ITOffcanvas .offcanvas-title").html("Edit");
                        $("#ITOffcanvas").offcanvas("show");
                        $("#SaveITBtn").text('Update');
                        $("#IDId").val(result.data[0].Id);
                        $("#iTCode").val(result.data[0].ItemDescCode);
                        $("#IDhsCode").val(result.data[0].ItemDescHSCode);
                        $("#IDshortName").val(result.data[0].ItemDescShortName);
                        $("#it").val(result.data[0].ItemDescName);
                        $("#itemGroupDropdown").val(result.data[0].ItemGroupId).change();
                    }
                    else {

                        toastr.success(result.message, "Access Denied", {
                            "toastClass": "toast-red",
                        });
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Error: " + xhr.status);
                }
            });
        }


        function setInactiveUrlOfIDs(data) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteIDs", "Variable")',
                        type: "get",
                        data: { id: data },
                        traditional: true,
                        success: function (response) {
                            if (response.success == "1") {
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-green",
                                });
                                IDGetData();
                            }
                            else if (response.success == "0") {
                                //alert()
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-red",
                                });
                                IDGetData();
                            }
                            else {

                                toastr.success(response.message, "Access Denied", {
                                    "toastClass": "toast-red",
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error(xhr.responseText);
                            toastr.error("Error during delete.", "", { "toastClass": "toast-red" });
                        }
                    });
                }
            });
        };
        document.getElementById("print-table-id").addEventListener("click", function () {
            IDTable.print(false, true);
        });
        document.getElementById("download-xlsx-id").addEventListener("click", function () {
            IDTable.download("xlsx", "Item Description.xlsx", { sheetName: "Item Description" });
        });



        var ITSave = document.querySelector('#SaveITBtn');
        function getAllIDs(callback) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetITList", "Variable")',
                dataType: "json",
                success: function (data) {
                    console.log("data::", data.data);
                    var SizeCodeGetArray = [];

                    data.data.forEach(function (item) {
                        var SizeName = item.ItemDescName;
                        var SizeIdGet = item.Id;
                        var SizeData = {
                            SizeName: SizeName,
                            Id: SizeIdGet
                        };
                        SizeCodeGetArray.push(SizeData);
                    });

                    if (typeof callback === "function") {
                        callback(SizeCodeGetArray);
                    }
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            });
        }

        function checkIDExists(sizeName) {
            getAllIDs(function (data) {
                var lowercasedSizeName = sizeName.toLowerCase();

                var sizeExists = data.some(function (item) {
                    console.log("item.Id", item.Id);
                    //console.log("currentSizeIdd", currentSizeIdd);

                    if (currentIGId && currentIGId === item.Id) {
                        return false;
                    }

                    return item.SizeName.trim().toLowerCase() === lowercasedSizeName;
                });

                console.log("sizeExists", sizeExists);

                if (sizeExists) {
                    $("#itCodeValidation").html("Already has the same Name!");
                    ITSave.disabled = true;
                } else {
                    $("#itCodeValidation").html("");
                    ITSave.disabled = false;

                }
            });
        }

        var IDNameHandle = document.getElementById("it");
        IDNameHandle.addEventListener("input", function () {
            //console.log("currentSizeId", currentSizeIdd);

            var enteredSizeName = IDNameHandle.value;
            checkIDExists(enteredSizeName);
        });
        //populate item group        
        function itemGroupList(){
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetItemGroupDrodpwon", "Variable")',
                datatype: "Json",
                success: function (data) {

                    $.each(data, function (index, value) {
                        // console.log("value dekhi country er", value);
                        $('#itemGroupDropdown').append('<option value="' + value.Id + '">' + value.ItemGroupName + '</option>');
                    });
                }
            });
        }
       
        //===========================id functionalities ends=======================



         //===========================dynamic reporting functionalities starts=====================

        var DRable;
        var currentDRId;
        //DRGetData();
        function DRGetData() {
            var FDAPIURL = '@Url.Action("GetDPList", "Variable")';
            DRable = new Tabulator("#DRable", {
                // data: dataTableFilter,
                dataTree: true,
                //height:300,
                dataTreeStartExpanded: true,
                dataTreeChildField: "children",
                layout: "fitColumns",
                selectable: 1,
                pagination: true,
                paginationMode: "remote",
                paginationSize: 5,
                paginationInitialPage: 1,
                paginationSizeSelector: [5, 10, 25, 50, 100, 500, 1000],
                paginationCounter: "rows",
                ajaxURL: FDAPIURL,
                ajaxConfig: "get",
                ajaxContentType: "json",

                ajaxResponse: function (url, params, response) {
                    DRable.setMaxPage(response.last_page);
                    // //console.log("response.last_page", response.last_page);

                    dataLoadExpense = response.data;
                    ////console.log("dataLoadExpense abc:", dataLoadExpense);

                    return {

                        data: dataLoadExpense,
                        last_page: response.last_page,

                    };
                },

                columns: [
                    { title: "NAME", field: "DynamicReportName", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "LIST NAME", field: "DynamicReportPackingListName", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "CAPTION", field: "DynamicReportCaption", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "BUYER NAME", field: "dpbuyer", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "DESIGNE BY", field: "ReportDesignByPerson", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "LOCATION", field: "ReportLocation", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "CONTROLLER", field: "ReportController", hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "VERIFIED BY", field: "VerifiedByPerson", hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "PERCENTAGE", field: "CompletePercentage", hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "REMARKS", field: "Remarks", hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "ACTION", field: "DynamicReportActionName", hozAlign: "left", headerHozAlign: "center", visible: false },
                    {
                        title: "ACTIONS", field: "drAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editDRs(${data.Id})`;
                            var inActive = `setInactiveUrlOfDRs(${data.Id}) `

                            var deleteHtml = `
                                              <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                              <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                              </a>
                                              `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                            var statusDependentHtml = deleteHtml;

                            var html = `
                                              <div class='dropdown ms-1'>
                                              <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                              <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                              <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                                  ${statusDependentHtml}

                                              </ul>
                                              </div>
                                              `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },

                ],
                dataBound: function () {
                    // Freeze the top 1 row (index 0) after the table is created
                    var rows = table.getRows();
                    if (rows.length > 0) {
                        var cells = rows[0].getCells();
                        cells.forEach(cell => {
                            cell.freeze();
                        });
                    }
                },
            });





            //size gear functionalities starts=============
            var globalFieldsDR = [
                    { title: "NAME", field: "DynamicReportName", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "LIST NAME", field: "DynamicReportPackingListName", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "CAPTION", field: "DynamicReportCaption", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "BUYER NAME", field: "dpbuyer", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "DESIGNE BY", field: "ReportDesignByPerson", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "LOCATION", field: "ReportLocation", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "CONTROLLER", field: "ReportController", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "VERIFIED BY", field: "VerifiedByPerson", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "PERCENTAGE", field: "CompletePercentage", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "REMARKS", field: "Remarks", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                    {
                        title: "ACTIONS", field: "drAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editDRs(${data.Id})`;
                            var inActive = `setInactiveUrlOfDRs(${data.Id}) `

                            var deleteHtml = `
                                              <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                              <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                              </a>
                                              `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                            var statusDependentHtml = deleteHtml;

                            var html = `
                                              <div class='dropdown ms-1'>
                                              <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                              <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                              <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                                  ${statusDependentHtml}

                                              </ul>
                                              </div>
                                              `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },
            ];
            var columnListDR = $("#DRColumnList");

            $.each(globalFieldsDR, function (index, field) {
                //console.log("GLOBAL 2::",field);
                var title = field.title;
                var name = field.field;
                var visible = true;
                if (field.visible == false) {
                    visible = false;
                }
                var DRtitles = `<li>
                                    <a class="dropdown-item" href="#">
                                    <div class="custom-control custom-checkbox" >
                                    <input type="checkbox" class="custom-control-input title-input" id="${name}" value="${name}">
                                    <label class="custom-control-label w-100 cursor-pointer" id="${name}" for="${name}">${title}</label>
                                    </div>
                                    </a>
                                    </li>`;
                columnListDR.append(DRtitles);

                document.querySelector(`#${name}`).addEventListener('click', function (event) {
                    var checkbox = event.target;
                    var isChecked = checkbox.checked;

                    if (isChecked) {
                        DRable.showColumn(name);
                    } else {
                        DRable.hideColumn(name);
                    }
                });


                $(`${'#' + name}`).prop('checked', visible);


                $('.custom-control-label').on('click', function (e) {
                    e.stopPropagation();
                });
                $('#dropdown-titles').on('click', function (e) {
                    e.stopPropagation();
                });

                //Add event listener to the rows select input
                $("#DRRows").on("change", function () {
                    var selectedRows = $(this).val();
                    if (selectedRows !== null) {
                        var pageSize = parseInt(selectedRows);
                        if (!isNaN(pageSize)) {
                            DRable.setPageSize(pageSize);
                        }
                    }
                });

            });
            //gear functionalities ends===============

        };
        var CheckValueDR;
        $("#IsVerified").on("click", function () {
            var isChecked = $(this).prop("checked");
            if(isChecked==true){
                CheckValueDR = 1;
            }
            else{
                CheckValueDR = 0;
            }
            // console.log("Checkbox is checked:", isChecked);
        });

        $("#SaveDRBtn").click(function () {
            SaveDR();
        });
          $("#CompletePercnt").on("input", function () {
             $("#percent-validation").html("");
         });
        function SaveDR() {
            var completePercentage = $("#CompletePercnt").val();

            var model = {
                Id: $("#DRId").val() || 0,
                DynamicReportName: $("#exportInvoiceReport").val(),
                DynamicReportPackingListName: $("#packingListReport").val(),
                DynamicReportPackingDetailsName: $("#packingDetailsReport").val(),
                DynamicReportCaption: $("#reportCaption").val(),
                isVerified: CheckValueDR,
                BuyerId: $("#drBuyer option:selected").val(),
                ReportController: $("#dynamicReportController").val(),
                DynamicReportActionName: $("#dynamicReportAction").val(),
                ReportDesignByPerson: $("#dynamicPersonName").val(),
                ReportLocation: $("#reportLocation").val(),
                VerifiedByPerson: $("#verifiedBtyPerson").val(),
                //CompletePercentage: $("#CompletePercnt").val(),
                CompletePercentage: completePercentage,
                Remarks: $("#remarKs").val(),                 
            };

             // if (!completePercentage) {
             //    $("#percent-validation").html("Please enter the Percentage");
             //    $("#CompletePercnt").focus();
             // }

            console.log("fdestination model", model);
            $.ajax({
                async: false,
                type: "POST",
                url: '@Url.Action("AddUpdateDP", "Variable")',
                data: JSON.stringify(model),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    console.log("after save result", result);
                    var PODId = result.Id;

                    if (result.success == "1") {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-green",
                        });
                        $("#DROffcanvas").offcanvas('hide');
                        clearOffCanvasDR();
                        DRGetData();
                        getDynamicReportDrodpdown();
                    } else {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-red",
                        });
                        DRGetData();
                    }
                },
                error: function () {
                    toastr.success(result.message, "", {
                        "toastClass": "toast-red",
                    });
                    DRGetData();
                }
            });
        }
        function clearOffCanvasDR() {
            $("#DROffcanvas .offcanvas-title").html("Add New");
            $("#DRId").val("");
            $("#exportInvoiceReport").val("");
            $("#packingListReport").val("");
            $("#packingDetailsReport").val("");
            $("#reportCaption").val("");
            $("#inactive").val("");
            $("#drBuyer").val("");
            $("#IsVerified").val("");
            $("#dynamicReportController").val("");
            $("#dynamicReportAction").val("");
            $("#dynamicPersonName").val("");
            $("#reportLocation").val("");
            $("#verifiedBtyPerson").val("");
            $("#CompletePercnt").val("");
            $("#remarKs").val("");
            $('#SaveDRBtn').text("Save");
            $('#exportInvoiceReportValidation').html("");
        }


        $("#closeDRffcanvasBtn").on("click", function () {
            $("#DROffcanvas").offcanvas('hide');
            clearOffCanvasDR()
        });


        function editDRs(data) {
            currentDRId = data;

            var myUrlGet = '@Url.Action("GetDPEdit", "Variable")?id=' + data;
            $.ajax({
                type: "GET",
                url: myUrlGet,
                success: function (result) {
                    console.log("edit data", result);

                    if (result.Success == "1") {
                        $("#DROffcanvas .offcanvas-title").html("Edit");
                        $("#DROffcanvas").offcanvas("show");
                        $("#SaveDRBtn").text('Update');
                        $("#DRId").val(result.data[0].Id);
                        $("#exportInvoiceReport").val(result.data[0].DynamicReportName);
                        $("#packingListReport").val(result.data[0].DynamicReportPackingListName);
                        $("#packingDetailsReport").val(result.data[0].DynamicReportPackingDetailsName);
                        $("#reportCaption").val(result.data[0].DynamicReportCaption);
                        $("#drBuyer").val(result.data[0].BuyerId).change();
                        $("#buyer").val(result.data[0].BuyerId);
                        $("#IsVerified").val(result.data[0].isVerified);
                        $("#dynamicReportController").val(result.data[0].ReportController);
                        $("#dynamicReportAction").val(result.data[0].DynamicReportActionName);
                        $("#dynamicPersonName").val(result.data[0].ReportDesignByPerson);
                        $("#reportLocation").val(result.data[0].ReportLocation);
                        $("#verifiedBtyPerson").val(result.data[0].VerifiedByPerson);
                        $("#CompletePercnt").val(result.data[0].CompletePercentage);
                        $("#remarKs").val(result.data[0].Remarks);
                        $("#exportInvoiceReportValidation").val(result.data[0].ShippedTo);
                    }
                    else {

                        toastr.success(result.message, "Access Denied", {
                            "toastClass": "toast-red",
                        });
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Error: " + xhr.status);
                }
            });
        }


        function setInactiveUrlOfDRs(data) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteDPs", "Variable")',
                        type: "get",
                        data: { id: data },
                        traditional: true,
                        success: function (response) {
                            if (response.success == "1") {
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-green",
                                });
                                DRGetData();
                            }
                            else if (response.success == "0") {
                                //alert()
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-red",
                                });
                                DRGetData();
                            }
                            else {

                                toastr.success(response.message, "Access Denied", {
                                    "toastClass": "toast-red",
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error(xhr.responseText);
                            toastr.error("Error during delete.", "", { "toastClass": "toast-red" });
                        }
                    });
                }
            });
        };
        document.getElementById("print-table-dr").addEventListener("click", function () {
            DRable.print(false, true);
        });
        document.getElementById("download-xlsx-dr").addEventListener("click", function () {
            DRable.download("xlsx", "Dynamic Reporting.xlsx", { sheetName: "Dynamic Reporting" });
        });



        var DRave = document.querySelector('#SaveDRBtn');
        function getAllDRs(callback) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetDPList", "Variable")',
                dataType: "json",
                success: function (data) {
                    console.log("data::", data.data);
                    var SizeCodeGetArray = [];

                    data.data.forEach(function (item) {
                        var SizeName = item.DynamicReportName;
                        var SizeIdGet = item.Id;
                        var SizeData = {
                            SizeName: SizeName,
                            Id: SizeIdGet
                        };
                        SizeCodeGetArray.push(SizeData);
                    });

                    if (typeof callback === "function") {
                        callback(SizeCodeGetArray);
                    }
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            });
        }

        function checkDRExists(sizeName) {
            getAllDRs(function (data) {
                var lowercasedSizeName = sizeName.toLowerCase();

                var sizeExists = data.some(function (item) {
                    console.log("item.Id", item.Id);
                    //console.log("currentSizeIdd", currentSizeIdd);

                    if (currentDRId && currentDRId === item.Id) {
                        return false;
                    }

                    return item.SizeName.trim().toLowerCase() === lowercasedSizeName;
                });

                console.log("sizeExists", sizeExists);

                if (sizeExists) {
                    $("#exportInvoiceReportValidation").html("Already has the same Name!");
                    DRave.disabled = true;
                } else {
                    $("#exportInvoiceReportValidation").html("");
                    DRave.disabled = false;

                }
            });
        }

        var DRNameHandle = document.getElementById("exportInvoiceReport");
        DRNameHandle.addEventListener("input", function () {
            //console.log("currentSizeId", currentSizeIdd);

            var enteredSizeName = DRNameHandle.value;
            checkDRExists(enteredSizeName);
        });
        //populate country  drodpdown
        function drBuyer(){
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetBuyerGroupDrodpwon", "Variable")',
                datatype: "Json",
                success: function (data) {

                    $.each(data, function (index, value) {
                        // console.log("value dekhi country er", value);
                        $('#drBuyer').append('<option value="' + value.Id + '">' + value.Name + '</option>');
                    });
                }
            });
        }
       
        //===========================dr functionalities ends=======================




















        //===========================notify party functionalities starts=====================

        var NPTable;
        var currentNPId;
        //NPGetData();
        function NPGetData() {
            var FDAPIURL = '@Url.Action("GetNPList", "Variable")';
            NPTable = new Tabulator("#NPTable", {
                // data: dataTableFilter,
                dataTree: true,
                //height:300,
                dataTreeStartExpanded: true,
                dataTreeChildField: "children",
                layout: "fitColumns",
                selectable: 1,
                pagination: true,
                paginationMode: "remote",
                paginationSize: 5,
                paginationInitialPage: 1,
                paginationSizeSelector: [5, 10, 25, 50, 100, 500, 1000],
                paginationCounter: "rows",
                ajaxURL: FDAPIURL,
                ajaxConfig: "get",
                ajaxContentType: "json",

                ajaxResponse: function (url, params, response) {
                    NPTable.setMaxPage(response.last_page);
                    // //console.log("response.last_page", response.last_page);

                    dataLoadExpense = response.data;
                    ////console.log("dataLoadExpense abc:", dataLoadExpense);

                    return {

                        data: dataLoadExpense,
                        last_page: response.last_page,

                    };
                },

                columns: [
                    { title: "NAME", field: "NotifyPartyName", hozAlign: "left", headerHozAlign: "center",width: 200, visible: true },
                    { title: "NAME SEARCH", field: "NotifyPartyNameSearch", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "SHOP CODE", field: "ShopCode", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "EMAIL", field: "Email", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "SLNO", field: "SLNO", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "BUYER", field: "Name", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "COUNTRY", field: "npcountry", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "PHONE", field: "PhoneNo", hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "ADDRESS 1", field: "Address1", hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "ADDRESS 2", field: "Address2", hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "SHIPPED TO", field: "ShippedTo", hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "PORT OF DISCHARGE NAME", field: "nppod", hozAlign: "left", headerHozAlign: "nppod", visible: false },
                    {
                        title: "ACTIONS", field: "npAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editNPs(${data.Id})`;
                            var inActive = `setInactiveUrlOfNPs(${data.Id}) `

                            var deleteHtml = `
                                              <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                              <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                              </a>
                                              `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                            var statusDependentHtml = deleteHtml;

                            var html = `
                                              <div class='dropdown ms-1'>
                                              <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                              <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                              <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                                  ${statusDependentHtml}

                                              </ul>
                                              </div>
                                              `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },

                ],
                dataBound: function () {
                    // Freeze the top 1 row (index 0) after the table is created
                    var rows = table.getRows();
                    if (rows.length > 0) {
                        var cells = rows[0].getCells();
                        cells.forEach(cell => {
                            cell.freeze();
                        });
                    }
                },
            });





            //size gear functionalities starts=============
            var globalFieldsIG = [
                    { title: "NAME", field: "NotifyPartyName", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "NAME SEARCH", field: "NotifyPartyNameSearch", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "SHOP CODE", field: "ShopCode", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "EMAIL", field: "Email", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "SLNO", field: "SLNO", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "BUYER", field: "Name", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "COUNTRY", field: "npcountry", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "PHONE", field: "PhoneNo", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "ADDRESS 1", field: "Address1", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "ADDRESS 2", field: "Address2", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "SHIPPED TO", field: "ShippedTo", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "PORT OF DISCHARGE NAME", field: "nppod", width: 500, hozAlign: "left", headerHozAlign: "nppod", visible: false },
                    {
                        title: "ACTIONS", field: "npAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editNPs(${data.Id})`;
                            var inActive = `setInactiveUrlOfNPs(${data.Id}) `

                            var deleteHtml = `
                                              <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                              <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                              </a>
                                              `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                            var statusDependentHtml = deleteHtml;

                            var html = `
                                              <div class='dropdown ms-1'>
                                              <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                              <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                              <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                                  ${statusDependentHtml}

                                              </ul>
                                              </div>
                                              `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },
            ];
            var columnListNP = $("#NPColumnList");

            $.each(globalFieldsIG, function (index, field) {
                //console.log("GLOBAL 2::",field);
                var title = field.title;
                var name = field.field;
                var visible = true;
                if (field.visible == false) {
                    visible = false;
                }
                var NPtitles = `<li>
                                                         <a class="dropdown-item" href="#">
                                                         <div class="custom-control custom-checkbox" >
                                                         <input type="checkbox" class="custom-control-input title-input" id="${name}" value="${name}">
                                                                 <label class="custom-control-label w-100 cursor-pointer" id="${name}" for="${name}">${title}</label>
                                                         </div>
                                                         </a>
                                                         </li>`;
                columnListNP.append(NPtitles);

                document.querySelector(`#${name}`).addEventListener('click', function (event) {
                    var checkbox = event.target;
                    var isChecked = checkbox.checked;

                    if (isChecked) {
                        NPTable.showColumn(name);
                    } else {
                        NPTable.hideColumn(name);
                    }
                });


                $(`${'#' + name}`).prop('checked', visible);


                $('.custom-control-label').on('click', function (e) {
                    e.stopPropagation();
                });
                $('#dropdown-titles').on('click', function (e) {
                    e.stopPropagation();
                });

                //Add event listener to the rows select input
                $("#NPRows").on("change", function () {
                    var selectedRows = $(this).val();
                    if (selectedRows !== null) {
                        var pageSize = parseInt(selectedRows);
                        if (!isNaN(pageSize)) {
                            NPTable.setPageSize(pageSize);
                        }
                    }
                });

            });
            //gear functionalities ends===============

        };
        var CheckValue;
        $("#inactive").on("click", function () {
            var isChecked = $(this).prop("checked");
            if(isChecked==true){
                CheckValue = 1;
            }
            else{
                CheckValue = 0;
            }
            // console.log("Checkbox is checked:", isChecked);
        });

        $("#SaveNPtn").click(function () {
            SaveNP();
        });
        function SaveNP() {
            var model = {
                Id: $("#NPId").val() || 0,
                NotifyPartyName: $("#npName").val(),
                NotifyPartyNameSearch: $("#npsName").val(),
                ShopCode: $("#shopCode").val(),
                Email: $("#email").val(),
                isInactive: CheckValue, //$("#inactive").val(),
                SLNO: $("#slNo").val(),
                BuyerId: $("#buyer option:selected").val(),
                CountryId: $("#npCountry option:selected").val(),
                PortOfDischargeId: $("#pod option:selected").val(),
                DynamicReportId: $("#rptlink").val(),
                PhoneNo: $("#phone").val(),
                Address1: $("#adrs1").val(),
                Address2: $("#adrs2").val(),
                ShippedTo: $("#shpto").val(),
            };
            console.log("fdestination model", model);
            $.ajax({
                async: false,
                type: "POST",
                url: '@Url.Action("AddUpdateNP", "Variable")',
                data: JSON.stringify(model),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    console.log("after save result", result);
                    var PODId = result.Id;

                    if (result.success == "1") {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-green",
                        });
                        $("#NPOffcanvas").offcanvas('hide');
                        clearOffCanvasNP();
                        NPGetData();
                    } else {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-red",
                        });
                        NPGetData();
                    }
                },
                error: function () {
                    toastr.success(result.message, "", {
                        "toastClass": "toast-red",
                    });
                    NPGetData();
                }
            });
        }
        function clearOffCanvasNP() {
            $("#NPOffcanvas .offcanvas-title").html("Add New");
            $("#NPId").val("");
            $("#npName").val("");
            $("#npsName").val("");
            $("#shopCode").val("");
            $("#email").val("");
            $("#inactive").val("");
            $("#slNo").val("");
            $("#buyer").val("");
            $("#npCountry").val("0").change();
            $("#pod").val("");
            $("#phone").val("");
            $("#adrs1").val("");
            $("#adrs2").val("");
            $("#shpto").val("");
            $("#rptlink").val("0").change();
            $('#SaveNPtn').text("Save");
            $('#catNameValidation').html("");
        }


        $("#closeNPOffcanvasBtn").on("click", function () {
            $("#NPOffcanvas").offcanvas('hide');
            clearOffCanvasNP()
        });


        function editNPs(data) {
            currentNPId = data;

            var myUrlGet = '@Url.Action("GetNPEdit", "Variable")?id=' + data;
            $.ajax({
                type: "GET",
                url: myUrlGet,
                success: function (result) {
                    console.log("edit data", result);

                    if (result.Success == "1") {
                        $("#NPOffcanvas .offcanvas-title").html("Edit");
                        $("#NPOffcanvas").offcanvas("show");
                        $("#SaveNPtn").text('Update');
                        $("#NPId").val(result.data[0].Id);
                        $("#npName").val(result.data[0].NotifyPartyName);
                        $("#npsName").val(result.data[0].NotifyPartyNameSearch);
                        $("#shopCode").val(result.data[0].ShopCode);
                        $("#email").val(result.data[0].Email);
                        $("#inactive").val(result.data[0].isInactive);
                        $("#slNo").val(result.data[0].SLNO);
                        $("#buyer").val(result.data[0].BuyerId).change();
                        $("#npCountry").val(result.data[0].CountryId).change();
                        $("#pod").val(result.data[0].PortOfDischargeId).change();
                        $("#phone").val(result.data[0].PhoneNo);
                        $("#adrs1").val(result.data[0].Address1);
                        $("#adrs2").val(result.data[0].Address2);
                        $("#shpto").val(result.data[0].ShippedTo);
                        $("#rptlink").val(result.data[0].DynamicReportId).change();

                    }
                    else {

                        toastr.success(result.message, "Access Denied", {
                            "toastClass": "toast-red",
                        });
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Error: " + xhr.status);
                }
            });
        }


        function setInactiveUrlOfNPs(data) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteNPs", "Variable")',
                        type: "get",
                        data: { id: data },
                        traditional: true,
                        success: function (response) {
                            if (response.success == "1") {
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-green",
                                });
                                NPGetData();
                            }
                            else if (response.success == "0") {
                                //alert()
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-red",
                                });
                                NPGetData();
                            }
                            else {

                                toastr.success(response.message, "Access Denied", {
                                    "toastClass": "toast-red",
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error(xhr.responseText);
                            toastr.error("Error during delete.", "", { "toastClass": "toast-red" });
                        }
                    });
                }
            });
        };
        document.getElementById("print-table-np").addEventListener("click", function () {
            NPTable.print(false, true);
        });
        document.getElementById("download-xlsx-np").addEventListener("click", function () {
            NPTable.download("xlsx", "Notify Party.xlsx", { sheetName: "Notify Party" });
        });



        var NPSave = document.querySelector('#SaveNPtn');
        function getAllNPs(callback) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetNPList", "Variable")',
                dataType: "json",
                success: function (data) {
                    console.log("data::", data.data);
                    var SizeCodeGetArray = [];

                    data.data.forEach(function (item) {
                        var SizeName = item.NotifyPartyName;
                        var SizeIdGet = item.Id;
                        var SizeData = {
                            SizeName: SizeName,
                            Id: SizeIdGet
                        };
                        SizeCodeGetArray.push(SizeData);
                    });

                    if (typeof callback === "function") {
                        callback(SizeCodeGetArray);
                    }
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            });
        }

        function checkNPExists(sizeName) {
            getAllNPs(function (data) {
                var lowercasedSizeName = sizeName.toLowerCase();

                var sizeExists = data.some(function (item) {
                    console.log("item.Id", item.Id);
                    //console.log("currentSizeIdd", currentSizeIdd);

                    if (currentNPId && currentNPId === item.Id) {
                        return false;
                    }

                    return item.SizeName.trim().toLowerCase() === lowercasedSizeName;
                });

                console.log("sizeExists", sizeExists);

                if (sizeExists) {
                    $("#catNameValidation").html("Already has the same Name!");
                    NPSave.disabled = true;
                } else {
                    $("#catNameValidation").html("");
                    NPSave.disabled = false;

                }
            });
        }

        var NPNameHandle = document.getElementById("npName");
        NPNameHandle.addEventListener("input", function () {
            //console.log("currentSizeId", currentSizeIdd);

            var enteredSizeName = NPNameHandle.value;
            checkNPExists(enteredSizeName);
        });

        //populate buyer  drodpdown
        function notifybuyer(){
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetBuyerGroupDrodpwon", "Variable")',
                datatype: "Json",
                success: function (data) {

                    $.each(data, function (index, value) {
                        // console.log("value dekhi buyer er", value);
                        $('#buyer').append('<option value="' + value.Id + '">' + value.Name + '</option>');
                    });
                }
            });
        }
      
        //populate pod  drodpdown        
        function Notifypod(){
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetPODGroupDrodpwon", "Variable")',
                datatype: "Json",
                success: function (data) {

                    $.each(data, function (index, value) {
                        // console.log("value dekhi pod er", value);
                        $('#pod').append('<option value="' + value.Id + '">' + value.PortOfDischargeName + '</option>');
                    });
                }
            });
        }
      
        //populate country  drodpdown
        function npCountry() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetCountryDrodpwon", "Variable")',
                datatype: "Json",
                success: function (data) {

                    $.each(data, function (index, value) {
                        // console.log("value dekhi country er", value);
                        $('#npCountry').append('<option value="' + value.Id + '">' + value.CountryName + '</option>');
                    });
                }
            });
        }
      
        //populate report link  drodpdown       
       function getDynamicReportDrodpdown(){
            $.ajax({
            type: "GET",
            url: '@Url.Action("GetReportLinkGroupDrodpwon", "Variable")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    // console.log("value dekhi country er", value);
                    $('#rptlink').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                });
            }
        });
       };
        //===========================np functionalities ends=======================










        //===========================buyer group functionalities starts=====================

        var BGTable;
        var currentBGId;
        //BGGetData();
        function BGGetData() {
            var FDAPIURL = '@Url.Action("GetBGList", "Variable")';
            BGTable = new Tabulator("#BGTable", {
                // data: dataTableFilter,
                dataTree: true,
                //height:300,
                dataTreeStartExpanded: true,
                dataTreeChildField: "children",
                layout: "fitColumns",
                selectable: 1,
                pagination: true,
                paginationMode: "remote",
                paginationSize: 5,
                paginationInitialPage: 1,
                paginationSizeSelector: [5, 10, 25, 50, 100, 500, 1000],
                paginationCounter: "rows",
                ajaxURL: FDAPIURL,
                ajaxConfig: "get",
                ajaxContentType: "json",

                ajaxResponse: function (url, params, response) {
                    BGTable.setMaxPage(response.last_page);
                    // //console.log("response.last_page", response.last_page);

                    dataLoadExpense = response.data;
                    ////console.log("dataLoadExpense abc:", dataLoadExpense);

                    return {

                        data: dataLoadExpense,
                        last_page: response.last_page,

                    };
                },

                columns: [
                    { title: "NAME", field: "BuyerGroupName", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "CODE", field: "BuyerGroupCode", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "SHORT NAME", field: "BuyerGroupShortName", hozAlign: "left", headerHozAlign: "center", visible: true },
                    {
                        title: "ACTIONS", field: "bgAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editBGs(${data.Id})`;
                            var inActive = `setInactiveUrlOfBGs(${data.Id}) `

                            var deleteHtml = `
                                              <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                              <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                              </a>
                                              `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                            var statusDependentHtml = deleteHtml;

                            var html = `
                                              <div class='dropdown ms-1'>
                                              <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                              <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                              <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                                  ${statusDependentHtml}

                                              </ul>
                                              </div>
                                              `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },

                ],
                dataBound: function () {
                    // Freeze the top 1 row (index 0) after the table is created
                    var rows = table.getRows();
                    if (rows.length > 0) {
                        var cells = rows[0].getCells();
                        cells.forEach(cell => {
                            cell.freeze();
                        });
                    }
                },
            });





            //size gear functionalities starts=============
            var globalFieldsBG = [
                    { title: "NAME", field: "BuyerGroupName", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "CODE", field: "BuyerGroupCode", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "SHORT NAME", field: "BuyerGroupShortName", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    {
                        title: "ACTIONS", field: "bgAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editBGs(${data.Id})`;
                            var inActive = `setInactiveUrlOfBGs(${data.Id}) `

                            var deleteHtml = `
                                              <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                              <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                              </a>
                                              `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                            var statusDependentHtml = deleteHtml;

                            var html = `
                                              <div class='dropdown ms-1'>
                                              <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                              <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                              <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                                  ${statusDependentHtml}

                                              </ul>
                                              </div>
                                              `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },
            ];
            var columnListBG = $("#BGColumnList");

            $.each(globalFieldsBG, function (index, field) {
                //console.log("GLOBAL 2::",field);
                var title = field.title;
                var name = field.field;
                var visible = true;
                if (field.visible == false) {
                    visible = false;
                }
                var BGtitles = `<li>
                                    <a class="dropdown-item" href="#">
                                    <div class="custom-control custom-checkbox" >
                                    <input type="checkbox" class="custom-control-input title-input" id="${name}" value="${name}">
                                    <label class="custom-control-label w-100 cursor-pointer" id="${name}" for="${name}">${title}</label>
                                    </div>
                                    </a>
                                    </li>`;
                columnListBG.append(BGtitles);

                document.querySelector(`#${name}`).addEventListener('click', function (event) {
                    var checkbox = event.target;
                    var isChecked = checkbox.checked;

                    if (isChecked) {
                        BGTable.showColumn(name);
                    } else {
                        BGTable.hideColumn(name);
                    }
                });


                $(`${'#' + name}`).prop('checked', visible);


                $('.custom-control-label').on('click', function (e) {
                    e.stopPropagation();
                });
                $('#dropdown-titles').on('click', function (e) {
                    e.stopPropagation();
                });

                //Add event listener to the rows select input
                $("#BGRows").on("change", function () {
                    var selectedRows = $(this).val();
                    if (selectedRows !== null) {
                        var pageSize = parseInt(selectedRows);
                        if (!isNaN(pageSize)) {
                            BGTable.setPageSize(pageSize);
                        }
                    }
                });

            });
            //gear functionalities ends===============

        };

        $("#SaveBGtn").click(function () {
            SaveBG();
        });
        function SaveBG() {
            var model = {
                Id: $("#BGId").val() || 0,
                BuyerGroupName: $("#bgName").val(),
                BuyerGroupShortName: $("#bgShortName").val(),
                BuyerGroupCode: $("#bgCode").val(),
            };
            console.log("fdestination model", model);
            $.ajax({
                async: false,
                type: "POST",
                url: '@Url.Action("AddUpdateBG", "Variable")',
                data: JSON.stringify(model),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    console.log("after save result", result);
                    var PODId = result.Id;

                    if (result.success == "1") {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-green",
                        });
                        $("#BGOffcanvas").offcanvas('hide');
                        clearOffCanvasBG();
                        BGGetData();
                    } else {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-red",
                        });
                        BGGetData();
                    }
                },
                error: function () {
                    toastr.success(result.message, "", {
                        "toastClass": "toast-red",
                    });
                    BGGetData();
                }
            });
        }
        function clearOffCanvasBG() {
            $("#BGId").val("");
            $("#bgName").val("");
            $("#bgShortName").val("");
            $("#shortName").val("");
            $("#bgCode").val("");
            $('#SaveBGBtn').text("Save");
            $('#bgNameValidation').html("");
        }


        $("#closeBGOffcanvasBtn").on("click", function () {
            $("#BGOffcanvas").offcanvas('hide');
            clearOffCanvasBG()
        });


        function editBGs(data) {
            currentBGId = data;

            var myUrlGet = '@Url.Action("GetBGEdit", "Variable")?id=' + data;
            $.ajax({
                type: "GET",
                url: myUrlGet,
                success: function (result) {
                    console.log("edit data", result);

                    if (result.Success == "1") {
                        $("#BGOffcanvas .offcanvas-title").html("Edit");
                        $("#BGOffcanvas").offcanvas("show");
                        $("#SaveBGBtn").text('Update');
                        $("#BGId").val(result.data[0].Id);
                        $("#bgName").val(result.data[0].BuyerGroupName);
                        $("#bgShortName").val(result.data[0].BuyerGroupShortName);
                        $("#bgCode").val(result.data[0].BuyerGroupCode);
                    }
                    else {

                        toastr.success(result.message, "Access Denied", {
                            "toastClass": "toast-red",
                        });
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Error: " + xhr.status);
                }
            });
        }


        function setInactiveUrlOfBGs(data) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteBGs", "Variable")',
                        type: "get",
                        data: { id: data },
                        traditional: true,
                        success: function (response) {
                            if (response.success == "1") {
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-green",
                                });
                                BGGetData();
                            }
                            else if (response.success == "0") {
                                //alert()
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-red",
                                });
                                BGGetData();
                            }
                            else {

                                toastr.success(response.message, "Access Denied", {
                                    "toastClass": "toast-red",
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error(xhr.responseText);
                            toastr.error("Error during delete.", "", { "toastClass": "toast-red" });
                        }
                    });
                }
            });
        };
        document.getElementById("print-table-bg").addEventListener("click", function () {
            BGTable.print(false, true);
        });
        document.getElementById("download-xlsx-bg").addEventListener("click", function () {
            BGTable.download("xlsx", "Buyer Group.xlsx", { sheetName: "Buyer Group" });
        });



        var BGSave = document.querySelector('#SaveBGtn');
        function getAllBGs(callback) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetBGList", "Variable")',
                dataType: "json",
                success: function (data) {
                    console.log("data::", data.data);
                    var SizeCodeGetArray = [];

                    data.data.forEach(function (item) {
                        var SizeName = item.BuyerGroupName;
                        var SizeIdGet = item.Id;
                        var SizeData = {
                            SizeName: SizeName,
                            Id: SizeIdGet
                        };
                        SizeCodeGetArray.push(SizeData);
                    });

                    if (typeof callback === "function") {
                        callback(SizeCodeGetArray);
                    }
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            });
        }

        function checkBGExists(sizeName) {
            getAllBGs(function (data) {
                var lowercasedSizeName = sizeName.toLowerCase();

                var sizeExists = data.some(function (item) {
                    console.log("item.Id", item.Id);
                    //console.log("currentSizeIdd", currentSizeIdd);

                    if (currentBGId && currentBGId === item.Id) {
                        return false;
                    }

                    return item.SizeName.trim().toLowerCase() === lowercasedSizeName;
                });

                console.log("sizeExists", sizeExists);

                if (sizeExists) {
                    $("#bgNameValidation").html("Already has the same Name!");
                    BGSave.disabled = true;
                } else {
                    $("#bgNameValidation").html("");
                    BGSave.disabled = false;

                }
            });
        }

        var BGNameHandle = document.getElementById("bgName");
        BGNameHandle.addEventListener("input", function () {
            //console.log("currentSizeId", currentSizeIdd);

            var enteredSizeName = BGNameHandle.value;
            checkBGExists(enteredSizeName);
        });
        //===========================bg functionalities ends=======================


        //===========================concern information functionalities starts=====================

        var CITable;
        var currentCIId;
        //CIGetData();
        function CIGetData() {
            var FDAPIURL = '@Url.Action("GetCIList", "Variable")';
            CITable = new Tabulator("#CITable", {
                // data: dataTableFilter,
                dataTree: true,
                //height:300,
                dataTreeStartExpanded: true,
                dataTreeChildField: "children",
                layout: "fitColumns",
                selectable: 1,
                pagination: true,
                paginationMode: "remote",
                paginationSize: 5,
                paginationInitialPage: 1,
                paginationSizeSelector: [5, 10, 25, 50, 100, 500, 1000],
                paginationCounter: "rows",
                ajaxURL: FDAPIURL,
                ajaxConfig: "get",
                ajaxContentType: "json",

                ajaxResponse: function (url, params, response) {
                    CITable.setMaxPage(response.last_page);
                    // //console.log("response.last_page", response.last_page);

                    dataLoadExpense = response.data;
                    ////console.log("dataLoadExpense abc:", dataLoadExpense);

                    return {

                        data: dataLoadExpense,
                        last_page: response.last_page,

                    };
                },

                columns: [
                    { title: "NAME", field: "CompanyName", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "SHORT NAME", field: "CompanyShortName", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "ADDRESS 1", field: "Address", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "ADDRESS 2", field: "ciadrs2", hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "PHONE", field: "PhoneNumber", hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "FACTORY PHONE", field: "FactoryPhoneNumber", hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "FAX", field: "FaxNumber", hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "EMAIL", field: "EmailID", hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "WEB", field: "Web", hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "TRADE LICENSE", field: "TradeLicenceNo", hozAlign: "left", headerHozAlign: "center", visible: false },
                    {
                        title: "ACTIONS", field: "CIAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editCIs(${data.Id})`;
                            var inActive = `setInactiveUrlOfCIs(${data.Id}) `

                            var deleteHtml = `
                                                              <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                                              <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                                              </a>
                                                              `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                            var statusDependentHtml = deleteHtml;

                            var html = `
                                                              <div class='dropdown ms-1'>
                                                              <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                                              <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                                              <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                                                  ${statusDependentHtml}

                                                              </ul>
                                                              </div>
                                                              `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },

                ],
                dataBound: function () {
                    // Freeze the top 1 row (index 0) after the table is created
                    var rows = table.getRows();
                    if (rows.length > 0) {
                        var cells = rows[0].getCells();
                        cells.forEach(cell => {
                            cell.freeze();
                        });
                    }
                },
            });





            //size gear functionalities starts=============
            var globalFieldsCI = [
                    { title: "NAME", field: "CompanyName", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "SHORT NAME", field: "CompanyShortName", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "ADDRESS 1", field: "Address", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "ADDRESS 2", field: "ciadrs2", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "PHONE", field: "PhoneNumber", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "FACTORY PHONE", field: "FactoryPhoneNumber", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "FAX", field: "FaxNumber", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "EMAIL", field: "EmailID", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "WEB", field: "Web", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "TRADE LICENSE", field: "TradeLicenceNo", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                    {
                        title: "ACTIONS", field: "CIAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editCIs(${data.Id})`;
                            var inActive = `setInactiveUrlOfCIs(${data.Id}) `

                            var deleteHtml = `
                                                              <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                                              <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                                              </a>
                                                              `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                            var statusDependentHtml = deleteHtml;

                            var html = `
                                                              <div class='dropdown ms-1'>
                                                              <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                                              <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                                              <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                                                  ${statusDependentHtml}

                                                              </ul>
                                                              </div>
                                                              `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },
            ];
            var columnListCI = $("#CIColumnList");

            $.each(globalFieldsCI, function (index, field) {
                //console.log("GLOBAL 2::",field);
                var title = field.title;
                var name = field.field;
                var visible = true;
                if (field.visible == false) {
                    visible = false;
                }
                var CItitles = `<li>
                                    <a class="dropdown-item" href="#">
                                    <div class="custom-control custom-checkbox" >
                                    <input type="checkbox" class="custom-control-input title-input" id="${name}" value="${name}">
                                    <label class="custom-control-label w-100 cursor-pointer" id="${name}" for="${name}">${title}</label>
                                    </div>
                                    </a>
                                    </li>`;
                columnListCI.append(CItitles);

                document.querySelector(`#${name}`).addEventListener('click', function (event) {
                    var checkbox = event.target;
                    var isChecked = checkbox.checked;

                    if (isChecked) {
                        CITable.showColumn(name);
                    } else {
                        CITable.hideColumn(name);
                    }
                });


                $(`${'#' + name}`).prop('checked', visible);


                $('.custom-control-label').on('click', function (e) {
                    e.stopPropagation();
                });
                $('#dropdown-titles').on('click', function (e) {
                    e.stopPropagation();
                });

                //Add event listener to the rows select input
                $("#CIRows").on("change", function () {
                    var selectedRows = $(this).val();
                    if (selectedRows !== null) {
                        var pageSize = parseInt(selectedRows);
                        if (!isNaN(pageSize)) {
                            CITable.setPageSize(pageSize);
                        }
                    }
                });

            });
            //gear functionalities ends===============

        };

        $("#SaveCItn").click(function () {
            SaveCI();
        });
        function SaveCI() {
            var model = {
                Id: $("#CIId").val() || 0,
                CompanyName: $("#concern").val(),
                CompanyShortName: $("#shorTname").val(),
                Address: $("#conAdrs1").val(),
                Address2: $("#conAdrs2").val(),
                Address3: $("#conAdrs3").val(),
                PhoneNumber: $("#concernPhone").val(),
                FactoryPhoneNumber: $("#concernFactoryPhone").val(),
                FaxNumber: $("#concernFax").val(),
                EmailID: $("#concernEmail").val(),
                Web: $("#concernContactPerson").val(),
                TradeLicenceNo: $("#concernContDes").val(),
                TINNo: $("#concernBusType").val(),
                VATNo: $("#tradeLic").val(),
                IRCNo: $("#tin").val(),
                BKMEARegNo: $("#vat").val(),
                ContactPerson: $("#irc").val(),
                ContactPersonDesignation: $("#bkmea").val(),
                ShippingMarks: $("#ShippingMarks").val(),
                BusinessType: $("#concernBusType").val(),
                Status: $("#status").val(),
            };
            console.log("fdestination model", model);
            $.ajax({
                async: false,
                type: "POST",
                url: '@Url.Action("AddUpdateCI", "Variable")',
                data: JSON.stringify(model),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    console.log("after save result", result);
                    var PODId = result.Id;

                    if (result.success == "1") {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-green",
                        });
                        $("#CIOffcanvas").offcanvas('hide');
                        clearOffCanvasCI();
                        CIGetData();
                    } else {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-red",
                        });
                        CIGetData();
                    }
                },
                error: function () {
                    toastr.success(result.message, "", {
                        "toastClass": "toast-red",
                    });
                    CIGetData();
                }
            });
        }
        function clearOffCanvasCI() {
            $("#CIId").val("");
            $("#concern").val("");
            $("#shorTname").val("");
            $("#conAdrs1").val("");
            $("#conAdrs2").val("");
            $("#conAdrs3").val("");
            $('#concernPhone').val("");
            $('#concernFactoryPhone').val("");
            $('#concernFax').val("");
            $('#concernEmail').val("");
            $('#concernContactPerson').val("");
            $('#concernContDes').val("");
            $('#concernBusType').val("");
            $('#tradeLic').val("");
            $('#tin').val("");
            $('#vat').val("");
            $('#irc').val("");
            $('#bkmea').val("");
            $('#ShippingMarks').val("");
            $('#concernBusType').val("");
            $('#status').prop("checked",false);
            $('#SaveCItn').text("Save");
            $('#concernValidation').html("");
        }


        $("#closeCIOffcanvasBtn").on("click", function () {
            $("#CIOffcanvas").offcanvas('hide');
            clearOffCanvasCI()
        });


        function editCIs(data) {
            currentCIId = data;

            var myUrlGet = '@Url.Action("GetCIEdit", "Variable")?id=' + data;
            $.ajax({
                type: "GET",
                url: myUrlGet,
                success: function (result) {
                    console.log("edit data", result);

                    if (result.Success == "1") {
                        $("#CIOffcanvas .offcanvas-title").html("Edit");
                        $("#CIOffcanvas").offcanvas("show");
                        $("#SaveCItn").text('Update');
                        $("#CIId").val(result.data[0].Id);
                        $("#concern").val(result.data[0].CompanyName);
                        $("#shorTname").val(result.data[0].CompanyShortName);
                        $("#conAdrs1").val(result.data[0].Address);
                        $("#conAdrs2").val(result.data[0].Address2);
                        $("#conAdrs3").val(result.data[0].Address3);
                        $("#concernPhone").val(result.data[0].PhoneNumber);
                        $("#concernFactoryPhone").val(result.data[0].FactoryPhoneNumber);
                        $("#concernFax").val(result.data[0].FaxNumber);
                        $("#concernEmail").val(result.data[0].EmailID);
                        $("#concernContactPerson").val(result.data[0].ContactPerson);
                        $("#concernContDes").val(result.data[0].ContactPersonDesignation);
                        $("#concernBusType").val(result.data[0].BusinessType);
                        $("#status").val(result.data[0].Status);
                        $("#tradeLic").val(result.data[0].TradeLicenceNo);
                        $("#vat").val(result.data[0].VATNo);
                        $("#irc").val(result.data[0].IRCNo);
                        $("#bkmea").val(result.data[0].BKMEARegNo);
                        $("#ShippingMarks").val(result.data[0].ShippingMarks);
                        $("#tin").val(result.data[0].TINNo);
                    }
                    else {

                        toastr.success(result.message, "Access Denied", {
                            "toastClass": "toast-red",
                        });
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Error: " + xhr.status);
                }
            });
        }


        function setInactiveUrlOfCIs(data) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteCIs", "Variable")',
                        type: "get",
                        data: { id: data },
                        traditional: true,
                        success: function (response) {
                            if (response.success == "1") {
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-green",
                                });
                                CIGetData();
                            }
                            else if (response.success == "0") {
                                //alert()
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-red",
                                });
                                CIGetData();
                            }
                            else {

                                toastr.success(response.message, "Access Denied", {
                                    "toastClass": "toast-red",
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error(xhr.responseText);
                            toastr.error("Error during delete.", "", { "toastClass": "toast-red" });
                        }
                    });
                }
            });
        };
        document.getElementById("print-table-ci").addEventListener("click", function () {
            CITable.print(false, true);
        });
        document.getElementById("download-xlsx-ci").addEventListener("click", function () {
            CITable.download("xlsx", "Buyer/Supplier Bank.xlsx", { sheetName: "Buyer/Supplier Bank" });
        });



        var CIave = document.querySelector('#SaveCItn');
        function getAllCIs(callback) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetCIList", "Variable")',
                dataType: "json",
                success: function (data) {
                    console.log("data::", data.data);
                    var SizeCodeGetArray = [];

                    data.data.forEach(function (item) {
                        var SizeName = item.CompanyName;
                        var SizeIdGet = item.Id;
                        var SizeData = {
                            SizeName: SizeName,
                            Id: SizeIdGet
                        };
                        SizeCodeGetArray.push(SizeData);
                    });

                    if (typeof callback === "function") {
                        callback(SizeCodeGetArray);
                    }
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            });
        }

        function checkCIExists(sizeName) {
            getAllCIs(function (data) {
                var lowercasedSizeName = sizeName.toLowerCase();

                var sizeExists = data.some(function (item) {
                    console.log("item.Id", item.Id);
                    //console.log("currentSizeIdd", currentSizeIdd);

                    if (currentCIId && currentCIId === item.Id) {
                        return false;
                    }

                    return item.SizeName.trim().toLowerCase() === lowercasedSizeName;
                });

                console.log("sizeExists", sizeExists);

                if (sizeExists) {
                    $("#concernValidation").html("Already has the same Name!");
                    CIave.disabled = true;
                } else {
                    $("#concernValidation").html("");
                    CIave.disabled = false;

                }
            });
        }

        var CINameHandle = document.getElementById("concern");
        CINameHandle.addEventListener("input", function () {
            //console.log("currentSizeId", currentSizeIdd);

            var enteredSizeName = CINameHandle.value;
            checkCIExists(enteredSizeName);
        });
        //===========================ci functionalities ends=======================








        //===========================lien bank functionalities starts=====================

        var LBTable;
        var currentLBId;
        //LBGetData();
        function LBGetData() {
            var FDAPIURL = '@Url.Action("GetLBList", "Variable")';
            LBTable = new Tabulator("#LBTable", {
                // data: dataTableFilter,
                dataTree: true,
                //height:300,
                dataTreeStartExpanded: true,
                dataTreeChildField: "children",
                layout: "fitColumns",
                selectable: 1,
                pagination: true,
                paginationMode: "remote",
                paginationSize: 5,
                paginationInitialPage: 1,
                paginationSizeSelector: [5, 10, 25, 50, 100, 500, 1000],
                paginationCounter: "rows",
                ajaxURL: FDAPIURL,
                ajaxConfig: "get",
                ajaxContentType: "json",

                ajaxResponse: function (url, params, response) {
                    LBTable.setMaxPage(response.last_page);
                    // //console.log("response.last_page", response.last_page);

                    dataLoadExpense = response.data;
                    ////console.log("dataLoadExpense abc:", dataLoadExpense);

                    return {

                        data: dataLoadExpense,
                        last_page: response.last_page,

                    };
                },

                columns: [
                    { title: "NAME", field: "LienBankName", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "SWIFT CODE", field: "SwiftCode", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    // { title: "ACC NO.", field: "LienBankAccountNo", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "COUNTRY", field: "lbcountry", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                    { title: "PHONE", field: "lbphone", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                    {
                        title: "ACTIONS", field: "lbAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editLBs(${data.Id})`;
                            var inActive = `setInactiveUrlOfLBs(${data.Id}) `

                            var deleteHtml = `
                                                      <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                                      <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                                      </a>
                                                      `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                            var statusDependentHtml = deleteHtml;

                            var html = `
                                                      <div class='dropdown ms-1'>
                                                      <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                                      <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                                      <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                                          ${statusDependentHtml}

                                                      </ul>
                                                      </div>
                                                      `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },

                ],
                dataBound: function () {
                    // Freeze the top 1 row (index 0) after the table is created
                    var rows = table.getRows();
                    if (rows.length > 0) {
                        var cells = rows[0].getCells();
                        cells.forEach(cell => {
                            cell.freeze();
                        });
                    }
                },
            });





            //size gear functionalities starts=============
             var globalFieldsLB = [
                     { title: "NAME", field: "LienBankName", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                     { title: "SWIFT CODE", field: "SwiftCode", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                     // { title: "ACC NO.", field: "LienBankAccountNo", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                     { title: "COUNTRY", field: "lbcountry", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                     { title: "PHONE", field: "lbphone", width: 500, hozAlign: "left", headerHozAlign: "center", visible: false },
                    {
                        title: "ACTIONS", field: "lbAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editLBs(${data.Id})`;
                            var inActive = `setInactiveUrlOfLBs(${data.Id}) `

                            var deleteHtml = `
                                                      <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                                      <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                                      </a>
                                                      `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                            var statusDependentHtml = deleteHtml;

                            var html = `
                                                      <div class='dropdown ms-1'>
                                                      <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                                      <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                                      <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                                          ${statusDependentHtml}

                                                      </ul>
                                                      </div>
                                                      `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },
            ];
            var columnListLB = $("#LBColumnList");

            $.each(globalFieldsLB, function (index, field) {
                //console.log("GLOBAL 2::",field);
                var title = field.title;
                var name = field.field;
                var visible = true;
                if (field.visible == false) {
                    visible = false;
                }
                var LBtitles = `<li>
                                    <a class="dropdown-item" href="#">
                                    <div class="custom-control custom-checkbox" >
                                    <input type="checkbox" class="custom-control-input title-input" id="${name}" value="${name}">
                                    <label class="custom-control-label w-100 cursor-pointer" id="${name}" for="${name}">${title}</label>
                                    </div>
                                    </a>
                                    </li>`;
                columnListLB.append(LBtitles);

                document.querySelector(`#${name}`).addEventListener('click', function (event) {
                    var checkbox = event.target;
                    var isChecked = checkbox.checked;

                    if (isChecked) {
                        LBTable.showColumn(name);
                    } else {
                        LBTable.hideColumn(name);
                    }
                });


                $(`${'#' + name}`).prop('checked', visible);


                $('.custom-control-label').on('click', function (e) {
                    e.stopPropagation();
                });
                $('#dropdown-titles').on('click', function (e) {
                    e.stopPropagation();
                });

                //Add event listener to the rows select input
                $("#LBRows").on("change", function () {
                    var selectedRows = $(this).val();
                    if (selectedRows !== null) {
                        var pageSize = parseInt(selectedRows);
                        if (!isNaN(pageSize)) {
                            LBTable.setPageSize(pageSize);
                        }
                    }
                });

            });
            //gear functionalities ends===============

        };

        $("#SaveLBtn").click(function () {
            SaveLB();
        });
        function SaveLB() {
              var UserId = '@HttpContextAccessor.HttpContext.Session.GetInt32("UserId").ToString()';
              var ComId = '@HttpContextAccessor.HttpContext.Session.GetInt32("ComId").ToString()';

            var model = {
                 ComId: ComId,
                 LuserId: UserId,
                Id: $("#LBId").val() || 0,
                LienBankName: $("#buyerSupplierBankName").val(),
                SwiftCode: $("#swiftName").val(),
                BranchAddress: $("#bAdrs1").val(),
                BranchAddress2: $("#bAdrs2").val(),
                PhoneNo: $("#LBpHONE").val(),
                CountryId: $("#Lbcountry").val(),
                Remarks: $("#branchRemarks").val(),
            };
            console.log("fdestination model", model);
            $.ajax({
                async: false,
                type: "POST",
                url: '@Url.Action("AddUpdateLB", "Variable")',
                data: JSON.stringify(model),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    console.log("after save result", result);
                    var PODId = result.Id;

                    if (result.success == "1") {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-green",
                        });
                        $("#LBOffcanvas ").offcanvas('hide');
                        clearOffCanvasLB();
                        LBGetData();
                    } else {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-red",
                        });
                        LBGetData();
                    }
                },
                error: function () {
                    toastr.success(result.message, "", {
                        "toastClass": "toast-red",
                    });
                    LBGetData();
                }
            });
        }
        function clearOffCanvasLB() {
            $("#LBId").val("");
            $("#buyerSupplierBankName").val("");
            $("#bgShortName").val("");
            $("#swiftName").val("");
            $("#bAdrs1").val("");
            $('#Lbcountry').val("0").change();
            $('#bAdrs2').val("");
            $('#LBpHONE').val("");
            $('#branchRemarks').val("");
            $('#SaveLBtn').text("Save");
            $('#buyerSupplierBankValidation').html("");
        }


        $("#closeLBOffcanvasBtn").on("click", function () {
            $("#LBOffcanvas").offcanvas('hide');
            clearOffCanvasLB()
        });


        function editLBs(data) {
            currentLBId = data;

            var myUrlGet = '@Url.Action("GetLBEdit", "Variable")?id=' + data;
            $.ajax({
                type: "GET",
                url: myUrlGet,
                success: function (result) {
                    console.log("edit data", result);

                    if (result.Success == "1") {
                        $("#LBOffcanvas .offcanvas-title").html("Edit");
                        $("#LBOffcanvas").offcanvas("show");
                        $("#SaveLBtn").text('Update');
                        $("#LBId").val(result.data[0].Id);
                        $("#buyerSupplierBankName").val(result.data[0].LienBankName);
                        $("#swiftName").val(result.data[0].SwiftCode);
                        $("#bAdrs1").val(result.data[0].BranchAddress);
                        $("#Lbcountry").val(result.data[0].CountryId).change();
                        $("#bAdrs2").val(result.data[0].BranchAddress2);
                        $("#LBpHONE").val(result.data[0].PhoneNo);
                        $("#branchRemarks").val(result.data[0].Remarks);
                    }
                    else {

                        toastr.success(result.message, "Access Denied", {
                            "toastClass": "toast-red",
                        });
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Error: " + xhr.status);
                }
            });
        }


        function setInactiveUrlOfLBs(data) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteLBs", "Variable")',
                        type: "get",
                        data: { id: data },
                        traditional: true,
                        success: function (response) {
                            if (response.success == "1") {
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-green",
                                });
                                LBGetData();
                            }
                            else if (response.success == "0") {
                                //alert()
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-red",
                                });
                                LBGetData();
                            }
                            else {

                                toastr.success(response.message, "Access Denied", {
                                    "toastClass": "toast-red",
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error(xhr.responseText);
                            toastr.error("Error during delete.", "", { "toastClass": "toast-red" });
                        }
                    });
                }
            });
        };
        document.getElementById("print-table-lb").addEventListener("click", function () {
            LBTable.print(false, true);
        });
        document.getElementById("download-xlsx-lb").addEventListener("click", function () {
            LBTable.download("xlsx", "Buyer/Supplier Bank.xlsx", { sheetName: "Buyer/Supplier Bank" });
        });



        var LBave = document.querySelector('#SaveLBtn');
        function getAllLBs(callback) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetLBList", "Variable")',
                dataType: "json",
                success: function (data) {
                    console.log("data::", data.data);
                    var SizeCodeGetArray = [];

                    data.data.forEach(function (item) {
                        var SizeName = item.LienBankName;
                        var SizeIdGet = item.Id;
                        var SizeData = {
                            SizeName: SizeName,
                            Id: SizeIdGet
                        };
                        SizeCodeGetArray.push(SizeData);
                    });

                    if (typeof callback === "function") {
                        callback(SizeCodeGetArray);
                    }
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            });
        }

        function checkLBExists(sizeName) {
            getAllLBs(function (data) {
                var lowercasedSizeName = sizeName.toLowerCase();

                var sizeExists = data.some(function (item) {
                    console.log("item.Id", item.Id);
                    //console.log("currentSizeIdd", currentSizeIdd);

                    if (currentLBId && currentLBId === item.Id) {
                        return false;
                    }

                    return item.SizeName.trim().toLowerCase() === lowercasedSizeName;
                });

                console.log("sizeExists", sizeExists);

                if (sizeExists) {
                    $("#buyerSupplierBankValidation").html("Already has the same Name!");
                    LBave.disabled = true;
                } else {
                    $("#buyerSupplierBankValidation").html("");
                    LBave.disabled = false;

                }
            });
        }

        var LBNameHandle = document.getElementById("buyerSupplierBankName");
        LBNameHandle.addEventListener("input", function () {
            //console.log("currentSizeId", currentSizeIdd);

            var enteredSizeName = LBNameHandle.value;
            checkLBExists(enteredSizeName);
        });
        //===========================lb functionalities ends=======================

        //===========================lien bank acc functionalities starts=====================

        var LienBankAccTable;
        var currentLienBankAccId;
        //LienBankAccGetData();
        function LienBankAccGetData() {
            var FDAPIURL = '@Url.Action("GetLienBankAccList", "Variable")';
            LienBankAccTable = new Tabulator("#LienBankAccTable", {
                // data: dataTableFilter,
                dataTree: true,
                //height:300,
                dataTreeStartExpanded: true,
                dataTreeChildField: "children",
                layout: "fitColumns",
                selectable: 1,
                pagination: true,
                paginationMode: "remote",
                paginationSize: 5,
                paginationInitialPage: 1,
                paginationSizeSelector: [5, 10, 25, 50, 100, 500, 1000],
                paginationCounter: "rows",
                ajaxURL: FDAPIURL,
                ajaxConfig: "get",
                ajaxContentType: "json",

                ajaxResponse: function (url, params, response) {
                    LienBankAccTable.setMaxPage(response.last_page);
                    // //console.log("response.last_page", response.last_page);

                    dataLoadExpense = response.data;
                    ////console.log("dataLoadExpense abc:", dataLoadExpense);

                    return {

                        data: dataLoadExpense,
                        last_page: response.last_page,

                    };
                },

                columns: [
                    { title: "CONCERN", field: "CompanyName", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "BUYER/SUPPLIER BANK", field: "LienBankName", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "BANK ACCOUNT NO", field: "BankAccountNumber", hozAlign: "left", headerHozAlign: "center", visible: true },
                    {
                        title: "ACTIONS", field: "LIENbANKaCCAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editLienBankAcc(${data.Id})`;
                            var inActive = `setInactiveUrlOfLienBankAcc(${data.Id}) `

                            var deleteHtml = `
                                              <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                              <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                              </a>
                                              `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                            var statusDependentHtml = deleteHtml;

                            var html = `
                                              <div class='dropdown ms-1'>
                                              <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                              <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                              <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                                  ${statusDependentHtml}

                                              </ul>
                                              </div>
                                              `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },

                ],
                dataBound: function () {
                    // Freeze the top 1 row (index 0) after the table is created
                    var rows = table.getRows();
                    if (rows.length > 0) {
                        var cells = rows[0].getCells();
                        cells.forEach(cell => {
                            cell.freeze();
                        });
                    }
                },
            });





            //size gear functionalities starts=============
            var globalFieldLienBankAcc = [
                   { title: "CONCERN", field: "CompanyName", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "BUYER/SUPPLIER BANK", field: "LienBankName", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "BANK ACCOUNT NO", field: "BankAccountNumber", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    {
                        title: "ACTIONS", field: "LIENbANKaCCAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editLienBankAcc(${data.Id})`;
                            var inActive = `setInactiveUrlOfLienBankAcc(${data.Id}) `

                            var deleteHtml = `
                                              <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                              <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                              </a>
                                              `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                            var statusDependentHtml = deleteHtml;

                            var html = `
                                              <div class='dropdown ms-1'>
                                              <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                              <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                              <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                                  ${statusDependentHtml}

                                              </ul>
                                              </div>
                                              `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },
            ];
            var columnListLienBankAcc = $("#LienBankAccColumnList");

            $.each(globalFieldLienBankAcc, function (index, field) {
                //console.log("GLOBAL 2::",field);
                var title = field.title;
                var name = field.field;
                var visible = true;
                if (field.visible == false) {
                    visible = false;
                }
                var NPtitles = `<li>
                                    <a class="dropdown-item" href="#">
                                    <div class="custom-control custom-checkbox" >
                                    <input type="checkbox" class="custom-control-input title-input" id="${name}" value="${name}">
                                            <label class="custom-control-label w-100 cursor-pointer" id="${name}" for="${name}">${title}</label>
                                    </div>
                                    </a>
                                    </li>`;
                columnListLienBankAcc.append(NPtitles);

                document.querySelector(`#${name}`).addEventListener('click', function (event) {
                    var checkbox = event.target;
                    var isChecked = checkbox.checked;

                    if (isChecked) {
                        LienBankAccTable.showColumn(name);
                    } else {
                        LienBankAccTable.hideColumn(name);
                    }
                });


                $(`${'#' + name}`).prop('checked', visible);


                $('.custom-control-label').on('click', function (e) {
                    e.stopPropagation();
                });
                $('#dropdown-titles').on('click', function (e) {
                    e.stopPropagation();
                });

                //Add event listener to the rows select input
                $("#LienBankAccRows").on("change", function () {
                    var selectedRows = $(this).val();
                    if (selectedRows !== null) {
                        var pageSize = parseInt(selectedRows);
                        if (!isNaN(pageSize)) {
                            LienBankAccTable.setPageSize(pageSize);
                        }
                    }
                });

            });
            //gear functionalities ends===============

        };
        var CheckValue;
        $("#inactive").on("click", function () {
            var isChecked = $(this).prop("checked");
            if(isChecked==true){
                CheckValue = 1;
            }
            else{
                CheckValue = 0;
            }
            // console.log("Checkbox is checked:", isChecked);
        });

        $("#SaveLienBankAccBtn").click(function () {
            SaveLienBankAcc();
        });
        function SaveLienBankAcc() {
             var UserId = '@HttpContextAccessor.HttpContext.Session.GetInt32("UserId").ToString()';
             var ComId = '@HttpContextAccessor.HttpContext.Session.GetInt32("ComId").ToString()';

            var model = {
                 ComId: ComId,
                 LuserId: UserId,

                Id: $("#lienBankAccId").val() || 0,
                BankAccountNumber: $("#LienBankAcc").val(),
                BankAccountName: $("#BankAccountName").val(),
                SwiftCodeBankAccountNoLienBank: $("#LienBankAccswiftCode").val(),
                CountryId: $("#lienBankAccCountry option:selected").val(),
                CommercialCompanyId: $("#lienBankAccCompnay option:selected").val(),
                LienBankId: $("#lienBankAccLienBank option:selected").val(),
                SupplierId: $("#lienBankAccSupplier option:selected").val(),
                BuyerId: $("#lienBankAccBuyer option:selected").val(),
            };
            console.log("fdestination model", model);
            $.ajax({
                async: false,
                type: "POST",
                url: '@Url.Action("AddUpdateLienBannkAcc", "Variable")',
                data: JSON.stringify(model),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    console.log("after save result", result);
                    var PODId = result.Id;

                    if (result.success == "1") {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-green",
                        });
                        $("#LienBankAccOffcanvas").offcanvas('hide');
                        clearOffCanvasDataLienBankAcc();
                        LienBankAccGetData();
                    } else {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-red",
                        });
                        LienBankAccGetData();
                    }
                },
                error: function () {
                    toastr.success(result.message, "", {
                        "toastClass": "toast-red",
                    });
                    LienBankAccGetData();
                }
            });
        }
        function clearOffCanvasDataLienBankAcc() {
            $("#LienBankAccOffcanvas .offcanvas-title").html("Add New");
            $("#lienBankAccId").val("");
            $("#LienBankAcc").val("");
            $("#BankAccountName").val("");
            $("#LienBankAccswiftCode").val("");
            $("#lienBankAccCountry").val("0").change();
            $("#lienBankAccCompnay").val("");
            $("#lienBankAccLienBank").val("");
            $("#lienBankAccSupplier").val("");
            $("#lienBankAccBuyer").val("");
            $('#SaveLienBankAccBtn').text("Save");
            $('#LienBankAccValidation').html("");
        }


        $("#closeLienBankAccOffcanvasBtn").on("click", function () {
            $("#LienBankAccOffcanvas").offcanvas('hide');
            clearOffCanvasDataLienBankAcc()
        });


        function editLienBankAcc(data) {
            currentLienBankAccId = data;

            var myUrlGet = '@Url.Action("GetLienBankAccEdit", "Variable")?id=' + data;
            $.ajax({
                type: "GET",
                url: myUrlGet,
                success: function (result) {
                    console.log("edit data", result);

                    if (result.Success == "1") {
                        $("#LienBankAccOffcanvas .offcanvas-title").html("Edit");
                        $("#LienBankAccOffcanvas").offcanvas("show");
                        $("#SaveLienBankAccBtn").text('Update');
                        $("#lienBankAccId").val(result.data[0].Id);
                        $("#LienBankAcc").val(result.data[0].BankAccountNumber);
                        $("#BankAccountName").val(result.data[0].BankAccountName);
                        $("#LienBankAccswiftCode").val(result.data[0].SwiftCodeBankAccountNoLienBank);
                        $("#lienBankAccCountry").val(result.data[0].CountryId).change();
                        $("#lienBankAccCompnay").val(result.data[0].CommercialCompanyId).change();
                        $("#lienBankAccLienBank").val(result.data[0].LienBankId).change();
                        $("#lienBankAccSupplier").val(result.data[0].SupplierId).change();
                        $("#lienBankAccBuyer").val(result.data[0].BuyerId).change();

                    }
                    else {

                        toastr.success(result.message, "Access Denied", {
                            "toastClass": "toast-red",
                        });
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Error: " + xhr.status);
                }
            });
        }


        function setInactiveUrlOfLienBankAcc(data) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteLienBankAcc", "Variable")',
                        type: "get",
                        data: { id: data },
                        traditional: true,
                        success: function (response) {
                            if (response.success == "1") {
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-green",
                                });
                                LienBankAccGetData();
                            }
                            else if (response.success == "0") {
                                //alert()
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-red",
                                });
                                LienBankAccGetData();
                            }
                            else {

                                toastr.success(response.message, "Access Denied", {
                                    "toastClass": "toast-red",
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error(xhr.responseText);
                            toastr.error("Error during delete.", "", { "toastClass": "toast-red" });
                        }
                    });
                }
            });
        };
        document.getElementById("print-table-LienBankAcc").addEventListener("click", function () {
            LienBankAccTable.print(false, true);
        });
        document.getElementById("download-xlsx-LienBankAcc").addEventListener("click", function () {
            LienBankAccTable.download("xlsx", "Notify Party.xlsx", { sheetName: "Notify Party" });
        });



        var LienBankAccSave = document.querySelector('#SaveLienBankAccBtn');
        function getAllLienBankAcc(callback) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetLienBankAccList", "Variable")',
                dataType: "json",
                success: function (data) {
                    console.log("data::", data.data);
                    var SizeCodeGetArray = [];

                    data.data.forEach(function (item) {
                        var SizeName = item.BankAccountNumber;
                        var SizeIdGet = item.Id;
                        var SizeData = {
                            SizeName: SizeName,
                            Id: SizeIdGet
                        };
                        SizeCodeGetArray.push(SizeData);
                    });

                    if (typeof callback === "function") {
                        callback(SizeCodeGetArray);
                    }
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            });
        }

        function checkLienBankAccExists(sizeName) {
            getAllLienBankAcc(function (data) {
                var lowercasedSizeName = sizeName.toLowerCase();

                var sizeExists = data.some(function (item) {
                    console.log("item.Id", item.Id);
                    //console.log("currentSizeIdd", currentSizeIdd);

                    if (currentLienBankAccId && currentLienBankAccId === item.Id) {
                        return false;
                    }

                    return item.SizeName.trim().toLowerCase() === lowercasedSizeName;
                });

                console.log("sizeExists", sizeExists);

                if (sizeExists) {
                    $("#LienBankAccValidation").html("Already has the same lien bank acc no");
                    LienBankAccSave.disabled = true;
                } else {
                    $("#LienBankAccValidation").html("");
                    LienBankAccSave.disabled = false;

                }
            });
        }

        var LienBankHandle = document.getElementById("LienBankAcc");
        LienBankHandle.addEventListener("input", function () {
            //console.log("currentSizeId", currentSizeIdd);

            var enteredSizeName = LienBankHandle.value;
            checkLienBankAccExists(enteredSizeName);
        });
        //populate country  drodpdown
        function lienBankAccCountry(){
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetCountryDrodpwon", "Variable")',
                datatype: "Json",
                success: function (data) {

                    $.each(data, function (index, value) {
                        // console.log("value dekhi country er", value);
                        $('#lienBankAccCountry').append('<option value="' + value.Id + '">' + value.CountryName + '</option>');
                    });
                }
            });
        }      
        
        function buyerSupCompany(){
            $.ajax({
                type: "GET",
                url: '@Url.Action("concernDrodpdown", "Variable")',
                datatype: "Json",
                success: function (data) {

                    $.each(data, function (index, value) {
                        // console.log("value dekhi country er", value);
                        $('#lienBankAccCompnay').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                    });
                }
            });
        }
              
        function buyerSuppBank(){
            $.ajax({
                type: "GET",
                url: '@Url.Action("supplierBankDrodpdown", "Variable")',
                datatype: "Json",
                success: function (data) {

                    $.each(data, function (index, value) {
                        // console.log("value dekhi country er", value);
                        $('#lienBankAccLienBank').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                    });
                }
            });
        }      
        function lienBankAccSupplier(){
            $.ajax({
                type: "GET",
                url: '@Url.Action("supplierDrodpdown", "Variable")',
                datatype: "Json",
                success: function (data) {

                    $.each(data, function (index, value) {
                        // console.log("value dekhi country er", value);
                        $('#lienBankAccSupplier').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                    });
                }
            });
        }
       
        function lienBankAccBuyer() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetBuyerGroupDrodpwon", "Variable")',
                datatype: "Json",
                success: function (data) {

                    $.each(data, function (index, value) {
                        // console.log("value dekhi country er", value);
                        $('#lienBankAccBuyer').append('<option value="' + value.Id + '">' + value.Name + '</option>');
                    });
                }
            });
        }
    
        //===========================lien bank acc functionalities ends=======================



        //===========================concern functionalities starts=====================

        var ConcernTable;
        var currentConcernId;
        //ConcernGetData();
        function ConcernGetData() {
            var FDAPIURL = '@Url.Action("GetConcernList", "Variable")';
            ConcernTable = new Tabulator("#concernTable", {
                // data: dataTableFilter,
                dataTree: true,
                //height:300,
                dataTreeStartExpanded: true,
                dataTreeChildField: "children",
                layout: "fitColumns",
                selectable: 1,
                pagination: true,
                paginationMode: "remote",
                paginationSize: 5,
                paginationInitialPage: 1,
                paginationSizeSelector: [5, 10, 25, 50, 100, 500, 1000],
                paginationCounter: "rows",
                ajaxURL: FDAPIURL,
                ajaxConfig: "get",
                ajaxContentType: "json",

                ajaxResponse: function (url, params, response) {
                    ConcernTable.setMaxPage(response.last_page);
                    // //console.log("response.last_page", response.last_page);

                    dataLoadExpense = response.data;
                    ////console.log("dataLoadExpense abc:", dataLoadExpense);

                    return {

                        data: dataLoadExpense,
                        last_page: response.last_page,

                    };
                },

                columns: [
                    { title: "CONCERN BANK", field: "OpeningBankName", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "COUNTRY NAME", field: "CountryName", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "SWIFT CODE", field: "SwiftCode", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "BRANCH ADDRESS 2", field: "BranchAddress2", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "PHONE NO", field: "PhoneNo", hozAlign: "left", headerHozAlign: "center", visible: true },
                    {
                        title: "ACTIONS", field: "CONCERNAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editConcern(${data.Id})`;
                            var inActive = `setInactiveUrlOfConcern(${data.Id}) `

                            var deleteHtml = `
                                              <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                              <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                              </a>
                                              `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                            var statusDependentHtml = deleteHtml;

                            var html = `
                                              <div class='dropdown ms-1'>
                                              <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                              <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                              <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                                  ${statusDependentHtml}

                                              </ul>
                                              </div>
                                              `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },

                ],
                dataBound: function () {
                    // Freeze the top 1 row (index 0) after the table is created
                    var rows = table.getRows();
                    if (rows.length > 0) {
                        var cells = rows[0].getCells();
                        cells.forEach(cell => {
                            cell.freeze();
                        });
                    }
                },
            });





            //size gear functionalities starts=============
            var globalFieldConcern = [
                    { title: "CONCERN BANK", field: "OpeningBankName", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "COUNTRY NAME", field: "CountryName", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "SWIFT CODE", field: "SwiftCode", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "BRANCH ADDRESS 2", field: "BranchAddress2", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "PHONE NO", field: "PhoneNo", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    {
                        title: "ACTIONS", field: "CONCERNAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editConcern(${data.Id})`;
                            var inActive = `setInactiveUrlOfConcern(${data.Id}) `

                            var deleteHtml = `
                                              <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                              <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                              </a>
                                              `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                            var statusDependentHtml = deleteHtml;

                            var html = `
                                              <div class='dropdown ms-1'>
                                              <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                              <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                              <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                                  ${statusDependentHtml}

                                              </ul>
                                              </div>
                                              `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },
            ];
            var columnListConcern = $("#concernColumnList");

            $.each(globalFieldConcern, function (index, field) {
                //console.log("GLOBAL 2::",field);
                var title = field.title;
                var name = field.field;
                var visible = true;
                if (field.visible == false) {
                    visible = false;
                }
                var NPtitles = `<li>
                                    <a class="dropdown-item" href="#">
                                    <div class="custom-control custom-checkbox" >
                                    <input type="checkbox" class="custom-control-input title-input" id="${name}" value="${name}">
                                            <label class="custom-control-label w-100 cursor-pointer" id="${name}" for="${name}">${title}</label>
                                    </div>
                                    </a>
                                    </li>`;
                columnListConcern.append(NPtitles);

                document.querySelector(`#${name}`).addEventListener('click', function (event) {
                    var checkbox = event.target;
                    var isChecked = checkbox.checked;

                    if (isChecked) {
                        ConcernTable.showColumn(name);
                    } else {
                        ConcernTable.hideColumn(name);
                    }
                });


                $(`${'#' + name}`).prop('checked', visible);


                $('.custom-control-label').on('click', function (e) {
                    e.stopPropagation();
                });
                $('#dropdown-titles').on('click', function (e) {
                    e.stopPropagation();
                });

                //Add event listener to the rows select input
                $("#concernRows").on("change", function () {
                    var selectedRows = $(this).val();
                    if (selectedRows !== null) {
                        var pageSize = parseInt(selectedRows);
                        if (!isNaN(pageSize)) {
                            ConcernTable.setPageSize(pageSize);
                        }
                    }
                });

            });
            //gear functionalities ends===============

        };
        var CheckValue;
        $("#inactive").on("click", function () {
            var isChecked = $(this).prop("checked");
            if(isChecked==true){
                CheckValue = 1;
            }
            else{
                CheckValue = 0;
            }
            // console.log("Checkbox is checked:", isChecked);
        });

        $("#SaveConcernBtn").click(function () {
            SaveConcern();
        });
        function SaveConcern() {
            var model = {
                Id: $("#ConcernnId").val() || 0,
                OpeningBankName: $("#concernBank").val(),
                SwiftCode: $("#swiftCode").val(),
                BranchAddress: $("#concernbranchAddress").val(),
                CountryId: $("#concernCountry").val(),
                BranchAddress2: $("#concernbranchAddress2").val(),
                PhoneNo: $("#concernphoneNo").val(),
                ShortName: $("#concernShortName").val(),
                Remarks: $("#concernRemarks").val(),
            };
            console.log("fdestination model", model);
            $.ajax({
                async: false,
                type: "POST",
                url: '@Url.Action("AddUpdateConcern", "Variable")',
                data: JSON.stringify(model),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    console.log("after save result", result);
                    var PODId = result.Id;

                    if (result.success == "1") {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-green",
                        });
                        $("#ConcernOffcanvas").offcanvas('hide');
                        clearOffCanvasDataConcern();
                        ConcernGetData();
                    } else {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-red",
                        });
                        ConcernGetData();
                    }
                },
                error: function () {
                    toastr.success(result.message, "", {
                        "toastClass": "toast-red",
                    });
                    ConcernGetData();
                }
            });
        }
        function clearOffCanvasDataConcern() {
            $("#ConcernOffcanvas .offcanvas-title").html("Add New");
            $("#ConcernnId").val("");
            $("#concernBank").val("");
            $("#swiftCode").val("");
            $("#concernbranchAddress").val("");
            $("#concernCountry").val("0").change();
            $("#concernbranchAddress2").val("");
            $("#concernphoneNo").val("");
            $("#concernShortName").val("");
            $("#concernRemarks").val("");
            $('#SaveConcernBtn').text("Save");
            $('#concernBankValidation').html("");
        }


        $("#closeConcernOffcanvasBtn").on("click", function () {
            $("#ConcernOffcanvas").offcanvas('hide');
            clearOffCanvasDataConcern();
        });
        

        function editConcern(data) {
            currentConcernId = data;

            var myUrlGet = '@Url.Action("GetConcernEdit", "Variable")?id=' + data;
            $.ajax({
                type: "GET",
                url: myUrlGet,
                success: function (result) {
                    console.log("edit data", result);

                    if (result.Success == "1") {
                        $("#ConcernOffcanvas .offcanvas-title").html("Edit");
                        $("#ConcernOffcanvas").offcanvas("show");
                        $("#SaveConcernBtn").text('Update');
                        $("#ConcernnId").val(result.data[0].Id);
                        $("#concernBank").val(result.data[0].OpeningBankName);
                        $("#swiftCode").val(result.data[0].SwiftCode);
                        $("#concernbranchAddress").val(result.data[0].BranchAddress);
                        $("#concernCountry").val(result.data[0].CountryId).change();
                        $("#concernbranchAddress2").val(result.data[0].BranchAddress2);
                        $("#concernphoneNo").val(result.data[0].PhoneNo);
                        $("#concernShortName").val(result.data[0].ShortName);
                        $("#concernRemarks").val(result.data[0].Remarks);

                    }
                    else {

                        toastr.success(result.message, "Access Denied", {
                            "toastClass": "toast-red",
                        });
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Error: " + xhr.status);
                }
            });
        }


        function setInactiveUrlOfConcern(data) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteConcern", "Variable")',
                        type: "get",
                        data: { id: data },
                        traditional: true,
                        success: function (response) {
                            if (response.success == "1") {
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-green",
                                });
                                ConcernGetData();
                            }
                            else if (response.success == "0") {
                                //alert()
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-red",
                                });
                                ConcernGetData();
                            }
                            else {

                                toastr.success(response.message, "Access Denied", {
                                    "toastClass": "toast-red",
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error(xhr.responseText);
                            toastr.error("Error during delete.", "", { "toastClass": "toast-red" });
                        }
                    });
                }
            });
        };
        document.getElementById("print-table-concern").addEventListener("click", function () {
            ConcernTable.print(false, true);
        });
        document.getElementById("download-xlsx-concern").addEventListener("click", function () {
            ConcernTable.download("xlsx", "Notify Party.xlsx", { sheetName: "Notify Party" });
        });



        var ConcernSave = document.querySelector('#SaveConcernBtn');
        function getAllConcern(callback) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetConcernList", "Variable")',
                dataType: "json",
                success: function (data) {
                    console.log("data::", data.data);
                    var SizeCodeGetArray = [];

                    data.data.forEach(function (item) {
                        var SizeName = item.OpeningBankName;
                        var SizeIdGet = item.Id;
                        var SizeData = {
                            SizeName: SizeName,
                            Id: SizeIdGet
                        };
                        SizeCodeGetArray.push(SizeData);
                    });

                    if (typeof callback === "function") {
                        callback(SizeCodeGetArray);
                    }
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            });
        }

        function checkConcernExists(sizeName) {
            getAllConcern(function (data) {
                var lowercasedSizeName = sizeName.toLowerCase();

                var sizeExists = data.some(function (item) {
                    console.log("item.Id", item.Id);
                    //console.log("currentSizeIdd", currentSizeIdd);

                    if (currentConcernId && currentConcernId === item.Id) {
                        return false;
                    }

                    return item.SizeName.trim().toLowerCase() === lowercasedSizeName;
                });

                console.log("sizeExists", sizeExists);

                if (sizeExists) {
                    $("#concernBankValidation").html("Already has the same concern Name!");
                    ConcernSave.disabled = true;
                } else {
                    $("#concernBankValidation").html("");
                    ConcernSave.disabled = false;

                }
            });
        }

        var concernHandle = document.getElementById("concernBank");
        concernHandle.addEventListener("input", function () {
            //console.log("currentSizeId", currentSizeIdd);

            var enteredSizeName = concernHandle.value;
            checkConcernExists(enteredSizeName);
        });
        //populate country  drodpdown
        function concernCountry(){
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetCountryDrodpwon", "Variable")',
                datatype: "Json",
                success: function (data) {

                    $.each(data, function (index, value) {
                        // console.log("value dekhi country er", value);
                        $('#concernCountry').append('<option value="' + value.Id + '">' + value.CountryName + '</option>');
                    });
                }
            });
        }
        
        //===========================concern functionalities ends=======================




        //===========================bank account functionalities starts=====================

        var BATable;
        var currentBAId;
        //BAGetData();
        function BAGetData() {
            var FDAPIURL = '@Url.Action("GetLBAist", "Variable")';
            BATable = new Tabulator("#BATable", {
                // data: dataTableFilter,
                dataTree: true,
                //height:300,
                dataTreeStartExpanded: true,
                dataTreeChildField: "children",
                layout: "fitColumns",
                selectable: 1,
                pagination: true,
                paginationMode: "remote",
                paginationSize: 5,
                paginationInitialPage: 1,
                paginationSizeSelector: [5, 10, 25, 50, 100, 500, 1000],
                paginationCounter: "rows",
                ajaxURL: FDAPIURL,
                ajaxConfig: "get",
                ajaxContentType: "json",

                ajaxResponse: function (url, params, response) {
                    BATable.setMaxPage(response.last_page);
                    // //console.log("response.last_page", response.last_page);

                    dataLoadExpense = response.data;
                    ////console.log("dataLoadExpense abc:", dataLoadExpense);

                    return {

                        data: dataLoadExpense,
                        last_page: response.last_page,

                    };
                },

                columns: [
                    { title: "ACC NO", field: "BankAccountNumber", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "COMPANY NAME", field: "bacom", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "BANK NAME", field: "babank", hozAlign: "left", headerHozAlign: "center", visible: true },
                    {
                        title: "ACTIONS", field: "baAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editBAs(${data.Id})`;
                            var inActive = `setInactiveUrlOfBAs(${data.Id}) `

                            var deleteHtml = `
                                                      <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                                      <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                                      </a>
                                                      `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                            var statusDependentHtml = deleteHtml;

                            var html = `
                                                      <div class='dropdown ms-1'>
                                                      <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                                      <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                                      <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                                          ${statusDependentHtml}

                                                      </ul>
                                                      </div>
                                                      `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },

                ],
                dataBound: function () {
                    // Freeze the top 1 row (index 0) after the table is created
                    var rows = table.getRows();
                    if (rows.length > 0) {
                        var cells = rows[0].getCells();
                        cells.forEach(cell => {
                            cell.freeze();
                        });
                    }
                },
            });





            //size gear functionalities starts=============
            var globalFieldsBA = [
                    { title: "ACC NO", field: "BankAccountNumber", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "COMPANY NAME", field: "bacom", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "BANK NAME", field: "babank", width: 500, hozAlign: "left", headerHozAlign: "center", visible: true },
                            {
                        title: "ACTIONS", field: "baAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editBAs(${data.Id})`;
                            var inActive = `setInactiveUrlOfBAs(${data.Id}) `

                            var deleteHtml = `
                                                              <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                                              <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                                              </a>
                                                              `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                            var statusDependentHtml = deleteHtml;

                            var html = `
                                                              <div class='dropdown ms-1'>
                                                              <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                                              <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                                              <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                                                  ${statusDependentHtml}

                                                              </ul>
                                                              </div>
                                                              `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },
            ];
            var columnListBA = $("#BAColumnList");

            $.each(globalFieldsBA, function (index, field) {
                //console.log("GLOBAL 2::",field);
                var title = field.title;
                var name = field.field;
                var visible = true;
                if (field.visible == false) {
                    visible = false;
                }
                var BAtitles = `<li>
                                    <a class="dropdown-item" href="#">
                                    <div class="custom-control custom-checkbox" >
                                    <input type="checkbox" class="custom-control-input title-input" id="${name}" value="${name}">
                                    <label class="custom-control-label w-100 cursor-pointer" id="${name}" for="${name}">${title}</label>
                                    </div>
                                    </a>
                                    </li>`;
                columnListBA.append(BAtitles);

                document.querySelector(`#${name}`).addEventListener('click', function (event) {
                    var checkbox = event.target;
                    var isChecked = checkbox.checked;

                    if (isChecked) {
                        BATable.showColumn(name);
                    } else {
                        BATable.hideColumn(name);
                    }
                });


                $(`${'#' + name}`).prop('checked', visible);


                $('.custom-control-label').on('click', function (e) {
                    e.stopPropagation();
                });
                $('#dropdown-titles').on('click', function (e) {
                    e.stopPropagation();
                });

                //Add event listener to the rows select input
                $("#BARows").on("change", function () {
                    var selectedRows = $(this).val();
                    if (selectedRows !== null) {
                        var pageSize = parseInt(selectedRows);
                        if (!isNaN(pageSize)) {
                            BATable.setPageSize(pageSize);
                        }
                    }
                });

            });
            //gear functionalities ends===============

        };

        $("#SaveBAtn").click(function () {
            SaveBA();
        });
        function SaveBA() {
            var model = {
                Id: $("#BAId").val() || 0,
                BankAccountNumber: $("#bankAccountNum").val(),
                CommercialCompanyId: $("#Bacom option:selected").val(),
                OpeningBankId: $("#baconcernBank option:selected").val()
            };
            console.log("fdestination model", model);
            $.ajax({
                async: false,
                type: "POST",
                url: '@Url.Action("AddUpdateBA", "Variable")',
                data: JSON.stringify(model),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    console.log("after save result", result);
                    var PODId = result.Id;

                    if (result.success == "1") {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-green",
                        });
                        $("#BAOffcanvas").offcanvas('hide');
                        clearOffCanvasBA();
                        BAGetData();
                    } else {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-red",
                        });
                        BAGetData();
                    }
                },
                error: function () {
                    toastr.success(result.message, "", {
                        "toastClass": "toast-red",
                    });
                    BAGetData();
                }
            });
        }
        function clearOffCanvasBA() {
            $("#BAId").val("");
            $("#bankAccountNum").val("");
            $("#Bacom").val("");
            $("#baconcernBank").val("");
            $('#SaveBAtn').text("Save");
            $('#bankAccountNoValidation').html("");
        }


        $("#closeBAOffcanvasBtn").on("click", function () {
            $("#BAOffcanvas").offcanvas('hide');
            clearOffCanvasBA()
        });


        function editBAs(data) {
            currentBAId = data;

            var myUrlGet = '@Url.Action("GetBAEdit", "Variable")?id=' + data;
            $.ajax({
                type: "GET",
                url: myUrlGet,
                success: function (result) {
                    console.log("edit data", result);

                    if (result.Success == "1") {
                        $("#BAOffcanvas .offcanvas-title").html("Edit");
                        $("#BAOffcanvas").offcanvas("show");
                        $("#SaveBAtn").text('Update');
                        $("#BAId").val(result.data[0].Id);
                        $("#bankAccountNum").val(result.data[0].BankAccountNumber);
                        $("#Bacom").val(result.data[0].CommercialCompanyId).change();
                        $("#baconcernBank").val(result.data[0].OpeningBankId).change();
                    }
                    else {

                        toastr.success(result.message, "Access Denied", {
                            "toastClass": "toast-red",
                        });
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Error: " + xhr.status);
                }
            });
        }


        function setInactiveUrlOfBAs(data) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteBAs", "Variable")',
                        type: "get",
                        data: { id: data },
                        traditional: true,
                        success: function (response) {
                            if (response.success == "1") {
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-green",
                                });
                                BAGetData();
                            }
                            else if (response.success == "0") {
                                //alert()
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-red",
                                });
                                BAGetData();
                            }
                            else {

                                toastr.success(response.message, "Access Denied", {
                                    "toastClass": "toast-red",
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error(xhr.responseText);
                            toastr.error("Error during delete.", "", { "toastClass": "toast-red" });
                        }
                    });
                }
            });
        };
        document.getElementById("print-table-ba").addEventListener("click", function () {
            BATable.print(false, true);
        });
        document.getElementById("download-xlsx-ba").addEventListener("click", function () {
            BATable.download("xlsx", "Concern bank accoungt no.xlsx", { sheetName: "Concern bank accoungt no" });
        });



        var BASave = document.querySelector('#SaveBAtn');
        function getAllBAs(callback) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetLBAist", "Variable")',
                dataType: "json",
                success: function (data) {
                    console.log("data::", data.data);
                    var SizeCodeGetArray = [];

                    data.data.forEach(function (item) {
                        var SizeName = item.BankAccountNumber;
                        var SizeIdGet = item.Id;
                        var SizeData = {
                            SizeName: SizeName,
                            Id: SizeIdGet
                        };
                        SizeCodeGetArray.push(SizeData);
                    });

                    if (typeof callback === "function") {
                        callback(SizeCodeGetArray);
                    }
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            });
        }

        function checkBAExists(sizeName) {
            getAllBAs(function (data) {
                var lowercasedSizeName = sizeName.toLowerCase();

                var sizeExists = data.some(function (item) {
                    console.log("item.Id", item.Id);
                    //console.log("currentSizeIdd", currentSizeIdd);

                    if (currentBAId && currentBAId === item.Id) {
                        return false;
                    }

                    return item.SizeName.trim().toLowerCase() === lowercasedSizeName;
                });

                console.log("sizeExists", sizeExists);

                if (sizeExists) {
                    $("#bankAccountNoValidation").html("Already has the same Name!");
                    BASave.disabled = true;
                } else {
                    $("#bankAccountNoValidation").html("");
                    BASave.disabled = false;

                }
            });
        }

        var BANameHandle = document.getElementById("ConcernBankAccountNo");
        BANameHandle.addEventListener("input", function () {
            //console.log("currentSizeId", currentSizeIdd);

            var enteredSizeName = BANameHandle.value;
            checkBAExists(enteredSizeName);
        });


        //===========================Box Measurements functionalities starts=====================

        var BoxTable;
        var currentBOXId;
        //BAGetData();
        function BoxGetData() {
            var BOXAPIURL = '@Url.Action("GetMeasurementList", "Variable")';
            BoxTable = new Tabulator("#BOXTable", {
                // data: dataTableFilter,
                dataTree: true,
                //height:300,
                dataTreeStartExpanded: true,
                dataTreeChildField: "children",
                layout: "fitColumns",
                selectable: 1,
                pagination: true,
                paginationMode: "remote",
                paginationSize: 5,
                paginationInitialPage: 1,
                paginationSizeSelector: [5, 10, 25, 50, 100, 500, 1000],
                paginationCounter: "rows",
                ajaxURL: BOXAPIURL,
                ajaxConfig: "get",
                ajaxContentType: "json",

                ajaxResponse: function (url, params, response) {
                    BoxTable.setMaxPage(response.last_page);
                    // //console.log("response.last_page", response.last_page);

                    dataLoadExpense = response.data;
                    ////console.log("dataLoadExpense abc:", dataLoadExpense);

                    return {

                        data: dataLoadExpense,
                        last_page: response.last_page,

                    };
                },

                columns: [
                    { title: "Measurement No", field: "MeasurementNo", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "Measurement Name", field: "MeasurementName", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "Box Height", field: "BoxHeight", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "Box Width", field: "BoxWidth", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "Box Length", field: "BoxLength", hozAlign: "left", headerHozAlign: "center", visible: true },
                    { title: "Calculation", field: "Calculation", hozAlign: "left", headerHozAlign: "center", visible: true },
                    {
                        title: "ACTIONS", field: "BoxAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                            var data = cell.getData();
                            //console.log("seeeee data::", data);
                            var Edit = `editMeasurement(${data.Id})`;
                            var inActive = `setInactiveUrlOfBOX(${data.Id}) `

                            var deleteHtml = `
                                                              <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                                              <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                                              </a>
                                                              `;


                            //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml; 
                            var statusDependentHtml = deleteHtml;

                            var html = `
                                                              <div class='dropdown ms-1'>
                                                              <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                                              <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                                              <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                                                  ${statusDependentHtml}

                                                              </ul>
                                                              </div>
                                                              `;

                            return html;
                        },
                        visible: true, cellClick: function (e, cell) {
                            // Add a custom class to the cell when it's clicked
                            cell.getElement().classList.add('active-cell');
                        },
                    },

                ],
                dataBound: function () {
                    // Freeze the top 1 row (index 0) after the table is created
                    var rows = table.getRows();
                    if (rows.length > 0) {
                        var cells = rows[0].getCells();
                        cells.forEach(cell => {
                            cell.freeze();
                        });
                    }
                },
            });





            //size gear functionalities starts=============
            var globalFieldsBOX = [
                { title: "Measurement No", field: "MeasurementNo", hozAlign: "left", headerHozAlign: "center", visible: true },
                { title: "Measurement Name", field: "MeasurementName", hozAlign: "left", headerHozAlign: "center", visible: true },
                { title: "Box Height", field: "BoxHeight", hozAlign: "left", headerHozAlign: "center", visible: true },
                { title: "Box Width", field: "BoxWidth", hozAlign: "left", headerHozAlign: "center", visible: true },
                { title: "Box Length", field: "BoxLength", hozAlign: "left", headerHozAlign: "center", visible: true },
                { title: "Calculation", field: "Calculation", hozAlign: "left", headerHozAlign: "center", visible: true },
                {
                    title: "ACTIONS", field: "BoxAction", headerHozAlign: "center", headerSort: false, hozAlign: "left", resizable: false, width: 170, visible: true, formatter: function (cell, formatterParams, onRendered) {
                        var data = cell.getData();
                        //console.log("seeeee data::", data);
                        var Edit = `editMeasurement(${data.Id})`;
                        var inActive = `setInactiveUrlOfBOX(${data.Id}) `

                        var deleteHtml = `
                                            <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1 full-width' href='#' id='inactive'>
                                            <i class="bi bi-trash3"></i><span class='ms-1 mt-2'>Delete</span><br />
                                            </a>
                                            `;


                        //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                        var statusDependentHtml = deleteHtml;

                        var html = `
                                    <div class='dropdown ms-1'>
                                    <a onclick='${Edit}' class='fw-bolder mt-2'>View/Edit</a>
                                    <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                    <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1' style="width: 57%;">
                                        ${statusDependentHtml}

                                    </ul>
                                    </div>
                                    `;

                        return html;
                    },
                    visible: true, cellClick: function (e, cell) {
                        // Add a custom class to the cell when it's clicked
                        cell.getElement().classList.add('active-cell');
                    },
                },
            ];
            var columnListBOX = $("#BOXColumnList");

            $.each(globalFieldsBOX, function (index, field) {
                //console.log("Box Measurement::",field);
                var title = field.title;
                var name = field.field;
                var visible = true;
                if (field.visible == false) {
                    visible = false;
                }
                var BOXtitles = `<li>
                                    <a class="dropdown-item" href="#">
                                    <div class="custom-control custom-checkbox" >
                                    <input type="checkbox" class="custom-control-input title-input" id="bm_${name}" value="${name}">
                                    <label class="custom-control-label w-100 cursor-pointer" id="bm_${name}" for="bm_${name}">${title}</label>
                                    </div>
                                    </a>
                                    </li>`;
                columnListBOX.append(BOXtitles);

                document.querySelector(`#bm_${name}`).addEventListener('click', function (event) {
                    var checkbox = event.target;
                    var isChecked = checkbox.checked;

                    if (isChecked) {
                        BoxTable.showColumn(name);
                    } else {
                        BoxTable.hideColumn(name);
                    }
                });


                $(`#bm_${name}`).prop('checked', visible);


                $('.custom-control-label').on('click', function (e) {
                    e.stopPropagation();
                });
                $('#dropdown-titles').on('click', function (e) {
                    e.stopPropagation();
                });

                //Add event listener to the rows select input
                $("#BOXRows").on("change", function () {
                    var selectedRows = $(this).val();
                    if (selectedRows !== null) {
                        var pageSize = parseInt(selectedRows);
                        if (!isNaN(pageSize)) {
                            BoxTable.setPageSize(pageSize);
                        }
                    }
                });

            });
            //gear functionalities ends===============

        };

        $("#SaveBOXbtn").click(function () {
            SaveBOX();
        });
        function SaveBOX() {
            var model = {
                Id: $("#BOXId").val() || 0,
                MeasurementNo: $("#MeasurementNo").val(),
                MeasurementName: $("#MeasurementName").val(),
                BoxHeight: $("#BoxHeight").val(),
                BoxWidth: $("#BoxWidth").val(),
                BoxLength: $("#BoxLength").val(),
                Calculation: $("#Calculation").val(),
                
            };
            console.log("fdestination model", model);
            $.ajax({
                async: false,
                type: "POST",
                url: '@Url.Action("AddUpdateMeasurement", "Variable")',
                data: JSON.stringify(model),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    console.log("after save result", result);
                    var BOXId = result.Id;

                    if (result.success == "1") {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-green",
                        });
                        $("#BOXOffcanvas").offcanvas('hide');
                        clearOffCanvasBOX();
                        BoxGetData();
                    } else {
                        toastr.success(result.message, "", {
                            "toastClass": "toast-red",
                        });
                        BoxGetData();
                    }
                },
                error: function () {
                    toastr.success(result.message, "", {
                        "toastClass": "toast-red",
                    });
                    BoxGetData();
                }
            });
        }
        function clearOffCanvasBOX() {
            $("#BOXId").val("");
            $("#MeasurementNo").val("");
            $("#MeasurementName").val("");
            $("#BoxHeight").val("");
            $("#BoxWidth").val("");
            $("#BoxLength").val("");
            $("#Calculation").val("");
            $('#SaveBOXbtn').text("Save");
            
        }


        $("#closeBOXOffcanvasBtn").on("click", function () {
            $("#BOXOffcanvas").offcanvas('hide');
            clearOffCanvasBOX();
        });


        function editMeasurement(data) {
            currentBOXId = data;

            var myUrlGet = '@Url.Action("GetMeasurementEdit", "Variable")?id=' + data;
            $.ajax({
                type: "GET",
                url: myUrlGet,
                success: function (result) {
                    console.log("edit data", result);

                    if (result.Success == "1") {
                        $("#BOXOffcanvas .offcanvas-title").html("Edit");
                        $("#BOXOffcanvas").offcanvas("show");
                        $("#SaveBOXbtn").text('Update');
                        $("#BOXId").val(result.data[0].Id);
                        $("#MeasurementNo").val(result.data[0].MeasurementNo);
                        $("#MeasurementName").val(result.data[0].MeasurementName);
                        $("#BoxHeight").val(result.data[0].BoxHeight);
                        $("#BoxWidth").val(result.data[0].BoxWidth);
                        $("#BoxLength").val(result.data[0].BoxLength);
                        $("#Calculation").val(result.data[0].Calculation);
                    }
                    else {

                        toastr.success(result.message, "Access Denied", {
                            "toastClass": "toast-red",
                        });
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Error: " + xhr.status);
                }
            });
        }


        function setInactiveUrlOfBOX(data) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("DeleteMeasurement", "Variable")',
                        type: "get",
                        data: { id: data },
                        traditional: true,
                        success: function (response) {
                            if (response.success == "1") {
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-green",
                                });
                                BoxGetData();
                            }
                            else if (response.success == "0") {
                                //alert()
                                toastr.success(response.msg, "", {
                                    "toastClass": "toast-red",
                                });
                                BoxGetData();
                            }
                            else {

                                toastr.success(response.message, "Access Denied", {
                                    "toastClass": "toast-red",
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error(xhr.responseText);
                            toastr.error("Error during delete.", "", { "toastClass": "toast-red" });
                        }
                    });
                }
            });
        };
        document.getElementById("print-table-box").addEventListener("click", function () {
            BoxTable.print(false, true);
        });
        document.getElementById("download-xlsx-box").addEventListener("click", function () {
            BoxTable.download("xlsx", "Box Measurement.xlsx", { sheetName: "Box Measurement" });
        });


        

        //populate commercial company drodpdown        
        function ConbankCompany(){
            $.ajax({
                type: "GET",
                url: '@Url.Action("commercialCompanyDropdown", "Variable")',
                datatype: "Json",
                success: function (data) {
                    // console.log("data seee", data);

                    $.each(data, function (index, value) {
                        // console.log("value dekhi commercial commmmm er", value);
                        $('#Bacom').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                    });
                }
            });
        }       
        
        //populate lien banbk drodpdown
        // function concernBank(){
        //     $.ajax({
        //         type: "GET",
        //         url: '@Url.Action("concernBankDrodpdown", "Variable")',
        //         datatype: "Json",
        //         success: function (data) {
        //             // console.log("data seee",data);
        //             $.each(data, function (index, value) {
        //                 // console.log("value dekhi opening bank er", value);
        //                 $('#concernBank').append('<option value="' + value.Value + '">' + value.Text + '</option>');
        //             });
        //         }
        //     });
        // }
      

        //populate country drodpdown
        function Lbcountry(){
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetCountryDrodpwon", "Variable")',
                datatype: "Json",
                success: function (data) {

                    $.each(data, function (index, value) {
                        // console.log("value dekhi country er", value);
                        $('#Lbcountry').append('<option value="' + value.Id + '">' + value.CountryName + '</option>');
                    });
                }
            });
        }
      
        //populate concern drodpdown        
        function concernBankList() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("concernBankDrodpdown", "Variable")',
                datatype: "Json",
                success: function (data) {

                    $.each(data, function (index, value) {
                        // console.log("value dekhi country er", value);
                        $('#baconcernBank').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                    });
                }
            });
        }      
        //===========================ba functionalities ends=======================




        //=============SEARCH FUNCTIONALITY STARTS===========
        $("#searchInputPol").on("input",function(){
            var input = $(this).val();
            var url = '@Url.Action("GetPOLList","Variable")?searchquery='+input;
            POLTable.setData(url);
        });
        $("#searchInputpob").on("input",function(){
            var input = $(this).val();
            var url = '@Url.Action("GetPODList","Variable")?searchquery='+input;
            PODTable.setData(url);
        });
        $("#searchInputfd").on("input",function(){
            var input = $(this).val();
            var url = '@Url.Action("GetFDList","Variable")?searchquery='+input;
            FDTable.setData(url);
        });
        $("#searchInputig").on("input",function(){
            var input = $(this).val();
            var url = '@Url.Action("GetIGList","Variable")?searchquery='+input;
            IGTable.setData(url);
        });
        $("#searchInputit").on("input",function(){
            var input = $(this).val();
            var url = '@Url.Action("GetITList","Variable")?searchquery='+input;
            IDTable.setData(url);
        });
        $("#searchInputdr").on("input",function(){
            var input = $(this).val();
            var url = '@Url.Action("GetDPList","Variable")?searchquery='+input;
            DRable.setData(url);
        });
        $("#searchInputnp").on("input",function(){
            var input = $(this).val();
            var url = '@Url.Action("GetNPList","Variable")?searchquery='+input;
            NPTable.setData(url);
        });
        $("#searchInputbg").on("input",function(){
            var input = $(this).val();
            var url = '@Url.Action("GetBGList","Variable")?searchquery='+input;
            BGTable.setData(url);
        });
        $("#searchInputci").on("input",function(){
            var input = $(this).val();
            var url = '@Url.Action("GetCIList","Variable")?searchquery='+input;
            CITable.setData(url);
        });
        $("#searchInputlb").on("input",function(){
            var input = $(this).val();
            var url = '@Url.Action("GetLBList","Variable")?searchquery='+input;
            LBTable.setData(url);
        });
        $("#searchInputba").on("input",function(){
            var input = $(this).val();
             var url = '@Url.Action("GetLBAist", "Variable")?searchquery='+input;
            BATable.setData(url);
        });
        $("#searchInputbox").on("input", function () {
            var input = $(this).val();
            var url = '@Url.Action("GetMeasurementList", "Variable")?searchquery=' + input;
            BoxTable.setData(url);
        });
         $("#searchInputLienBankAcc").on("input", function () {
            var input = $(this).val();
            var url = '@Url.Action("GetLienBankAccList", "Variable")?searchquery=' + input;
            LienBankAccTable.setData(url);
        });
        // $('select').select2();

    </script>
}