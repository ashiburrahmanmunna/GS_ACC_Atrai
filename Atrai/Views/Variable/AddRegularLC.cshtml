@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Order management";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}

<link href="~/css/accountHeadListGearDropdown.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<link href="https://unpkg.com/tabulator-tables@5.5.0/dist/css/tabulator.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">


<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

<style>
     
    li a {
        display: block;
        width: 100%;
    }

    .table > :not(:first-child) {
        border-top: 0;
    }

    #treegridTable th {
        text-align: center;
        font-weight: 600;
        border: 1px solid #BABEC5; 
    }

    .table > tbody > tr > td {
        line-height: 15px !important;
        border: 1px solid #c9c9c9;
    }


    .table tbody tr td { 
        font: 14px;
        color: #8A8A8A;
        line-height: 15px;
    }
    
    .text-red {
        color: #FF0000 !important;
    }

    #body td:not(:first-child) {
        text-align: center;
    }

    .root-node {
        font-weight: 500;
    }
     
    .upper-form-style {
        background: #e9ecef6b;
        /*padding-top: 62px*/
    }

    .report-text-style {
        color: #0000ce;
    }

    .company-and-other-text-style {
        margin-top: 40px;
    }

    .customize-btn {
        background: #e9ecef6b;
        border: 1px solid black;
    }

    .customize-btn-another {
        background: #2CA01C;
        border: 1px solid black;
        border-radius: 20px;
        color: #FFFFFF;
        border: 1px solid #2CA01C;
    }

        .customize-btn-another:hover {
            background: #2CA01C;
            border: 1px solid black;
            border-radius: 20px;
            color: #FFFFFF;
            border: 1px solid #2CA01C;
        }

    .customize-btn:hover {
        background: #e9ecef6b;
        border: 1px solid black;
    }

    .customization-btn {
        background: #2CA01C;
        color: white;
        /*border: 1px solid black;*/
        border-radius: 20px;
    }

        .customization-btn:hover {
            background: #235d1b;
            color: white;
            border-radius: 20px;
        }

    .dropdown-button-style {
        border: 1px solid #ced4da;
        background: white;
    }

        .dropdown-button-style:hover {
            border: 1px solid #ced4da;
            background: white;
        }

    .gear-dropdown.show {
        width: 360px;
    }

    .modal-dialog {
        max-width: 90%;
        margin: 2rem auto;
    }

    .report-print-setting-style {
        background: #e9ecef6b;
    }

    .total-accname {
        border-bottom: 5px double black !important;
    }

    #loader {
        position: fixed;
        left: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        z-index: 9999;
        background: url('/assets/loading-load.gif') 50% 50% no-repeat rgb(249, 249, 249);
        opacity: .6;
    }

    .tabulator {
        border: none;
    }

    .tabulator-col .tabulator-col-title {
        text-align: center;
    }

    .tabulator-tableholder {
        background-color: white;
    }

    .tabulator[tabulator-layout=fitDataTable] {
        display: inherit;
    }

    .tabulator .tabulator-header .tabulator-col .tabulator-col-content {
        margin-top: 7px;
    }

    .tabulator .tabulator-header .tabulator-col, .tabulator .tabulator-header {
        background-color: white;
        border-bottom: 1px solid #aaaaaa38;
        border-right: 1px solid #aaaaaa38; 
    }
     

    .tabulator-row .tabulator-cell {
        border-right: none;
        border-left: none;
        padding-left: 10px;
        border: 1px solid #aaaaaa29;
    }

    .tabulator-cell {
        padding-top: 10px;
        padding-bottom: 10px; 
    }

    .tabulator .tabulator-row .active-cell {
        overflow: visible; 
    }

    .tabulator-row { 
        border-left: none;
        border-right: none;
    }

    input[type="checkbox"] {
        width: 20px;  
        height: 20px;  
    }

    .nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active {
        border-top-color: transparent !important;
        border-left-color: transparent !important;
        border-right-color: transparent !important;
        border-bottom: 4px solid green;
    }

        .nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link.active:hover {
            background-color: #F8F8F8;
            border-top-color: transparent !important;
            border-left-color: transparent !important;
            border-right-color: transparent !important;
        }

    .nav-tabs .nav-item.show .nav-link, .nav-tabs .nav-link:hover {
        background-color: #F8F8F8;
        border-top-color: transparent !important;
        border-left-color: transparent !important;
        border-right-color: transparent !important;
    }

    .customize-btnew {
        background: transparent;
        border: 1px solid black;
        border-radius: 20px;
    }

        .customize-btnew:hover {
            background: #ffffff;
            border: 1px solid black;
            color: black;
            border-radius: 20px;
        }

    .tabulator-row .tabulator-cell.tabulator-editing {
        border: 1px solid #404c5d;
        outline: none;
        padding: 0;
    }

    .tabulator-cell.tabulator-editable[tabulator-field="AccName"] {
        border: 1px solid #0003;
        margin-bottom: 10px;
    }

    .filter-dropdown > .filter-dropdown-class.show {
        width: 580px;
    }

    p {
        margin: 1em 0;
    }

    .button {
        -webkit-tap-highlight-color: rgba(0,0,0,0);
        position: relative;
        background: #aa0000;
        padding: 10px 15px;
        color: white;
        box-shadow: 0 2px black;
        text-decoration: none;
        border-radius: 5px; 
    }

        .button:hover {
            top: -2px;
            box-shadow: 0 7px #000000a3;
        }

        .button:active {
            top: 1px;
            box-shadow: 0 7px #000000a3;
        }

    .unbilledbtn.clicked {
        top: -2px;
        box-shadow: 0 7px #000000a3;
    }

    .overduebtn.clicked {
        top: -2px;
        box-shadow: 0 7px #000000a3;
    }

    .openbtn.clicked {
        top: -2px;
        box-shadow: 0 7px #000000a3;
    }

    .paidbtn.clicked {
        top: -2px;
        box-shadow: 0 7px #000000a3;
    }

    .scrollable-offcanvas { 
        overflow-y: auto;
    }

    .tabulator .tabulator-footer .tabulator-paginator .tabulator-page:hover {
        background-color: deepskyblue;
    }

    .tabulator .tabulator-footer {
        background-color: #fff;
        color: black;
    }

        .tabulator .tabulator-footer .tabulator-calcs-holder .tabulator-row {
            background: white !important;
        }


    .offcanvas { 
        display: flex;
        flex-direction: column;
        height: 100vh; 
    }

    .offcanvas-footer {
        margin-top: auto;  
        width: 100%;  
    }

    .modal-footer {
        width: 100%; 
        padding: 10px;  
    }

    .w-15 {
        width: fit-content !important;
    }

    .tabulator-row:nth-child(even) {
        background-color: white;
    }

    .separator {
        display: flex;
        align-items: center;
        text-align: center;
        color: #999;
        font-size: 12px;
    }

        .separator::before,
        .separator::after {
            content: '';
            flex: 1;
            border-bottom: 1px solid #999;
        }

        .separator:not(:empty)::before {
            margin-right: .25em;
        }

        .separator:not(:empty)::after {
            margin-left: .25em;
        }

    .tabulator-row.tabulator-selected {
        background-color: #9abcea !important;
    }

    .rating {
        display: flex;
        flex-direction: row-reverse;
        justify-content: center;
        align-items: center;
    }

        .rating input {
            display: none;
        }

        .rating label {
            cursor: pointer;
            padding: 5px;
            font-size: 24px;
        }

            .rating label:before {
                content: '\2605';  
            }

        .rating input:checked ~ label:before {
            color: gold;  
        }

    .child-table-hidden {
        display: none;
    }

    .tabulator .tabulator-tableholder .tabulator-table .tabulator-row.tabulator-calcs {
        background: #fff !important;
    }

    .tabulator .tabulator-footer {
        border-top: 1px solid #fff;
    }

    #file-drop-area {
        border: 2px dashed #ccc;
        padding: 20px;
        text-align: center;
        cursor: pointer;
    }

    #image-uploadify {
        display: none;
    }

    .footerButton {
        margin-top: 40px;
    }

    .bottom-bar {
        position: fixed;
        bottom: 0;
        left: 0;
        width: 99%;
        background-color: #333;
        color: #fff;
        padding: 10px 20px;
        display: flex;
        justify-content: space-between;
        margin-left: 39px;
    }

    .bottom-bar-css:hover {
        background: #212529;
    }

    .bottom-bar-css-s-n-c:hover {
        background: #007611d6;
    }

    .select2-container--default.select2-container--focus .select2-selection--multiple {
        height: 40px;
    }

    .select2-container--default .select2-selection--single {
        border: 1px solid #aaaaaa94;
    }

        .select2-container--default .select2-selection--single .select2-selection__rendered {
            line-height: 23px;
        }
    .select2-selection {
        background-color: #f2f2f2;
        border-radius: 5px;
        height: 30px;
        padding-bottom: 37px;
        border: 1px solid #ced4da
    }

    .select2-selection__rendered, .select2-selection__arrow {
        margin-top: 8px;
    }

</style>

<input type="hidden" id="Id" name="Id" value="" />
<h5><strong>Regular LC</strong></h5>
<div class="shadow p-3 mb-3 bg-body rounded mt-2">
    <div class="row">

        <div class="col-lg-2">
            <label class="form-label fw-bold">Item Group</label>
            <select id="itemGroup" class="form-control">
                <option value="">Select Item Group</option>
            </select>
        </div>

        <div class="col-lg-3">
            <label class="form-label fw-bold">Supplier</label>
            <select id="supplierID" class="form-control">
                <option value="">Select Supplier</option>
            </select>
        </div>
        <div class="col-lg-2">
            <label class="form-label fw-bold">Import LC No</label><span class="text-danger  fw-bold"> *</span>
            <input id="lcNo" class="form-control " />
            <span class="text-danger" id="bblcNoValidation"></span>
        </div>
        <div class="col-lg-2">
            <label class="form-label fw-bold">ShipMode</label>
            <select id="shipMode" class="form-control">
                <option value="">Select ShipMode</option>
            </select>
        </div>

        <div class="col-lg-3">
            <label class="form-label fw-bold">Concern</label>
            <select id="concern" class="form-control">
                <option value="">Select Concern</option>
            </select>
        </div>
    </div>

    <div class="row mt-3">
        <div class="col-lg-2">
            <label class="form-label fw-bold">Concern Bank</label>
            <select id="concernBank" class="form-control">
                <option value="">Select Concern Bank</option>
            </select>
        </div>
        <div class="col-lg-2">
            <label class="form-label fw-bold">Supplier Bank</label>
            <select id="supplierBank" class="form-control">
                <option value="">Select Supplier Bank</option>
            </select>
        </div>
        <div class="col-lg-2">
            <label class="form-label fw-bold">LC Opening Date</label>
            <input id="lcOpeningDate" class="form-control" readonly/>
        </div>
        <div class="col-lg-2">
            <label class="form-label fw-bold">Expiry Date</label>
            <input id="expiryDate" class="form-control" readonly/>
        </div>
        <div class="col-lg-2">
            <label class="form-label fw-bold">Last Shipment Date</label>
            <input id="lastShipmentDate" class="form-control" readonly />
        </div>
        <div class="col-lg-2">
            <label class="form-label fw-bold">Forwarder</label>
            <select id="ForwarderId" class="form-control">
                <option value="">Select Forwarder</option>
            </select>
        </div>
    </div>

    <div class="row mt-3">
        <div class="col-lg-2">
            <label class="form-label fw-bold">IncoTerms</label>
            <select id="incoTerms" class="form-control">
                <option value="">Select IncoTerms</option>
            </select>
        </div>
        <div class="col-lg-2">
            <label class="form-label fw-bold">Payment Term</label>
            <select id="paymentTerms" class="form-control">
                <option value="">Select Payment Term</option>
            </select>
        </div>
        <div class="col-lg-1">
            <label class="form-label fw-bold">Days</label>
            <select id="days" class="form-control">
                <option value="">Select..</option>
            </select>
        </div>
        <div class="col-lg-2">
            <label class="form-label fw-bold">Insurance </label>
            <input id="insurance" class="form-control" />
        </div>
        <div class="col-lg-1">
            <label class="form-label fw-bold">Currency</label>
            <select id="currency" class="form-control">
                <option value="">Select..</option>
            </select>
        </div>
        <div class="col-lg-1">
            <label class="form-label fw-bold">ConvertRate </label>
            <input id="covertRate" class="form-control" />
        </div>
        <div class="col-lg-3">
            <label class="form-label fw-bold">Port Of Loading</label>
            <select id="portOfLoading" class="form-control">
                <option value="">Select Port Of Loading</option>
            </select>
        </div>
    </div>
    <div class="row mt-3">
        <div class="col-lg-2">
            <label class="form-label fw-bold">Destination </label>
            <select id="destination" class="form-control">
                <option value="">Select Destination </option>
            </select>
        </div>
        <div class="col-lg-2">
            <label class="form-label fw-bold">LC Qty </label>
            <input id="lcQty" class="form-control" />
        </div>
        <div class="col-lg-2">
            <label class="form-label fw-bold">LC Value </label>
            <input id="lcValue" class="form-control"/>
        </div>
        <div class="col-lg-2">
            <label class="form-label fw-bold">Increase </label>
            <input id="increase" class="form-control" value="0"/>
        </div>
        <div class="col-lg-2">
            <label class="form-label fw-bold">Decrease </label>
            <input id="decrease" class="form-control" value="0" />
        </div>
        <div class="col-lg-2">
            <label class="form-label fw-bold">Final Value</label>
            <input id="finalValue" class="form-control" disabled />
        </div>
    </div>

    <div class="row mt-3">
        <div class="col-lg-2">
            <label class="form-label fw-bold">LC Amendment No</label><span class="text-danger  fw-bold"> *</span>
            <input id="lcAmendmentNo" class="form-control " />
        </div>
        <div class="col-lg-4">
            <label class="form-label fw-bold">Remarks</label>
            <input id="remarks" class="form-control " />
        </div>
        <div class="col-lg-2 d-none">
            <label class="form-label fw-bold">Balance</label>
            <input id="balance" class="form-control" />
        </div>
    </div>
</div>

<div class="d-flex mb-3 ">
    <div class="shadow p-3 bg-body rounded mt-2 w-50" style="margin-right: 10px;">
        <label class="form-label fw-bold mt-2"><u>Related PI.</u></label>
        <div class="mt-2" id="piSampleTable"></div>
        <button id="add-row-color-table" class="btn mt-5 d-none" style="border: 1px solid;margin-right: 30px;">Add Row</button>
        <button id="clear-color-table" class="btn mt-5 d-none" style="border: 1px solid;margin-right: 30px;">Clear All Rows</button>
    </div>
    <div class=" shadow p-3 bg-body rounded mt-2 w-50">
        <label class="form-label fw-bold mt-2"><u>Attached PI.</u></label>
        <div class="mt-2" id="piMainTable"></div>
        <button id="add-row-size-table" class="btn mt-5 d-none" style="border: 1px solid;margin-right: 30px;">Add Row</button>
        <button id="clear-size-table" class="btn mt-5 d-none" style="border: 1px solid;margin-right: 30px;">Clear All Rows</button>
    </div>
</div>


@if (ViewBag.ActionType == "Edit")
{
    <div class="bottom-bar">
        <div>
            <button class="btn-close-white radius-30 px-4 fw-bold py-1 ms-3 bottom-bar-css" style="border: 1px solid #808080b5; background: transparent;" onclick="window.location.href = '@Url.Action("Import", "Variable", new { Type = "BacktoBackLC" })';">Cancel</button>
        </div>
        <div>
        </div>
        <div class="dropdown">
            <button id="BtnSave" class="btn-close-white radius-30 px-4 fw-bold py-1 bottom-bar-css" style="border: 1px solid #808080b5; background: transparent;" data-purchase-Id="@Model">Update</button>

            <button id="BtnSaveAndClose" class="btn-success  fw-bold radius-30 py-1 me-3 bottom-bar-css-s-n-c" type="button" data-bs-toggle="" data-purchase-Id="@Model">
                Update and close
            </button>
            <ul class="dropdown-menu" id="ul-id-for-expenses">
                <li class="dropdown-item">
                    <a href="/Accounts/ImportTransaction" class="dropdown-link" style="color: black;">Time activity</a>
                </li>
            </ul>
        </div>
    </div>
}
else if (ViewBag.ActionType == "Create")
{
    <div class="bottom-bar">
        <div>
            <button class="btn-close-white radius-30 px-4 fw-bold py-1 ms-3 bottom-bar-css" style="border: 1px solid #808080b5; background: transparent;" onclick="window.location.href = '@Url.Action("Import", "Variable", new { Type = "BacktoBackLC" })';">Cancel</button>
        </div>
        
        <div class="dropdown">
            <button id="BtnSave" class="btn-close-white radius-30 px-4 fw-bold py-1 bottom-bar-css" style="border: 1px solid #808080b5; background: transparent;" data-purchase-Id="@Model">Save</button>

            <button id="BtnSaveAndClose" class="btn-success  fw-bold radius-30 py-1 me-3 bottom-bar-css-s-n-c" type="button" data-bs-toggle="" data-purchase-Id="@Model">
                Save and close
            </button>
            <ul class="dropdown-menu" id="ul-id-for-expenses">
                <li class="dropdown-item">
                    <a href="/Accounts/ImportTransaction" class="dropdown-link" style="color: black;">Time activity</a>
                </li>
            </ul>
        </div>
    </div>
}


@section scripts{
    <script type="text/javascript">
        $('select').select2();
        $("select").on("select2:open", function () {
            // When Select2 dropdown is opened
            $('.select2-search__field')[0].focus(); // Focus on the input field
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("supplierDrodpdown", "Variable")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) { 
                    $('#supplierID').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                    $('#ForwarderId').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("itemGroupDrodpdown", "Variable")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) { 
                    $('#itemGroup').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("concernDrodpdown", "Variable")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) { 
                    $('#concern').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("shipModeDrodpdown", "Variable")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    $('#shipMode').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("concernBankDrodpdown", "Variable")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    // console.log("value dekhi country er", value);
                    $('#concernBank').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("supplierBankDrodpdown", "Variable")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    // console.log("value dekhi country er", value);
                    $('#supplierBank').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                });
            }
        });

        $.ajax({
            type: "GET",
            url: '@Url.Action("incoTermDrodpdown", "Variable")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    $('#incoTerms').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("paymentTermsDrodpdown", "Variable")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    // console.log("value dekhi country er", value);
                    $('#paymentTerms').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("dayListDrodpdown", "Variable")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    // console.log("value dekhi country er", value);
                    $('#days').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("portOFLoadingDrodpdown", "Variable")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    // console.log("value dekhi country er", value);
                    $('#portOfLoading').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                });
            }
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("currencyDrodpdown", "Variable")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    // console.log("value dekhi country er", value);
                    $('#currency').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                });
            }
        });

        var today = new Date();
        var day = today.getDate();
        var month = today.toLocaleString('default', { month: 'short' });
        var year = today.getFullYear();

        var formattedDay = (day < 10 ? '0' : '') + day;

        var formattedDate = formattedDay + '-' + month + '-' + year;
        $('#lcOpeningDate').val(formattedDate);
        $('#expiryDate').val(formattedDate);
        $('#lastShipmentDate').val(formattedDate);

        $(function () {
            $("#lcOpeningDate").removeClass("hasDatepicker").datepicker({
                dateFormat: "dd-M-yy"
            })
            $("#expiryDate").removeClass("hasDatepicker").datepicker({
                dateFormat: "dd-M-yy"
            });
            $("#lastShipmentDate").removeClass("hasDatepicker").datepicker({
                dateFormat: "dd-M-yy"
            });
             
            $("#lcOpeningDate").attr("autocomplete", "off");
            $("#expiryDate").attr("autocomplete", "off");
            $("#lastShipmentDate").attr("autocomplete", "off");
        });
        $.ajax({
            type: "GET",
            url: '@Url.Action("destinationDrodpdown", "Variable")',
            datatype: "Json",
            success: function (data) {

                $.each(data, function (index, value) {
                    $('#destination').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                });
            }
        });
    </script>

    <script>

        var SampleTable;
        var MainTable;

        var localFieldsForSampleTable = [
            {
                headerSort: false,
                field: "drag",
                formatter: function (cell, formatterParams) {
                    return "<i class='fas fa-bars drag-icon'></i>";
                },
                width: 30,
                headerSort: false,
                rowHandle: true, 
            },
            { title: "Id", field: "piid", movable: false, headerSort: false, visible: false },
            { title: "BBLCMainId", field: "BBLCMainId", movable: false, headerSort: false, visible: false },
            { title: "PI NO", field: "PINo", headerSort: false, frozen: true, hozAlign: "right", visible: true },
            { title: "Import Po No", field: "ImportPONo", movable: false, headerSort: false, visible: true },
            { title: "Item Group", field: "ItemGroupName", movable: false, headerSort: false, visible: true },
            { title: "Item Des.", field: "ItemDescName", movable: false, headerSort: false, visible: true },
            { title: "Primary Unit", field: "PrimaryUnit", movable: false, headerSort: false, visible: true },
            { title: "Import Qty", field: "ImportQty", movable: false, headerSort: false, visible: true, bottomCalc: "sum" },
            { title: "Sec. Unit", field: "SecondaryUnit", movable: false, headerSort: false, visible: true },
            { title: "Sec. Qty", field: "SecondaryQty", movable: false, headerSort: false, visible: true, bottomCalc: "sum" },
            { title: "Import Rate", field: "ImportRate", movable: false, headerSort: false, visible: true },
            { title: "Total Value", field: "TotalValue", movable: false, headerSort: false, visible: true, bottomCalc: "sum" },
        ];
        var localFieldsForMainTable = [
            {
                headerSort: false,
                field: "drag",
                formatter: function (cell, formatterParams) {
                    return "<i class='fas fa-bars drag-icon'></i>";
                },
                width: 30,
                headerSort: false,
                rowHandle: true,


            },
            { title: "Id", field: "Id", movable: false, headerSort: false, visible: false },
            { title: "Id", field: "piid", movable: false, headerSort: false, visible: false },
            { title: "BBLCMainId", field: "BBLCMainId", movable: false, headerSort: false, visible: false },
            { title: "PI NO", field: "PINo", headerSort: false, frozen: true, hozAlign: "right", visible: true },
            { title: "Import Po No", field: "ImportPONo", movable: false, headerSort: false, visible: true },
            { title: "Item Group", field: "ItemGroupName", movable: false, headerSort: false, visible: true },
            { title: "Item Des.", field: "ItemDescName", movable: false, headerSort: false, visible: true },
            { title: "Primary Unit", field: "PrimaryUnit", movable: false, headerSort: false, visible: true },
            { title: "Import Qty", field: "ImportQty", movable: false, headerSort: false, visible: true, bottomCalc: "sum" },
            { title: "Sec. Unit", field: "SecondaryUnit", movable: false, headerSort: false, visible: true },
            { title: "Sec. Qty", field: "SecondaryQty", movable: false, headerSort: false, visible: true, bottomCalc: "sum" },
            { title: "Import Rate", field: "ImportRate", movable: false, headerSort: false, visible: true },
            { title: "Total Value", field: "TotalValue", movable: false, headerSort: false, visible: true, bottomCalc: "sum" },
        ];

        var buyerTableSum = 0;
        MainTable = new Tabulator("#piMainTable", {
            height: "auto",
            // data: BBLCIDSet,
            columns: [
                ...localFieldsForMainTable,
                {
                    title: "",
                    field: "Delete",
                    movable: false,
                    frozen: true,
                    formatter: function (cell, formatterParams) {
                        return "<i id='detach-row' class='fas fa-trash-alt delete-icon'></i>";
                    },
                    width: "6px",
                    headerSort: false,
                    cellClick: function (e, cell) {
                        var rowData = cell.getRow().getData();
                        var row = cell.getRow();
                        detachRow(row);
                    }
                }
            ],

            dataFiltered: function (filters, rows) {
                updateInputFieldValue();
            },
            dataLoaded: function (data) {
                updateInputFieldValue();
            },
            movableRows: true,
            movableColumns: true,

        });

        function attachchRow(row) {
            var rowData = row.getData();
            SampleTable.deleteRow(row);
            MainTable.addRow(rowData);

            var sum = MainTable.getCalcResults().bottom.ImportQty || 0;
            document.getElementById('lcQty').value = sum;

            var sumValue = MainTable.getCalcResults().bottom.TotalValue || 0;
            document.getElementById('lcValue').value = sumValue;

            

            var previouslyCreatedBBLCValue =  0;
            var finalValue = parseFloat($("#finalValue").val()) || 0;
            var Balance = finalValue  || 0;
            $("#balance").val(Balance);



            var finalValue = parseFloat($("#lcValue").val()) + ($("#decrease").val() - $("#increase").val()); // Perform calculation inside this function
            $("#finalValue").val(finalValue || 0);

        }
        function detachRow(row) {
            var rowData = row.getData();
            MainTable.deleteRow(row);
            SampleTable.addRow(rowData);

            var sum = MainTable.getCalcResults().bottom.ImportQty || 0;
            document.getElementById('lcQty').value = sum;

            var sumValue = MainTable.getCalcResults().bottom.TotalValue || 0;
            document.getElementById('lcValue').value = sumValue;


            var finalValue = parseFloat($("#lcValue").val()) + ($("#decrease").val() - $("#increase").val()); 
            $("#finalValue").val(finalValue);
        }

        function getPI(supplierId, itemGroupId) 
        {
            $.ajax({
                type: "POST",
                url: '@Url.Action("getProformaInvoiceData", "Variable")?SupplierID=' + supplierId + '&ItemGroupId=' + itemGroupId,
                datatype: "Json",
                success: function (data) {

                    SampleTable = new Tabulator("#piSampleTable", {
                        height: "auto",
                        layout: "fitDataTable",
                        data: data.data.Table,
                        columns: [
                            ...localFieldsForSampleTable,
                            {
                                title: "",
                                field: "Delete",
                                movable: false,
                                frozen: true,
                                formatter: function (cell, formatterParams) {
                                    return "<i id='attach-row' class='bi bi-plus-circle'></i>";
                                },
                                width: "6px",
                                headerSort: false,
                                cellClick: function (e, cell) {
                                    var rowData = cell.getRow().getData();
                                    var row = cell.getRow();
                                    attachchRow(row);
                                }
                            }
                        ],
                    });
                }
            });
        }

        $("#supplierID").on("change", function () {
            var SupplierID = $(this).val();
            var itemGroupId = $("#itemGroup").val();
            
            if (itemGroupId != "") 
            {
                getPI(SupplierID, itemGroupId);
            }
        });
        $("#itemGroup").on("change", function () {
            var SupplierID = $("#supplierID").val();
            var itemGroupId = $(this).val();

            if (SupplierID != "") {
                getPI(SupplierID, itemGroupId);
            }
        });

        $(document).ready(function () {
            var bblcValue = $("#lcValue").val();
            var increaseValue = 0;
            var deccreaseValue = 0;

            $("#increase").on("blur", function () {
                increaseValue = parseFloat($(this).val()) || 0; // Parse float to handle potential non-numeric inputs
                calculateFinalValue();
            });

            $("#decrease").on("blur", function () {
                deccreaseValue = parseFloat($(this).val()) || 0; // Parse float to handle potential non-numeric inputs
                calculateFinalValue();
            });

            function calculateFinalValue() {
                var finalValue = parseFloat($("#lcValue").val()) + (increaseValue - deccreaseValue); // Perform calculation inside this function
                $("#finalValue").val(finalValue || 0);

                
            }
        });

        function gatherData()
        {
            var UserId = '@HttpContextAccessor.HttpContext.Session.GetInt32("UserId").ToString()';
            var ComId = '@HttpContextAccessor.HttpContext.Session.GetInt32("ComId").ToString()';
            $("#ComId").val(ComId);
            $("#LuserId").val(UserId);

            var BBLCDetails = MainTable.getData();

            var BBLCID = '@ViewBag.BBLCID';


            //====validation handle ends======

            var ComId = '@HttpContextAccessor.HttpContext.Session.GetInt32("ComId").ToString()';
            var UserId = '@HttpContextAccessor.HttpContext.Session.GetInt32("UserId").ToString()';

            var Model =
            {
                ComId: ComId,
                LuserId: UserId,
                Id: BBLCID,
                BBLCNo: $("#lcNo").val(),
                BBLCAmdNo: $("#lcAmendmentNo").val(),
                //UDNo: $("#udNo").val(),
                //AmdNo: $("#udAmendmentNo").val(),
                commercialcompanyid: $("#concern option:selected").val(),
                supplierid: $("#supplierID option:selected").val(),
                shipmodeid: $("#shipMode option:selected").val(),
                //grouplcid: $("#groupLc option:selected").val(),
                totalvalue: $("#finalValue").val(),
                PaymentTermsId: $("#payemntTerms option:selected").val(),
                DayListId: $("#days option:selected").val(),
                //DayListTermId: $("#daysTermDesc option:selected").val(),
                Insurance: $("#insurance").val(),
                CurrencyId: $("#currency option:selected").val(),
                PortOfLoadingId: $("#portOfLoading option:selected").val(),
                OpeningBankId: $("#concernBank option:selected").val(),
                LienBankId: $("#supplierBank option:selected").val(),
                ForwarderId: $("#ForwarderId option:selected").val(),
                TradeTermId: $("#incoTerms option:selected").val(),
                LcOpeningDate: $("#lcOpeningDate").val(),
                ExpiryDate: $("#expiryDate").val(),
                Remarks: $("#remarks").val(),
                LastShipmentDate: $("#lastShipmentDate").val(),
                DestinationID: $("#destination option:selected").val(),
                ConvertRate: $("#covertRate").val(),
                BBLCValue: $("#lcValue").val(),
                BBLCQty: $("#lcQty").val(),
                Balance: $("#balance").val(),
                IncreaseValue: $("#increase").val(),
                DecreaseValue: $("#decrease").val(),
                ItemGroupId: $("#itemGroup option:selected").val(),
                BBLC_Details: BBLCDetails,
            };

            return Model;
        }

        $('#BtnSave').click(function () {

            var data = gatherData();

            if (data.BBLCNo == "") {
                $('#bblcNoValidation').text('Enter a LC No.');
            }
            else {
                if (data.BBLC_Details.length == 0) {
                    setTimeout(function () {
                        toastr.success("Include Proforma Invoice", "", {
                            "toastClass": "toast-red",
                        });
                    }, 1500);
                }
                else {
                    $('#bblcNoValidation').text('');
                    $.ajax({
                        async: false,
                        type: "POST",
                        url: "@Url.Action("SaveRegularLC", "Variable")",
                        data: JSON.stringify(data),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            if (response.Success == 1) {
                                toastr.success(response.message, "", {
                                    "toastClass": "toast-green"
                                });
                                setTimeout(function () {

                                    window.location.href = '@Url.Action("Import", "Variable")?&Type=' + 'BacktoBackLC';
                                }, 1500);

                            }

                        },
                        error: function (response) {
                        }
                    });
                }
                
            }

        });

        $('#BtnSaveAndClose').click(function () {
            var data = gatherData();

            if (data.BBLCNo == "") {
                $('#bblcNoValidation').text('Enter a LC No.');
            }
            else {
                if (data.BBLC_Details.length == 0) {
                    setTimeout(function () {
                        toastr.success("Include Proforma Invoice", "", {
                            "toastClass": "toast-red",
                        });
                    }, 1500);
                }
                else 
                {
                    $('#bblcNoValidation').text('');
                    $.ajax({
                        async: false,
                        type: "POST",
                        url: "@Url.Action("SaveRegularLC", "Variable")",
                        data: JSON.stringify(data),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            if (response.Success == 1) {
                                toastr.success(response.message, "", {
                                    "toastClass": "toast-green"
                                });
                                setTimeout(function () {

                                    window.location.href = '@Url.Action("Import", "Variable")?&Type=' + 'RegularLC';
                                }, 1500);
                            }

                        },
                        error: function (response) {
                        }
                    });
                }
                
            }
        });

        if ('@ViewBag.ActionType' == "Edit") {
            $.ajax({
                type: "GET",
                url: "@Url.Action("getBBLCData", "Variable")",
                data: { "id": '@ViewBag.BBLCID' },
                dataType: "json",
                success: function (response) {
                    console.log("edit mode er data dekhi:", response);
                    var detailsTableData = response.BBLCDetails;

                    var MainTableData = detailsTableData;
                    MainTable.setData(MainTableData);
                    $("#lcNo").val(response.BBLCNo);
                    $("#lcAmendmentNo").val(response.BBLCAmdNo);
                    $("#lcOpeningDate").val(response.LcOpeningDate);
                    $("#expiryDate").val(response.ExpiryDate);
                    $("#lastShipmentDate").val(response.LastShipmentDate);
                    $("#insurance").val(response.Insurance);
                    $("#covertRate").val(response.ConvertRate);
                    $("#lcQty").val(response.BBLCQty);
                    $("#lcValue").val(response.BBLCValue);
                    $("#increase").val(response.IncreaseValue);
                    $("#decrease").val(response.DecreaseValue);
                    $("#remarks").val(response.Remarks);
                    setTimeout(function () {
                        $("#finalValue").val(response.TotalValue);
                    }, 3000);

                    setTimeout(function () {
                        $('#supplierID').val(response.SupplierId).change();
                        $('#itemGroup').val(response.ItemGroupId).change();
                        $('#concern').val(response.CommercialCompanyId).change();
                        $('#shipMode').val(response.ShipModeId).change();
                        $('#concernBank').val(response.OpeningBankId).change();
                        $('#supplierBank').val(response.LienBankId).change();
                        $('#ForwarderId').val(response.ForwarderId).change();
                        $('#currency').val(response.CurrencyId).change();
                        $('#incoTerms').val(response.TradeTermId).change();
                        $('#payemntTerms').val(response.PaymentTermsId).change();
                        $('#days').val(response.DayListId).change();
                        $('#daysTermDesc').val(response.DayListTermId).change();
                        $('#portOfLoading').val(response.PortOfLoadingId).change();
                        $('#destination').val(response.DestinationID).change();
                    }, 2000);

                },
                error: function (error) {
                }
            });
            setTimeout(function () {
                 
                var finalValue = parseFloat($("#finalValue").val()) || 0;
                var Balance = finalValue || 0;
                $("#balance").val(Balance);

            }, 4000);
        }
         
        var currentPOLId = '@ViewBag.BBLCID';
        var BtnSave = document.querySelector('#BtnSave');
        var BtnSaveAndClose = document.querySelector('#BtnSaveAndClose');
        function getBBLC(callback) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetBBLCList", "Variable")',
                dataType: "json",
                success: function (data) { 
                    var SizeCodeGetArray = [];

                    data.data.forEach(function (item) {
                        var SizeName = item.BBLCNo;
                        var SizeIdGet = item.Id;
                        var SizeData = {
                            SizeName: SizeName,
                            Id: SizeIdGet
                        };
                        SizeCodeGetArray.push(SizeData);
                    });

                    if (typeof callback === "function") {
                        callback(SizeCodeGetArray);
                    }
                },
                error: function (error) {
                    console.error("Error:", error);
                }
            });
        }

        function checkPOLExists(sizeName) {
            getBBLC(function (data) {
                var lowercasedSizeName = sizeName.toLowerCase();

                var sizeExists = data.some(function (item) { 

                    if (currentPOLId == item.Id) {
                        return false;
                    }

                    return item.SizeName.trim().toLowerCase() === lowercasedSizeName;
                });

                console.log("sizeExists", sizeExists);

                if (sizeExists) {
                    $("#bblcNoValidation").html("Already has the same BBLC No!");
                    BtnSave.disabled = true;
                    BtnSaveAndClose.disabled = true;
                } else {
                    $("#bblcNoValidation").html("");
                    BtnSave.disabled = false;
                    BtnSaveAndClose.disabled = false;

                }
            });
        }

        var POLNameHandle = document.getElementById("lcNo");
        POLNameHandle.addEventListener("input", function () {
            //console.log("currentSizeId", currentSizeIdd);

            var enteredSizeName = POLNameHandle.value;
            checkPOLExists(enteredSizeName);
        });
    </script>
}