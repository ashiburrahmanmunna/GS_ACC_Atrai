@*@model List<Atrai.Model.Core.Entity.AccountHeadModel>*@
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@model IEnumerable<Atrai.Controllers.AccountsController.BalanceSheetModel>
@*@model Tuple<List<Atrai.Model.Core.Entity.AccountHeadModel>, IEnumerable<Atrai.Controllers.AccountsController.BalanceSheetModel>>*@
@{
    ViewData["Title"] = "Voucher Type";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
    System.Globalization.CultureInfo BDFormat = new System.Globalization.CultureInfo("hi-IN");
}
<style>
    .table > :not(:first-child) {
        border-top: 0;
    }

    #treegridTable th {
        text-align: center;
        font-weight: 600;
        border: 1px solid #BABEC5;
        /*font-size: 14px;*/
    }

    .table > tbody > tr > td {
        line-height: 15px !important;
        border: 1px solid #c9c9c9;
    }


    .table tbody tr td {
        /* border: 1px solid #c9c9c9;*/
        font: 14px;
        color: #8A8A8A;
        line-height: 15px;
    }
    /*    .table>:not(caption)>*>* {

             border-bottom-width: 0px;

        }*/
    .text-red {
        color: #FF0000 !important;
    }

    #body td:not(:first-child) {
        text-align: center;
    }

    .root-node {
        font-weight: 500;
    }

    .upper-form-style {
        background: #e9ecef6b;
        padding-top: 62px
    }

    .report-text-style {
        color: #0000ce;
    }

    .company-and-other-text-style {
        margin-top: 40px;
    }

    .customize-btn {
        background: #e9ecef6b;
        border: 1px solid black;
        border-radius: 20px;
    }

        .customize-btn:hover {
            background: #ffffff;
            border: 1px solid black;
            color: black;
            border-radius: 20px;
        }

    .customization-btn {
        background: #2CA01C;
        color: white;
        /*border: 1px solid black;*/
        border-radius: 20px;
    }

        .customization-btn:hover {
            background: #235d1b;
            color: white;
            border-radius: 20px;
        }

    .dropdown-button-style {
        border: 1px solid #ced4da;
        background: white;
    }

        .dropdown-button-style:hover {
            border: 1px solid #ced4da;
            background: white;
        }

    .dropdown-menu.show {
        width: 360px;
    }

    .modal-dialog {
        max-width: 90%;
        margin: 2rem auto;
    }

    .report-print-setting-style {
        background: #e9ecef6b;
    }

    .total-accname {
        border-bottom: 5px double black !important;
    }

    #loader {
        position: fixed;
        left: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        z-index: 9999;
        background: url('/assets/loading-load.gif') 50% 50% no-repeat rgb(249, 249, 249);
        opacity: .6;
    }
    /* Customize the Select2 container */
    /*.select2-container {
        width: 100%;
        font-size: 16px;
    }*/

    /* Customize the Select2 selection box */
    .select2-selection {
        background-color: #f2f2f2;
        border-radius: 5px;
        height: 40px;
        padding-bottom: 42px;
        border: 1px solid #ced4da
    }

    /*.select2-selection__rendered, .select2-selection__arrow {
        margin-top: 8px;
    }*/
/*    .main-div {
        margin: -23px;
    }*/
    .nav-tabs .nav-item.show .nav-link,
    .nav-tabs .nav-link.active {
        border-bottom: 4px solid green;
        border-left-color: white;
        border-top-color: white;
    }

    .nav-tabs .nav-link:hover {
        border-bottom: 4px solid gray;
        border-left-color: white;
        border-top-color: white;
    }
    .nav-item.nav-right-border {
        border-right: 1px dotted gray;
    }
    .nav-tabs {
        border-bottom: 3px solid #80808047;
    }
    .width-details {
        width: 36%
    }

    .card-body {
        position: relative;
    }

    .position-relative {
        position: relative !important;
    }

    .position-absolute {
        position: absolute !important;
    }

    .bottom-0 {
        bottom: 0 !important;
    }

    .end-0 {
        right: 0 !important;
    }


</style>
<div class="row" id="change-checkbox">
    <div class="col-12 col-md-12">

        <div class="">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12 mb-2">
                        <h4 class="fw-bold fs-3 mt-3">
                            Reports
                            <span class="float-end">
                                <button type="button" class="btn customization-btn fw-bold">+ Create new report</button>
                            </span>
                        </h4>
                        <div class="w-25 mt-3 float-lg-end" id="dekhar-jonno-disi">
                            <select class="js-example-placeholder-multiple js-states form-control" id="all-report-search">
                                @*<option value="AL">Alabama</option>
                                ...
                                <option value="WY">Wyoming</option>*@
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <nav>
        <div class="nav nav-tabs pt-3" id="nav-tab" role="tablist">
            <a class="nav-item nav-link active nav-right-border" id="nav-basic-tab" data-bs-toggle="tab" href="#nav-basic" role="tab" aria-controls="nav-basic" aria-selected="true">Standard</a>
            @*@if (VatViewActivate == "0")
                {
                    @if (!Model.BusinessType.BusinessTypeName.Contains("NID Verification"))
                    {*@
            <a class="nav-item nav-link nav-right-border" id="nav-home-tab" data-bs-toggle="tab" href="#nav-advance" role="tab" aria-controls="nav-advance" aria-selected="false">Custom reports</a>
            <a class="nav-item nav-link nav-right-border" id="nav-product-tab" data-bs-toggle="tab" href="#nav-product" role="tab" aria-controls="nav-product" aria-selected="false">Manegment reports</a>
            <a class="nav-item nav-link " id="nav-product-tab" data-bs-toggle="tab" href="#nav-product" role="tab" aria-controls="nav-product" aria-selected="false">Spreadsheet sync</a>
            @*}
                }*@

        </div>

        @*btn btn-sm btn-outline-info rounded-0*@
    </nav>
    <div class="card ms-auto me-auto border mt-5" style="width:98%;">
        <div class="mt-2" id="custom-report-builder">
            <h1 class="mb-0">
                <button class="btn btn-link text-decoration-none text-black collapse-btn fs-5" type="button" data-bs-toggle="collapse"
                        data-bs-target="#collapseReportBuilder1" aria-expanded="true"
                        aria-controls="collapseReportBuilder1">
                    <i class="bi bi-chevron-down me-2 chevron-icon-2"></i>
                    Custom report builder
                </button>

            </h1>
        </div>
        <div id="collapseReportBuilder1" class="collapse show" aria-labelledby="custom-report-builder"
             data-bs-parent="#accordionExample">
            <div class="card-body ms-5">
                <div class="row">
                    <div class="col-sm-6 width-details">
                        <p>Transaction Detail by Account</p>
                        <hr>
                    </div>
                    <div class="col-sm-6 width-details">
                        <p>Expense Report</p>
                        <hr>
                    </div>
                    <div class="col-sm-6 width-details">
                        <p>Product/Item Profitability by Customer</p>
                        <hr>
                    </div>
                    <div class="col-sm-6 width-details">
                        <p>Invoice Report</p>
                        <hr>
                        <p>
                    </div>
                    <div class="col-sm-6 width-details">
                        <p>Invoice Approval Status</p>
                        <hr>
                    </div>
                </div>
            </div>
            <img src="~/assets/1908692.png" alt="Your Image" class="position-absolute bottom-0 end-0 m-3" id="first-button" style="max-width: 100px;">
        </div>
    </div>

    <div class="card ms-auto me-auto border mt-2" style="width:98%;">
        <div class="mt-2" id="custom-report-builder">
            <h1 class="mb-0">
                <button class="btn btn-link text-decoration-none text-black collapse-btn fs-5" id="second-button" type="button" data-bs-toggle="collapse"
                        data-bs-target="#collapseReportBuilder2" aria-expanded="true"
                        aria-controls="collapseReportBuilder2">
                    <i class="bi bi-chevron-down me-2 chevron-icon-1"></i>
                    Favorites
                </button>

            </h1>
        </div>
        <div id="collapseReportBuilder2" class="collapse show" aria-labelledby="custom-report-builder"
             data-bs-parent="#accordionExample">
            <div class="card-body ms-5">
                <div class="row">
                    <div class="col-sm-6 width-details">
                        <div class="d-flex justify-content-between">
                            <p class="text-truncate me-2" style="max-width: 80%;">Accounts receivable aging summary</p>
                            <i class="bi bi-star-fill text-warning"></i>
                        </div>
                        <hr>
                    </div>
                    <div class="col-sm-6 width-details">
                        <div class="d-flex justify-content-between">
                            <p class="text-truncate me-2" style="max-width: 80%;">Balance Sheet Comparison</p>
                            <i class="bi bi-star-fill text-warning"></i>
                        </div>
                        <hr>
                    </div>
                    <div class="col-sm-6 width-details">
                        <div class="d-flex justify-content-between">
                            <p class="text-truncate me-2" style="max-width: 80%;">Profit and Loss</p>
                            <i class="bi bi-star-fill text-warning"></i>
                        </div>
                        <hr>
                    </div>
                </div>
            </div>
            <img src="~/assets/1908692.png" alt="Your Image" class="position-absolute bottom-0 end-0 m-3" style="max-width: 100px;">
        </div>
    </div>
</div>

@section Scripts{
  
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-treegrid/0.2.0/js/jquery.treegrid.bootstrap3.js"></script>


    <script type="text/javascript">
        $(document).ready(function () {
            $.ajax({
                url: "/Accounts/GetReportNames",
                type: "get",
                dataType: "json",
                success: function (result) {
                    console.log(result);
                    $.each(result, function (index, report) {
                        $("#all-report-search").append('<option value="' + report.Value + '">' + report.Text + '</option>');
                    });
                }
            })
            $("#all-report-search").select2({
                placeholder: "Find report by name"
            });

            //$('#all-report-search').change(function () {
            //    var reportId = $(this).val();

            //    $.ajax({
            //        url: '/Accounts/GetReportById/' + reportId,
            //        type: 'get',
            //        dataType: 'json',
            //        success: function (report) {
            //            var controllerName = report.ControllerName;
            //            var actionName = report.ActionName;

            //            if (controllerName && actionName) {
            //                var url = '/' + controllerName + '/' + actionName;
            //                window.location.href = url;
            //            }
            //        },
            //        error: function () {
            //            // handle error
            //        }
            //    });
            //});
            $("#all-report-search").change(function () {
                var reportname = $(this).find(":selected").text();
                var url = '';
                switch (reportname) {
                    case 'Trial Balance':
                        url = '/Accounts/AccountsTrialBalanceReport';
                        break;
                    case 'Income Statement':
                        url = '/Accounts/AccountsIncomeStatementReport';
                        break;
                }
                if (url !== '') {
                    window.location.href = url;
                }
            })





            //$('#all-report-search').change(function () {
            //    var reportName = $(this).find(':selected').text();
            //    alert($(this).find(':selected').val());
            //    var url = '';

            //    switch (reportName) {
            //        case 'Trial Balance':
            //            url = '/Accounts/AccountsTrialBalanceReport';
            //            break;
            //        case 'Income Statement':
            //            url = '/Accounts/AccountsIncomeStatementReport';
            //            break;
            //        // add more cases for other reports as needed
            //    }

            //    if (url !== '') {
            //        window.location.href = url;
            //    }
            //});

            const chevronIcon1 = document.querySelector('.chevron-icon-1');
            const chevronIcon2 = document.querySelector('.chevron-icon-2');

            document.querySelector('#first-button').addEventListener('click', () => {
                chevronIcon1.classList.toggle('bi-chevron-right');
                chevronIcon1.classList.toggle('bi-chevron-down');
            });
            document.querySelector('#second-button').addEventListener('click', () => {
                chevronIcon2.classList.toggle('bi-chevron-right');
                chevronIcon2.classList.toggle('bi-chevron-down');
            });

            $('#make-editable').mouseover(function () {
                $('#form-check-visibility').removeClass('d-none').addClass('d-block');
            });
            $('#make-editable').mouseout(function () {
                $('#form-check-visibility').removeClass('d-block').addClass('d-none');
            });
        });
        function makeEditable() {
            $("#form-check-visibility").removeClass("d-none");
            var checkbox = document.getElementById("flexCheckDefaultforImage");
            var image = document.getElementById("company-image");

            checkbox.addEventListener("change", function () {
                if (this.checked) {
                    image.classList.remove("d-none");
                } else {
                    image.classList.add("d-none");
                }
            });
            var companyName = document.getElementById("company-name");
            var primaryAddress = document.getElementById("primary-address");
            var trialBalanceName = document.getElementById("trial-balance");
            var dateMonthYear = document.getElementById("date-month-year");
            companyName.contentEditable = true;
            primaryAddress.contentEditable = true;
            trialBalanceName.contentEditable = true;
            dateMonthYear.contentEditable = true;
        }
        //document.getElementById("change-checkbox").on("click", function () {
        //    $("#form-check-visibility").toggleClass("d-none");
        //})
        $('#compact').change(function() {
            if ($(this).is(':checked')) {
                $('#treegridTable th').addClass('pt-3 pb-3');
                $('.table tbody tr td').addClass('pt-3 pb-3');
            }
            else {
                $('#treegridTable th').removeClass('pt-3 pb-3');
                $('.table tbody tr td').removeClass('pt-3 pb-3');
            }
        });
        //document.addEventListener("click", function (event) {
        //    var visibilityDiv = document.getElementById("form-check-visibility");
        //    var targetElement = event.target;
        //    if (!targetElement.closest('#make-editible') && !targetElement.closest('#form-check-visibility')) {
        //        visibilityDiv.removeClass("d-none").classList.add("d-none");
        //    }
        //})
        /*function to goto the add notes text area after click*/
        $("#add-notes").click(function() {
            $("#add-notes-textarea").toggleClass("d-none");
            $("#floatingTextarea2").focus();
            $("#add-notes").text("Edit notes");
        });

        /*function to close  text area after click*/
        $("#close-textarea").click(function() {
            $("#add-notes-textarea").addClass("d-none");
            $("#add-notes").text("Add notes");
            var elem = document.getElementById("add-notes");
            elem.scrollIntoView();
        });

        /*set ajax url globally*/
        var targetPdfUrl = '';
        $('#print-pdf').on('click', function() {
            window.open(targetPdfUrl, '_blank');
        })

        /*ajax call to show portrait pdf on modal open*/
        $.ajax({
            url: '/Accounts/GetDemoPdfPortrait',
            method: 'GET',
            //xhrFields: {
            //    responseType: 'arraybuffer'
            //},
            success: function(data) {
                /*var file = new Blob([data], { type: 'application/pdf' });*/
                /*var url = URL.createObjectURL(file);*/
                //targetPdfUrl = url;
                //targetPdfUrl = data;
                targetPdfUrl = '/' + data;
                $('#pdf-iframe').attr('src', targetPdfUrl);
            }
        });

        /*ajax call to show portrait and landscape pdf on click*/
        $('#orientation').on('change', function() {
            if ($(this).val() === 'landscape') {
                $.ajax({
                    url: '/Accounts/GetDemoPdfLandscape',
                    method: 'GET',
                    //xhrFields: {
                    //    responseType: 'blob'
                    //},
                    success: function(data) {
                        /*var url = URL.createObjectURL(data);*/
                        //targetPdfUrl = url;
                        targetPdfUrl = '/' + data;
                        console.log(targetPdfUrl);
                        $('#pdf-iframe').attr('src', targetPdfUrl);
                    }
                });
            }
            else if ($(this).val() === 'portrait') {
                $.ajax({
                    url: '/Accounts/GetDemoPdfPortrait',
                    method: 'GET',
                    //xhrFields: {
                    //    responseType: 'arraybuffer'
                    //},
                    success: function(data) {
                        //var url = URL.createObjectURL(file);
                        //targetPdfUrl = url;
                        targetPdfUrl = '/' + data;
                        console.log(targetPdfUrl);
                        $('#pdf-iframe').attr('src', targetPdfUrl);
                    }
                });
            }
            else {
                $('#pdf-iframe').attr('src', '~/assets/demo.pdf');
            }
        });



        var totallength = "";
        setDateRange(3);
        GetReport();
        function GetReport() {
            $("#loader").toggleClass("d-none");
           /* $("#treegridTable").empty();*/
        var MyAppUrlSettings = {
            MyUsefulUrl: '@Url.Action("GetIncomeStatementQuickBook", "Accounts")'
            }
        $.ajax({
            //url:"https://raw.githubusercontent.com/kautuk-desai/demo-data/master/datagrid-lib.json",
            url: MyAppUrlSettings.MyUsefulUrl,
            data: { FromDate: $('#start-date').val(), ToDate: $('#end-date').val(), rpttype: "TB", criteria: $("#select2 option:selected").text(), isGroup: 0, isViewPageReport: 1, Months: $("#select-form option:selected").text()},
            type: "GET",
            dataType: 'json',
            //shrinkToFit : false,
            scrollX: true,
            buttons: {
                dom: {
                    button: {
                        className: 'btn btn-sm rounded-0'
                    }
                },
                buttons: [

                    {
                        extend: 'excel',
                        text: '<i class="bi bi-file-earmark-excel"></i>',
                        className: 'btn-success',
                        titleAttr: 'Export to excel'
                    }

                ],
            },

            success: function (response) {
                $("#balance-sheet").removeClass("w-50").addClass("w-100");
                // Remove existing thead element from the table
                $("#treegrid-thead").remove();
                //---Total Only---
                /*console.log("balance sheet respone:", response)*/
                const balanceSheet = response.data;
                console.log("balance sheet respone:", balanceSheet)
                //console.log(balanceSheet);

                //---Month Wise---
                //const balanceSheet = JSON.parse(response.data);
                //console.log("Mont Wise data main rsponse:",balanceSheet.Table);

                // Create span element with the last header name
                //let trialBalanceDatee = `<span>${balanceSheet.Table[0].MonthCaption}</span>`;
                // Create span element with the last header name
                //let trialBalanceDatee = `<span>${balanceSheet[0].MonthCaption}</span>`;

                //// Update the "date-month-year" element with the span
                //$("#date-month-year").empty();
                //$("#date-month-year").append(trialBalanceDatee);

                const columns = [];
                const keys = Object.keys(response.data[0]);
                const keysWithoutLastElement = keys.slice(0, -1);

                for (let i = 8; i < keysWithoutLastElement.length; i++) {
                    columns.push(keys[i]);
                }

                //--for month wise--
                //const keys = Object.keys(balanceSheet.Table[0]);
                //console.log(keys);
                //const keysWithoutLastElement = keys.slice(0, -2);

                //for (let i = 8; i < keys.length; i++) {
                //    columns.push(keys[i]);
                //}
                // Create new thead element and add it to the table
                $('[data-statement-id="balancesheet"]').prepend(formHeaderColumns(columns));

                // Remove existing tbody element from the table
                $('#body').empty();

                // Create new tbody element and add it to the table
                formTable(balanceSheet, undefined, 1);
                $(".tree").treegrid({
                    expanderExpandedClass: "bi bi-chevron-down pe-4",
                    expanderCollapsedClass: "bi bi-chevron-right pe-4"
                });
                $("#loader").toggleClass("d-none");
            }


        });
    };
        var tbody = $("#body");
        var formHeaderColumns = function (timeseriesprojections) {
            var thead = "<thead id='treegrid-thead'><tr><th>Account Head</th>";
            $.grep(timeseriesprojections, function (ele, i) {
                thead += "<th>" + ele + "</th>";
            });
            thead += "</thead>";
            return thead;
        };

        var formTable = function (data, ParentId, level) {
            var colIndex = 2;

            var currentLevel = level;
            console.log("currentLevel:", currentLevel);
            $.each(data, function (i, ele) {
                //console.log("ele.datalevel:", ele.datalevel); // check value of ele.datalevel
                //console.log("currentLevel:", currentLevel); // check value of currentLevel
                //console.log("i:", i);
                console.log("ele:", ele);
                //console.log("ele.datalevel::", ele.datalevel)
                ;
                ele.datalevel = currentLevel;
                var tr = "<tr data-account-name='" + ele.AccName + "' class='";
                tr += "treegrid-" + ele.AccId;
                if (ParentId !== undefined && ele.AccId !== ParentId) {
                    tr += " treegrid-parent-" + ParentId;
                }
                if (ele.datalevel == 1) {
                    tr += " root-node'>";
                } else {
                    tr += " node'>";
                }


                if (ele.AccType == "G") {
                    tr += "<td class='text-left text-nowrap font-weight-bold'>" + ele.AccName + "</td>";
                }
                else {
                    tr += "<td class='text-left'>" + ele.AccName + "</td>";
                }

                if (jQuery.isEmptyObject(ele)) {

                }
                else {
                    let sortedData = Object.keys(ele); //.sort();
                    /*console.log(sortedData[8]);*/
                    let group = 0;
                    for (let i in sortedData) {
                        let key = sortedData[i];
                        /*console.log(i);*/
                        let value = ele[sortedData[i]];
                        /*console.log(i, ":", sortedData[4], "", ele[sortedData[4]]);*/
                        //let length = sortedData.length;
                        //if (ele[sortedData[4]] == "G") {
                        //    length = sortedData.length - 1;
                        //}
                        if (i > 7 && i < sortedData.length-1) {
                           //console.log("found");
                            //console.log("value", value);
                            if (value > 0) {
                                if (group == 1) {
                                    //console.log( key + ": " + value );
                                    tr += "<td class='text-end font-weight-bold'>" + value.toLocaleString('en-IN') + "</td>";
                                }
                                else {

                                    tr += "<td class=text-end>" + value.toLocaleString('en-IN') + "</td>";

                                }
                            }
                            else if (value < 0) {
                                if (group == 1) {
                                    //console.log( key + ": " + value );
                                    tr += "<td class='text-end font-weight-bold text-red'>" + value.toLocaleString('en-IN') + "</td>";
                                }
                                else {

                                    tr += "<td class='text-end text-red'>" + value.toLocaleString('en-IN') + "</td>"; //balance sum

                                }
                            }
                            //else {
                            //    tr += "<td>-</td>";
                            //}
                        }
                        //else {
                        //    tr += "<td>-</td>";
                        //}
                        //console.log("Key: " + sortedData[i] + "   " + ele.data[sortedData[i]])
                    }
                }

                if (ele.projections && ele.projections.length > 0) {
                    tr += bindAccountValues(ele.projections);
                }

                tr += "</tr>";
                tbody.append(tr);
                ele.ParentId = ParentId;
                if (ele.hasOwnProperty("Children")) {
                    formTable(ele.Children, ele.AccId, parseInt(currentLevel + 1));
                }
            });
        };

        var bindAccountValues = function (projections) {
            var accountValues = "";
            $.grep(projections, function (ele, i) {
                accountValues +=
                    '<td data-account-dt="' + ele.dt + '">' + ele.value + "</td>";
            });
            return accountValues;
        };


        $(function () {
            $("#start-date").removeClass("hasDatepicker").datepicker({
                dateFormat: "dd-M-yy"
            });
            $("#end-date").removeClass("hasDatepicker").datepicker({
                dateFormat: "dd-M-yy"
            });
        });

   /*     $("#treegridTable").empty();*/


    </script>
}
