@*@model List<Atrai.Model.Core.Entity.AccountHeadModel>*@
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@model IEnumerable<Atrai.Controllers.AccountsController.BalanceSheetModel>
@*@model Tuple<List<Atrai.Model.Core.Entity.AccountHeadModel>, IEnumerable<Atrai.Controllers.AccountsController.BalanceSheetModel>>*@
@{
    ViewData["Title"] = "Voucher Type";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
    var criteria = ViewBag.criteria;
    var strId = ViewBag.strId;
    var dtFrom = ViewBag.dtFrom;
    var dtTo = ViewBag.dtTo;
    System.Globalization.CultureInfo BDFormat = new System.Globalization.CultureInfo("hi-IN");
}
<link href="~/css/accountHeadListGearDropdown.css" rel="stylesheet" />
<style>
    .table > :not(:first-child) {
        border-top: 0;
    }

    #treegridTable th {
        text-align: center;
        font-weight: 600;
        border: 1px solid #BABEC5;
        /*font-size: 14px;*/
    }

    .table > tbody > tr > td {
        line-height: 15px !important;
        border: 1px solid #c9c9c9;
    }


    .table tbody tr td {
        /* border: 1px solid #c9c9c9;*/
        font: 14px;
        color: #8A8A8A;
        line-height: 15px;
    }
    /*    .table>:not(caption)>*>* {

             border-bottom-width: 0px;

        }*/
    .text-red {
        color: #FF0000 !important;
    }

    #body td:not(:first-child) {
        text-align: center;
    }

    .root-node {
        font-weight: 500;
    }

    .tabulator-table .tabulator-row {
        background-color: white;
    }

    .upper-form-style {
        background: #e9ecef6b;
        /*padding-top: 62px*/
    }

    .report-text-style {
        color: #0000ce;
    }

    .company-and-other-text-style {
        margin-top: 40px;
    }

    .customize-btn {
        background: #e9ecef6b;
        border: 1px solid black;
        border-radius: 20px;
    }

    .customize-btn-another {
        background: #2CA01C;
        border: 1px solid black;
        border-radius: 20px;
        color: #FFFFFF;
        border: 1px solid #2CA01C;
    }

        .customize-btn-another:hover {
            background: #2CA01C;
            border: 1px solid black;
            border-radius: 20px;
            color: #FFFFFF;
            border: 1px solid #2CA01C;
        }

    .customize-btn:hover {
        background: #ffffff;
        border: 1px solid black;
        color: black;
        border-radius: 20px;
    }

    .customization-btn {
        background: #2CA01C;
        color: white;
        /*border: 1px solid black;*/
        border-radius: 20px;
    }

        .customization-btn:hover {
            background: #235d1b;
            color: white;
            border-radius: 20px;
        }

    .dropdown-button-style {
        border: 1px solid #ced4da;
        background: white;
    }

        .dropdown-button-style:hover {
            border: 1px solid #ced4da;
            background: white;
        }

    .dropdown-menu.show {
        width: 360px;
    }

    .modal-dialog {
        max-width: 90%;
        margin: 2rem auto;
    }

    .report-print-setting-style {
        background: #e9ecef6b;
    }

    .total-accname {
        border-bottom: 5px double black !important;
    }

    #loader {
        position: fixed;
        left: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        z-index: 9999;
        background: url('/assets/loading-load.gif') 50% 50% no-repeat rgb(249, 249, 249);
        opacity: .6;
    }

    .tabulator-col .tabulator-col-title {
        text-align: center;
    }

    .tabulator-tableholder {
        background-color: white;
    }

    .tabulator[tabulator-layout=fitDataTable] {
        display: inherit;
    }

    .tabulator .tabulator-header .tabulator-col, .tabulator .tabulator-header {
        background-color: white;
    }
    /*    .tabulator-row .tabulator-cell, .tabulator-row .tabulator-cell.tabulator-frozen.tabulator-frozen-left {
        border-right: none;
        border-left: none;
    }*/
    .tabulator-row .tabulator-cell.tabulator-frozen.tabulator-frozen-left {
        border-right: 2px solid #aaaaaa38;
    }

    .tabulator-row .tabulator-cell {
        border-right: 1px solid #aaaaaa38;
        border-left: 1px solid #aaaaaa38;
    }

    .tabulator-cell {
        padding-top: 10px;
        padding-bottom: 10px;
    }

    .tabulator .tabulator-row .active-cell {
        overflow: visible;
        /* Add any other styles you need for the active cell */
    }
</style>
<div class="row py-3" style="background: #e9ecef6b;">
    <div class="col-lg-2">
        <p class="fs-4">Terms</p>
    </div>
    <div class="col-lg-10">
        <div class="float-end">
            <button type="button" class="btn customize-btn fw-bold" onclick="GetReport()" style="">Run Report</button>
            <button id="addNewOption" type="button" class="btn btn-success customize-btn-another fw-bold" onclick="GetReport()" style="">New</button>
        </div>

        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content mx-auto w-25">
                    <div>
                        <button onclick="modalClear()" type="button" class="btn-close float-lg-end me-2 mt-2" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div>
                        <h5 class="modal-title ms-5 fw-bold text-dark" id="exampleModalLabel">New Term</h5>
                    </div>
                    <div class="modal-body px-5">
                        <!-- Inside the modal-body -->
                        <form id="termForm">
                            <input type="hidden" id="Id" value="0" />

                            <div class="mb-3">
                                <label for="termName" class="form-label fw-bold"><span class="text-danger">*</span>Name</label>
                                <input type="text" class="form-control w-50" id="termName" name="TermName" style="border-radius:0px;">
                                <div id="termNameValidation" class="text-danger"></div>
                            </div>
                            <div class="mb-3">
                                <input checked id="dueInDaysRadio" type="radio" />
                                <label for="dueInDaysRadio" class="form-label fw-bold">Due in fixed number of days</label>
                            </div>
                            <div class="mb-3 d-flex ms-3">
                                    <input type="text" class="form-control" id="dueInDays" name="DueInFixedDays" style="width: 45px; border-radius: 0px; ">
                                    <label for="dueInDays" class="form-label ms-1 my-auto">days</label>
                            </div>
                            <div class="mb-3">
                                <input id="dueByDaysRadio" type="radio" />
                                <label for="dueByDaysRadio" class="form-label fw-bold">Due by certain day of the month</label>
                            </div>
                            <div class="mb-3 d-flex ms-3">
                                <input type="text" class="form-control" id="dueByDay" name="DueByDayOfMonth" style="width: 45px; border-radius: 0px; " disabled>
                                <label for="dueByDay" class="form-label ms-1 my-auto">day of month</label>
                            </div>
                            <div class="mb-3 ms-3">
                                <label  class="form-label fw-bold">Due the next month if issued within</label>
                            </div>
                            <div class="mb-3 d-flex ms-3">
                                <input type="text" class="form-control" id="dueNextMonthDays" name="DueNextMonthWithinDays" style="width: 45px; border-radius: 0px; " disabled>
                                <label for="dueNextMonthDays" class="form-label ms-1 my-auto">days of due date</label>
                            </div>
                        </form>

                    </div>
                    <!-- At the bottom of the modal content, before the closing </div> -->
                    <hr class="w-75 mx-auto" />
                    <div class="d-flex justify-content-around mb-4">
                        <button onclick="modalClear()" type="button" class="btn customize-btn fw-bold" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn customize-btn-another fw-bold" id="saveTermButton">Save</button>
                    </div>
                </div>
            </div>
        </div>


    </div>
</div>
<div id="tableContainer" class="mt-4">
    <div id="incomeStatementTable" style="height:400px"></div>
</div>



@section Scripts{
    <script src="~/admin_theme_gtr/assets/js/dateRangeMultipleFunctionForAccountsVoucherReport.js" asp-append-version="true"></script>
    <script type="text/javascript">

        //modal radio check uncheck functionalities starts
        const dueInDaysRadio = document.getElementById("dueInDaysRadio");
        const dueByDaysRadio = document.getElementById("dueByDaysRadio");

        dueInDaysRadio.addEventListener("change", () => {
            if (dueInDaysRadio.checked) {
                $("#dueInDays").prop("disabled", false)
                $("#dueByDay").prop("disabled", true)
                $("#dueNextMonthDays").prop("disabled", true)
                dueByDaysRadio.checked = false;
            }
        });

        dueByDaysRadio.addEventListener("change", () => {
            if (dueByDaysRadio.checked) {
                $("#dueInDays").prop("disabled", true)
                $("#dueByDay").prop("disabled", false)
                $("#dueNextMonthDays").prop("disabled", false)
                dueInDaysRadio.checked = false;
            }
        });
        //modal radio check uncheck functionalities ends

        //modal close and clear data function starts
        function modalClear() {
            $("#termName").val('');
            $("#dueInDays").val('');
            $("#dueByDay").val('');
            $("#dueNextMonthDays").val('');
            $("#dueByDaysRadio").val('');
            $("#dueInDaysRadio").val('');
            $('#termNameValidation').text('');
        }
        //modal close and clear data function ends

        //show modal when click add new button starts
        var addNewBtn = document.getElementById("addNewOption");
        addNewBtn.addEventListener("click", function () {
            $("#exampleModal").modal("show");

        })
        //show modal when click add new button ends

        //term save functionalities starts
           $("#saveTermButton").click(function () {
               Saveproductinfo();
               modalClear();
            });

        function Saveproductinfo() {
                    var Id = $("#Id").val();
                    var TermName = $("#termName").val();
                    var DueInFixedDays = $("#dueInDays").val();
                    var DueByDayOfMonth = $("#dueByDay").val();
                    var DueNextMonthWithinDays = $("#dueNextMonthDays").val();


            var AccountHead = {
                        Id: Id,
                        TermName: TermName,
                        DueInFixedDays: DueInFixedDays,
                        DueByDayOfMonth: DueByDayOfMonth,
                        DueNextMonthWithinDays: DueNextMonthWithinDays

                    }
                    console.log(AccountHead);
                    $.ajax({
                        url: '@Url.Action("AddTerms", "Admin")',
                        data: { model: AccountHead }, //use id here
                        //data: JSON.stringify(purchasesmain),
                        type: 'POST',
                        async: true,
                        //contentType: 'application/json;',
                        dataType: 'json',
                        success: function (result) {
                            if (result.success == "1") {
                                alert("Saved");
                                $('#exampleModal').modal('hide');
                                GetReport();
                            }
                            if (result.success == "2") {
                                $('#termNameValidation').text("Name Must Be Unique");
                            }
                        },
                        error: function () {
                            alert("Failed");
                        }
                    });
                }
        //term save functionalities ends


                //Tabulator function starts
        GetReport();
                    function GetReport() {
            function fetchDataFromServer() {
                var MyAppUrlSettings = {
                    MyUsefulUrl: '@Url.Action("GetTermsList", "Admin")'
                };
                return $.ajax({
                    url: MyAppUrlSettings.MyUsefulUrl,
                    dataType: "json",
                });
            }

            fetchDataFromServer().done(function (response) {

                console.log("notrmal response:",response);
                var dataTable = response;
                console.log("data table:", dataTable);
                var columnsToExclude = ["DueInFixedDays", "DueByDayOfMonth","DueNextMonthWithinDays","Id","CreateDate","UpdateDate","IsDelete","ComId","LuserId","UserAccountList","LuserIdUpdate","CompanyList"]; // Define columns to be excluded

                var columns = Object.keys(dataTable[0]).map((column) => {
                    if (!columnsToExclude.includes(column)) {
                        var columnDefinition = {
                            title: column,
                            field: column,
                            formatter: function (cell, formatterParams) {

                                var rowEl = cell.getRow().getElement();

                                if (cell.getData().FontSignal === "B") {
                                    rowEl.style.fontWeight = "bold";
                                }
                                return cell.getValue();
                            },
                            hozAlign: column === "TermName" ? "left" : "right",
                            frozen: column === "AccName" ? true : (column === "AccCode" ? true : false),
                        };

                        return columnDefinition;
                    }
                }).filter((column) => column !== undefined);


                var table = new Tabulator("#incomeStatementTable", {
                    data: dataTable,
                    dataTree: true,
                    dataTreeStartExpanded: true ,
                    dataTreeChildField: "children",
                    layout: "datafit",
                    frozenRows: 1,
                    //columns: columns,
                    columns: [
                        { title: "Name", field: "TermName" },
                                        {
                    title: "Actions", field: "button", headerHozAlign: "center", headerSort: false, hozAlign: "center", resizable: false, width: 150, formatter: function (cell, formatterParams, onRendered) {
                        var data = cell.getData();
                                                var myUrlGet = `editAccountHead(${data.Id})`;
                                                var inActive = `setInactiveUrl(${data.Id}) `
                                                var active = `setActiveUrl(${data.Id}) `


                        var editHtml = `
                                       <a  onclick=${myUrlGet} class='text-decoration-none text-black ms-3 mt-1'>
                                           <i class='bi bi-pencil-square pe-1'></i> <span>Edit</span>  <br />
                                       </a>
                                               <div class='dropdown-divider m-0'></div>
                                   `;

                        var viewHtml = `
                                               <a href='' target='_blank' class='text-decoration-none text-black ms-3 mt-1'>
                                               <i class='bi bi-eye pe-1'></i> <span>View</span>  <br />
                                              </a>

                                   `;

                                                var deleteHtml;
                                                if (data.IsDelete == 0) {
                                                    deleteHtml = `
                        <a onclick='${inActive}' class='text-decoration-none text-black ms-3 mt-1' href='#' id='InActive'>
                            <i class="bi bi-radioactive"></i><span class='ms-1 mt-2'>Make Inactive</span><br />
                        </a>
                    `;
                                                }
                                                else if (data.IsDelete == 1) {
                                                    deleteHtml = `
                        <a onclick='${active}' class='text-decoration-none text-black ms-3 mt-1' href='#' id='InActive'>
                            <i class="bi bi-radioactive"></i><span class='ms-1 mt-2'>Make Active</span><br />
                        </a>
                    `;
                                                }


                        //var statusDependentHtml = data.isPosted ? viewHtml + deleteHtml : editHtml + deleteHtml;
                        var statusDependentHtml = data.isPosted ? viewHtml : editHtml + deleteHtml;

                        var html = `
                                      <div class='dropdown ms-1'>
                                          <a target='_blank' class='fw-bolder mt-2'>Run Report</a>
                                          <button class='btn dropdown-toggle' type='button' id='dropdownMenuButton1' data-bs-toggle='dropdown' aria-expanded='false'></button>
                                         <ul class='dropdown-menu' aria-labelledby='dropdownMenuButton1'>
                                              ${statusDependentHtml}

                                          </ul>
                                      </div>
                                  `;

                        return html;
                     },
                     visible: true,cellClick: function(e, cell) {
                    // Add a custom class to the cell when it's clicked
                    cell.getElement().classList.add('active-cell');
                  },
                },
                    ],
                    dataBound: function () {
                        // Freeze the top 1 row (index 0) after the table is created
                        var rows = table.getRows();
                        if (rows.length > 0) {
                            var cells = rows[0].getCells();
                            cells.forEach(cell => {
                                cell.freeze();
                            });
                        }
                    },
                });
            });
        };
        //Tabulator function ends


        //inactive functionaloties starts

            function setInactiveUrl(data) {
                var myUrlInactive = '@Url.Action("InactiveTerm", "Admin")';
                alert("Are You Sure Want To Inactive?")
            $.ajax({
                type: "get",
                data: { TermId: data },
                url: myUrlInactive,
                success: function (response) {
                    if (response.success == "1") {
                        toastr.success(response.msg, "", {
                            "toastClass": "toast-green",
                        });
                        GetReport();
                    }
                    else if (response.success == "0") {
                        //alert()
                        toastr.success(response.msg, "", {
                            "toastClass": "toast-red",
                        });
                        GetReport();
                    }
                }
            });
        };
            function setActiveUrl(data) {
                var myUrlInactive = '@Url.Action("InactiveTerm", "Admin")';
                alert("Are You Sure Want To Active?")
            $.ajax({
                type: "get",
                data: { TermId: data },
                url: myUrlInactive,
                success: function (response) {
                    if (response.success == "1") {
                        toastr.success(response.msg, "", {
                            "toastClass": "toast-green",
                        });
                        GetReport();
                    }
                    else if (response.success == "0") {
                        //alert()
                        toastr.success(response.msg, "", {
                            "toastClass": "toast-red",
                        });
                        GetReport();
                    }
                }
            });
        };



        //inactive functionaloties ends

        //edit term functionalties starts
           function editAccountHead(data) {
               var myUrlGet = '@Url.Action("GetTerm", "Admin")?TermId=' + data;
            $.ajax({
                type: "GET",
                url: myUrlGet,
                success: function (result) {
                    console.log(result);
                    console.log(result.data.AccountCategoryId);
                    if (result.success == "1") {
                        //alert('get accounthead modal')
                        $("#exampleModal").modal("show");
                        $("#Id").val(result.data.Id);
                        $("#termName").val(result.data.TermName);
                        $("#dueInDays").val(result.data.DueInFixedDays);
                        $("#dueByDay").val(result.data.DueByDayOfMonth);
                        $("#dueNextMonthDays").val(result.data.DueNextMonthWithinDays);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert("Error: " + xhr.status);
                }
            });
        }
        //edit term functionalties ends
    </script>




}
