@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@model int
@{
    ViewData["Title"] = "AddPurchase";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
    //var DecimalField = '@HttpContextAccessor.HttpContext.Session.GetInt32("DecimalField").ToString()';
}

<style type="text/css">

    input[type=checkbox] {
        transform: scale(1.5);
    }

    .table th:last-child, .table tbody tr.odd td:last-child {
        position: inherit !important;
    }

    .table th:last-child, .table tbody tr.even td:last-child {
        position: inherit !important;
    }

    ul.ui-autocomplete {
        z-index: 1100;
    }

    .select2-container--default .select2-selection--multiple .select2-selection__choice {
        background-color: #acadfb;
        border: 1px solid #fff;
        margin: 1.8px;
        padding: 0px 3px;
        font-weight: 500;
        margin-left: .5px;
        color: #041c3c;
        font-size: 13px;
    }

    .select2-container {
        width: 100% !important;
    }

    .table th {
        text-align: center;
    }

    .table > tbody > tr > td, .table > tbody > tr > td > input {
        font-size: 13px;
    }

    /*    .table > tbody > tr > td {
                                    padding-right: .20rem;
                                    padding-top: 0.10rem;
                                    padding-bottom: 0.0rem;
                                    padding-left: 0.15rem;
                                    padding-right: 0.45rem;
                                }*/

    .dataTables_scrollHeadInner {
        width: 100% !important;
    }

        .dataTables_scrollHeadInner table {
            width: 100% !important;
        }

    .select2-selection {
        overflow: hidden !important;
        height: 32px !important;
        font-size: 14px;
        height: 42px !important;
        vertical-align: middle;
    }



    .bg_1 {
        background-color: green;
    }

    .bg_2 {
        background-color: gray;
    }

    .error_msg {
        color: #f00;
        display: none;
    }





    .ui-combobox {
        display: inline-block;
        margin: 0;
        margin-right: 1.8em;
        position: relative;
    }

    .ui-combobox-input {
        padding: 0.2em;
        margin: 0;
    }

    .ui-combobox-button {
        position: absolute;
        width: 1.8em !important;
        margin: 0;
        margin-left: -1px;
        top: 0;
        bottom: 0;
    }

        .ui-combobox-button .ui-button-text {
            padding: 0em;
        }

    .ui-combobox .ui-autocomplete {
        max-height: 10em;
        overflow-y: auto;
        overflow-x: hidden;
    }

    .table > tbody > tr > td > a i {
        display: block;
        text-align: center;
        font-size: 20px;
        color: red;
    }



    #PurchaseItems.hide2 tr > *:nth-last-child(2), #PurchaseItems.hide2 tr > *:nth-last-child(1), #PurchaseItems.hide2 tr > *:nth-last-child(10) {
        display: none;
    }

</style>
<div class="row">
    <div class="col-md-12">
        <div class="card">

            <div class="card-body" id="masterPurchase">

                <div class="row my-3">
                    <div class="col-md-8 col col-12">
                        <h3 class="text-primary">
                            Purchases / Store In
                        </h3>
                    </div>
                    <div class="col-md-4 text-end">
                        <div class="dropdown">
                            <button class="btn btn-primary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                New
                            </button>
                            <ul class="dropdown-menu">
                                <li>
                                    @Html.ActionLink("Create New Purchase.", "AddPurchaseBatch", null, null, new { @class = "dropdown-item", @id = "btnBack" })

                                </li>

                            </ul>
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <input type="hidden" id="isBatchPurchase" name="isBatchPurchase" value="" />
                    <input type="hidden" id="LuserId" value="" />
                    <input type="hidden" id="CreateDate" value="" />
                </div>
                <div class="row">
                    <div class="col-md-4 col-12">
                        <div class="mb-2">
                            <label class="form-label fw-semibold">Supplier</label>
                            <select id="Supplier" class="form-control" onchange="blankme(this.id)">
                                <option value="">Select Supplier</option>
                            </select>
                            <small id="error_Supplier" class="form-text error_msg">Select Supplier from list</small>

                        </div>
                    </div>

                    <div class="col-md-4 col-12">
                        <div class="mb-2">
                            <label class="form-label fw-semibold"> Code</label>

                            @Html.TextBox("Code", null, new { @class = "form-control", @placeholder = "Enter Purchase No", onkeyup = "blankme(this.id)", autocomplete = "off", @readonly = "readonly" })
                            <small id="error_Code" class="form-text error_msg col-md-offset-2 "> Purchase Code is Required</small>

                        </div>
                    </div>

                    <div class="col-md-4 col-12">
                        <div class="mb-2">
                            <label class="form-label fw-semibold"> Date</label>
                            @Html.TextBox("Date", null, new { @class = "form-control mydatepicker", @placeholder = "Select Purchase Date ", onchange = "blankme(this.id)", autocomplete = "off" })
                            <small id="error_Date" class="form-text error_msg col-md-offset-2 ">Purchase Date is Required</small>

                        </div>
                    </div>


                </div>

                <div class="row" id="supplierinfo">

                    <div class="col-md-4 col-12">


                        <div class="input-group  mb-2">
                            <div>
                                <span class="input-group-text py-0">
                                    Phone No
                                </span>
                                <span class="input-group-text ">
                                    <i class="bi bi-search"></i>
                                </span>

                            </div>

                            @Html.TextBox("PhoneNo", null, new { @class = "form-control ", @placeholder = "Enter Phone No", autocomplete = "off" })
                            <small id="error_PhoneNo" class="form-text error_msg col-md-offset-2 "> Supplier Phone No Required</small>
                        </div>

                    </div>


                    <div class="col-md-4 col-12">
                        <div class="mb-2">
                            <label class="form-label fw-semibold"> Supplier Name</label>
                            @Html.TextBox("SupplierName", null, new { @class = "form-control", @placeholder = "Enter Supplier Name", autocomplete = "off" })
                            <small id="error_SupplierName" class="form-text error_msg col-md-offset-2 "> Supplier Name Required</small>

                        </div>
                    </div>


                    <div class="col-md-4 col-12">

                        <div class="mb-2">
                            <label class="form-label fw-semibold">
                                Address
                            </label>
                            @Html.TextBox("SupplierAddress", null, new { @class = "form-control", @placeholder = "Type Supplier Address", autocomplete = "off" })
                            <small id="error_SupplierAddress" class="form-text error_msg col-md-offset-2 "> Supplier Address Required</small>
                        </div>
                    </div>

                </div>



                @*<div class="row" id="supplierinfo">
                <div class="col-md-4 col-12">
                <div class="form-group">
                <label for="Code">Supplier Name  &nbsp</label>
                @Html.TextBox("SupplierName", null, new { @class = "form-control", @placeholder = "Enter Supplier Name", onkeyup = "blankme(this.id)", autocomplete = "off" })

                </div>
                </div>
                <div class="col-md-4 col-12">
                <div class="form-group">
                <label for="Code">Phone No  &nbsp</label>
                @Html.TextBox("PhoneNo", null, new { @class = "form-control", @placeholder = "Enter Phone No", onkeyup = "blankme(this.id)", autocomplete = "off" })

                </div>
                </div>
                <div class="col-md-4 col-12">
                <div class="form-group">
                <label for="Date">Address  &nbsp</label>
                @Html.TextBox("SupplierAddress", null, new { @class = "form-control", @placeholder = "Select Supplier Address", onchange = "blankme(this.id)", autocomplete = "off" })

                </div>
                </div>
                </div>*@

                <div class="row">

                    <div class="col-md-6 col-12">
                        <div class="mb-2">
                            <label class="form-label fw-semibold">
                                Search Product
                            </label>
                            <div class="input-group">
                                <span class="input-group-text bg-purple text-white">
                                    <i class="bi bi-search"></i>
                                </span>

                                <input type="text" placeholder="Search Product" name="Search" id="Search" class="form-control">

                                <button type="button" class="btn-purple btn-sm " data-bs-toggle="modal" data-bs-target="#productinfoModal"><i class="bi bi-plus"></i></button>

                            </div>

                        </div>
                    </div>
                    <div id="divwarehouse" class="col-md-3 col-12">
                        <div class="mb-2">
                            <label class="form-label fw-semibold">
                                Warehouse
                            </label>
                            @Html.DropDownList("Warehouse", ViewBag.Warehouse as List<SelectListItem>, new { id = "Warehouse", @class = "form-control" })


                        </div>
                    </div>
                    <div class="col-md-3 col-12">
                        <div class="mb-2">
                            <label class="form-label fw-semibold">
                                Type
                            </label>
                            @Html.DropDownList("DocType", ViewBag.DocType as List<SelectListItem>, new { id = "DocType", @class = "form-control " })
                        </div>
                    </div>
                </div>


                <hr />

                <div class="row">
                    <div class="col-md-12">

                        <div class="table-responsive my-5">
                            <table class="table table-hover table-striped table-bordered PurchaseItems border-start" id="PurchaseItems" style="width:100%">
                                <thead class="bg-light">
                                    <tr>
                                        <th class="d-none">Id</th>
                                        <th class="d-none">Product Id</th>
                                        <th class="d-none">Warehouse Id</th>
                                        <th>Name</th>
                                        <th>Description</th>
                                        <th>Warehouse</th>
                                        <th>Quantity</th>
                                        <th>Unit Price</th>
                                        <th>Amount</th>
                                        <th></th>
                                        <th>Batch Info</th>
                                        <th>IsDelete</th>
                                        <th>IsTransaction</th>
                                        <th>Profit%</th>
                                        <th>Unit Sales Price</th>

                                    </tr>
                                </thead>
                                <tbody id="itemDetails">
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td class="d-none"></td>
                                        <td class="d-none"></td>
                                        <td class="d-none"></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td> <strong> Total:</strong> </td>
                                        <td> <strong id="TotalQty">  </strong> </td>
                                        <td> <strong id="SubTotal">  </strong> </td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>

                        <small id="error_SubTotal" class="form-text error_msg">Atleast add one item</small>
                    </div>
                    <hr />

                    <div class="col-md-6 col-12">
                        <div class="card">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-4 col-12">
                                        <div class="mb-2">
                                            <label class="form-label fw-semibold">
                                                VAT
                                            </label>
                                            @Html.TextBox("TotalVat", null, new { @class = "form-control", @Value = 0, @type = "input", @placeholder = "Total Vat Charge", onchange = "calculateSum()" })
                                            <small id="error_TotalVAT" class="form-text error_msg">Total VAT can't be empty</small>

                                        </div>
                                    </div>


                                    <div class="col-md-4 col-12">
                                        <div class="mb-2">
                                            <label class="form-label fw-semibold">
                                                Service
                                            </label>

                                            @Html.TextBox("ServiceCharge", null, new { @class = "form-control", @Value = 0, @type = "input", @placeholder = "Service Charge Amount ", onchange = "calculateSum()" })
                                            <small id="error_ServiceCharge" class="form-text error_msg">Service Charge can't be empty</small>
                                        </div>
                                    </div>

                                    <div class="col-md-4 col-12">
                                        <div class="mb-2">
                                            <label class="form-label fw-semibold">
                                                Shipping
                                            </label>
                                            @Html.TextBox("Shipping", null, new { @class = "form-control", @Value = 0, @type = "input", @placeholder = "Total Shipping Charge", onchange = "calculateSum()" })
                                            <small id="error_Shipping" class="form-text error_msg">Total Shipping can't be empty</small>
                                        </div>
                                    </div>

                                    <div class="col-md-6 col-12">
                                        <div class="mb-2">
                                            <label class="form-label fw-semibold">
                                                Discount
                                            </label>
                                            @Html.TextBox("Discount", null, new { @class = "form-control", @Value = 0, @type = "input", @placeholder = "Discount Amount ", onchange = "calculateSum()" })
                                        </div>

                                        <p id="error_Discount" class="form-text error_msg">Discount can't be empty</p>
                                    </div>


                                    <div class="col-md-6 col-12">
                                        <div class="mb-2">
                                            <label class="form-label fw-semibold">
                                                Grand Total
                                            </label>
                                            <input type="text" id="GrandTotal" class="form-control" readonly />
                                            <p id="error_GrandTotal" class="form-text error_msg">Total is empty</p>
                                        </div>

                                    </div>
                                    <div class="col-md-12 col-12">
                                        <div class="mb-2">
                                            <label class="form-label fw-semibold">
                                                Notes
                                            </label>
                                            @Html.TextArea("Notes", new { @class = "form-control", @rows = "2", @placeholder = "Enter Notes" })
                                        </div>
                                    </div>
                                    <div class="row" id="divbuyerpo">

                                        <div class="col-md-6 col-12">
                                            <div class="mb-2">
                                                <label class="form-label fw-semibold">
                                                    Buyer PONo
                                                </label>
                                                @Html.TextArea("BuyerPONo", new { @class = "form-control", @rows = "2", @placeholder = "Enter Buyer PO No" })
                                            </div>
                                        </div>


                                        <div class="col-md-6 col-12">
                                            <div class="mb-2">
                                                <label class="form-label fw-semibold">
                                                    Style No
                                                </label>
                                                @Html.TextArea("StyleNo", new { @class = "form-control", @rows = "2", @placeholder = "Enter Style No" })

                                            </div>
                                        </div>

                                        <div id="divcurrencyid" class="col-md-5 col-6">
                                            <div class="mb-2">
                                                <label class="form-label fw-semibold">
                                                    Currency
                                                </label>
                                                @Html.DropDownList("Currency", ViewBag.Currency as List<SelectListItem>, new { id = "Currency", @class = "form-control " })
                                            </div>
                                        </div>
                                        <div id="divcurrencyrate" class="col-md-4 col-6">
                                            <div class="mb-2">
                                                <label class="form-label fw-semibold">
                                                    Rate
                                                </label>
                                                @Html.TextBox("CurrencyRate", null, new { @class = "form-control", @Value = 0.00, @type = "input", @placeholder = "Curr. Rate", onchange = "calculateSum()" })
                                                <small id="error_Currency" class="form-text error_msg">Currency can't be empty</small>
                                            </div>
                                        </div>

                                        <div id="divcustomerid" class="col-md-7 col-6">
                                            <div class="mb-2">
                                                <label class="form-label fw-semibold">
                                                    Buyer
                                                </label>
                                                <select id="Customer" class="form-control">
                                                </select>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="col-md-6 col-12  my-3">

                                        Previous Purchase
                                        <table id="tblPurList" class="table table-sm tblPurList table-striped table-bordered table-hover text-nowrap borser-start" cellspacing="0" width="100%">
                                            <thead>
                                                <tr>
                                                    <th class="text-center">PO No</th>
                                                    <th class="text-center">PO Date</th>
                                                    <th class="text-center">Supplier</th>
                                                    <th class="text-center">Product</th>
                                                    <th class="text-center">Purchase Qty</th>
                                                    <th class="text-center">Rate</th>
                                                    <th class="text-center">Amount</th>
                                                    <th class="text-center">Sales Unit Price</th>
                                                    <th class="text-center">Profit %</th>


                                                </tr>
                                            </thead>
                                            <tbody id="PurchaseDetails">
                                            </tbody>
                                        </table>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 my-3">
                        <div class="card">
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table id="tblpayments" class="table table-sm tblpayments display table-striped table-bordered table-hover text-nowrap border-start" cellspacing="0" width="100%">
                                        <thead>
                                            <tr>
                                                <th class="d-none text-center">Purchase Payment Id</th>
                                                <th class="d-none text-center">Payment Type Id</th>
                                                <th class="text-center">Payment Type</th>
                                                <th class="d-none text-center">AccountHeadId</th>
                                                <th class="text-center">Accounts Head</th>
                                                <th class="text-center">Amount</th>
                                                <th class="text-center">Card No</th>
                                                <th class="text-center"></th>
                                            </tr>
                                        </thead>
                                        <tbody id="paymentdetails">
                                        </tbody>
                                        <tfoot>
                                            <tr>
                                                <td class="d-none"></td>
                                                <td class="d-none"></td>
                                                <td></td>
                                                <td class="d-none"></td>
                                                <td class="text-center"> <strong> Total:</strong> </td>
                                                <td class="text-center"> <strong id="TotalCollectionAmount">  </strong> </td>
                                                <td></td>
                                                <td></td>
                                            </tr>
                                        </tfoot>
                                    </table>

                                </div>
                                <div class="row my-2">

                                    <div class="col-md-6 col-12">
                                        <div class="mb-2" id="divPurchasePayments">
                                            <label class="form-label fw-semibold">
                                                Paid By
                                            </label>
                                            <select id="AccountHeadRow" class="form-control   " onchange="blankme(this.id)">
                                                @*<option value="">Select Receiving Head</option>*@


                                            </select>

                                        </div>

                                    </div>
                                    <div class="col-md-6 col-12">
                                        <div class="mb-2" id="divPaymentAmount">
                                            <label class="form-label fw-semibold">
                                                Amount
                                            </label>
                                            @Html.TextBox("PaymentAmount", "0", new { @class = "form-control  " })
                                        </div>
                                    </div>
                                    <div class="col-md-8 col-12">
                                        <div class="mb-2" id="divPaymentCardNo">
                                            <label class="form-label fw-semibold">
                                                Card / Bkash / Cheque No
                                            </label>
                                            @Html.TextBox("PaymentCardNo", "0", new { @class = "form-control   " })
                                        </div>
                                    </div>
                                    <div class="col-md-3 col-12 mt-4 pt-1">
                                        <div class="d-grid ">
                                            <button type="button" onclick="AddPayments()" class="btn btn-success">Add</button>
                                            @*<button type="button" onclick="DeleteRow()" class="btn btn-success mb-2 btn-block" id="btnDelete" value="Delete"/>*@
                                        </div>
                                    </div>
                                </div>
                                <div class="row mt-4">

                                    <div class="col-md-6 col-12">


                                        <div class="btn-group">

                                            @if (ViewBag.ActionType == "Create")
                                            {
                                                @*<input id="BtnSave" data-purchase-Id="@Model" class="btn  btn-purple btn-block  " type="submit" value="Save" iscontinue="1" /> *@
                                                <button id="BtnSave" data-purchase-Id="@Model" data-continue="0" class="btn btn-success  BtnSave" type="submit" value="Save" iscontinue="1">
                                                    <i class="fa fa-floppy-o px-2"></i><span>Save & Close</span>

                                                </button>

                                            }
                                            else if (ViewBag.ActionType == "Edit")
                                            {
                                                <button id="BtnSave" data-purchase-Id="@Model" data-continue="0" class="btn btn-warning  BtnSave" type="submit" value="Update purchase">
                                                    <i class="icon-pencil icon-white"></i><span class="mx-2">Update & Close</span>

                                                </button>


                                            }

                                            <button type="button" class="btn btn-primary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                <span class="sr-only">Dropdown</span>
                                            </button>

                                            <div class="dropdown-menu">
                                                <button id="BtnSave" data-purchase-Id="@Model" data-continue="1" class="dropdown-item BtnSave" type="submit" value="Save">
                                                    <i class="icon-pencil icon-white"></i><span class="mx-2">Update & Continue</span>
                                                </button>
                                            </div>
                                        </div>






                                    </div>

                                    <div class="col-md-6 col-12">
                                        @*@Html.ActionLink("Back", "Index", "Purchase", null, new { @class = "btn btn-info btn-block ", @id = "btnBack" })*@

                                        <a class="btn btn-danger" href="@Url.Action("Index","Purchase")"><i class="fa fa-arrow-left"></i><span class="mx-3">Back To List</span> </a>


                                    </div>

                                    @*            <label for="checkbox1"> Save & Continue</label>

                                    <input type="checkbox" name="acceptRules" class="form-control  checkbox" id="checkbox1" value="false" >
                                    *@


                                </div>

                            </div>
                        </div>

                    </div>
                    <div>





                        @*  <div class="row">



                        <div class="col-md-5 col-5 mt-2">
                        <div class="form-check m-3 float-right">
                        <input class="form-check-input" type="checkbox" value="false" id="checkbox1">
                        <label class="form-check-label" for="checkbox1">Save & Continue</label>
                        <input type="hidden" id="checkbox-value" />

                        </div>
                        </div>





                        </div> *@
                    </div>


                </div>


            </div>



        </div>
    </div>



    <!-- panel-body -->
</div>
<!-- panel -->
            </div>






<div class="modal" id="productinfoModal" tabindex="-1" role="dialog" aria-labelledby="productinfoModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="productinfoModalLabel">Add Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="productinfo" class="row">
                    <div class="col-md-12">

                        <div class="from-group row">

                            <div class="col-md-12 mb-2">
                                <label>Name</label>
                                <input type="text" id="Name" class="form-control " />
                            </div>
                            <div class="col-md-6 col-12 ">
                                <label>Category</label>
                                @Html.DropDownList("CategoryId", new SelectList((IEnumerable<SelectListItem>)ViewBag.Category, "Value", "Text"), "Select Category", htmlAttributes: new { @class = "form-control", id = "CategoryId" })
                            </div>

                            <div class="col-md-6 col-12 ">
                                <label>Unit</label>
                                @Html.DropDownList("UnitId", new SelectList((IEnumerable<SelectListItem>)ViewBag.Unit, "Value", "Text"), "Select Unit", htmlAttributes: new { @class = "form-control", id = "UnitId" })
                            </div>
                            <div class="col-md-6 col-12 mb-2">
                                <label>Product Code</label>
                                <input type="text" id="ProductCode" class="form-control " />
                            </div>
                            <div class="col-md-6 col-12 mb-2">
                                <label>Brand</label>
                                <input type="text" id="BrandName" class="form-control " />
                            </div>
                            <div class="col-md-6 col-12 mb-2">
                                <label>Color</label>
                                <input type="text" id="ColorName" class="form-control " />
                            </div>
                            <div class="col-md-6 col-12 mb-2">
                                <label>Size</label>
                                <input type="text" id="SizeName" class="form-control " />
                            </div>

                            <div class="col-md-6 col-12 mb-2">
                                <label>Cost Price</label>
                                <input type="text" id="CostPrice" class="form-control " />
                            </div>
                            <div class="col-md-6 col-12 mb-2">
                                <label>Selling Price</label>
                                <input type="text" id="Price" class="form-control " />
                            </div>
                            <div class="col-md-12 mb-2">
                                <label>Description</label>
                                <input type="text" id="Description" class="form-control " />
                            </div>

                       

                        </div>



                    </div>
                </div>  @*Datatable Initializer tblproductserialsearch*@
            </div>
            <div class="modal-footer">
                @*<div class="col-md-12 mb-2" style="text-align:center">
                <button type="button" onclick="Saveproductinfo()" class="btn btn-success ">Save Product</button>
                </div>*@
                <button type="button" class="btn btn-primary" onclick="Saveproductinfo()">Add New Product</button>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"  id="btnCloseProductModal" ></button>
            </div>
        </div>
    </div>
</div>


<div class="modal" id="checkModal" tabindex="-2" role="dialog" aria-labelledby="checkModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="col-12" style="display:none">

                <div class="row">
                    <div class="col-md-4 col-12">
                    </div>
                    <div class="col-md-4 col-12">

                        <div id="qr-reader" style="width:260px;background-color:lavender"></div>
                        <div id="qr-reader-results"></div>


                    </div>
                </div>
            </div>
            <div class="modal-header">
                @*<h5 class="modal-title text-center" id="checkModalLabel">Batch Serial </h5>*@
                @*<button id="btncloseabc" type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
                </button>*@





                <div class="from-group row">
                    @*<div class="col mb-2">
                    <input type="text" id="myInputSearch" class="form-control " onkeyup="myFunctionSearch()" onmouseover="this.focus();" placeholder="Search for PONO." title="Type in a name">
                    </div>*@
                    <div class="col mb-2">
                        <input type="text" id="slnoPrefix" class="form-control " placeholder="Prefix" title="Prefix">
                    </div>

                </div>
                <div class="from-group row">

                    <div class="col mb-2">
                        <input type="number" id="BatchFromNo" class="form-control " placeholder="From NO." title="From No">
                    </div>

                </div>
                <div class="from-group row">

                    <div class="col mb-2">
                        <input type="number" id="BatchToNo" class="form-control " placeholder="To NO." title="To No">
                    </div>
                </div>


            </div>
            <div id="BatchSerialListModal" class="modal-body">
                <div class="from-group row">
                    <div class="col mb-2">
                        <input type="text" id="scanserial" class="form-control  text-center" placeholder="Scan Serial / Barcode Scaner" title="Scan Serial">
                    </div>
                </div>
                <div class="row">
                    <div class="col order-md-1 mb-2">
                        <form class="card ">
                            @*<div class="table-responsive text-nowrap">

                            <table id="BatchSerialList" class="table display nowrap table-striped table-hover no-footer text-center" cellspacing="0" width="100%">*@


                            <div class="table-responsive">
                                <table class="table table-sm table-hover text-nowrap table-bordered" id="BatchSerialList" style="width:100%">

                                    <thead>
                                        <tr>
                                            <th class="d-none">Batch Id</th>
                                            <th class="d-none">Purchase Items Id</th>
                                            <th class="d-none">Product Id</th>
                                            <th>Product Serial</th>
                                            <th style="min-width:50px;max-width:60px">SL</th>

                                            <th>Quantity</th>
                                            <th>Unit Price</th>
                                            <th>Amount</th>

                                            <th></th>
                                            <th class="">Is Delete</th>
                                            <th class="">Is Used</th>
                                            <th class="">IsTransaction</th>



                                        </tr>
                                    </thead>
                                    <tbody id="itemDetails">
                                    </tbody>
                                    @*<tfoot>
                                    <tr>
                                    <td class="text-right" colspan="1">
                                    <h6>Total Qty :</h6>
                                    </td>
                                    <td> <strong id="TotalQtyBatch">  </strong> </td>
                                    <td></td>
                                    <td></td>

                                    </tr>

                                    </tfoot>*@
                                </table>
                            </div>
                            <br />

                        </form>

                        <div class="row">

                            <div class="col ">
                                <button type="button" onclick="AddSerialDataAuto()" class="btn btn-sm btn-purple mb-2 btn-block ">Auto</button>
                            </div>
                            <div class="col ">
                                <button type="button" onclick="AddSerialData('')" class="btn btn-sm btn-success mb-2 btn-block ">Add</button>
                            </div>
                            <div class="col ">
                                <button type="button" onclick="ShowAllPackingList()" class="btn btn-sm btn-info mb-2 btn-block ">Show All</button>
                            </div>
                            <div class="col ">
                                <button type="button" class="btn btn-sm btn-danger mb-2  btn-simple btn-block" data-bs-dismiss="modal" onclick="myFunction()">Close</button>
                            </div>

                        </div>


                    </div>
                </div>
            </div>
        </div>
    </div>
</div>









@*<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/css/bootstrap-datepicker3.css" rel="stylesheet" />*@
@section scripts {


    @*<script src="~/AdminEla/Assets/js/lib/barcodescaner/html5-qrcode.min.js"></script>*@












    @*<script src="~/js/site.js" asp-append-version="true"></script>*@
    <script type="text/javascript">

        $('#Warehouse,#DocType, #Customer, #AccountHeadRow,#CategoryId,#UnitId').select2({
            theme: 'bootstrap-5'
        });

        function myFunction() {
            $('#Search').focus();
            //alert('hit');
        }


        // alert('Wait');

        var tblPurList = $('#tblPurList').DataTable({
            "aoColumns": [
                { "sClass": "pono", "visible": true },
                { "sClass": "purchasedate", "visible": true },
                { "sClass": "supplier", "visible": true },
                { "sClass": "prdname", "visible": false },
                { "sClass": "purchaseqty", "visible": true },
                { "sClass": "purchaserate", "visible": true },
                { "sClass": "purchaseamount", "visible": true },
                { "sClass": "salesunitprice", "visible": true },
                { "sClass": "profitper", "visible": true }


            ],
            "bLengthChange": false,
            "bFilter": false,
            "bSort": false,
            "bInfo": false,
            "paging": false
        });

        //$('#ParentId').select2({})
        //.on("select2:select", function (e) {

        //    PrevPurchaseListLoad(0);

        //});

        //var ProductId = $("#Id").val();
        ////alert(ProductId);
        //if (ProductId == 0 || ProductId == "")
        //{
        //   PrevPurchaseListLoad(0);
        //}


        function PrevPurchaseListLoad(ProductId) {
            //alert($("#Customer").val());
            tblPurList.rows().remove().draw(false);
            var MyAppUrlSettings = {
                MyUsefulUrl: '@Url.Action("PrevPurchaseList", "Admin")'
            }
            //alert('test');
            $.ajax({
                type: 'POST',
                url: MyAppUrlSettings.MyUsefulUrl,
                dataType: 'json',
                data: { id: ProductId }, //, saleid: $("#Id").val()
                success: function (result) {
                    //console.log(result);
                    //console.log(result.AccountHeadinfo);
                    //console.log(result.AccountHeadList);

                    //{
                    //    $("#AccCode").val(result.AccountHeadinfo.AccCode);
                    //    $("#AccountCategoryId").val(result.AccountHeadinfo.AccountCategoryId);

                    //}


                    $.each(result.PrevPurchaseList, function (i, v) {


                        $('#tblPurList').dataTable().fnAddData([v.PurchaseCode, v.PurchaseDate, v.SupplierName, v.ProductName, v.Quantity, v.UnitPrice, v.Amount, v.SalesUnitPrice, v.ProfitPer.toFixed(DecimalField)]);

                    });



                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
            return false;
        };




        $('#tblpayments').dataTable({
            "aoColumns": [
                { "sClass": "PurchasePaymentSubId", "visible": false },
                { "sClass": "PaymentTypeId", "visible": false },
                { "sClass": "TypeShortName", "visible": false },
                { "sClass": "AccountHeadId", "visible": false },
                { "sClass": "Name", "visible": true },
                { "sClass": "Amount", "visible": true },
                { "sClass": "PaymentCardNo", "visible": true },
                null
            ],
            "dom": 'T<"clear">lfrtip',
            "tableTools": {
                "sRowSelector": "td:not(:first-child)"
            },
            select: {
                style: 'os',
                selector: 'td:first-child'
            },
            //drawCallback: function () {
            //    var sum = $('#example').DataTable().column(2).data().sum();
            //    $('#TotalCollectionAmount').html(sum);
            //},
            //"order": [[1, "asc"]],
            "bLengthChange": false,
            "bFilter": false,
            "bSort": false,
            "bInfo": false,
            "paging": false
        })



        $('#tblpayments tbody').on('click', '.dlttrashpayments', function () {
            var table = $('#tblpayments').DataTable();

            table.row($(this).parents('tr')).remove().draw();
            var x = "1300.00";
            var y = $('#tblpayments').height();
            var z = parseFloat(x) + parseFloat(y);

            $("html, body").animate({ scrollTop: z }, 1300);


            calculateSum();

        });



        ///newly added for payment method
        function AddPayments() {

            $('#tblpayments').dataTable().fnAddData([
                "0",
                null,//$('#PaymentTypes').val(),
                '',//$('#PaymentTypes option:selected').text(),
                $('#AccountHeadRow').val(),
                $('#AccountHeadRow option:selected').text(),
                $('#PaymentAmount').val(),
                $('#PaymentCardNo').val(),
                '<a data-itemId="0" href="#" class="dlttrashpayments deleteItem"> <i class="bi bi-trash"></i></a >']);

            $('#PaymentAmount').val("0");
            $('#PaymentCardNo').val("=N/A=");


            calculateSum();

        }



        (function ($) {
            $.fn.inputFilter = function (inputFilter) {
                return this.on("input keydown keyup mousedown mouseup select contextmenu drop", function () {
                    if (inputFilter(this.value)) {
                        this.oldValue = this.value;
                        this.oldSelectionStart = this.selectionStart;
                        this.oldSelectionEnd = this.selectionEnd;
                    } else if (this.hasOwnProperty("oldValue")) {
                        this.value = this.oldValue;
                        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                    } else {
                        this.value = "";
                    }
                });
            };
        }(jQuery));


        $(document).ready(function () {



            var rowone
            $('#PurchaseItems tbody').on('click , keyup', 'td', function (e) {


                var table = $('#PurchaseItems').DataTable();
                rowone = $(this).parent();


                var data = table.row(rowone).data();
                //alert(data);
                data[12] = 'True';
                $(this).closest('tr').children('td.IsTransaction').text('True');
                //alert('hit');
                calculateSum();
            });





            //$('#PurchaseItems tbody').on('keyup', 'td', function (e) {


            //    var table = $('#PurchaseItems').DataTable();
            //    rowone = $(this).parent();


            //    var data = table.row(rowone).data();
            //    //alert(data);
            //    data[12] = 'True';
            //    $(this).closest('tr').children('td.IsTransaction').text('True');
            //    //alert('hit');
            //    calculateSum();
            //});



            var row;
            var col;
            $('#PurchaseItems tbody').on('click', '.dlttrashsubsection', function (e) {

                var table = $('#PurchaseItems').DataTable();
                row = $(this).parent().parent();
                var data = table.row(row).data();
                data[11] = 'True';

                $(this).parent().parent().hide(); ///fahad for checking.
                toastr.error("Items Row Deleted");



                $(this).closest('tr').children('td.IsDelete').text('True');

                var x = "100.00";
                var y = $('#PurchaseItems').height();
                var z = parseFloat(x) + parseFloat(y);

                table.draw();

                $("html, body").animate({ scrollTop: z }, 500);
                $(".dataTables_scrollBody").scrollTop(9999);

                calculateSum();

            });



            var rowone
            $('#BatchSerialList tbody').on('click', 'td', function (e) {


                var table = $('#BatchSerialList').DataTable();
                rowone = $(this).parent();


                var data = table.row(rowone).data();
                //alert(data);
                data[11] = 'True';
                $(this).closest('tr').children('td.IsTransaction').text('True');

                calculateSum();
            });



            var row;
            var col;
            $('#BatchSerialList tbody').on('click', '.dlttrash', function (e) {

                var targetTablepl = $('#BatchSerialList').DataTable();
                row = $(this).parent().parent();
                var data = targetTablepl.row(row).data();
                data[9] = 'True';

                $(this).parent().parent().hide(); ///fahad for checking.
                toastr.error("Serial Row Deleted")



                $(this).closest('tr').children('td.IsDelete').text('True');

                var x = "100.00";
                var y = $('#BatchSerialList').height();
                var z = parseFloat(x) + parseFloat(y);

                targetTablepl.draw();

                $("html, body").animate({ scrollTop: z }, 500);
                $(".dataTables_scrollBody").scrollTop(9999);









                //var xcount = targetTablepl.rows(':visible').count();
                ////alert(xcount);
                //var table = $('#PurchaseItems').DataTable();
                ////var datacurrentvalue = table.row($('input[type=checkbox]:checked').parents('tr')).data();
                //var rownovouchersub = table.row($('input[type=checkbox]:checked').parents('tr')).index();
                ////alert(rownovouchersub);

                //var cellprice  = $('#PurchaseItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();
                ////console.log(cellprice);
                ////cellprice.data(xcount);

                //var cellqty = table.cell(rownovouchersub, 10);
                //cellqty.data(xcount);
                //var cellamount = table.cell(rownovouchersub, 11);
                //cellamount.data(xcount * cellprice);


                calculateSum();

            });











            $("#ServiceCharge , #Shipping , #TotalVat , #Discount  ").inputFilter(function (value) {
                return /^-?\d*[.,]?\d{0,2}$/.test(value);
            });


            $(".price").inputFilter(function (value) {
                return /^-?\d*[.,]?\d{0,2}$/.test(value);
            });
        });


        var PurchaseItemId;
        var ProductId;
        var ProductUnitPrice = 0.00;

        function AddSerialData(scanstring) {


            //alert(scanstring);

            var check = $('#PurchaseItems').find('input[type=checkbox]:checked').length;
            //alert(check);

            if (check > 0) {
                //alert(check);
                //alert("Checkbox Selected");
            }
            else {
                alert("At least One Row Should Be Selected");
                e.preventDefault();
            }
            // alert(serialno);
            // alert('test');

            var targetTablepl = $("#BatchSerialList").DataTable();

            var rowCountpl = targetTablepl
                .column(0)
                .data()
                .length;


            //$('#BatchSerialList').dataTable().fnAddData([
            //    0,
            //    PurchaseItemId,
            //    newDetailsId,
            //    0,
            //    rowCountpl + 1,
            //    '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="bi bi-trash"></i></a >',
            //    false
            //]);
            var duplicatefound = 0;

            $('#BatchSerialList tbody tr').each(function () {
                //alert('searching');
                //alert(ui.item.ProductId);
                //alert($(this).find('.BatchSerialNo').val());
                //alert(ui.item.label);

                //alert($(this).find('.BatchSerialNo').val());

                //alert($.trim($(this).find('.BatchSerialNo').val()).length);

                if ($.trim($(this).find('.BatchSerialNo').val()).length > 0 && $.trim($(this).find('.BatchSerialNo').val()) == scanstring) {
                    //alert('Duplicate Found !!');
                    toastr.error('Duplicate Found !! ' + scanstring);
                    duplicatefound = 1;


                    return true;
                }

            });

            if (duplicatefound == 0) {
                $('#BatchSerialList').dataTable().fnAddData([
                    0,
                    PurchaseItemId,
                    ProductId,
                    scanstring,
                    rowCountpl + 1,

                    1,
                    ProductUnitPrice,
                    ProductUnitPrice * 1,



                    '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="bi bi-trash"></i></a >',
                    false,
                    false,
                    true
                ]);





                //var xcount = targetTablepl.rows(':visible').count();
                ////alert(xcount);
                //var table = $('#PurchaseItems').DataTable();
                ////var datacurrentvalue = table.row($('input[type=checkbox]:checked').parents('tr')).data();
                //var rownovouchersub = table.row($('input[type=checkbox]:checked').parents('tr')).index();
                ////alert(rownovouchersub);

                //var cellprice = $('#PurchaseItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();
                ////console.log(cellprice);
                ////cellprice.data(xcount);

                //var cellqty = table.cell(rownovouchersub, 7);
                //cellqty.data(xcount);
                //var cellamount = table.cell(rownovouchersub, 8);
                //cellamount.data(xcount * cellprice);
                //alert('wait');
                calculateSum();
            }

        };

        $("#scanserial").keyup(function (e) {
            if (e.keyCode == 13) {
                //alert('Captured Enter !');
                //$('#scanserial').val();

                AddSerialData($('#scanserial').val());
                $('#scanserial').val('');
                // Do whatever you need
            };
        });


        function AddSerialDataAuto() {


            var check = $('#PurchaseItems').find('input[type=checkbox]:checked').length;
            //alert(check);

            if (check > 0) {
                //alert(check);
                //alert("Checkbox Selected");
            }
            else {
                alert("At least One Row Should Be Selected");
                e.preventDefault();
            }
            // alert(serialno);
            // alert('test');

            var targetTablepl = $("#BatchSerialList").DataTable();

            var rowCountpl = targetTablepl
                .column(0)
                .data()
                .length;

            ProductUnitPrice = $('#PurchaseItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();

            //$('#BatchSerialList').dataTable().fnAddData([
            //    0,
            //    PurchaseItemId,
            //    newDetailsId,
            //    0,
            //    rowCountpl + 1,
            //    '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="bi bi-trash"></i></a >',
            //    false
            //]);

            var from = $("#BatchFromNo").val();
            var to = $("#BatchToNo").val();
            var prefix = $("#slnoPrefix").val();


            if (prefix.length > 0 && from.length > 0 && to.length > 0) {
                for (var i = from; i <= to; i++) {
                    $('#BatchSerialList').dataTable().fnAddData([
                        0,
                        PurchaseItemId,
                        ProductId,
                        prefix + i,
                        i,//rowCountpl + 1,
                        1,
                        ProductUnitPrice,
                        ProductUnitPrice * 1,
                        '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="bi bi-trash"></i></a >',
                        false,
                        false,
                        true
                    ]);
                }
            }
            else {
                toastr.error("Please fill up Necessary Info.")
            };


            var xcount = targetTablepl.rows(':visible').count();
            //alert(xcount);
            var table = $('#PurchaseItems').DataTable();
            //var datacurrentvalue = table.row($('input[type=checkbox]:checked').parents('tr')).data();
            var rownovouchersub = table.row($('input[type=checkbox]:checked').parents('tr')).index();
            alert(rownovouchersub);

            var cellprice = $('#PurchaseItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();
            //alert('Cell Price');
            //console.log(cellprice);
            //alert('Cell Price');

            //cellprice.data(xcount);

            var cellqty = table.cell(rownovouchersub, 6);
            cellqty.data(xcount);
            var cellamount = table.cell(rownovouchersub, 8);
            cellamount.data(xcount * cellprice);

            calculateSum();


        }


        $('body').on('expanded.pushMenu collapsed.pushMenu', function () {
            setTimeout(function () {
                $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
            }, 350);
        });


        function ShowAllPackingList() {
            var cbs = document.getElementsByClassName("clickchk");
            for (var i = 0; i < cbs.length; i++) {
                cbs[i].checked = false;
            }

            $('#BatchSerialList tbody tr').each(function () {
                $(this).show();
            });

        }


        var BatchSerialList = $('#BatchSerialList').DataTable({
            "aoColumns": [
                { "sClass": "id d-none", "visible": true },
                { "sClass": "PurchaseItemid d-none", "visible": true },
                { "sClass": "productid d-none", "visible": true },

                {
                    "sClass": "BatchSerialNoRow ",
                    "visible": true
                },

                { "sClass": "SLNo", "visible": true },

                //PurchaseBatchQuantity
                { "sClass": "PurchaseBatchQuantity_row", "visible": true },
                { "sClass": "PurchaseBatchPrice_row", "visible": true },
                { "sClass": "PurchaseBatchAmount text-center", "visible": true },


                { "sClass": "dltrashimage", "visible": true },
                { "sClass": "IsDelete d-none", "visible": true },
                { "sClass": "IsUsed d-none", "visible": true },
                { "sClass": "IsTransaction d-none", "visible": true }



            ],
            columnDefs: [
                {
                    "render": function (data, type, row) {
                        var IsUsed = row[10];
                        if (IsUsed == false) {
                            return '<input class="form-control  BatchSerialNo  text-center" id="BatchSerialNo"  name="BatchSerialNo" type="text"  value = ' + data + '  >';
                        }
                        else {
                            return '<input class="form-control  BatchSerialNo  text-center" id="BatchSerialNo"  name="BatchSerialNo" type="text"  value = ' + data + ' , readonly=readonly  >';
                        }

                    },
                    "targets": 3

                },
                {
                    "render": function (data, type, row) {

                        return '<input class="form-control   purchasebatchquantity " name="purchasebatchquantity" type="number" data-val="true"  value="' + data + '" >';
                    },
                    "targets": 5
                },
                {
                    "render": function (data, type, row) {

                        return '<input class="form-control   purchasebatchprice " name="purchasebatchprice" type="number" data-val="true"  value="' + data + '" >';
                    },
                    "targets": 6
                }
            ],
            rowCallback: function (row) {
                $(row).addClass('RowBatchSerialList');
            },
            scrollY: "240px",
            scrollX: true,
            //"scrollCollapse": true,
            'paging': false,
            'info': false,
            'ordering': false,
            'searching': false,
            language: { search: '', searchPlaceholder: "Search..." }
            //, sorting: false
        });


        autocompleteProductCode();
        function autocompleteProductCode() {
            var MyAppUrlset = {
                MyUsefulUrl: '@Url.Action("ProductCodeReferance", "Values")'
            }



            //Referance//ReferanceTwo//ReferanceThree
            $("#ProductCode").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: MyAppUrlset.MyUsefulUrl,
                        dataType: "json",
                        data: { query: $("#ProductCode").val() },
                        success: function (data) {
                            //console.log(data);

                            response($.map(data, function (item) {
                                return { label: item.Text };
                            }));
                        },
                        error: function (xhr, status, error) {
                            alert("Error");
                        },
                    });
                },
                autoFocus: true,
                minLength: 0,
                select: function (event, uirow) {

                    toastr.error("Product Code Should Be Unique.");
                    $("#ProductCode").val("");
                    //alert('test');
                    return false;
                }
            });
        }

        function Saveproductinfo() {



            if ($("#ProductCode").val().length == 0) {

                toastr.error("Please Fill Up Product Code.");
                return true;
            }
            if ($("#Name").val().length == 0) {

                toastr.error("Please Fill Up Product Name.");
                return true;
            }
            if ($("#CostPrice").val().length == 0) {

                toastr.error("Please Fill Up Product Cost Price.");
                return true;
            }
            if ($("#Price").val().length == 0) {

                toastr.error("Please Fill Up Product Sales Price.");
                return true;
            }


            var Code = $("#ProductCode").val();
            var Name = $("#Name").val();
            var CostPrice = $("#CostPrice").val();
            var Price = $("#Price").val();
            var Description = $("#Description").val();

            var ColorName = $("#ColorName").text();
            var SizeName = $("#SizeName").text();
            var BrandName = $("#BrandName").val();
            var UnitId = $("#UnitId").val();
            var CategoryId = $("#CategoryId").val();



            //if (Code.length == 0)
            //{
            //  toastr.error('Please Input Product Code');
            //  return false;
            //}



            var Product = {
                Code: Code,
                Name: Name,
                CostPrice: CostPrice || 0,
                Price: Price || 0,
                Description: Description,

                ColorName: ColorName,
                SizeName: SizeName,
                BrandName: BrandName,
                UnitId: UnitId,
                CategoryId: CategoryId

            }
            //console.log(Product);
            //alert(`${Code} ${Name} ${CostPrice} ${Price}`);

            $.ajax({




                url: '@Url.Action("SaveProductModal", "Admin")',
                data: JSON.stringify(Product), //use id here
                //data: JSON.stringify(purchasesmain),
                type: 'POST',
                async: true,
                contentType: 'application/json;',
                dataType: 'json',
                success: function (result) {
                    //alert(result);
                    $("#Search").val($("#Name").val());
                    $("#ProductCode").val("");
                    $("#Name").val("");
                    $("#CostPrice").val("");
                    $("#Price").val("");
                    $("#Description").val("");

                    $("#SizeName").val("");
                    $("#BrandName").val("");
                    $("#ColorName").val("");
                    $("#CategoryId").val(null);
                    $("#UnitId").val(0);

                    //productinfo_Info();
                    toastr.success('Product Added Successfully.');
                    $("#btnCloseProductModal").trigger("click");



                    autocompletefunction();
                    $("#Search").focus();
                    var e = jQuery.Event("keydown");
                    e.keyCode = 50;
                    $("#search").trigger(e);

                },
                error: function () {
                    toastr.error('Unable to Save');
                    //alert('Unable to Save');
                }
            });
        }


        $('#supplierinfo').hide();

        function supplierinfohide() {

            if ($('#Supplier option:selected').text().toUpperCase() == "Cash Supplier".toUpperCase() || $('#Supplier option:selected').text().toUpperCase() == "Walk In Supplier".toUpperCase()) {

                $('#supplierinfo').show();


            }
            else {
                $('#supplierinfo').hide();
                $('#SupplierName').val('');
                $('#PhoneNo').val('');
                $('#SupplierAddress').val('');
            }
        }


        $('#Supplier').select2({
            theme: 'bootstrap-5'
        })
            .on("select2:select", function (e) {


                supplierinfohide();

            });

        function blankme(id) {

            var val = document.getElementById(id).value;
            var error_id = "error_" + id;

            if (val == "" || val === 0.00) {

                document.getElementById(error_id).style.display = "block";
            }
            else {
                document.getElementById(error_id).style.display = "none";
            }
        }
        function submitValidation() {



            var supplier = document.getElementById("Supplier").value;
            //var accounthead = document.getElementById("AccountHead").value;

            var code = document.getElementById("Code").value;
            var date = document.getElementById("Date").value;
            //var paymentmethod = document.getElementById("Payment").value;
            //var pStaus = document.getElementById("Status").value;
            var total = parseFloat($("#SubTotal").text());
            var gtotal = parseFloat($("#GrandTotal").val());

            if ($("#CurrencyRate").val() == "") {
                $("#CurrencyRate").val("1");
            }
            var currencyrate = parseFloat($("#CurrencyRate").val());
            debugger
            //currencyrate == ""
            if (supplier == "" || code == "" || date == "" || (total == "" || total == 0.00 || isNaN(total)) || (gtotal == "" || gtotal == 0.00 || isNaN(gtotal))) {

                // alert('error found');
                //if (pStaus == "") {
                //    document.getElementById("error_Status").style.display = "block";
                //}
                //else {
                //    document.getElementById("error_Status").style.display = "none";
                //}

                if (currencyrate = "") {
                    document.getElementById("error_Currency").style.display = "block";
                }
                else {
                    document.getElementById("error_Currency").style.display = "none";
                }

                if (supplier == "") {
                    document.getElementById("error_Supplier").style.display = "block";
                }
                else {
                    document.getElementById("error_Supplier").style.display = "none";
                }


                //if (accounthead == "") {
                //    document.getElementById("error_AccountHead").style.display = "block";
                //}
                //else {
                //    document.getElementById("error_AccountHead").style.display = "none";
                //}


                if (code == "") {
                    document.getElementById("error_Code").style.display = "block";
                }
                else {
                    document.getElementById("error_Code").style.display = "none";
                }
                if (date == "") {
                    document.getElementById("error_Date").style.display = "block";
                }
                else {
                    document.getElementById("error_Date").style.display = "none";
                }
                //if (paymentmethod == "") {
                //    document.getElementById("error_Payment").style.display = "block";
                //}
                //else {
                //    document.getElementById("error_Payment").style.display = "none";
                //}
                if (total == "" || total === 0.00 || isNaN(total)) {
                    document.getElementById("error_SubTotal").style.display = "block";
                }
                else {
                    document.getElementById("error_SubTotal").style.display = "none";
                }
                if (gtotal == "" || gtotal === 0.00 || isNaN(gtotal)) {
                    document.getElementById("error_GrandTotal").style.display = "block";
                }
                else {
                    document.getElementById("error_GrandTotal").style.display = "none";
                }

                return false;
            }
            else {
                return true;
            }


        }



        $(document).ready(function () {
            // console.log("ready!");

            $('#masterPurchase').ready(function () {

                var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
                    "Aug", "Sep", "Oct", "Nov", "Dec"];
                var value = new Date();
                var ret = value.getDate() + "-" + months[value.getMonth()] + "-" + value.getFullYear(); //value.getMonth() + 1 + "/" + value.getDate() + "/" + value.getFullYear();
                $("#Date").val(ret);


                function getPurchase(id) {
                    return $.ajax({
                        type: 'GET',
                        datatype: "Json",
                        url: "../Purchase/GetPurchase",
                        data: "purchaseId=" + id
                    });
                }

                var purchaseId = $("#BtnSave").attr("data-purchase-Id");
                //alert(purchaseId);
                if (purchaseId > 0) {
                    $.when(getPurchase(purchaseId)).then(function (res) {
                        //console.log(res);
                        var detArr = [];
                        $("#Code").val(res.PurchaseCode);

                        var value = new Date(res.PurchaseDate);

                        var ret = value.getDate() + "-" + months[value.getMonth()] + "-" + value.getFullYear(); //value.getMonth() + 1 + "/" + value.getDate() + "/" + value.getFullYear();


                        $("#Date").val(ret);


                        $("#CreateDate").val(res.CreateDate);
                        $("#LuserId").val(res.LuserId);

                        $("#SupplierName").val(res.SupplierName);
                        $("#PhoneNo").val(res.PhoneNo);
                        $("#SupplierAddress").val(res.PrimaryAddress);


                        $("#Notes").val(res.Notes);

                        $("#BuyerPONo").val(res.BuyerPONo);
                        $("#StyleNo").val(res.StyleNo);

                        //$("#Payment").val(res.PaymentMethod);
                        //$("#Status").val(res.Status);
                        $("#isBatchPurchase").val(res.isBatchPurchase);
                        $("#SubTotal").text(res.Total);

                        $("#TotalVat").val(res.TotalVat);
                        $("#ServiceCharge").val(res.ServiceCharge);
                        $("#Shipping").val(res.Shipping);
                        $("#ChequeNo").val(res.ChequeNo);


                        $("#Discount").val(res.Discount);
                        $("#GrandTotal").val(res.GrandTotal);


                        //if ($("#Status").val() == "Paid") {
                        //    //alert($("#Status").val());
                        //    $("#GrandTotal").val(res.GrandTotal);
                        //    //$("#DueAmt").val(0);
                        //    //alert(paidamt);
                        //}
                        //else if ($("#Status").val() == "Advance") {
                        //    $("#PaidAmt").val(res.PaidAmt);
                        //    //$("#DueAmt").val(res.DueAmt);

                        //}
                        //else {
                        //    //$("#DueAmt").val(res.DueAmt);
                        //    //alert('not found');
                        //}
                        //BatchSerialList.clear().draw();


                        $.each(res.Items, function (i, v) {

                            //var rowid = generateRandom();

                            //console.log(v);

                            var deletestringforitems = '<a data-itemId="0" href="#" class="dlttrashsubsection deleteItem"> <i class="bi bi-trash"></i></a >';


                            ///console.log();
                            //console.log(v.PurchaseBatchItems);

                            $.each(v.PurchaseBatchItems, function (ii, vv) {

                                if (vv.IsUsed == true) { deletestringforitems = '<h5 style="color:Red; font-weight:bold">Sold</h5>' };
                                //var rowid = generateRandom();
                                //alert(vv.ProductId);

                                var deletestring = '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="bi bi-trash"></i></a >';
                                if (vv.IsUsed == true) { deletestring = '<h6 style="color:Red; font-weight:bold">Sold</h5>' }

                                $('#BatchSerialList').dataTable().fnAddData([
                                    vv.Id,
                                    vv.PurchaseItemId,
                                    vv.ProductId,
                                    vv.BatchSerialNo,
                                    vv.SLNo,//rowCountpl + 1,

                                    vv.PurchaseBatchQuantity, vv.PurchaseBatchPrice, vv.PurchaseBatchAmount,
                                    //11,222,333

                                    deletestring,
                                    false,
                                    vv.IsUsed,
                                    false
                                ]);

                            });

                            $('#BatchSerialList').dataTable().draw;


                            var brandname = v.Product.Brand ? v.Product.Brand.BrandName : '';
                            $('#PurchaseItems').dataTable().fnAddData([v.Id, v.ProductId, v.WarehouseId, v.Product.Name + ' ' + brandname + ' ' + v.Product.ModelName + ' ' + v.Product.ColorName + ' ' + v.Product.SizeName + ' ' + v.Product.Description + ' ' + v.Product.Code, v.Description, v.vWarehouse.WhShortName, v.Quantity, v.Price, v.Amount,
                                deletestringforitems, null, false, false, v.ProfitPer, v.SalesUnitPrice]);
                            //'<a data-itemId="0" href="#" class="dlttrashsubsection deleteItem"> <i class="bi bi-trash"></i></a>', null, false, false, v.ProfitPer, v.SalesUnitPrice]);



                            //BatchSerialList.draw();


                            var rowid = finalrowid;

                            //$("#N" + rowid).val(v.Name);
                            //$("#D" + rowid).val(v.Description);
                            //$("#P" + rowid).val(v.Price);


                            $("#N" + rowid).autocomplete({
                                source: function (request, response) {
                                    $.ajax({
                                        url: '../admin/ProductSearch/',
                                        dataType: "json",
                                        data: { query: $("#N" + rowid).val() },
                                        success: function (data) {
                                            //console.log(data);
                                            response($.map(data, function (item) {
                                                //return { ProductId: item.Id, Description: item.Description, label: item.Name, Price: item.CostPrice };
                                                return { ProductId: item.Id, Description: item.Description, label: item.Category.Name + ' ' + item.Name + ' ' + item.BrandName + ' ' + item.ModelName + ' ' + item.SizeName + ' ' + item.ColorName + ' ' + item.Description + ' ' + item.Code, Price: item.CostPrice };
                                            }));
                                        },
                                        error: function (xhr, status, error) {
                                            alert("Error");
                                        },
                                    });
                                },
                                minLength: 3,
                                select: function (event, uirow) {
                                    $("#PI" + rowid).html(uirow.item.ProductId);
                                    //$("#WHI" + rowid).html(uirow.item.ProductId);
                                    $("#P" + rowid).val(uirow.item.Price);
                                    $("#D" + rowid).val(uirow.item.Description);
                                    var quantity = $("#Q" + rowid).val();
                                    $("#A" + rowid).html(uirow.item.Price * quantity);

                                    PrevPurchaseListLoad(uirow.item.ProductId);
                                    //var profitper = $("#PP" + rowid).val();
                                    //$("#SUP" + rowid).html(uirow.item.Price * profitper);
                                    //alert('found');

                                    calculateSum();
                                }

                            });


                        });



                        $.each(res.PurchasePayments, function (i, v) {

                            //var rowid = generateRandom();

                            //alert(v.SerialItem)

                            //$('#tblpayments').dataTable().fnAddData([v.Id, v.PaymentTypeId, v.vPaymentType.TypeShortName, v.AccountHeadId, v.vChartofAccounts.AccName, v.Amount, v.PaymentCardNo, '<a data-itemId="0" href="#" class="dlttrashpayments deleteItem"> <i class="bi bi-trash"></i></a >']);

                            $('#tblpayments').dataTable().fnAddData([v.Id, null, "", v.AccountHeadId, v.vChartofAccounts.AccName, v.Amount, v.PaymentCardNo, '<a data-itemId="0" href="#" class="dlttrashpayments deleteItem"> <i class="bi bi-trash"></i></a >']);

                        });


                        $("#Supplier").val(res.SupplierId).change();


                        $("#Warehouse").val(res.WarehouseIdMain).change();
                        $("#DocType").val(res.DocTypeId).change();
                        $("#Currency").val(res.CurrencyId).change();
                        $("#CurrencyRate").val(res.CurrencyRate).change();

                        //$("#AccountHead").val(res.AccountPayTypeId).change();

                        supplierinfohide();

                        calculateSum();
                        $("#Customer").val(res.CustomerId).change();
                        //$("#orderMasterId").val(res.result.MasterId);

                    }).fail(function (err) {
                        console.log(err);
                    });
                }
                else {
                    var idGen = new Generator();
                    $('#Code').val("MR-" + idGen.getId());


                    $('#Discount').val(0);
                    $('#Shipping').val(0);
                    $('#TotalVat').val(0);
                    $('#ServiceCharge').val(0);
                    $('#PaidAmt').val(0);
                    $('#CurrencyRate').val(1);




                }



                if (purchaseId == 0) {


                    $(document).on('click', 'a.deleteItem', function (e) {
                        e.preventDefault();
                        var $self = $(this);
                        $(this).parents('tr').css("background-color", "#1f306f").fadeOut(800, function () {
                            $(this).remove();
                            calculateSum();
                        });
                    });



                }





            });

            $.ajax({
                type: "GET",
                url: "../Purchase/GetSuppliers",
                datatype: "Json",
                success: function (data) {

                    $.each(data, function (index, value) {
                        $('#Supplier').append('<option value="' + value.Id + '">' + value.SupplierName + '</option>');
                    });
                }
            });


            $.ajax({
                type: "GET",
                url: "../Sales/GetCustomersDropdown",
                datatype: "Json",
                success: function (data) {
                    //console.log(data);
                    $.each(data, function (index, value) {
                        var PrimaryAddress = value.PrimaryAddress || "";
                        $('#Customer').append('<option value="' + value.Id + '">' + value.Name + ' - ' + PrimaryAddress + '</option>');
                    });
                }
            });


            $.ajax({
                type: "GET",
                url: "../Sales/GetAccountHead",
                datatype: "Json",
                success: function (data) {
                    //console.log(data);

                    $.each(data, function (index, value) {
                        $('#AccountHead').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                    });



                    $.each(data, function (index, value) {
                        $('#AccountHeadRow').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                    });
                    //$('#AccountHeadRow').append('<option value=null>=N/A=</option>');

                }
            });


        });

        function Generator() { };
        Generator.prototype.rand = Math.floor(Math.random() * 26) + Date.now();
        Generator.prototype.getId = function () {
            return this.rand++;
        };


        $('.mydatepicker').datepicker({
            dateFormat: 'dd-M-yy',
            todayHighlight: true,
            autoclose: true
        });

        //$('.quantity').change(function () {
        //    var row = $(this).closest("tr");
        //    alert('Changed!')

        //});

        //$('#PurchaseItems').on('input',function(e){
        //    alert('Changed!')
        //});


        $('#PurchaseItems').on('change', ".quantity , .price, .profitper", update);

        function update() {

            //alert('hit update');

            var qty = parseFloat($(this).parents('tr').find(".quantity").val());
            var price = parseFloat($(this).parents('tr').find(".price").val());
            var amount = qty * price;
            $(this).parents('tr').find(".amount").text(amount);



            var profitper = parseFloat($(this).parents('tr').find(".profitper").val()) || 0;

            if (profitper > 0) {
                var salesunitprice = parseFloat(price) + parseFloat(profitper * price) / 100;
                $(this).parents('tr').find(".salesunitprice").val(salesunitprice)
                //alert(salesunitprice);
            }
            else {
                $(this).parents('tr').find(".salesunitprice").val(0)
            }
            calculateSum();
        }



        $('#BatchSerialList').on('change', ".purchasebatchquantity , .purchasebatchprice ", updatebatchitems);

        function updatebatchitems() {

            var qty = parseFloat($(this).parents('tr').find(".purchasebatchquantity").val());
            var price = parseFloat($(this).parents('tr').find(".purchasebatchprice").val());
            //alert(qty);
            var amount = qty * price;
            $(this).parents('tr').find(".purchasebatchamount").text(amount);

            calculateSum(this);
        }


        //$('#PurchaseItems').on('change', ".prdname , .description", AddRow);

        //function AddRow() {

        //    var x = PurchaseItems.row(':last-child').data();
        //    console.log(x);
        //    //var qty = parseFloat($(this).parents('tr').find(".quantity").val());
        //    //var price = parseFloat($(this).parents('tr').find(".price").val());
        //    //var amount = qty * price;
        //    //$(this).parents('tr').find(".amount").text(amount);
        //    //calculateSum();
        //}


        // var IsPurchaseOrder = '0';
        //var IsWarehouseVisible = true;
        $("#DocType").change(function () {
            var Doctypetext = $("#DocType option:selected").text();
            if (Doctypetext == "Purchase Order") {
                document.getElementById("PurchaseItems").classList.toggle("hide2")
                $("#Code").attr("readonly", false);
                $("#divwarehouse").addClass("d-none");



                $("#divbuyerpo").removeClass("d-none");
                $("#divcustomerid").removeClass("d-none");
            }
            else {
                $("#PurchaseItems").removeClass("hide2");
                $("#Code").attr("readonly", true);
                $("#divwarehouse").removeClass("d-none");


                $("#divbuyerpo").addClass("d-none");
                $("#divcustomerid").addClass("d-none");

                //IsPurchaseOrder = 0;

            }

            //if (IsPurchaseOrder == '1')
            //{
            //    //alert(Doctypetext);
            ////IsWarehouseVisible = 'Doctypetext' == 'Purchase Order';
            // document.getElementById("PurchaseItems").classList.toggle("hide2")
            //}
            //else
            //{
            //    $("#PurchaseItems").removeClass("hide2");
            // //document.getElementById("PurchaseItems").removeClass("hide2");
            //}
        });


        function generateRandom() {
            const randomNum = 100000 + Math.random() * 100000;
            return Math.round(randomNum / 10) * 10;
        }
        var finalrowid = 'N1234';

        var IsSerialSales = '@HttpContextAccessor.HttpContext.Session.GetInt32("IsSerialSales").ToString()' == '1';
        var batchinfovisible = 'checkbox';
        if (IsSerialSales == false) {
            batchinfovisible = 'checkbox d-none';
        }





        var DecimalField = '@HttpContextAccessor.HttpContext.Session.GetInt32("DecimalField").ToString()';

        var isMultiCurrency = '@HttpContextAccessor.HttpContext.Session.GetInt32("isMultiCurrency").ToString()';
        if (isMultiCurrency == "0") {
            $("#divcurrencyid").hide();
            $("#divcurrencyrate").hide();



        }




        var PurchaseItems = $('#PurchaseItems').DataTable({
            dom: '<"dom_wrapper fh-fixedHeader"fl>tip',
            'aoColumns': [
                { 'sClass': 'id d-none', 'visible': true },
                { 'sClass': 'productid d-none', 'visible': true },
                { 'sClass': 'warehouseid d-none', 'visible': true },

                { 'sClass': 'prdname_row', 'visible': true },
                { 'sClass': 'description_row', 'visible': true },
                { 'sClass': 'warehouse_row text-center', 'visible': true },

                { 'sClass': 'quantity_row', 'visible': true },
                { 'sClass': 'price_row', 'visible': true },

                { 'sClass': 'amount', 'visible': true },
                null,
                {
                    "sClass": batchinfovisible,
                    "visible": true,
                    "render": function () {
                        return '<input type="checkbox" class="clickchk"  onchange ="cbChange(this)"  data-bs-toggle="modal" data-bs-target="#checkModal" >';
                    }
                },
                { "sClass": "IsDelete d-none", "visible": true },
                { "sClass": "IsTransaction d-none", "visible": true },
                { 'sClass': 'profitper_row', 'visible': true },
                { 'sClass': 'salesunitprice_row', 'visible': true }
            ],
            columnDefs: [
                {
                    'render': function (data, type, row) {
                        return '<input class="prdname form-control" name="prdname" type="text" value="' + data + '" >';

                    },
                    'targets': 3
                },
                {
                    "render": function (data, type, row) {

                        return '<input class="form-control description" name="description" type="text" data-val="true"  value="' + data + '" >';
                    },
                    "targets": 4
                },
                {
                    "render": function (data, type, row) {

                        return '<input class="form-control quantity text-center" name="quantity" type="number"   value="' + data + '"  autocomplete = "off"  >';
                    },
                    "targets": 6
                },
                {
                    'render': function (data, type, row) {
                        return '<input class="form-control price text-center" name="price" type="number" data-val="true"  value="' + data + '"  autocomplete = "off" >';
                    },
                    'targets': 7
                },

                {
                    "render": function (data, type, row) {

                        return '<input class="form-control profitper text-center" name="profitper" type="number"   value="' + data + '"  autocomplete = "off"  >';
                    },
                    "targets": 13
                },
                {
                    "render": function (data, type, row) {

                        return '<input class="form-control salesunitprice text-center" name="salesunitprice" type="number"   value="' + data + '"  autocomplete = "off"  >';
                    },
                    "targets": 14
                }

            ],
            "fnCreatedRow": function (nRow, aData, iDataIndex) {
                var rowid = generateRandom();
                //alert(aData);
                $(nRow).attr('id', 'rowid' + rowid);
                //$('td:eq(1)', nRow).attr('id', 'PI' + rowid);
                //$('td:eq(2)', nRow).attr('id', 'WHI' + rowid);
                //$('td:eq(3)', nRow).find("input[name='prdname']").attr('id', 'N' + rowid);
                //$('td:eq(4)', nRow).find("input[name='description']").attr('id', 'D' + rowid);
                $($(nRow).find(".productid"), nRow).attr('id', 'PI' + rowid);
                $($(nRow).find(".warehouseid"), nRow).attr('id', 'WHI' + rowid);
                $($(nRow).find(".prdname"), nRow).attr('id', 'N' + rowid);
                $($(nRow).find(".description_row"), nRow).find("select[name='description']").attr('id', 'D' + rowid);

                $(nRow).find("input[name='warehouse']").attr('id', 'W' + rowid);
                $(nRow).find("input[name='quantity']").attr('id', 'Q' + rowid);
                $(nRow).find("input[name='price']").attr('id', 'P' + rowid);

                //$($(this).find(".quantity_row"), nRow).find("input[name='quantity']").attr('id', 'Q' + rowid);
                $($(nRow).find(".amount"), nRow).attr('id', 'A' + rowid);



                //$('td:eq(5)', nRow).find("input[name='warehouse']").attr('id', 'W' + rowid);
                //                       $('td:eq(6)', nRow).find("input[name='quantity']").attr('id', 'Q' + rowid);
                //$('td:eq(7)', nRow).find("input[name='price']").attr('id', 'P' + rowid);

                //$('td:eq(8)', nRow).attr('id', 'A' + rowid);

                $(nRow).find("input[name='profitper']").attr('id', 'PP' + rowid);
                $(nRow).find("input[name='salesunitprice']").attr('id', 'SUP' + rowid);



                finalrowid = rowid;


            },
            'paging': false,
            'info': false,
            'ordering': false,
            'searching': false,

            language: { search: '', searchPlaceholder: "Search..." }
        });


        autocompletefunction();
        function autocompletefunction() {
            $("#Search").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '../admin/ProductSearch/',
                        dataType: "json",
                        data: { query: $("#Search").val() },
                        success: function (data) {
                            //console.log(data);
                            response($.map(data, function (item) {
                                //return { ProductId: item.Id, Description: item.Description, label: item.Name, Price: item.CostPrice, Code: item.Code };
                                return { ProductId: item.Id, Description: item.Description, label: item.Category.Name + ' ' + item.Name + ' ' + item.BrandName + ' ' + item.ModelName + ' ' + item.ColorName + ' ' + item.SizeName + ' ' + item.Description + ' ' + item.Code, Price: item.CostPrice };
                            }));
                        },
                        error: function (xhr, status, error) {
                            alert("Error");
                        },
                    });
                },
                autoFocus: true,
                minLength: 3,
                select: function (event, ui) {

                    // alert('found');

                    //var rowid = generateRandom();
                    //$('#PurchaseItems').dataTable().fnAddData(['0', ui.item.ProductId, ui.item.label, ui.item.description, ui.item.Price, '1', ui.item.Price, '<a data-itemId="0" href="#" class="dlttrashsubsection deleteItem"> <i class="bi bi-trash"></i></a>']);

                    //rowid = finalrowid;
                    //$("#N" + rowid).autocomplete({
                    //    source: function (request, response) {
                    //        $.ajax({
                    //            url: '../admin/ProductSearch/',
                    //            dataType: "json",
                    //            data: { query: $("#N" + rowid).val() },
                    //            //data: { query: prdnametest },

                    //            success: function (data) {
                    //                console.log(data);
                    //                response($.map(data, function (item) {
                    //                    return { ProductId: item.Id, description: item.Description, label: item.Name, Price: item.CostPrice, Code: item.Code };
                    //                }));
                    //            },
                    //            error: function (xhr, status, error) {
                    //                alert("Error");
                    //            },
                    //        });
                    //    },
                    //    minLength: 3,
                    //    select: function (event, uirow) {


                    //        //alert("#P" + rowid);
                    //        $("#PI" + rowid).html(uirow.item.ProductId);
                    //        $("#D" + rowid).val(uirow.item.Code);

                    //        $("#P" + rowid).val(uirow.item.Price);

                    //        var quantity = $("#Q" + rowid).val();

                    //        $("#A" + rowid).html(uirow.item.Price * quantity);


                    //    }
                    //});


                    var duplicatefound = 0;

                    $('#PurchaseItems tbody tr').each(function () {
                        //alert('searching');
                        //alert(ui.item.ProductId);
                        //alert($(this).find('.BatchSerialNo').val());
                        //alert(ui.item.label);

                        //alert($(this).find('.BatchSerialNo').val());
                        if ($.trim($(this).find('.ProductId').text()) == ui.item.ProductId) {
                            //alert('Duplicate Found !!');
                            toastr.error('Duplicate Found !! ' + ui.item.label);
                            duplicatefound = 1;


                            return true;
                        }

                    });


                    if (duplicatefound == 0) {

                        newrowwithui(ui);

                    }
                    calculateSum();
                    $('#Search').val("");


                    return false;
                }
            });
        }



        autocompletefunctionPhoneNo();
        function autocompletefunctionPhoneNo() {
            $("#PhoneNo").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '../admin/SupplierSearchByPhoneNo/',
                        dataType: "json",
                        data: { query: $("#PhoneNo").val() },
                        success: function (data) {
                            //console.log(data);
                            response($.map(data, function (item) {
                                return { PhoneNo: item.PhoneNo, SupplierName: item.SupplierName, PrimaryAddress: item.PrimaryAddress, label: item.PhoneNo + ' ' + item.SupplierName + ' ' + item.PrimaryAddress };
                            }));
                        },
                        error: function (xhr, status, error) {
                            alert("Error");
                        },
                    });
                },
                autoFocus: true,
                minLength: 3,
                change: function (event, ui) {
                    if (ui.item === null) {
                        //$(this).val('');
                        //$('#PhoneNo').val('');
                        $('#SupplierName').val('');
                        $('#SupplierAddress').val('');
                    }
                },
                select: function (event, ui) {
                    //$('#SearchSupplier').val(ui.item.PhoneNo);

                    $("#PhoneNo").val(ui.item.PhoneNo);
                    $("#SupplierName").val(ui.item.SupplierName);
                    $("#SupplierAddress").val(ui.item.PrimaryAddress);

                    return false;
                }
            });
        }





        var newDetailsId;
        var newOrderNo;
        var newUnitPrice;


        function cbChange(obj) {
            //calculateQtyBatch();

            var cbs = document.getElementsByClassName("clickchk");
            for (var i = 0; i < cbs.length; i++) {
                cbs[i].checked = false;
            }
            obj.checked = true;
            //alert('hit');
            //console.log(obj);


            var table = $('#PurchaseItems').DataTable();
            //var tableserial = $('#tblserial').DataTable();
            var data = null;

            if (obj.checked == true) {
                //alert('working');
                //table = $('#tbl').DataTable();
                //table.draw();

                //debugger;
                data = table.row($('input[type=checkbox]:checked').parents('tr')).data();
                //console.log(data);



                PurchaseItemId = data[0];
                ProductId = data[1];




                ProductUnitPrice = $(obj).closest('tr').find('.price').val();
                console.log(ProductUnitPrice);

                // var testfilterprice = $('#PurchaseItems tbody tr').filter(':has(:checkbox:checked)');




                // ProductUnitPrice  = $('#PurchaseItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();


                //if (typeof(ProductUnitPrice) === "undefined")
                //{
                //     ProductUnitPrice  = 0
                //     //ProductUnitPrice = sum;
                //}


                //console.log('product unit price');

                //console.log(ProductUnitPrice);


                //alert('clicked');
                //console.log(data);

                //alert(data[3]);
                //var termsid = data[0];
                ////////serialno = data[4];

                ////////PurchaseItemId = data[2];
                ////////newDetailsId = data[1];
                ////////newOrderNo = data[4];
                ////////newUnitPrice = data[9];

                //alert(serialno);


                $('#BatchSerialList tbody tr').show();
                //alert('working');
                $('#BatchSerialList tbody tr').each(function () {
                    //$(this).hide();

                    //alert($.trim($(this).find('.IsDelete').text()));


                    if ($.trim($(this).find('.ProductId').text()) == ProductId && $.trim($(this).find('.IsDelete').text()) == 'false') { // if V is selected, hide
                        //  alert('found');
                        $(this).show();
                    }
                    else {
                        $(this).hide();
                    }
                });


                $('#scanserial').focus();
                //var targetTablepl = $("#BatchSerialList").DataTable();

                // var xcount = targetTablepl.rows(':visible').count();
                // //alert(xcount);
                // var table = $('#PurchaseItems').DataTable();
                // //var datacurrentvalue = table.row($('input[type=checkbox]:checked').parents('tr')).data();
                // var rownovouchersub = table.row($('input[type=checkbox]:checked').parents('tr')).index();
                // //alert(rownovouchersub);

                // var cellprice = $('#PurchaseItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();
                // //console.log(cellprice.data());
                // //cellprice.data(xcount);

                // var cellqty = table.cell(rownovouchersub, 7);
                // cellqty.data(xcount);
                // var cellamount = table.cell(rownovouchersub, 8);
                // cellamount.data(xcount * cellprice);









                ////var targetTablepl = $('#BatchSerialList').DataTable();
                ////var xcount = targetTablepl.rows(':visible').count();
                //////alert(xcount);
                ////var table = $('#PurchaseItems').DataTable();
                //////var datacurrentvalue = table.row($('input[type=checkbox]:checked').parents('tr')).data();
                //////console.log(datacurrentvalue);

                //////var datacurrentvalue = $('#PurchaseItems').find('input[type=checkbox]:checked').data();

                //////$.each($("#PurchaseItems tbody tr"), function () {

                //////    alert($(this).find('.price').val())

                //////});

                //////var cellprice  = $('#PurchaseItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();


                //////$('#PurchaseItems tbody tr').filter(':has(:checkbox:checked)').each(function () {
                //////    // this = td element
                //////    alert($(this).find('.price').val())
                //////});

                //////console.log(datacurrentvalue);
                ////var rownovouchersub = table.row($('input[type=checkbox]:checked').parents('tr')).index();

                //////alert(rownovouchersub);

                ////var cellprice  = $('#PurchaseItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();
                //////console.log(cellprice.data());
                //////cellprice.data(xcount);

                ////var cellqty = table.cell(rownovouchersub, 7);
                ////cellqty.data(xcount);
                ////var cellamount = table.cell(rownovouchersub, 8);
                ////cellamount.data(xcount * cellprice);

                calculateSum();


            }
            else {
                // alert('You Un-Checked it');
            }

        }

        function newblankrow() {


            var rowid = generateRandom();
            $('#PurchaseItems').dataTable().fnAddData(['0', 0, "", '', "", 0, '0', 0, '<a data-itemId="0" href="#" class="dlttrashsubsection deleteItem"> <i class="bi bi-trash"></i></a>', null, false, true, '0', '0']);

            rowid = finalrowid;
            $("#N" + rowid).autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '../admin/ProductSearch/',
                        dataType: "json",
                        data: { query: $("#N" + rowid).val() },
                        //data: { query: prdnametest },

                        success: function (data) {
                            //console.log(data);
                            response($.map(data, function (item) {
                                //return { ProductId: item.Id, Description: item.Description, label: item.Name, Price: item.CostPrice, Code: item.Code };
                                return { ProductId: item.Id, Description: item.Description, label: item.Category.Name + ' ' + item.Name + ' ' + item.BrandName + ' ' + item.ModelName + ' ' + item.SizeName + ' ' + item.ColorName + ' ' + item.Description + ' ' + item.Code, Price: item.CostPrice, WarehouseList: item.WarehouseList };
                            }));
                        },
                        error: function (xhr, status, error) {
                            alert("Error");
                        },
                    });
                },
                minLength: 3,
                select: function (event, uirow) {


                    //alert("#P" + rowid);
                    $("#PI" + rowid).html(uirow.item.ProductId);
                    $("#D" + rowid).val(uirow.item.Description);

                    $("#P" + rowid).val(uirow.item.Price);

                    var quantity = $("#Q" + rowid).val();

                    $("#A" + rowid).html(uirow.item.Price * quantity);


                    var myTab = document.getElementById('PurchaseItems');

                    PrevPurchaseListLoad(uirow.item.ProductId);
                    // GET THE CELLS COLLECTION OF THE CURRENT ROW.
                    //var objCells = myTab.rows.item(2).cells;
                    //console.log(objCells[1].attr('id'));
                    //alert($().val());

                    //$('#PurchaseItems').data.reload();


                    //var table123 = $('#PurchaseItems').DataTable();

                    //let lastRow = table123.rows[table123.rows.length - 1];
                    //console.log(lastRow);

                    //var x = table123.row(':last-child').data();
                    //var z = x[1];
                    //console.log(x);

                    //var z = $('#PurchaseItems tbody tr').length;
                    ////alert(z);
                    //var abc = $('#PurchaseItems').dataTable().fnGetData()
                    //console.log(abc);
                    ////var aData = table123.row(z).data()[5];
                    ////alert(aData[z][1]);// will show first column data

                    //if (z > 0) {
                    //    newblankrow();
                    //}
                }
            }).autocomplete("instance")._renderItem = function (ul, item) {

                var trs = '';
                //console.log(item.WarehouseList);
                if (item.WarehouseList.length > 0) {

                    trs = '<p class="text-sm-left font-italic" style="font-size:12px"> Stock : ';
                    $.each($(item.WarehouseList), function (key, value) {
                        // alert('found');
                        trs += '[ ' + item.WarehouseList[key].WhShortName + ' - ' + item.WarehouseList[key].CurrentStock + ' ]   - Cost :' + item.WarehouseList[key].AverageCosting + '  ';
                    })

                    trs += '</p>';
                }

                return $("<li>")
                    .append("<div class=m-0>" + item.label + item.Description + trs + "</div>")
                    .appendTo(ul);
            };


        }

        function newrowwithui(ui) {

            //alert('enter');
            var rowid = generateRandom();
            $('#PurchaseItems').dataTable().fnAddData(['0', ui.item.ProductId, $("#Warehouse").val(), ui.item.label, ui.item.Description, $('#Warehouse option:selected').text(), '1', ui.item.Price, ui.item.Price, '<a data-itemId="0" href="#" class="dlttrashsubsection deleteItem"> <i class="bi bi-trash"></i></a>', null, false, true, '0', '0']);
            PrevPurchaseListLoad(ui.item.ProductId);


            rowid = finalrowid;
            $("#N" + rowid).autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '../admin/ProductSearch/',
                        dataType: "json",
                        data: { query: $("#N" + rowid).val() },
                        //data: { query: prdnametest },

                        success: function (data) {
                            //console.log(data);
                            response($.map(data, function (item) {
                                //return { ProductId: item.Id, Description: item.Description, label: item.Name, Price: item.CostPrice, Code: item.Code };
                                return { ProductId: item.Id, Description: item.Description, label: item.Category.Name + ' ' + item.Name + ' ' + item.BrandName + ' ' + item.ModelName + ' ' + item.SizeName + ' ' + item.ColorName + ' ' + item.Description + ' ' + item.Code, Price: item.CostPrice };
                            }));
                        },
                        error: function (xhr, status, error) {
                            alert("Error");
                        },
                    });
                },
                minLength: 3,
                autoFocus: true,
                select: function (event, uirow) {

                    //alert("#P" + rowid);
                    //alert('abcd');
                    $("#PI" + rowid).html(uirow.item.ProductId);
                    $("#D" + rowid).val(uirow.item.Description);
                    $("#P" + rowid).val(uirow.item.Price);
                    var quantity = $("#Q" + rowid).val();
                    $("#A" + rowid).html(uirow.item.Price * quantity);
                    //newblankrow();

                    //alert(uirow.item.ProductId);

                    PrevPurchaseListLoad(uirow.item.ProductId);
                }
            });




            $("#Q" + rowid).focus()


            $("#Q" + rowid).bind('keypress', function (e) {
                if (e.keyCode == 13) {
                    if ($("#Q" + rowid).val() != '') {
                        $("#P" + rowid).focus();
                        //$("#Search").focus();

                    }
                    // Enter pressed... do anything here...
                }
            });

            $("#P" + rowid).bind('keypress', function (e) {
                if (e.keyCode == 13) {
                    if ($("#P" + rowid).val() != '') {
                        $("#Search").focus();

                    }
                    // Enter pressed... do anything here...
                }
            });



            $("#Q" + rowid).val('1');
            $("#P" + rowid).select();
            $("#Q" + rowid).select();



            //return false;
        }





        function calculateSum() {
            var sum = 0;
            var sumQty = 0;
            var batchsumQty = 0;
            var batchcount = 0;
            //var batchQuantity = 0;



            $.each($("#BatchSerialList tbody tr :visible"), function () {

                var batchQuantity = parseInt($(this).find('.purchasebatchquantity').val());
                if (!isNaN(batchQuantity) && batchQuantity.length !== 0) {
                    batchsumQty += parseFloat(batchQuantity);
                    batchcount++;
                }


            });


            ////for finding mobile serial or do wise purchase

            if (batchcount > 0 && batchsumQty > 0) {
                if (batchcount == batchsumQty) {
                    var targetTablepl = $('#BatchSerialList').DataTable();



                    var xcount = targetTablepl.rows(':visible').count();
                    //alert(xcount);
                    var table = $('#PurchaseItems').DataTable();
                    var ItemsCount = table.rows(':visible').count();
                    //var datacurrentvalue = table.row($('input[type=checkbox]:checked').parents('tr')).data();
                    var rownovouchersub = table.row($('input[type=checkbox]:checked').parents('tr')).index();
                    //alert(rownovouchersub);

                    //var cellprice = $('#PurchaseItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();
                    //var cellprice = $('#PurchaseItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();



                    //cellprice = $(obj).closest('tr').find('.price').val();

                    var cellprice = $('#PurchaseItems tbody tr').find('.price').val();
                    if (ItemsCount > 1) {
                        cellprice = $('#PurchaseItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();
                    }


                    //console.log(cellprice);
                    //console.log(xcount);

                    //cellprice.data(xcount);

                    //alert('testing by fahad');

                    var cellqty = table.cell(rownovouchersub, 6);
                    cellqty.data(xcount);
                    var cellamount = table.cell(rownovouchersub, 8);
                    cellamount.data(xcount * cellprice);
                }
                else {

                    var targetTablepl = $('#BatchSerialList').DataTable();

                    //var xcount = targetTablepl.rows(':visible').count();
                    //alert(xcount);
                    var table = $('#PurchaseItems').DataTable();
                    //var datacurrentvalue = table.row($('input[type=checkbox]:checked').parents('tr')).data();
                    var rownovouchersub = table.row($('input[type=checkbox]:checked').parents('tr')).index();
                    //alert(rownovouchersub);

                    var cellprice = $('#PurchaseItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();
                    //console.log(cellprice);
                    //cellprice.data(xcount);

                    var cellqty = table.cell(rownovouchersub, 6);
                    cellqty.data(batchsumQty);
                    var cellamount = table.cell(rownovouchersub, 8);
                    cellamount.data(batchsumQty * cellprice);

                }
            }

            // iterate through each td based on class and add the values

            //$("tr.PurchaseItems:visible").each(function () {
            $("#PurchaseItems > tbody  > tr .amount:visible").each(function () {

                //var value = parseInt($(this).find('.amount').val());// $('.amount', this).text().replace(/[\$,]/g, '');//$(this).text();
                var value = $(this).text();

                //alert(value)
                // add only if the value is number
                if (!isNaN(value) && value.length !== 0) {
                    sum += parseFloat(value);
                }
            });

            if (sum == 0.0) {
                $('#Discount').text("0");
                $('#GrandTotal').text("0");
                $('#TotalVat').text("0");
                $('#ServiceCharge').text("0");
                $('#Shipping').text("0");


            }



            //$.each($("#BatchSerialList tbody tr"), function () {

            //    var batchQuantity = parseInt($(this).find('.purchasebatchquantity').val());
            //    if (!isNaN(batchQuantity) && batchQuantity.length !== 0) {
            //        batchsumQty += parseFloat(batchQuantity);
            //    }
            //});




            $.each($("#PurchaseItems tbody tr:visible"), function () {

                var Quantity = parseFloat($(this).find('.quantity').val());
                if (!isNaN(Quantity) && Quantity.length !== 0) {
                    sumQty += parseFloat(Quantity);
                }
            });


            //console.log(sum);
            $('#SubTotal').text(sum.toFixed(DecimalField));
            //$('#GrandTotal').val(sum.toFixed(DecimalField));

            $('#TotalQty').text(sumQty.toFixed(DecimalField));

            var discount = parseFloat($('#Discount').val()).toFixed(DecimalField);
            if (isNaN(discount)) return;
            var subtotal = parseFloat(sum).toFixed(DecimalField);

            var TotalVat = parseFloat($('#TotalVat').val()).toFixed(DecimalField);
            var ServiceCharge = parseFloat($('#ServiceCharge').val()).toFixed(DecimalField);
            var Shipping = 0;//parseFloat($('#Shipping').val()).toFixed(DecimalField);

            //console.log(TotalVat);
            //console.log(ServiceCharge);
            //console.log(Shipping);
            //console.log(subtotal);
            //console.log(Shipping);


            var grandtotal = parseFloat(parseFloat(TotalVat) + parseFloat(ServiceCharge) + parseFloat(Shipping) + parseFloat(subtotal) - parseFloat(discount)).toFixed(DecimalField);
            $('#GrandTotal').val(grandtotal);
            //console.log(grandtotal);


            var sumpayment = 0.00;
            $("#tblpayments > tbody  > tr .Amount").each(function () {

                var value = $(this).text();
                // add only if the value is number
                if (!isNaN(value) && value.length !== 0) {
                    sumpayment += parseFloat(value);
                }
            });


            $('#TotalCollectionAmount').text(sumpayment.toFixed(DecimalField));
            $('#PaymentAmount').val(grandtotal - sumpayment);

        };

        //function DiscountAmount() {
        //    //blankme("Discount");
        //    //blankme("GrandTotal");
        //    var b = parseFloat($('#Discount').val()).toFixed(DecimalField);
        //    if (isNaN(b)) return;
        //    var a = parseFloat($('#SubTotal').text()).toFixed(DecimalField);
        //    var c = parseFloat(a - b).toFixed(DecimalField);
        //    $('#GrandTotal').val(c);
        //}

        function saveOrder(data) {
            //alert('Fahad found purchases');
            //console.log(data);
            return $.ajax({
                contentType: 'application/json; charset=utf-8',
                //contentType: "application/json",
                dataType: 'json',
                type: 'POST',
                url: "../Purchase/AddPurchase",
                data: data
            });
        }

        $(".BtnSave").click(function (e) {



            //alert(parseInt($(this).attr("data-continue")));
            var iscontinue = $(this).attr("data-continue");


            //e.preventDefault();


            //alert(iscontinue);


            ////$(this).attr('disabled','disabled');


            //$(this).removeAttr('disabled');

            //$('input[type="submit"]').attr('disabled','disabled');
            //$('input[type="text"]').change(function(){
            //    if($(this).val != ''){
            //        $('input[type="submit"]').removeAttr('disabled');
            //    }
            //});


            if (submitValidation()) {

                var discount;
                if (parseFloat($('#Discount').val()).toFixed(DecimalField) == "NaN") {
                    discount = 0;
                }
                else {
                    discount = $('#Discount').val();
                }

                var UserId = '@HttpContextAccessor.HttpContext.Session.GetInt32("UserId").ToString()';
                var ComId = '@HttpContextAccessor.HttpContext.Session.GetInt32("ComId").ToString()';

                var orderArr = [];
                orderArr.length = 0;
                //alert('save start');
                $.each($("#PurchaseItems tbody tr"), function () {

                    //alert($(this).find('td:eq(3)').html());
                    //alert($(this).find('td:eq(3)').text());
                    var firstpurchaseitemid = $(this).find(".id").html();
                    var firstproductid = parseInt($(this).find(".productid").html());


                    var orderbatchArr = [];
                    orderbatchArr.length = 0;

                    $.each($("#BatchSerialList tbody tr"), function () {
                        if ($.trim($(this).find('.BatchSerialNo').val()).length > 0) {
                            //alert($(this).find('td:eq(2)').html());
                            var secoundproductid = parseInt($(this).find(".productid").html());
                            //alert($(this).find(".id").html());
                            //var IsDeletebatch = $(this).find('td:eq(6)').html();
                            //alert(IsDeletebatch);

                            if (firstproductid == secoundproductid) { // && IsDeletebatch == 'false'
                                //alert($(this).find(".id").html());
                                // alert($(this).find('td:eq(6)').html());


                                if ($(this).find(".id").html() == 0 && $(this).find(".IsDelete").html() == 'false') { //fahad
                                    //alert('pruchaseid = 0');
                                    orderbatchArr.push({
                                        Id: $(this).find(".id").html(),
                                        PurchaseItemId: firstpurchaseitemid,//parseFloat($(this).find(".productid").html()),
                                        ProductId: parseInt($(this).find(".productid").html()),
                                        BatchSerialNo: $(this).find('.BatchSerialNo').val(),

                                        PurchaseBatchQuantity: $(this).find('.purchasebatchquantity').val(),
                                        PurchaseBatchPrice: $(this).find('.purchasebatchprice').val(),
                                        PurchaseBatchAmount: $(this).find('.PurchaseBatchAmount').html(),//PurchaseBatchAmount

                                        //SLNo: $(this).find('.SLNo').val()
                                        SLNo: $(this).find('.SLNo').html(), //$('#Warehouse option:selected').text()
                                        IsDelete: $(this).find(".IsDelete").html(),
                                        IsUsed: $(this).find(".IsUsed").html(),
                                        IsTransaction: $(this).find(".IsTransaction").html(),
                                        ComId: ComId
                                    });
                                }
                                else if ($(this).find(".id").html() > 0) {
                                    //alert('pruchaseid > 0');
                                    // alert($(this).find(".id").html());
                                    orderbatchArr.push({
                                        Id: $(this).find(".id").html(),
                                        PurchaseItemId: firstpurchaseitemid,//parseFloat($(this).find(".productid").html()),
                                        ProductId: parseInt($(this).find(".productid").html()),
                                        BatchSerialNo: $(this).find('.BatchSerialNo').val(),

                                        PurchaseBatchQuantity: $(this).find('.purchasebatchquantity').val(),
                                        PurchaseBatchPrice: $(this).find('.purchasebatchprice').val(),
                                        PurchaseBatchAmount: $(this).find(".PurchaseBatchAmount").html(),


                                        //SLNo: $(this).find('.SLNo').val()
                                        SLNo: $(this).find('.SLNo').html(), //$('#Warehouse option:selected').text()
                                        IsDelete: $(this).find(".IsDelete").html(),
                                        IsUsed: $(this).find(".IsUsed").html(),
                                        IsTransaction: $(this).find(".IsTransaction").html(),
                                        ComId: ComId
                                    });


                                }
                                //else {
                                //    alert('pruchaseid =  else');
                                //}
                            }
                        }
                    });


                    //console.log(orderbatchArr);
                    //alert('wait');

                    orderArr.push({

                        Id: $(this).find(".id").html(),
                        ProductId: parseInt($(this).find(".productid").html()),
                        PurchaseId: parseInt($("#BtnSave").attr("data-purchase-Id")),
                        WarehouseId: parseInt($(this).find(".warehouseid").html()), //$('#Warehouse option:selected').text()
                        //Name: $(this).find('td:eq(2)').html(),
                        Name: $(this).find('.prdname').val(),
                        Description: $(this).find('.description').val(),
                        Price: $(this).find('.price').val(),

                        //Price: parseFloat($(this).find('td:eq(4)').html()),
                        Quantity: parseFloat($(this).find('.quantity').val()),
                        Amount: parseFloat($(this).find('.amount').html()),
                        PurchaseBatchItems: orderbatchArr,
                        IsDelete: $(this).find(".IsDelete").html(),
                        IsTransaction: $(this).find(".IsTransaction").html(),
                        ComId: ComId,
                        ProfitPer: parseFloat($(this).find('.profitper').val()),
                        SalesUnitPrice: parseFloat($(this).find('.salesunitprice').val())

                    });
                });


                //console.log(orderArr);

                //alert('wait 2');


                //alert($("#BtnSave").attr("data-purchase-Id"));

                //alert($("#AccountHead").val());


                var paidamt = 0;
                //var dueamt = parseFloat($('#GrandTotal').val()).toFixed(DecimalField);
                //if ($("#Status").val() == "Paid") {
                //    //alert($("#Status").val());
                //    paidamt = parseFloat($('#GrandTotal').val()).toFixed(DecimalField);
                //    dueamt = 0;
                //    //alert(paidamt);
                //}
                //else if ($("#Status").val() == "Advance") {
                //    paidamt = parseFloat($('#PaidAmt').val()).toFixed(DecimalField);
                //    dueamt = parseFloat($('#GrandTotal').val()).toFixed(DecimalField) - parseFloat($('#PaidAmt').val()).toFixed(DecimalField);
                //}
                //else {
                //    dueamt = parseFloat($('#GrandTotal').val()).toFixed(DecimalField);
                //    //alert('not found');
                //}


                //($("#Status").val() == "Paid") { parseFloat($('#GrandTotal').val()).toFixed(DecimalField);} else { 0;};

                var PurchasePaymentSub = { "Id": "", "PurchaseId": "", "PaymentTypeId": "", "AccountHeadId": "", "Amount": "", "PaymentCardNo": "", "ComId": "", "LuserId": "", "RowNo": "", };
                var paymentArr = [];
                paymentArr.length = 0;
                var i = 0
                var oTablePayment = $('#tblpayments').dataTable().fnGetData();
                for (var i = 0; i < oTablePayment.length; i++) {

                    PurchasePaymentSub.Id = 0;//oTablePayment[i][0] || 0;
                    PurchasePaymentSub.PaymentTypeId = oTablePayment[i][1];
                    PurchasePaymentSub.PurchaseId = parseInt($("#BtnSave").attr("data-purchase-Id"));

                    PurchasePaymentSub.AccountHeadId = oTablePayment[i][3];
                    //alert(AccountHeadId);
                    PurchasePaymentSub.Amount = oTablePayment[i][5];
                    PurchasePaymentSub.ComId = ComId;
                    PurchasePaymentSub.LuserId = UserId;
                    PurchasePaymentSub.RowNo = i;


                    PurchasePaymentSub.PaymentCardNo = oTablePayment[i][6];
                    //console.log(PurchasePaymentSub);

                    paymentArr.push(PurchasePaymentSub);
                    PurchasePaymentSub = { "Id": "0", "PurchaseId": "", "PaymentTypeId": "", "AccountHeadId": "", "Amount": "", "PaymentCardNo": "", "ComId": "", "LuserId": "", "RowNo": "" };

                }





                var data = JSON.stringify({
                    Id: parseInt($("#BtnSave").attr("data-purchase-Id")),

                    CreateDate: $("#CreateDate").val() || "1-1-2000",
                    LuserId: $("#LuserId").val() || 0,

                    SupplierId: $("#Supplier").val(),
                    CustomerId: $("#Customer").val(),

                    WarehouseIdMain: $("#Warehouse").val(),
                    DocTypeId: $("#DocType").val(),

                    CurrencyId: $("#Currency").val(),
                    CurrencyRate: $("#CurrencyRate").val(),
                    //AccountPayTypeId: $("#AccountHead").val(),

                    SupplierName: $("#SupplierName").val(),
                    PhoneNo: $("#PhoneNo").val(),
                    PrimaryAddress: $("#SupplierAddress").val(),

                    PurchaseCode: $("#Code").val(),
                    PurchaseDate: $("#Date").val(),
                    PaymentMethod: $("#Payment").val(),
                    Total: parseFloat($("#SubTotal").text()),
                    Notes: $("#Notes").val(),

                    BuyerPONo: $("#BuyerPONo").val(),
                    StyleNo: $("#StyleNo").val(),

                    Status: $("#Status").val(),
                    isBatchPurchase: 'True',
                    Discount: discount,

                    TotalVat: $("#TotalVat").val(),
                    ServiceCharge: $("#ServiceCharge").val(),
                    Shipping: $("#Shipping").val(),
                    ChequeNo: $("#ChequeNo").val(),
                    //ChequeDate: $("#ChequeDate").val(),


                    GrandTotal: parseFloat($('#GrandTotal').val()).toFixed(DecimalField),
                    NetAmount: parseFloat($('#GrandTotal').val()).toFixed(DecimalField),
                    PaidAmt: paidamt,
                    DisAmt: discount,
                    //DueAmt: dueamt,

                    Items: orderArr,
                    PurchasePayments: paymentArr

                });

                //alert(parseInt($("#BtnSave").attr("iscontinue")));
                //console.log(data);
                //alert('Wait plz stop');
                $.when(saveOrder(data)).then(function (response) {
                    console.log(response);



                    if (response.Success == "1") {
                        toastr.success(response.message);

                    }
                    else if (response.Success == "2") {
                        toastr.warning(response.message);
                    }


                    var InvoiceBillsidprint = response.Id;
                    //alert(result.Id)
                    var urllink = '@Url.Action("PurchaseReport", "Purchase", new { PurchaseId = "xxxx" })'.replace("xxxx", InvoiceBillsidprint);

                    //alert('wait for print');
                    if (iscontinue == 0) {
                        window.open(urllink, '_blank');
                    }


                    //alert(parseInt($("#BtnSave").attr("data-purchase-Id")));
                    //alert(parseInt($(this).attr("data-continue")));


                    //parseInt($("#BtnSave").attr("data-purchase-Id"));

                    // var iscontinue =  $('#checkbox-value').val();

                    //alert(iscontinue);

                    if (iscontinue == '1') {
                        var myUrledit = '@Url.Action("EditPurchase", "Purchase")?PurchaseId=' + response.Id;
                        location.href = myUrledit;
                    }
                    else {
                        location.href = "../Purchase/index";

                    }
                    //alert('wait');
                }).fail(function (err) {

                });
            }
        });


        //$('#checkbox-value').text($('#checkbox1').val());

        //$("#checkbox1").on('change', function() {
        //  if ($(this).is(':checked')) {
        //    $(this).attr('value', 'true');
        //  } else {
        //    $(this).attr('value', 'false');
        //  }

        //  $('#checkbox-value').val($('#checkbox1').val());
        //});

        //$('#BtnUpdate').click(function (e) {
        //    e.preventDefault();

        //    if (submitValidation()) {

        //        var discount;
        //        if (parseFloat($('#Discount').val()).toFixed(DecimalField) == "NaN") {
        //            discount = 0;
        //        }
        //        else {
        //            discount = $('#Discount').val();
        //        }


        //        var orderArr = [];
        //        orderArr.length = 0;

        //        $.each($("#PurchaseItems tbody tr"), function () {
        //            orderArr.push({

        //                Id: 0,//$(this).find(".id").html(),
        //                ProductId: parseFloat($(this).find(".productid").html()),
        //                WarehouseId: parseInt($(this).find(".warehouseid").html()),

        //                //Name: $(this).find('td:eq(2)').html(),
        //                Name: $(this).find('.name').val(),
        //                //WarehouseName: $(this).find('.warehouse_row').val(),

        //                Description: $(this).find('.description').val(),
        //                Price: $(this).find('.price').val(),

        //                //Price: parseFloat($(this).find('td:eq(4)').html()),
        //                Quantity: parseInt($(this).find('.quantity').val()),
        //                Amount: parseFloat($(this).find('.amount').html()),

        //                IsUsed: $(this).find('td:eq(7)').html(),
        //                IsTransaction: $(this).find('td:eq(8)').html()

        //                //Id: $(this).find(".id").html(),
        //                //ProductId: parseFloat($(this).find(".productid").html()),

        //                //Name: $(this).find('td:eq(2)').html(),
        //                ////Description: $(this).find('td:eq(3)').html(),
        //                //Description: $(this).find('.description').val(),

        //                //Price: parseFloat($(this).find('td:eq(4)').html()),
        //                //Quantity: parseInt($(this).find('.quantity').val()),
        //                //Amount: parseFloat($(this).find('td:eq(6)').html())
        //            });
        //        });


        //        var paidamt = 0;
        //        var dueamt = parseFloat($('#GrandTotal').val()).toFixed(DecimalField);
        //        if ($("#Status").val() == "Paid") {
        //            paidamt = parseFloat($('#GrandTotal').val()).toFixed(DecimalField);
        //            dueamt = 0;
        //            //alert(paidamt);
        //        }

        //        var data = {

        //            Id: parseInt($("#BtnSave").attr("data-purchase-Id")),
        //            //Id: parseInt($("#BtnUpdate").attr("data-purchase-Id")),
        //            SupplierId: parseInt($("#Supplier").val()),
        //            AccountPayTypeId: $("#AccountHead").val(),

        //            PurchaseCode: $("#Code").val(),
        //            PurchaseDate: $("#Date").val(),
        //            PaymentMethod: $("#Payment").val(),
        //            Total: parseFloat($("#SubTotal").text()),
        //            Notes: $("#Notes").val(),
        //            Status: $("#Status").val(),


        //            TotalVat: $("#TotalVat").val(),
        //            ServiceCharge: $("#ServiceCharge").val(),
        //            Shipping: $("#Shipping").val(),


        //            Discount: discount,//parseFloat($('#Discount').val()).toFixed(DecimalField),
        //            GrandTotal: parseFloat($('#GrandTotal').val()).toFixed(DecimalField),
        //            NetAmount: parseFloat($('#GrandTotal').val()).toFixed(DecimalField),
        //            PaidAmt: paidamt,
        //            DisAmt: discount,
        //            DueAmt: dueamt,



        //            Items: orderArr
        //        };

        //        //console.log(data);
        //        //$.when(updateOrder(data)).then(function (response) {
        //        $.when(saveOrder(data)).then(function (response) {
        //            console.log(response);
        //            location.href = "../Purchase/index";
        //        }).fail(function (err) {
        //            console.log(err);
        //        });
        //    }

        //});
    </script>



    <script type="text/javascript">
        function docReady(fn) {
            // see if DOM is already available
            if (document.readyState === "complete"
                || document.readyState === "interactive") {
                // call on next available tick
                setTimeout(fn, 1);
            } else {
                document.addEventListener("DOMContentLoaded", fn);
            }
        }

        //docReady(function () {
        //    var resultContainer = document.getElementById('qr-reader-results');
        //    var lastResult, countResults = 0;
        //    function onScanSuccess(decodedText, decodedResult) {
        //        if (decodedText !== lastResult) {
        //            ++countResults;
        //            lastResult = decodedText;
        //            // Handle on success condition with the decoded message.
        //            beep();
        //            //alert(decodedText);
        //            AddSerialData(decodedText);

        //            //var duplicatefound = 0;

        //            ////$('#BatchSerialList').find('input').each(function () {
        //            ////    // check if there is another one with the same value
        //            ////    if ($('#BatchSerialList').find('input[value="' + $(this).val() + '"]').size() > 1) {
        //            ////        // highlight this

        //            ////    } else {
        //            ////        // otherwise remove

        //            ////    }
        //            ////});



        //            //$('#BatchSerialList').find('input').each(function () {

        //            //    alert($(this).find('.BatchSerialNo').val());


        //            //    if ($(this).find('.BatchSerialNo').val() == decodedText) {
        //            //        //alert('Duplicate Found !!');
        //            //        toastr.error('Duplicate Found !! ' + decodedText);
        //            //        duplicatefound = 1;
        //            //        //alert('found');
        //            //        return true;
        //            //    }

        //            //});
        //            ////alert(duplicatefound);


        //            //if (duplicatefound = 0) {
        //            //    AddSerialData(decodedText);


        //            //    //console.log(`Scan result ${decodedText}`, decodedResult);
        //            //    //alert(decodedText);

        //            //    //$("#slnoPrefix").val(decodedText);
        //            //    //$("#slnoPrefix").focus();
        //            //    //autocompletefunctionBarcodeScan();
        //            //}
        //        }
        //    }

        //    var html5QrcodeScanner = new Html5QrcodeScanner(
        //        "qr-reader", { fps: 6, qrbox: 250 });
        //    html5QrcodeScanner.render(onScanSuccess);
        //});





        //button.addEventListener("click", function () {
        //    beep();
        //});

        function beep() {
            (new Audio("data:audio/wav;base64,//uQRAAAAWMSLwUIYAAsYkXgoQwAEaYLWfkWgAI0wWs/ItAAAGDgYtAgAyN+QWaAAihwMWm4G8QQRDiMcCBcH3Cc+CDv/7xA4Tvh9Rz/y8QADBwMWgQAZG/ILNAARQ4GLTcDeIIIhxGOBAuD7hOfBB3/94gcJ3w+o5/5eIAIAAAVwWgQAVQ2ORaIQwEMAJiDg95G4nQL7mQVWI6GwRcfsZAcsKkJvxgxEjzFUgfHoSQ9Qq7KNwqHwuB13MA4a1q/DmBrHgPcmjiGoh//EwC5nGPEmS4RcfkVKOhJf+WOgoxJclFz3kgn//dBA+ya1GhurNn8zb//9NNutNuhz31f////9vt///z+IdAEAAAK4LQIAKobHItEIYCGAExBwe8jcToF9zIKrEdDYIuP2MgOWFSE34wYiR5iqQPj0JIeoVdlG4VD4XA67mAcNa1fhzA1jwHuTRxDUQ//iYBczjHiTJcIuPyKlHQkv/LHQUYkuSi57yQT//uggfZNajQ3Vmz+ Zt//+mm3Wm3Q576v////+32///5/EOgAAADVghQAAAAA//uQZAUAB1WI0PZugAAAAAoQwAAAEk3nRd2qAAAAACiDgAAAAAAABCqEEQRLCgwpBGMlJkIz8jKhGvj4k6jzRnqasNKIeoh5gI7BJaC1A1AoNBjJgbyApVS4IDlZgDU5WUAxEKDNmmALHzZp0Fkz1FMTmGFl1FMEyodIavcCAUHDWrKAIA4aa2oCgILEBupZgHvAhEBcZ6joQBxS76AgccrFlczBvKLC0QI2cBoCFvfTDAo7eoOQInqDPBtvrDEZBNYN5xwNwxQRfw8ZQ5wQVLvO8OYU+mHvFLlDh05Mdg7BT6YrRPpCBznMB2r//xKJjyyOh+cImr2/4doscwD6neZjuZR4AgAABYAAAABy1xcdQtxYBYYZdifkUDgzzXaXn98Z0oi9ILU5mBjFANmRwlVJ3/6jYDAmxaiDG3/6xjQQCCKkRb/6kg/wW+kSJ5//rLobkLSiKmqP/0ikJuDaSaSf/6JiLYLEYnW/+kXg1WRVJL/9EmQ1YZIsv/6Qzwy5qk7/+tEU0nkls3/zIUMPKNX/6yZLf+kFgAfgGyLFAUwY//uQZAUABcd5UiNPVXAAAApAAAAAE0VZQKw9ISAAACgAAAAAVQIygIElVrFkBS+Jhi+EAuu+lKAkYUEIsmEAEoMeDmCETMvfSHTGkF5RWH7kz/ESHWPAq/kcCRhqBtMdokPdM7vil7RG98A2sc7zO6ZvTdM7pmOUAZTnJW+NXxqmd41dqJ6mLTXxrPpnV8avaIf5SvL7pndPvPpndJR9Kuu8fePvuiuhorgWjp7Mf/PRjxcFCPDkW31srioCExivv9lcwKEaHsf/7ow2Fl1T/9RkXgEhYElAoCLFtMArxwivDJJ+bR1HTKJdlEoTELCIqgEwVGSQ+hIm0NbK8WXcTEI0UPoa2NbG4y2K00JEWbZavJXkYaqo9CRHS55FcZTjKEk3NKoCYUnSQ 0rWxrZbFKbKIhOKPZe1cJKzZSaQrIyULHDZmV5K4xySsDRKWOruanGtjLJXFEmwaIbDLX0hIPBUQPVFVkQkDoUNfSoDgQGKPekoxeGzA4DUvnn4bxzcZrtJyipKfPNy5w+9lnXwgqsiyHNeSVpemw4bWb9psYeq//uQZBoABQt4yMVxYAIAAAkQoAAAHvYpL5m6AAgAACXDAAAAD59jblTirQe9upFsmZbpMudy7Lz1X1DYsxOOSWpfPqNX2WqktK0DMvuGwlbNj44TleLPQ+Gsfb+GOWOKJoIrWb3cIMeeON6lz2umTqMXV8Mj30yWPpjoSa9ujK8SyeJP5y5mOW1D6hvLepeveEAEDo0mgCRClOEgANv3B9a6fikgUSu/DmAMATrGx7nng5p5iimPNZsfQLYB2sDLIkzRKZOHGAaUyDcpFBSLG9MCQALgAIgQs2YunOszLSAyQYPVC2YdGGeHD2dTdJk1pAHGAWDjnkcLKFymS3RQZTInzySoBwMG0QueC3gMsCEYxUqlrcxK6k1LQQcsmyYeQPdC2YfuGPASCBkcVMQQqpVJshui1tkXQJQV0OXGAZMXSOEEBRirXbVRQW7ugq7IM7rPWSZyDlM3IuNEkxzCOJ0ny2ThNkyRai1b6ev//3dzNGzNb//4uAvHT5sURcZCFcuKLhOFs8mLAAEAt4UWAAIABAAAAAB4qbHo0tIjVkUU//uQZAwABfSFz3ZqQAAAAAngwAAAE1HjMp2qAAAAACZDgAAAD5UkTE1UgZEUExqYynN1qZvqIOREEFmBcJQkwdxiFtw0qEOkGYfRDifBui9MQg4QAHAqWtAWHoCxu1Yf4VfWLPIM2mHDFsbQEVGwyqQoQcwnfHeIkNt9YnkiaS1oizycqJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7 FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb//////////////////////////// /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU="
            )).play();
        }







    </script>

    }



