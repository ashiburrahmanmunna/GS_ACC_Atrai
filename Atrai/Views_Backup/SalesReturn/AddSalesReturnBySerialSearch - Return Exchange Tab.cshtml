@using Microsoft.AspNetCore.Http
@*@model Atrai.Core.Entity.SalesReturnModel*@
@inject IHttpContextAccessor HttpContextAccessor
@model int
@{ ViewData["Title"] = "AddSalesReturn";
    Layout = "~/Views/Shared/_adminLayout.cshtml"; }


    

<style type="text/css">
    

/*    do not delete this code*/

/*    .ui-autocomplete {

        height: 200px;
    }*/
  /*  .select2-container {
        width: 100% !important;
    }*/

/*    .select2-container--default .select2-selection--multiple {
        height: auto !important;
    }*/
    /*    do not delete this code*/



    ul.ui-autocomplete {
        z-index: 1100;
    }

    .select2-container--default .select2-selection--multiple .select2-selection__choice {
        background-color: #acadfb;
        border: 1px solid #fff;
        margin: 1.8px;
        padding: 0px 3px;
        font-weight: 500;
        margin-left: .5px;
        color: #041c3c;
        font-size: 13px;
    }

    .select2-container {
        width: 100% !important;
    }

    .table th {
        text-align: center;
    }

    .table > tbody > tr > td, .table > tbody > tr > td > input {
        font-size: 13px;
/*
        line-height: 32px;
        vertical-align: middle;
        font-weight: 500;
        font-family: Arial 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        background: whitesmoke;*/
    }

    .table > tbody > tr > td {
        padding-right: .20rem;
        padding-top: 0.10rem;
        padding-bottom: 0.0rem;
        padding-left: 0.15rem;
        padding-right: 0.45rem;
    }

    .dataTables_scrollHeadInner {
        width: 100% !important;
    }

        .dataTables_scrollHeadInner table {
            width: 100% !important;
        }

    .select2-selection {
        overflow: hidden !important;
        height: 32px !important;
        font-size: 14px;
                height: 42px !important;
        vertical-align:middle;
    }

/*    .select2-container--default .select2-selection--single .select2-selection__rendered,
    .select2-container--default .select2-selection--single .select2-selection__arrow {
        margin-top: 7px;
    }*/

    .bg_1 {
        background-color: green;
    }

    .bg_2 {
        background-color: gray;
    }

    .error_msg {
        color: #f00;
        display: none;
    }



    /*.table {*/
        /* width: 100%; */
        /* max-width: 100%; */
        /*margin-bottom: 0px;
    }*/

/*    .dataTables_empty {
        text-align: center !important;
    }*/




    .ui-combobox {
        display: inline-block;
        margin: 0;
        margin-right: 1.8em;
        position: relative;
    }

    .ui-combobox-input {
        padding: 0.2em;
        margin: 0;
    }

    .ui-combobox-button {
        position: absolute;
        width: 1.8em !important;
        margin: 0;
        margin-left: -1px;
        top: 0;
        bottom: 0;
    }

        .ui-combobox-button .ui-button-text {
            padding: 0em;
        }

    .ui-combobox .ui-autocomplete {
        max-height: 10em;
        overflow-y: auto;
        overflow-x: hidden;
    }

    .table > tbody > tr > td > a i {
        display: block;
        text-align: center;
        font-size:20px;
        color:red;
    }

</style>


<div class="page-wrapper">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header py-1">
                        <input type="hidden" id="isSerialSalesReturn" name="isSerialSalesReturn" value="" />
                            <h4 class="text-danger">
                               Sales Return
                            </h4>

                    </div>
                    <div class="card-body" id="masterSale">
                        @*<input type="hidden" id="salesreturnId" />*@
                        <div class="card p-2 mb-3">

                            <div class="col-md-12">
                                <div class="row">

                                    <div class="col-md-3 col-12">
                                        <div class="form-group">
                                            <div class="input-group input-group-sm  mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        Ref. Invoice No :
                                                    </span>
                                                </div>
                                                <input type="hidden" id="InvoiceId" name="InvoiceId" value="" />
                                                @Html.TextBox("InvoiceNo", null, new { @class = "form-control", @placeholder = "Enter Invoice No", autocomplete = "off" })
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-md-3 col-12">
                                        <div class="form-group">
                                            <div class="input-group input-group-sm  mb-2">
                                                <select id="Customer" class="form-control" onchange="blankme(this.id)">
                                                    <option value="">Select Customer</option>
                                                </select>
                                                <small id="error_Customer" class="form-text error_msg">Select customer from list</small>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-3 col-12">
                                        <div class="form-group">
                                            <div class="input-group input-group-sm  mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        Code :
                                                    </span>
                                                </div>
                                                @Html.TextBox("Code", null, new { @class = "form-control", @placeholder = "Enter Sale No", onkeyup = "blankme(this.id)", autocomplete = "off", @readonly = "readonly" })
                                                <small id="error_Code" class="form-text error_msg col-md-offset-2 "> Sale Code is Required</small>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-md-3 col-12">
                                        <div class="form-group">
                                            <div class="input-group input-group-sm mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        Date :
                                                    </span>
                                                </div>
                                                @Html.TextBox("Date", null, new { @class = "form-control mydatepicker", @placeholder = "Select Sale Date ", onchange = "blankme(this.id)", autocomplete = "off" })
                                                <small id="error_Date" class="form-text error_msg col-md-offset-2 ">Sale Date is Required</small>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="row" id="customerinfo">

                                    <div class="col-md-3 col-12">
                                        <div class="form-group">

                                            <div class="input-group input-group-sm  mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        Phone No  &nbsp
                                                    </span>
                                                    <span class="input-group-text bg-dark text-white ">
                                                        <i class="ti-search"></i>
                                                    </span>

                                                </div>

                                                @Html.TextBox("PhoneNo", null, new { @class = "form-control", @placeholder = "Enter Phone No", autocomplete = "off" })
                                                <small id="error_PhoneNo" class="form-text error_msg col-md-offset-2 "> Customer Phone No Required</small>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-md-4 col-12">
                                        <div class="form-group">
                                            <div class="input-group input-group-sm  mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        Customer Name  &nbsp
                                                    </span>
                                                </div>

                                                @Html.TextBox("CustomerName", null, new { @class = "form-control", @placeholder = "Enter Customer Name", autocomplete = "off" })
                                                <small id="error_CustomerName" class="form-text error_msg col-md-offset-2 "> Customer Name Required</small>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-md-4 col-12">
                                        <div class="form-group">

                                            <div class="input-group input-group-sm  mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        Address  &nbsp
                                                    </span>
                                                </div>

                                                @Html.TextBox("CustomerAddress", null, new { @class = "form-control", @placeholder = "Select Customer Address", autocomplete = "off" })
                                                <small id="error_CustomerAddress" class="form-text error_msg col-md-offset-2 "> Customer Address Required</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>

                            <nav>
                                <div class="nav nav-tabs" id="nav-tab" role="tablist">
                                    <a class="nav-item nav-link active" id="nav-return-tab" data-toggle="tab" href="#nav-return" role="tab" aria-controls="nav-return" aria-selected="true">Return</a>
                                    <a class="nav-item nav-link " id="nav-exchange-tab" data-toggle="tab" href="#nav-exchange" role="tab" aria-controls="nav-exchange" aria-selected="false">Exchange</a>
                                </div>
                            </nav>

                            <div class="tab-content" id="nav-tabContent">
                                <div class="tab-pane fade show active" id="nav-return" role="tabpanel" aria-labelledby="nav-return-tab">
                       
                                    <div class="">
                                        <div id="productsearchinfo" class="col-md-12">


                                            <div class="row m-2">

                                                <div class="col-md-5 col-12">
                                                    <div class="input-group col-md-10">

                                                        <div class="input-group-prepend">
                                                        <span class="input-group-text bg-purple text-white">
                                                             <i class="ti-search "></i>
                                                        </span>
                                                        </div>
                                                        <input type="text" placeholder="Search Product For Return" name="Search" id="Search" class="form-control">

                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-12">
                                                    @*<label class="col-md-8">Scan Barcode / Serial</label>*@
                                                    <div class="input-group col-md-10">
                                                     <div class="input-group-prepend">
                                                        <span class="input-group-text bg-primary text-white">
                                                             <i class="ti-search "></i>
                                                        </span>
                                                        </div>
                                                        <input type="text" placeholder="Search Serial" name="Search" id="SearchSerial" class="form-control">
                                                    </div>
                                                </div>
                                                <div class="col-md-3 col-12">
                                                    <div class="input-group input-group-sm col-md-12">
                                                        <div class="input-group-prepend">
                                                            <span class="input-group-text py-0">
                                                                Warehouse &nbsp
                                                            </span>
                                                        </div>


                                                        @Html.DropDownList("Warehouse", ViewBag.Warehouse as List<SelectListItem>, new { id = "Warehouse", @class = "form-control" })

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="table-responsive">
                                                  <table class="table table-hover table-striped table-bordered" id="SalesReturnItems" style="width:100%">
                                                <thead>
                                                    <tr>
                                                        <th class="d-none">Id</th>
                                                        <th class="d-none">Product Id</th>
                                                        <th class="d-none">Warehouse Id</th>
                                                        <th style="min-width:200px">Return Item</th>
                                                        <th style="min-width:200px">SLNO / Description</th>
                                                        <th style="min-width:80px">Warehouse</th>
                                                        <th style="min-width:80px;max-width:100px">Unit Price</th>
                                                        <th style="min-width:80px;max-width:100px">Quantity</th>
                                                        <th style="min-width:80px;max-width:100px">Amount</th>
                                                        <th style="min-width:80px;max-width:100px"></th>
                                                        <th style="min-width:80px;max-width:100px">Batch Info</th>
                                                        <th>IsDelete</th>
                                                        <th>IsTransaction</th>
                                                        <th class="d-none">Cost Price</th>
                                                        <th class="d-none">Commission</th>
                                                        <th class="d-none">Commission Per</th>
                                                        <th class="d-none">User Commission</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="itemDetails">
                                                </tbody>
                                                <tfoot>
                                                    <tr>
                                                        <td class="d-none"></td>
                                                        <td class="d-none"></td>
                                                        <td class="d-none"></td>
                                                        <td></td>
                                                                          <td> <strong>Return Total:</strong> </td>
                                                        <td></td>
                                                        <td></td>
                                      
                                                        <td> <strong id="TotalQty">  </strong> </td>
                                                        <td> <strong id="SubTotal">  </strong> </td>
                                                        <td></td>
                                                        <td></td>
                                                        <td></td>
                                                        <td></td>
                                                        <td class="d-none"></td>
                                                        <td class="d-none"></td>
                                                        <td class="d-none"></td>
                                                        <td class="d-none"></td>




                                                    </tr>
                                                </tfoot>
                                            </table>
                                        </div>
                                        <small id="error_SubTotal" class="form-text error_msg">Atleast add one item</small>
                                    </div>

                                </div>
                                <div class="tab-pane fade" id="nav-exchange" role="tabpanel" aria-labelledby="nav-exchange-tab">
                                    @*<br />*@
                                    <div class="">
                                        <div id="productsearchinfoExchange" class="col-md-12">


                                            <div class="row m-2">

                                                <div class="col-md-5 col-12">


                                                    <div class="input-group col-md-10">
                                                                     <div class="input-group-prepend">
                                                        <span class="input-group-text bg-purple text-white">
                                                             <i class="ti-search "></i>
                                                        </span>
                                                        </div>
                                                        <input type="text" placeholder="Search Product For Exchange" name="Search" id="SearchExchange" class="form-control">
                                                    </div>
                                                </div>
                                                <div class="col-md-4 col-12">
                                                    <div class="input-group col-md-10">
                                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text bg-purple text-white">
                                                             <i class="ti-search "></i>
                                                        </span>
                                                        </div>
                                                        <input type="text" placeholder="Search Serial" name="Search" id="SearchSerialExchange" class="form-control">
                                                    </div>
                                                </div>
                                                <div class="col-md-3 col-12">
                                                    <div class="input-group input-group-sm col-md-12">
                                                        <div class="input-group-prepend">
                                                            <span class="input-group-text py-0">
                                                                Warehouse &nbsp
                                                            </span>
                                                        </div>


                                                        @Html.DropDownList("Warehouse", ViewBag.Warehouse as List<SelectListItem>, new { id = "WarehouseExchange", @class = "form-control" })

                                                    </div>
                                                </div>
                                                </div>
                                            </div>

                                            <div class="table-responsive">
                                                <table class="table table-hover table-bordered" id="SalesExchangeItems" style="width:100%">
                                                    <thead>
                                                        <tr>
                                                            <th class="d-none">Id</th>
                                                            <th class="d-none">Product Id</th>
                                                            <th class="d-none">Warehouse Id</th>
                                                            <th style="min-width:200px">Exchange Item</th>
                                                            <th style="min-width:200px">SLNO / Description</th>
                                                            <th style="min-width:80px">Warehouse</th>
                                                            <th style="min-width:80px;max-width:100px">Unit Price</th>
                                                            <th style="min-width:80px;max-width:100px">Quantity</th>
                                                            <th style="min-width:80px;max-width:100px">Amount</th>
                                                            <th style="min-width:80px;max-width:100px"></th>
                                                            <th style="min-width:80px;max-width:100px">Batch Info</th>
                                                            <th>IsDelete</th>
                                                            <th>IsTransaction</th>
                                                            <th class="d-none">Cost Price</th>
                                                            <th class="d-none">Commission</th>
                                                            <th class="d-none">Commission Per</th>
                                                            <th class="d-none">User Commission</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="itemDetails">
                                                    </tbody>
                                                    <tfoot>
                                                        <tr>
                                                            <td class="d-none"></td>
                                                            <td class="d-none"></td>
                                                            <td class="d-none"></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td> <strong> Total:</strong> </td>
                                                            <td> <strong id="TotalQtyExchange">  </strong> </td>
                                                            <td> <strong id="SubTotalExchange">  </strong> </td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td></td>
                                                            <td class="d-none"></td>
                                                            <td class="d-none"></td>
                                                            <td class="d-none"></td>
                                                            <td class="d-none"></td>
                                                        </tr>
                                                    </tfoot>
                                                </table>
                                            </div>

                                    </div>
                                </div>
                            </div>

                        </div>







                        <div class="row" style="display:none">
                            <div class="col-md-8 col-12">







                            </div>
@*                            <div class="col-md-4 col-12">

                                <div id="qr-reader" style="width:300px"></div>
                                <div id="qr-reader-results"></div>


                            </div>*@
                        </div>

                        <br />




                        <div class="row p-3">


                            <div class="card p-2 col-md-5" style="background: whitesmoke;">

                               

                                <div class="row">

                                    <div class="col-md-4 col-12">

                                        <div class="input-group input-group-sm mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    VAT :
                                                </span>
                                            </div>

                                            @Html.TextBox("TotalVat", null, new { @class = "form-control text-right", @Value = 0, @type = "input", @placeholder = "Total Vat Charge", onchange = "calculateSum()" })
                                            <small id="error_TotalVAT" class="form-text error_msg">Total VAT can't be empty</small>
                                        </div>
                                    </div>


                                    <div class="col-md-4 col-12">
                                        <div class="input-group input-group-sm mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    Service :
                                                </span>
                                            </div>

                                            @Html.TextBox("ServiceCharge", null, new { @class = "form-control text-right", @Value = 0, @type = "input", @placeholder = "Service Charge Amount ", onchange = "calculateSum()" })
                                            <small id="error_ServiceCharge" class="form-text error_msg">Service Charge can't be empty</small>
                                        </div>

                                    </div>

                                    <div class="col-md-4 col-12">

                                        <div class="input-group input-group-sm mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    Shipping :
                                                </span>
                                            </div>

                                            @Html.TextBox("Shipping", null, new { @class = "form-control text-right", @Value = 0, @type = "input", @placeholder = "Total Shipping Charge", onchange = "calculateSum()" })
                                            <small id="error_Shipping" class="form-text error_msg">Total Shipping can't be empty</small>
                                        </div>
                                    </div>
                                </div>



                                <div class="row">




                                    <div class="col-md-6 col-12">
                                        <div class="input-group input-group-sm mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    Discount :
                                                </span>
                                            </div>

                                            @Html.TextBox("Discount", null, new { @class = "form-control text-right", @Value = 0, @type = "input", @placeholder = "Discount Amount ", onchange = "calculateSum()" })
                                            <small id="error_Discount" class="form-text error_msg">Discount can't be empty</small>
                                        </div>

                                    </div>


                                    <div class="col-md-6 col-12">
                                        <div class="input-group input-group-sm mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    Grand Total :
                                                </span>
                                            </div>

                                            <input type="text" id="GrandTotal" class="form-control text-right" readonly style="font-size:14px;color:purple;font-weight:bold" />
                                            <small id="error_GrandTotal" class="form-text error_msg">Total is empty</small>
                                        </div>

                                    </div>



                                </div>




                                <div class="row">
                                    <div class="col-md-12 col-12">
                                        <label for="Notes"> Notes: </label>
                                        @Html.TextArea("Notes", new { @class = "form-control", @rows = "3", @placeholder = "Enter Notes" })
                                    </div>

                                    @*<div class="col-md-12 col-12">

                            <div class="input-group  mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        User Commission Amount :
                                    </span>
                                </div>

                                @Html.TextBox("UserCommission", null, new { @class = "form-control text-right", @Value = 0, @type = "input", @placeholder = "User Comission Amount", onchange = "calculateSum()" , @readonly="readonly"})

                            </div>
                        </div>*@

                                </div>

                            </div>

                            <div class="col-md-1 col-md-offset-2"></div>
                            <div class="col-md-6">

                                <div class="card p-1">
                                    <div class="table-responsive">
                                        <table id="tblpayments" class="table tblpayments display table-striped table-hover text-nowrap" cellspacing="0" width="100%">
                                            <thead>
                                                <tr>
                                                    <th class="d-none text-center">SalesReturn Payment Id</th>
                                                    <th class="d-none text-center">Payment Type Id</th>
                                                    <th class="text-center">Payment Type</th>
                                                    <th class="d-none text-center">AccountHeadId</th>
                                                    <th class="text-center">Accounts Head</th>
                                                    <th class="text-center">Amount</th>
                                                    <th class="text-center">Card No</th>
                                                    <th class="text-center"></th>
                                                </tr>
                                            </thead>
                                            <tbody id="paymentdetails">
                                            </tbody>
                                            <tfoot>
                                                <tr>
                                                    <td class="d-none"></td>
                                                    <td class="d-none"></td>
                                                    <td></td>
                                                    <td class="d-none"></td>
                                                    <td> <strong> Total:</strong> </td>
                                                    <td> <strong id="TotalCollectionAmount">  </strong> </td>
                                                    <td></td>
                                                    <td></td>
                                                </tr>
                                            </tfoot>
                                        </table>

                                    </div>

                                    <div class="row my-2">
                                        @*<div class="col-md-6 col-12">
                                <div class="input-group  mb-2" id="divSalesReturnPayments">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text py-0">
                                            Payment Method :
                                        </span>
                                    </div>

                                    <select id="PaymentTypes" class="form-control">
                                        <option value="">Select Receiving Head</option>


                                    </select>
                                </div>
                            </div>*@

                                        @*@Html.DropDownList("PaymentTypes", new List<SelectListItem>
{
                                            new SelectListItem() {Text = "Cash", Value="Cash"},
                                            new SelectListItem() {Text = "Check", Value="Check"},
                                            new SelectListItem() {Text = "Bkash", Value="Bkash"},
                                            new SelectListItem() {Text = "Due", Value="Due"},
                                        }, "Select Payment", new { @class = "form-control" })
                            }, null, new { @class = "form-control" })*@



                                        <div class="col-md-7 col-12">
                                            <div class="input-group input-group-sm mb-2" id="divSalesReturnPayments">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        <label for="Name">Account Head &nbsp  </label>
                                                    </span>
                                                </div>
                                                <select id="AccountHeadRow" class="form-control" onchange="blankme(this.id)">
                                                    @*<option value="">Select Receiving Head</option>*@


                                                </select>
                                            </div>
                                        </div>
                                        <div class="col-md-5 col-12">
                                            <div class="input-group input-group-sm mb-2" id="divPaymentAmount">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        Amount
                                                    </span>
                                                </div>
                                                @Html.TextBox("PaymentAmount", "0", new { @class = "form-control form-control-sm" })
                                            </div>
                                        </div>
                                        <div class="col-md-10 col-12">
                                            <div class="input-group input-group-sm mb-2" id="divPaymentCardNo">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        Card No / Bkash Number / Cheque
                                                    </span>
                                                </div>
                                                @Html.TextBox("PaymentCardNo", "0", new { @class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="col-md-2 col-12">
                                            <button type="button" onclick="AddPayments()" class="btn btn-success mb-2 btn-block rounded-0">Add</button>
                                            @*<button type="button" onclick="DeleteRow()" class="btn btn-success mb-2 btn-block" id="btnDelete" value="Delete"/>*@

                                        </div>
                                    </div>

                                </div>



                                <div class="form-group row">

                                    <div class="col-md-6 col-12">
                                        @*<button type="submit" class="btn btn-success"> Save Changes </button>*@


                                        @if (ViewBag.ActionType == "Create")
                                        {
                            <input id="BtnSave" data-sale-Id="@Model" class="btn  btn-primary btn-block  rounded-0" type="submit" value="Save" /> @*<button type="button" id="BtnSave"  class="btn btn-success btn-block rounded-0">Save</button>*@ }
                        else if (ViewBag.ActionType == "Edit")
                        { @*<input type="submit" id="BtnSave" value="Update" class="btn btn-warning btn-block rounded-0" />*@
                                        <input id="BtnSave" data-sale-Id="@Model" class="btn btn-warning btn-block rounded-0" type="submit" value="Update Sale" /> } @*else if (ViewBag.ActionType == "Delete")
                        {
                            <button class="btn btn-danger btn-block rounded-0" type="button" onclick="SalesReturn_delete()">Delete</button>
                        }*@

                                    </div>

                                    <div class="col-md-6 col-12">
                                        @Html.ActionLink("Back", "Index", "SalesReturn", null, new { @class = "btn btn-info btn-block rounded-0", @id = "btnBack" })

                                    </div>

                                </div>


                            </div>


                        </div>

                    </div>





                    @*<div class="form-horizontal">
            <label> </label>
            <input id="BtnSave" class="btn btn-success col-md-3 pull-right" type="submit" value="Save Sale" />
        </div>*@

                </div>

                    </div>
                <!-- panel-body -->
            </div>
            <!-- panel -->
        </div>
    </div>




<div class="modal" id="productinfoModal" tabindex="-1" role="dialog" aria-labelledby="productinfoModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="productinfoModalLabel">Add Product</h5>
                <button id="btnclose" type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="productinfo" class="row">
                    <div class="col-md-12">

                        <div class="from-group row">

                            <div class="col-md-12 mb-2">
                                <label>Name</label>
                                <input type="text" id="Name" class="form-control form-control-sm" />
                            </div>
                            <div class="col-md-6 col-12 ">
                                <label>Category</label>
                                @Html.DropDownList("CategoryId", new SelectList((IEnumerable<SelectListItem>)ViewBag.Category, "Value", "Text"), "Select Category", htmlAttributes: new { @class = "form-control", id = "CategoryId" })
                            </div>

                            <div class="col-md-6 col-12 ">
                                <label>Unit</label>
                                @Html.DropDownList("UnitId", new SelectList((IEnumerable<SelectListItem>)ViewBag.Unit, "Value", "Text"), "Select Unit", htmlAttributes: new { @class = "form-control", id = "UnitId" })
                            </div>
                            <div class="col-md-6 col-12 mb-2">
                                <label>Product Code</label>
                                <input type="text" id="ProductCode" class="form-control form-control-sm" />
                            </div>
                            <div class="col-md-6 col-12 mb-2">
                                <label>Brand</label>
                                <input type="text" id="BrandName" class="form-control form-control-sm" />
                            </div>
                            <div class="col-md-6 col-12 mb-2">
                                <label>Color</label>
                                <input type="text" id="ColorName" class="form-control form-control-sm" />
                            </div>
                            <div class="col-md-6 col-12 mb-2">
                                <label>Size</label>
                                <input type="text" id="SizeName" class="form-control form-control-sm" />
                            </div>

                            <div class="col-md-6 col-12 mb-2">
                                <label>Cost Price</label>
                                <input type="text" id="CostPrice" class="form-control form-control-sm" />
                            </div>
                            <div class="col-md-6 col-12 mb-2">
                                <label>Selling Price</label>
                                <input type="text" id="Price" class="form-control form-control-sm" />
                            </div>
                            <div class="col-md-12 mb-2">
                                <label>Description</label>
                                <input type="text" id="Description" class="form-control form-control-sm" />
                            </div>

                            <br />

                        </div>



                    </div>
                </div>  @*Datatable Initializer tblproductserialsearch*@
            </div>
            <div class="modal-footer">
                @*<div class="col-md-12 mb-2" style="text-align:center">
                        <button type="button" onclick="Saveproductinfo()" class="btn btn-success rounded-0">Save Product</button>
                    </div>*@
                <button type="button" class="btn btn-primary" onclick="Saveproductinfo()">Add New Product</button>

                <button type="button" id="btnCloseProductModal" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<div class="modal" id="checkModal" tabindex="-2" role="dialog" aria-labelledby="checkModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header d-none">
                <h5 class="modal-title text-center" id="checkModalLabel">Batch Serial </h5>
                <div class="from-group row">
                    <div class="col mb-2">
                        <input type="text" id="slnoPrefix" class="form-control form-control-sm" placeholder="Prefix" title="Prefix">
                    </div>

                </div>
                <div class="from-group row">

                    <div class="col mb-2">
                        <input type="number" id="BatchFromNo" class="form-control form-control-sm" placeholder="From NO." title="From No">
                    </div>

                </div>
                <div class="from-group row">

                    <div class="col mb-2">
                        <input type="number" id="BatchToNo" class="form-control form-control-sm" placeholder="To NO." title="To No">
                    </div>
                </div>


            </div>

            <div class="modal-header">
                <h5 class="modal-title text-center" id="checkModalLabel">Batch Serial Search</h5>
            </div>


            <div id="BatchSerialListModal" class="modal-body">

                <div class="from-group row  mb-3">
                    <div class="input-group input-group-sm col-md-12">
                        <span class="input-group-btn"><button class="btn btn-primary rounded-0" type="submit"><i class="ti-search"></i></button></span>
                        <input type="text" placeholder="Search Product Serial" name="Search" id="slnoSearch" class="form-control">
                    </div>

                </div>
                <div class="row">
                    <div class="col order-md-1 mb-2">


                        <form class="card p-2">
                            <br />
                            <div class="table-responsive">
                                <table class="table table-hover text-nowrap" id="BatchSerialList" style="width:100%">

                                    <thead>
                                        <tr>
                                            <th class="d-none">Batch Id</th>
                                            <th class="d-none">SalesReturn Items Id</th>
                                            <th class="d-none">Product Id</th>
                                            <th>Product Serial</th>
                                            <th>SL No</th>
                                            <th>Action</th>
                                            <th class="">Is Delete</th>
                                            <th class="">Is Used</th>
                                            <th class="">IsTransaction</th>
                                            <th class=""> PurchaseBatchId</th>




                                        </tr>
                                    </thead>
                                    <tbody id="itemDetails">
                                    </tbody>
                                </table>
                            </div>
                            <br />

                        </form>

                        <div class="row">
                            <div class="col ">
                                <button type="button" onclick="ShowAllPackingList()" class="btn btn-sm btn-info mb-2 btn-block rounded-0">Show All</button>
                            </div>
                            <div class="col ">
                                <button type="button" class="btn btn-sm btn-danger mb-2 rounded-0 btn-simple btn-block" data-dismiss="modal">Close</button>
                            </div>

                        </div>


                    </div>
                </div>
            </div>


        </div>
    </div>
</div>


<div class="modal" id="checkModalExchange" tabindex="-2" role="dialog" aria-labelledby="checkModalExchangeLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header d-none">
                <h5 class="modal-title text-center" id="checkModalExchangeLabel">Batch Serial </h5>

            </div>

            <div class="modal-header">
                <h5 class="modal-title text-center" id="checkModalExchangeLabel">Batch Serial Search</h5>
            </div>


            <div id="BatchSerialListModal" class="modal-body">

                <div class="from-group row  mb-3">
                    <div class="input-group input-group-sm col-md-12">
                        <span class="input-group-btn"><button class="btn btn-primary rounded-0" type="submit"><i class="ti-search"></i></button></span>
                        <input type="text" placeholder="Search Product Serial" name="Search" id="slnoSearch" class="form-control">
                    </div>

                </div>
                <div class="row">
                    <div class="col order-md-1 mb-2">


                        <form class="card p-2">
                            <br />
                            <div class="table-responsive">
                                <table class="table table-hover text-nowrap" id="BatchSerialListExchange" style="width:100%">

                                    <thead>
                                        <tr>
                                            <th class="d-none">Batch Id</th>
                                            <th class="d-none">SalesReturn Items Id</th>
                                            <th class="d-none">Product Id</th>
                                            <th>Product Serial</th>
                                            <th>SL No</th>
                                            <th>Action</th>
                                            <th class="">Is Delete</th>
                                            <th class="">Is Used</th>
                                            <th class="">IsTransaction</th>
                                            <th class=""> PurchaseBatchId</th>




                                        </tr>
                                    </thead>
                                    <tbody id="itemDetailsExchange">
                                    </tbody>
                                </table>
                            </div>
                            <br />

                        </form>

                        <div class="row">
                            <div class="col ">
                                <button type="button" onclick="ShowAllPackingListExchange()" class="btn btn-sm btn-info mb-2 btn-block rounded-0">Show All</button>
                            </div>
                            <div class="col ">
                                <button type="button" class="btn btn-sm btn-danger mb-2 rounded-0 btn-simple btn-block" data-dismiss="modal">Close</button>
                            </div>

                        </div>


                    </div>
                </div>
            </div>


        </div>
    </div>
</div>




@section scripts {
    @*<script src="~/js/site.js" asp-append-version="true"></script>*@

<script src="~/AdminEla/Assets/js/lib/barcodescaner/html5-qrcode.min.js"></script>


<script type="text/javascript">






    $('#tblpayments').dataTable({
        "aoColumns": [
            { "sClass": "SalesReturnPaymentSubId", "visible": false },
            { "sClass": "PaymentTypeId", "visible": false },
            { "sClass": "TypeShortName", "visible": false },
            { "sClass": "AccountHeadId", "visible": false },
            { "sClass": "Name", "visible": true },
            { "sClass": "Amount", "visible": true },
            { "sClass": "PaymentCardNo", "visible": true },
            null
        ],
        "dom": 'T<"clear">lfrtip',
        "tableTools": {
            "sRowSelector": "td:not(:first-child)"
        },
        select: {
            style: 'os',
            selector: 'td:first-child'
        },
        //drawCallback: function () {
        //    var sum = $('#example').DataTable().column(2).data().sum();
        //    $('#TotalCollectionAmount').html(sum);
        //},	
        //"order": [[1, "asc"]],
        "bLengthChange": false,
        "bFilter": false,
        "bSort": false,
        "bInfo": false,
        "paging": false
    })



    $('#tblpayments tbody').on('click', '.dlttrashpayments', function () {
        var table = $('#tblpayments').DataTable();

        table.row($(this).parents('tr')).remove().draw();
        var x = "1300.00";
        var y = $('#tblpayments').height();
        var z = parseFloat(x) + parseFloat(y);

        $("html, body").animate({ scrollTop: z }, 1300);


        calculateSum();

    });








    ///newly added for payment method
    function AddPayments() {

        $('#tblpayments').dataTable().fnAddData([
            "0",
            null,//$('#PaymentTypes').val(),
            '',//$('#PaymentTypes option:selected').text(),
            $('#AccountHeadRow').val(),
            $('#AccountHeadRow option:selected').text(),
            $('#PaymentAmount').val(),
            $('#PaymentCardNo').val(),
            '<a data-itemId="0" href="#" class="dlttrashpayments deleteItem"> <i class="fa fa-trash"></i></a >']);

            $('#PaymentAmount').val("0");
        $('#PaymentCardNo').val("=N/A=");


        calculateSum();

    }

   










    //function docReady(fn) {
    //    // see if DOM is already available
    //    if (document.readyState === "complete"
    //        || document.readyState === "interactive") {
    //        // call on next available tick
    //        setTimeout(fn, 1);
    //    } else {
    //        document.addEventListener("DOMContentLoaded", fn);
    //    }
    //}

    //docReady(function () {
    //    var resultContainer = document.getElementById('qr-reader-results');
    //    var lastResult, countResults = 0;
    //    function onScanSuccess(decodedText, decodedResult) {
    //        if (decodedText !== lastResult) {
    //            ++countResults;
    //            lastResult = decodedText;
    //            // Handle on success condition with the decoded message.
    //            console.log(`Scan result ${decodedText}`, decodedResult);
    //            beep();
    //            //alert(decodedText);
    //            $("#SearchSerial").val(decodedText);
    //            $("#SearchSerial").focus();
    //            //autocompletefunctionBarcodeScan();
    //        }
    //    }

    //    var html5QrcodeScanner = new Html5QrcodeScanner(
    //        "qr-reader", { fps: 10, qrbox: 250 });
    //    html5QrcodeScanner.render(onScanSuccess);
    //});


    //function beep() {
    //    (new Audio("data:audio/wav;base64,//uQRAAAAWMSLwUIYAAsYkXgoQwAEaYLWfkWgAI0wWs/ItAAAGDgYtAgAyN+QWaAAihwMWm4G8QQRDiMcCBcH3Cc+CDv/7xA4Tvh9Rz/y8QADBwMWgQAZG/ILNAARQ4GLTcDeIIIhxGOBAuD7hOfBB3/94gcJ3w+o5/5eIAIAAAVwWgQAVQ2ORaIQwEMAJiDg95G4nQL7mQVWI6GwRcfsZAcsKkJvxgxEjzFUgfHoSQ9Qq7KNwqHwuB13MA4a1q/DmBrHgPcmjiGoh//EwC5nGPEmS4RcfkVKOhJf+WOgoxJclFz3kgn//dBA+ya1GhurNn8zb//9NNutNuhz31f////9vt///z+IdAEAAAK4LQIAKobHItEIYCGAExBwe8jcToF9zIKrEdDYIuP2MgOWFSE34wYiR5iqQPj0JIeoVdlG4VD4XA67mAcNa1fhzA1jwHuTRxDUQ//iYBczjHiTJcIuPyKlHQkv/LHQUYkuSi57yQT//uggfZNajQ3Vmz+ Zt//+mm3Wm3Q576v////+32///5/EOgAAADVghQAAAAA//uQZAUAB1WI0PZugAAAAAoQwAAAEk3nRd2qAAAAACiDgAAAAAAABCqEEQRLCgwpBGMlJkIz8jKhGvj4k6jzRnqasNKIeoh5gI7BJaC1A1AoNBjJgbyApVS4IDlZgDU5WUAxEKDNmmALHzZp0Fkz1FMTmGFl1FMEyodIavcCAUHDWrKAIA4aa2oCgILEBupZgHvAhEBcZ6joQBxS76AgccrFlczBvKLC0QI2cBoCFvfTDAo7eoOQInqDPBtvrDEZBNYN5xwNwxQRfw8ZQ5wQVLvO8OYU+mHvFLlDh05Mdg7BT6YrRPpCBznMB2r//xKJjyyOh+cImr2/4doscwD6neZjuZR4AgAABYAAAABy1xcdQtxYBYYZdifkUDgzzXaXn98Z0oi9ILU5mBjFANmRwlVJ3/6jYDAmxaiDG3/6xjQQCCKkRb/6kg/wW+kSJ5//rLobkLSiKmqP/0ikJuDaSaSf/6JiLYLEYnW/+kXg1WRVJL/9EmQ1YZIsv/6Qzwy5qk7/+tEU0nkls3/zIUMPKNX/6yZLf+kFgAfgGyLFAUwY//uQZAUABcd5UiNPVXAAAApAAAAAE0VZQKw9ISAAACgAAAAAVQIygIElVrFkBS+Jhi+EAuu+lKAkYUEIsmEAEoMeDmCETMvfSHTGkF5RWH7kz/ESHWPAq/kcCRhqBtMdokPdM7vil7RG98A2sc7zO6ZvTdM7pmOUAZTnJW+NXxqmd41dqJ6mLTXxrPpnV8avaIf5SvL7pndPvPpndJR9Kuu8fePvuiuhorgWjp7Mf/PRjxcFCPDkW31srioCExivv9lcwKEaHsf/7ow2Fl1T/9RkXgEhYElAoCLFtMArxwivDJJ+bR1HTKJdlEoTELCIqgEwVGSQ+hIm0NbK8WXcTEI0UPoa2NbG4y2K00JEWbZavJXkYaqo9CRHS55FcZTjKEk3NKoCYUnSQ 0rWxrZbFKbKIhOKPZe1cJKzZSaQrIyULHDZmV5K4xySsDRKWOruanGtjLJXFEmwaIbDLX0hIPBUQPVFVkQkDoUNfSoDgQGKPekoxeGzA4DUvnn4bxzcZrtJyipKfPNy5w+9lnXwgqsiyHNeSVpemw4bWb9psYeq//uQZBoABQt4yMVxYAIAAAkQoAAAHvYpL5m6AAgAACXDAAAAD59jblTirQe9upFsmZbpMudy7Lz1X1DYsxOOSWpfPqNX2WqktK0DMvuGwlbNj44TleLPQ+Gsfb+GOWOKJoIrWb3cIMeeON6lz2umTqMXV8Mj30yWPpjoSa9ujK8SyeJP5y5mOW1D6hvLepeveEAEDo0mgCRClOEgANv3B9a6fikgUSu/DmAMATrGx7nng5p5iimPNZsfQLYB2sDLIkzRKZOHGAaUyDcpFBSLG9MCQALgAIgQs2YunOszLSAyQYPVC2YdGGeHD2dTdJk1pAHGAWDjnkcLKFymS3RQZTInzySoBwMG0QueC3gMsCEYxUqlrcxK6k1LQQcsmyYeQPdC2YfuGPASCBkcVMQQqpVJshui1tkXQJQV0OXGAZMXSOEEBRirXbVRQW7ugq7IM7rPWSZyDlM3IuNEkxzCOJ0ny2ThNkyRai1b6ev//3dzNGzNb//4uAvHT5sURcZCFcuKLhOFs8mLAAEAt4UWAAIABAAAAAB4qbHo0tIjVkUU//uQZAwABfSFz3ZqQAAAAAngwAAAE1HjMp2qAAAAACZDgAAAD5UkTE1UgZEUExqYynN1qZvqIOREEFmBcJQkwdxiFtw0qEOkGYfRDifBui9MQg4QAHAqWtAWHoCxu1Yf4VfWLPIM2mHDFsbQEVGwyqQoQcwnfHeIkNt9YnkiaS1oizycqJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7 FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb//////////////////////////// /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU="
    //    )).play();
    //}

</script>


<script type="text/javascript">






        (function ($) {
            $.fn.inputFilter = function (inputFilter) {
                return this.on("input keydown keyup mousedown mouseup select contextmenu drop", function () {
                    if (inputFilter(this.value)) {
                        this.oldValue = this.value;
                        this.oldSelectionStart = this.selectionStart;
                        this.oldSelectionEnd = this.selectionEnd;
                    } else if (this.hasOwnProperty("oldValue")) {
                        this.value = this.oldValue;
                        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                    } else {
                        this.value = "";
                    }
                });
            };
        }(jQuery));

        $(document).ready(function () {


            /////return

            var rowone
            $('#SalesReturnItems tbody').on('click', 'td', function (e) {


                var table = $('#SalesReturnItems').DataTable();
                rowone = $(this).parent();


                var data = table.row(rowone).data();
                //alert(data);
                data[12] = 'True';
                $(this).closest('tr').children('td.IsTransaction').text('True');

                calculateSum();
            });


            var row;

            $('#SalesReturnItems tbody').on('click', '.dlttrashsubsection', function (e) {

                var table = $('#SalesReturnItems').DataTable();
                row = $(this).parent().parent();
                var data = table.row(row).data();
                data[11] = 'True';
                //alert('hit');
                $(this).parent().parent().hide(); ///fahad for checking.
                toastr.error("Items Row Deleted");



                $(this).closest('tr').children('td.IsDelete').text('True');

                var x = "100.00";
                var y = $('#SalesReturnItems').height();
                var z = parseFloat(x) + parseFloat(y);

                table.draw();

                $("html, body").animate({ scrollTop: z }, 500);
                $(".dataTables_scrollBody").scrollTop(9999);

                calculateSum();

            });




            $('#BatchSerialList tbody').on('click', 'td', function (e) {


                var table = $('#BatchSerialList').DataTable();
                rowone = $(this).parent();


                var data = table.row(rowone).data();
                //alert(data);
                data[8] = 'True';
                $(this).closest('tr').children('td.IsTransaction').text('True');

                calculateSum();
            });




            $('#BatchSerialList tbody').on('click', '.dlttrash', function (e) {

                var targetTablepl = $('#BatchSerialList').DataTable();
                row = $(this).parent().parent();
                var data = targetTablepl.row(row).data();
                data[6] = 'True';

                $(this).parent().parent().hide(); ///fahad for checking.
                toastr.error("Serial Row Deleted")



                $(this).closest('tr').children('td.IsDelete').text('True');

                var x = "100.00";
                var y = $('#BatchSerialList').height();
                var z = parseFloat(x) + parseFloat(y);

                targetTablepl.draw();

                $("html, body").animate({ scrollTop: z }, 500);
                $(".dataTables_scrollBody").scrollTop(9999);




                var xcount = targetTablepl.rows(':visible').count();
                //alert(xcount);
                var table = $('#SalesReturnItems').DataTable();
                //var datacurrentvalue = table.row($('input[type=checkbox]:checked').parents('tr')).data();
                var rownovouchersub = table.row($('input[type=checkbox]:checked').parents('tr')).index();
                //alert(rownovouchersub);

                var cellprice = $('#SalesReturnItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();
                //console.log(cellprice);
                //cellprice.data(xcount);

                var cellqty = table.cell(rownovouchersub, 7);
                cellqty.data(xcount);


                var cellamount = table.cell(rownovouchersub, 8);
                cellamount.data(xcount * cellprice);

                alert('enter');


                var commissionamountrow = $('#SalesReturnItems tbody tr').filter(':has(:checkbox:checked)').find('.commissionamount').val();
                alert(commissionamountrow);
                console.log(commissionamountrow.data());
                var cellcommissionamount = table.cell(rownovouchersub, 15);
                cellcommissionamount.data(xcount * commissionamountrow);


                calculateSum();

            });

            /////return



            /////exchange

            var rowone
            $('#SalesExchangeItems tbody').on('click', 'td', function (e) {


                var table = $('#SalesExchangeItems').DataTable();
                rowone = $(this).parent();


                var data = table.row(rowone).data();
                //alert(data);
                data[12] = 'True';
                $(this).closest('tr').children('td.IsTransaction').text('True');

                calculateSum();
            });


            var row;

            $('#SalesExchangeItems tbody').on('click', '.dlttrashsubsection', function (e) {

                var table = $('#SalesExchangeItems').DataTable();
                row = $(this).parent().parent();
                var data = table.row(row).data();
                data[11] = 'True';
                //alert('hit');
                $(this).parent().parent().hide(); ///fahad for checking.
                toastr.error("Items Row Deleted");



                $(this).closest('tr').children('td.IsDelete').text('True');

                var x = "100.00";
                var y = $('#SalesExchangeItems').height();
                var z = parseFloat(x) + parseFloat(y);

                table.draw();

                $("html, body").animate({ scrollTop: z }, 500);
                $(".dataTables_scrollBody").scrollTop(9999);

                calculateSum();

            });




            $('#BatchSerialListExchange tbody').on('click', 'td', function (e) {


                var table = $('#BatchSerialListExchange').DataTable();
                rowone = $(this).parent();


                var data = table.row(rowone).data();
                //alert(data);
                data[8] = 'True';
                $(this).closest('tr').children('td.IsTransaction').text('True');

                calculateSum();
            });




            $('#BatchSerialListExchange tbody').on('click', '.dlttrash', function (e) {

                var targetTablepl = $('#BatchSerialListExchange').DataTable();
                row = $(this).parent().parent();
                var data = targetTablepl.row(row).data();
                data[6] = 'True';

                $(this).parent().parent().hide(); ///fahad for checking.
                toastr.error("Serial Row Deleted")



                $(this).closest('tr').children('td.IsDelete').text('True');

                var x = "100.00";
                var y = $('#BatchSerialListExchange').height();
                var z = parseFloat(x) + parseFloat(y);

                targetTablepl.draw();

                $("html, body").animate({ scrollTop: z }, 500);
                $(".dataTables_scrollBody").scrollTop(9999);




                var xcount = targetTablepl.rows(':visible').count();
                //alert(xcount);
                var table = $('#SalesExchangeItems').DataTable();
                //var datacurrentvalue = table.row($('input[type=checkbox]:checked').parents('tr')).data();
                var rownovouchersub = table.row($('input[type=checkbox]:checked').parents('tr')).index();
                //alert(rownovouchersub);

                var cellprice = $('#SalesExchangeItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();
                //console.log(cellprice);
                //cellprice.data(xcount);

                var cellqty = table.cell(rownovouchersub, 7);
                cellqty.data(xcount);


                var cellamount = table.cell(rownovouchersub, 8);
                cellamount.data(xcount * cellprice);

                alert('enter');


                var commissionamountrow = $('#SalesExchangeItems tbody tr').filter(':has(:checkbox:checked)').find('.commissionamount').val();
                alert(commissionamountrow);
                console.log(commissionamountrow.data());
                var cellcommissionamount = table.cell(rownovouchersub, 15);
                cellcommissionamount.data(xcount * commissionamountrow);


                calculateSum();

            });


            ///exchange







            $("#ServiceCharge , #Shipping , #TotalVat , #Discount  ").inputFilter(function (value) {
                return /^-?\d*[.,]?\d{0,2}$/.test(value);
            });


            $(".price").inputFilter(function (value) {
                return /^-?\d*[.,]?\d{0,2}$/.test(value);
            });
            });



        function AddSerialData() {
            alert('enter');
            var check = $('#SalesReturnItems').find('input[type=checkbox]:checked').length;
            //alert(check);

            if (check > 0) {
                //alert(check);
                //alert("Checkbox Selected");
            }
            else {
                alert("At least One Row Should Be Selected");
                e.preventDefault();
            }
            // alert(serialno);
            // alert('test');

            var targetTablepl = $("#BatchSerialList").DataTable();

            var rowCountpl = targetTablepl
                .column(0)
                .data()
                .length;


            //$('#BatchSerialList').dataTable().fnAddData([
            //    0,
            //    SalesReturnItemId,
            //    newDetailsId,
            //    0,
            //    rowCountpl + 1,
            //    '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash"></i></a >',
            //    false
            //]);


            $('#BatchSerialList').dataTable().fnAddData([
                0,
                SalesReturnItemId,
                ProductId,
                "",
                rowCountpl + 1,
                '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash"></i></a >',
                false,
                false,
                true,
                0
            ]);



            var xcount = targetTablepl.rows(':visible').count();
            //alert(xcount);
            var table = $('#SalesReturnItems').DataTable();
            //var datacurrentvalue = table.row($('input[type=checkbox]:checked').parents('tr')).data();
            var rownovouchersub = table.row($('input[type=checkbox]:checked').parents('tr')).index();
            //alert(rownovouchersub);

            var cellprice  = $('#SalesReturnItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();
            console.log(cellprice);
            //cellprice.data(xcount);

            var cellqty = table.cell(rownovouchersub, 7);
            cellqty.data(xcount);
            var cellamount = table.cell(rownovouchersub, 8);
            cellamount.data(xcount * cellprice);


            var commissionamountrow = $('#SalesReturnItems tbody tr').filter(':has(:checkbox:checked)').find('.commissionamount').val();
            alert(commissionamountrow);
            console.log(commissionamountrow.data());
            var cellcommissionamount = table.cell(rownovouchersub, 15);
            cellcommissionamount.data(xcount * commissionamountrow);

            calculateSum();

        }

        function AddSerialDataAuto() {

            alert('enter 123');


            var check = $('#SalesReturnItems').find('input[type=checkbox]:checked').length;
            //alert(check);

            if (check > 0) {
                //alert(check);
                //alert("Checkbox Selected");
            }
            else {
                alert("At least One Row Should Be Selected");
                e.preventDefault();
            }
            // alert(serialno);
            // alert('test');

            var targetTablepl = $("#BatchSerialList").DataTable();

            var rowCountpl = targetTablepl
                .column(0)
                .data()
                .length;


            //$('#BatchSerialList').dataTable().fnAddData([
            //    0,
            //    SalesReturnItemId,
            //    newDetailsId,
            //    0,
            //    rowCountpl + 1,
            //    '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash"></i></a >',
            //    false
            //]);

            var from = $("#BatchFromNo").val();
            var to = $("#BatchToNo").val();
            var prefix = $("#slnoPrefix").val();


            if (prefix.length > 0 && from.length > 0 && to.length > 0) {
                for (var i = from; i <= to; i++) {
                    $('#BatchSerialList').dataTable().fnAddData([
                        0,
                        SalesReturnItemId,
                        ProductId,
                        prefix + i,
                        i,//rowCountpl + 1,
                        '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash"></i></a >',
                        false,
                        false,
                        true,
                        0
                    ]);
                }
            }
            else {
                toastr.error("Please fill up Necessary Info.")
            };




            var xcount = targetTablepl.rows(':visible').count();
            //alert(xcount);
            var table = $('#SalesReturnItems').DataTable();
            //var datacurrentvalue = table.row($('input[type=checkbox]:checked').parents('tr')).data();
            var rownovouchersub = table.row($('input[type=checkbox]:checked').parents('tr')).index();
            //alert(rownovouchersub);

            var cellprice  = $('#SalesReturnItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();
            console.log(cellprice);
            //cellprice.data(xcount);

            var cellqty = table.cell(rownovouchersub, 7);
            cellqty.data(xcount);
            var cellamount = table.cell(rownovouchersub, 8);
            cellamount.data(xcount * cellprice);


            var commissionamountrow = $('#SalesReturnItems tbody tr').filter(':has(:checkbox:checked)').find('.commissionamount').val();
            alert(commissionamountrow);
            console.log(commissionamountrow.data());
            var cellcommissionamount = table.cell(rownovouchersub, 15);
            cellcommissionamount.data(xcount * commissionamountrow);

            calculateSum();


        }


        $('body').on('expanded.pushMenu collapsed.pushMenu', function () {
            setTimeout(function () {
                $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
            }, 350);
        });


        function ShowAllPackingList() {
            var cbs = document.getElementsByClassName("clickchk");
            for (var i = 0; i < cbs.length; i++) {
                cbs[i].checked = false;
            }

            $('#BatchSerialList tbody tr').each(function () {
                $(this).show();
            });

        }


        var BatchSerialList = $('#BatchSerialList').DataTable({
            "aoColumns": [
                { "sClass": "BatchId d-none", "visible": true },
                { "sClass": "SalesReturnItemId d-none", "visible": true },
                { "sClass": "ProductId d-none", "visible": true },

                {
                    "sClass": "BatchSerialNoRow ",
                    "visible": true
                },

                { "sClass": "SLNo d-none", "visible": true },
                { "sClass": "dltrashimage", "visible": true },
                { "sClass": "IsDelete d-none", "visible": true },
                { "sClass": "IsUsed d-none", "visible": true },
                { "sClass": "IsTransaction d-none", "visible": true },
                { "sClass": "PurchaseBatchId d-none", "visible": true }




            ],
            columnDefs: [
                {
                    "render": function (data, type, row) {
                        var IsUsed = row[7];
                        if (IsUsed == false) {
                            return '<input class="form-control form-control-sm BatchSerialNo  text-center" id="BatchSerialNo"  name="BatchSerialNo" type="text"  value = ' + data + '  >';
                        }
                        else {
                            return '<input class="form-control form-control-sm BatchSerialNo  text-center" id="BatchSerialNo"  name="BatchSerialNo" type="text"  value = ' + data + ' , readonly=readonly  >';
                        }

                    },
                    "targets": 3

                }
            ],
            rowCallback: function (row) {
                $(row).addClass('RowBatchSerialList');
            },
            scrollY: "300px",
            scrollX: true,
            //"scrollCollapse": true,
            'paging': false,
            'info': false,
            'ordering': false,
            'searching': false,
            language: { search: '', searchPlaceholder: "Search..." }
            //, sorting: false
        });



    //$("#Search").keyup(function (ev) {
    //    // 13 is ENTER
    //    if (ev.which === 13) {
    //        // do something
    //        alert('hit');
    //    }
    //});


   function Saveproductinfo() {


        var Code = $("#ProductCode").val();
        var Name = $("#Name").val();
        var CostPrice = $("#CostPrice").val();
        var Price = $("#Price").val();
        var Description = $("#Description").val();

        var ColorName = $("#ColorName").text();
        var SizeName = $("#SizeName").text();
        var BrandName = $("#BrandName").val();
        var UnitId = $("#UnitId").val();
        var CategoryId = $("#CategoryId").val();




        var Product = {
            Code: Code,
            Name: Name,
            CostPrice: CostPrice,
            Price: Price,
            Description: Description,

            ColorName: ColorName,
            SizeName: SizeName,
            BrandName: BrandName,
            UnitId: UnitId,
            CategoryId: CategoryId

        }
        console.log(Product);
        //alert(`${Code} ${Name} ${CostPrice} ${Price}`);

        $.ajax({




            url: '@Url.Action("SaveProductModal", "Admin")',
            data: JSON.stringify(Product), //use id here
            //data: JSON.stringify(purchasesmain),
            type: 'POST',
            async: true,
            contentType: 'application/json;',
            dataType: 'json',
            success: function (result) {
                //alert(result);
                $("#Search").val($("#Name").val());
                $("#ProductCode").val("");
                $("#Name").val("");
                $("#CostPrice").val("");
                $("#Price").val("");
                $("#Description").val("");

                $("#SizeName").val("");
                $("#BrandName").val("");
                $("#ColorName").val("");
                $("#CategoryId").val(null);
                $("#UnitId").val(0);

                //productinfo_Info();
                toastr.success('Product Added Successfully.');
                $("#btnCloseProductModal").trigger("click");



                autocompletefunction();
                $("#Search").focus();
                var e = jQuery.Event("keydown");
                e.keyCode = 50;
                $("#search").trigger(e);

            },
            error: function () {
                toastr.error('Unable to Save');
                //alert('Unable to Save');
            }
        });
    }


        $('#customerinfo').hide();


        function customerinfohide() {

            if ($('#Customer option:selected').text().toUpperCase() == "Cash Customer".toUpperCase() || $('#Customer option:selected').text().toUpperCase() == "Walk In Customer".toUpperCase()) {

                $('#customerinfo').show();


            }
            else {
                $('#customerinfo').hide();
                $('#CustomerName').val('');
                $('#PhoneNo').val('');
                $('#CustomerAddress').val('');
            }
        }



        $('#Customer').select2({})
        .on("select2:select", function (e) {

            customerinfohide();


        });

        function blankme(id) {

            var val = document.getElementById(id).value;
            var error_id = "error_" + id;

            if (val == "" || val === 0.00) {

                document.getElementById(error_id).style.display = "block";
            }
            else {
                document.getElementById(error_id).style.display = "none";
            }
        }
        function submitValidation() {
            var customer = document.getElementById("Customer").value;
            //var accounthead = document.getElementById("AccountHead").value;

            var code = document.getElementById("Code").value;
            var date = document.getElementById("Date").value;
            //var paymentmethod = document.getElementById("Payment").value;
            //var pStaus = document.getElementById("Status").value;
            var total = parseFloat($("#SubTotal").text());
            var gtotal = parseFloat($("#GrandTotal").val());

            //if (customer == "" || pStaus == "" || code == "" || date == "" || paymentmethod == "" || (total == "" || total == 0.00 || isNaN(total)) || (gtotal == "" || gtotal == 0.00 || isNaN(gtotal))) {
                if (customer == "" ||  code == "" || date == "" || (total == "" || total == 0.00 || isNaN(total)) || (gtotal == "" || gtotal == 0.00 || isNaN(gtotal))) {


                //if (pStaus == "") {
                //    document.getElementById("error_Status").style.display = "block";
                //}
                //else {
                //    document.getElementById("error_Status").style.display = "none";
                //}

                if (customer == "") {
                    document.getElementById("error_Customer").style.display = "block";
                }
                else {
                    document.getElementById("error_Customer").style.display = "none";
                }


                //if (accounthead == "") {
                //    document.getElementById("error_AccountHead").style.display = "block";
                //}
                //else {
                //    document.getElementById("error_AccountHead").style.display = "none";
                //}


                if (code == "") {
                    document.getElementById("error_Code").style.display = "block";
                }
                else {
                    document.getElementById("error_Code").style.display = "none";
                }
                if (date == "") {
                    document.getElementById("error_Date").style.display = "block";
                }
                else {
                    document.getElementById("error_Date").style.display = "none";
                }
                //if (paymentmethod == "") {
                //    document.getElementById("error_Payment").style.display = "block";
                //}
                //else {
                //    document.getElementById("error_Payment").style.display = "none";
                //}
                if (total == "" || total === 0.00 || isNaN(total)) {
                    document.getElementById("error_SubTotal").style.display = "block";
                }
                else {
                    document.getElementById("error_SubTotal").style.display = "none";
                }
                if (gtotal == "" || gtotal === 0.00 || isNaN(gtotal)) {
                    document.getElementById("error_GrandTotal").style.display = "block";
                }
                else {
                    document.getElementById("error_GrandTotal").style.display = "none";
                }

                return false;
            }
            else {
                return true;
            }


        }


    function getSaleInfoForReturn(id) {

        function getSale(id) {
            return $.ajax({
                type: 'GET',
                datatype: "Json",
                url: "../Sales/GetSales",
                data: { "saleId": id, isreturn: 1 }
            });
        }

        var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
            "Aug", "Sep", "Oct", "Nov", "Dec"];
        var value = new Date();
        var ret = value.getDate() + "-" + months[value.getMonth()] + "-" + value.getFullYear(); //value.getMonth() + 1 + "/" + value.getDate() + "/" + value.getFullYear();
        $("#Date").val(ret);


        if (id > 0) {



            $.when(getSale(id)).then(function (res) {



                    //console.log(res);

                var detArr = [];
                    var stringarray = [""];
                    var arr = [];




                    $("#Code").val("SR-" + res.SaleCode);
                    var value = new Date(res.SalesDate);
                    var ret = value.getDate() + "-" + months[value.getMonth()] + "-" + value.getFullYear(); //value.getMonth() + 1 + "/" + value.getDate() + "/" + value.getFullYear();

                    //alert('Wait');


                //$("#Date").val(ret);//res.SalesDate
               // alert($("#Date").val());

                    $("#CustomerName").val(res.CustomerName);


                    $("#PhoneNo").val(res.PhoneNo);
                    $("#CustomerAddress").val(res.PrimaryAddress);
                    $("#Notes").val(res.Notes);
                    $("#isSerialSalesReturn").val(res.isSerialSalesReturn);
                    $("#SubTotal").text(res.Total);
                    $("#TotalVat").val(res.TotalVat);
                    $("#ServiceCharge").val(res.ServiceCharge);
                    $("#Shipping").val(res.Shipping);
                    $("#Discount").val(res.Discount);


                    //return
                    $.each(res.Items, function (i, v) {

                        $('#SalesReturnItems').dataTable().fnAddData([0, v.ProductId, v.WarehouseId, v.Product.Name, v.Description, v.vWarehouse.WhShortName, v.Price, v.Quantity, v.Amount, '<a data-itemId="0" href="#" class="dlttrashsubsection deleteItem"> <i class="fa fa-trash"></i></a>', null, false, false, v.CostPrice, v.CommissionAmount, v.CommissionPer, v.UserCommissionAmount]);
                        //console.log(v.BatchSerialItems); v.Id




                        $.each(v.BatchSerialItems, function (ii, vv) {
                            var deletestring = '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash"></i></a >';
                            if (vv.IsUsed == true) { deletestring = '<h5 style="color:Red; font-weight:bold">Sold</h5>' }

                            $('#BatchSerialList').dataTable().fnAddData([
                                0,//vv.Id,
                                0,//vv.SalesItemId,
                                vv.ProductId,
                                vv.BatchSerialNo,
                                0,//vv.SLNo,//rowCountpl + 1,
                                deletestring,
                                false,
                                vv.IsUsed,
                                false,
                                vv.PurchaseBatchId
                            ]);

                        });


                        ///alert('BatchSerialList');


                        var rowid = finalrowid;

                        $("#N" + rowid).autocomplete({
                            source: function (request, response) {
                                $.ajax({
                                    url: '../admin/ProductSearchAvgCosting/',
                                    dataType: "json",
                                    data: { query: $("#N" + rowid).val(), WarehouseId: $("#WHI" + rowid).val() },
                                    success: function (data) {
                                        //console.log(data);
                                        response($.map(data, function (item) {
                                            return { ProductId: item.Id, Description: item.Description, label: item.Category.Name + ' ' + item.Name + ' ' + item.Description + ' ' + item.Code, Price: item.Price, CostPrice: item.CostPrice, CommissionAmount: v.CommissionAmount, CommissionPer: v.CommissionPer };
                                        }));
                                    },
                                    error: function (xhr, status, error) {
                                        alert("Error");
                                    },
                                });
                            },
                            minLength: 3,
                            select: function (event, uirow) {
                                $("#PI" + rowid).html(uirow.item.ProductId);
                                //$("#WHI" + rowid).html(uirow.item.ProductId);

                                $("#P" + rowid).val(uirow.item.Price);
                                $("#CP" + rowid).val(uirow.item.CostPrice);
                                $("#CA" + rowid).val(uirow.item.CommissionAmount);
                                $("#CPR" + rowid).val(uirow.item.CommissionPer);
                                $("#UCA" + rowid).val(uirow.item.CommissionAmount * quantity);

                                $("#D" + rowid).val(uirow.item.Description);
                                var quantity = $("#Q" + rowid).val();
                                $("#A" + rowid).html(uirow.item.Price * quantity);
                                calculateSum();

                            }

                        });


                        $("#D" + rowid).select2({
                            minimumResultsForSearch: Infinity
                        });


                        $("#D" + rowid).empty();
                        arr.length = 0;

                        //alert('wait');

                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("ProductsBatchSerialMultiSelectForSalesRetrunLoad", "Admin")',
                            dataType: 'json',
                            async: false,
                            data: { ProductId: $("#PI" + rowid).html(), SaleId: id },
                            success: function (data) {

                                $("#D" + rowid).select2({
                                    data: data,
                                    escapeMarkup: function (markup) {
                                        return markup;
                                    },
                                    templateResult: function (data) {
                                        return data.html;
                                    },
                                    templateSelection: function (data) {
                                        return data.text;
                                    }

                                })

                            },
                            error: function (ex) {
                                alert('Failed.' + ex);
                            }

                        });

                        //console.log(v.SerialItemArray);

                        $("#D" + rowid).val(v.SerialItemArray).change();//v.SerialItem

                    });

                    //exchange
                    $.each(res.ExchangeItems, function (i, v) {

                        $('#SalesExchangeItems').dataTable().fnAddData([0, v.ProductId, v.WarehouseId, v.Product.Name, v.Description, v.vWarehouse.WhShortName, v.Price, v.Quantity, v.Amount, '<a data-itemId="0" href="#" class="dlttrashsubsection deleteItem"> <i class="fa fa-trash"></i></a>', null, false, false, v.CostPrice, v.CommissionAmount, v.CommissionPer, v.UserCommissionAmount]);
                        //console.log(v.BatchSerialItems); v.Id




                        $.each(v.BatchSerialItems, function (ii, vv) {
                            var deletestring = '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash"></i></a >';
                            if (vv.IsUsed == true) { deletestring = '<h5 style="color:Red; font-weight:bold">Sold</h5>' }

                            $('#BatchSerialListExchange').dataTable().fnAddData([
                                0,//vv.Id,
                                0,//vv.SalesItemId,
                                vv.ProductId,
                                vv.BatchSerialNo,
                                0,//vv.SLNo,//rowCountpl + 1,
                                deletestring,
                                false,
                                vv.IsUsed,
                                false,
                                vv.PurchaseBatchId
                            ]);

                        });


                        ///alert('BatchSerialListExchange');


                        var rowid = finalrowid;

                        $("#N" + rowid).autocomplete({
                            source: function (request, response) {
                                $.ajax({
                                    url: '../admin/ProductSearchAvgCosting/',
                                    dataType: "json",
                                    data: { query: $("#N" + rowid).val(), WarehouseId: $("#WHI" + rowid).val() },
                                    success: function (data) {
                                        //console.log(data);
                                        response($.map(data, function (item) {
                                            return { ProductId: item.Id, Description: item.Description, label: item.Category.Name + ' ' + item.Name + ' ' + item.Description + ' ' + item.Code, Price: item.Price, CostPrice: item.CostPrice, CommissionAmount: v.CommissionAmount, CommissionPer: v.CommissionPer };
                                        }));
                                    },
                                    error: function (xhr, status, error) {
                                        alert("Error");
                                    },
                                });
                            },
                            minLength: 3,
                            select: function (event, uirow) {
                                $("#PI" + rowid).html(uirow.item.ProductId);
                                //$("#WHI" + rowid).html(uirow.item.ProductId);

                                $("#P" + rowid).val(uirow.item.Price);
                                $("#CP" + rowid).val(uirow.item.CostPrice);
                                $("#CA" + rowid).val(uirow.item.CommissionAmount);
                                $("#CPR" + rowid).val(uirow.item.CommissionPer);
                                $("#UCA" + rowid).val(uirow.item.CommissionAmount * quantity);

                                $("#D" + rowid).val(uirow.item.Description);
                                var quantity = $("#Q" + rowid).val();
                                $("#A" + rowid).html(uirow.item.Price * quantity);
                                calculateSum();

                            }

                        });


                        $("#D" + rowid).select2({
                            minimumResultsForSearch: Infinity
                        });


                        $("#D" + rowid).empty();
                        arr.length = 0;

                        //alert('wait');

                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("ProductsBatchSerialMultiSelectForSalesRetrunLoad", "Admin")',
                            dataType: 'json',
                            async: false,
                            data: { ProductId: $("#PI" + rowid).html(), SaleId: id },
                            success: function (data) {

                                $("#D" + rowid).select2({
                                    data: data,
                                    escapeMarkup: function (markup) {
                                        return markup;
                                    },
                                    templateResult: function (data) {
                                        return data.html;
                                    },
                                    templateSelection: function (data) {
                                        return data.text;
                                    }

                                })

                            },
                            error: function (ex) {
                                alert('Failed.' + ex);
                            }

                        });

                        //console.log(v.SerialItemArray);

                        $("#D" + rowid).val(v.SerialItemArray).change();//v.SerialItem

                    });


                    $.each(res.SalesReturnPayments, function (i, v) {
                        $('#tblpayments').dataTable().fnAddData([v.Id, null, "", v.AccountHeadId, v.vChartofAccounts.AccName, v.Amount, v.PaymentCardNo, '<a data-itemId="0" href="#" class="dlttrashpayments deleteItem"> <i class="fa fa-trash"></i></a >']);
                    });


                $("#Customer").val(res.CustomerId).change();
                $("#Warehouse").val(res.WarehouseIdMain).change();
                    customerinfohide();
                    calculateSum();

                }).fail(function (err) {
                    console.log(err);
                });
            }


    }


        $(document).ready(function () {


           $('#masterSale').ready(function () {

            var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
                "Aug", "Sep", "Oct", "Nov", "Dec"];
            var value = new Date();
            var ret = value.getDate() + "-" + months[value.getMonth()] + "-" + value.getFullYear(); //value.getMonth() + 1 + "/" + value.getDate() + "/" + value.getFullYear();
            $("#Date").val(ret);


               //alert('hit');

                function getSaleReturn(id) {
                    return $.ajax({
                        type: 'GET',
                        datatype: "Json",
                        url: "../SalesReturn/GetSalesReturn",
                        data: "salesreturnId=" + id
                    });
                }

            var salesreturnId = $("#BtnSave").attr("data-sale-Id");

            if (salesreturnId > 0) {
                $.when(getSaleReturn(salesreturnId)).then(function (res) {
                    console.log(res);
                    var detArr = [];
                    var stringarray = [""];
                    var arr = [];

                    $("#Code").val(res.SalesReturnCode);

                    var value = new Date(res.SalesReturnDate);

                    var ret = value.getDate() + "-" + months[value.getMonth()] + "-" + value.getFullYear(); //value.getMonth() + 1 + "/" + value.getDate() + "/" + value.getFullYear();


                    $("#Date").val(ret);

                    $("#InvoiceId").val(res.SaleId);

                    $("#CustomerName").val(res.CustomerName);
                    $("#PhoneNo").val(res.PhoneNo);
                    $("#CustomerAddress").val(res.PrimaryAddress);
                    $("#Notes").val(res.Notes);
                    $("#isSerialSalesReturn").val(res.isSerialSalesReturn);
                    $("#SubTotal").text(res.Total);
                    $("#TotalVat").val(res.TotalVat);
                    $("#ServiceCharge").val(res.ServiceCharge);
                    $("#Shipping").val(res.Shipping);
                    $("#Discount").val(res.Discount);
                    $("#GrandTotal").val(res.GrandTotal);

                    $("#InvoiceId").val(res.SaleId);

                    if (res.SaleId > 0) {
                        $("#InvoiceNo").val(res.SalesInfo.SaleCode);

                        $('#InvoiceNo').attr('readonly', true);
                        $('#CustomerName').attr('readonly', true);
                        $('#InvoiPhoneNoceNo').attr('readonly', true);
                        $('#CustomerAddress').attr('readonly', true);
                        $('#PhoneNo').attr('readonly', true);
                        $('#Customer').attr('disabled', true);

                        $('#productsearchinfo').hide();

                    }

                    ///Sales Return
                    $.each(res.Items, function (i, v) {

                        $('#SalesReturnItems').dataTable().fnAddData([v.Id, v.ProductId, v.WarehouseId, v.Product.Name, v.Description, v.vWarehouse.WhShortName, v.Price, v.Quantity, v.Amount, '<a data-itemId="0" href="#" class="dlttrashsubsection deleteItem"> <i class="fa fa-trash"></i></a>', null, false, false, v.CostPrice, v.CommissionAmount, v.CommissionPer, v.UserCommissionAmount]);
                        //console.log(v.BatchSerialItems);

                        $.each(v.BatchSerialItems, function (ii, vv) {
                            var deletestring = '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash"></i></a >';
                            if (vv.IsUsed == true) { deletestring = '<h5 style="color:Red; font-weight:bold">Sold</h5>' }

                            $('#BatchSerialList').dataTable().fnAddData([
                                vv.Id,
                                vv.SalesReturnItemId,
                                vv.ProductId,
                                vv.BatchSerialNo,
                                0,//vv.SLNo,//rowCountpl + 1,
                                deletestring,
                                false,
                                vv.IsUsed,
                                false,
                                vv.PurchaseBatchId
                            ]);

                        });

                        var rowid = finalrowid;

                        $("#N" + rowid).autocomplete({
                            source: function (request, response) {
                                $.ajax({
                                    url: '../admin/ProductSearchAvgCosting/',
                                    dataType: "json",
                                    data: { query: $("#N" + rowid).val(), WarehouseId: $("#WHI" + rowid).val() },
                                    success: function (data) {
                                        //console.log(data);
                                        response($.map(data, function (item) {
                                            return { ProductId: item.Id, Description: item.Description, label: item.Category.Name + ' ' + item.Name + ' ' + item.Description + ' ' + item.Code, Price: item.Price, CostPrice: item.CostPrice, CommissionAmount: v.CommissionAmount, CommissionPer: v.CommissionPer };
                                        }));
                                    },
                                    error: function (xhr, status, error) {
                                        alert("Error");
                                    },
                                });
                            },
                            minLength: 3,
                            select: function (event, uirow) {
                                $("#PI" + rowid).html(uirow.item.ProductId);
                                //$("#WHI" + rowid).html(uirow.item.ProductId);

                                $("#P" + rowid).val(uirow.item.Price);
                                $("#CP" + rowid).val(uirow.item.CostPrice);
                                $("#CA" + rowid).val(uirow.item.CommissionAmount);
                                $("#CPR" + rowid).val(uirow.item.CommissionPer);
                                $("#UCA" + rowid).val(uirow.item.CommissionAmount * quantity);

                                $("#D" + rowid).val(uirow.item.Description);
                                var quantity = $("#Q" + rowid).val();
                                $("#A" + rowid).html(uirow.item.Price * quantity);
                                calculateSum();

                            }

                        });


                        $("#D" + rowid).select2({
                            minimumResultsForSearch: Infinity
                        });


                        $("#D" + rowid).empty();
                        arr.length = 0;

                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("ProductsBatchSerialMultiSelectForSalesRetrun", "Admin")',
                            dataType: 'json',
                            async: false,
                            data: { ProductId: $("#PI" + rowid).html(), salesreturnId: $("#BtnSave").attr("data-sale-Id") },
                            success: function (data) {

                                $("#D" + rowid).select2({
                                    data: data,
                                    escapeMarkup: function (markup) {
                                        return markup;
                                    },
                                    templateResult: function (data) {
                                        return data.html;
                                    },
                                    templateSelection: function (data) {
                                        return data.text;
                                    }

                                })

                            },
                            error: function (ex) {
                                alert('Failed.' + ex);
                            }

                        });

                        //console.log(v.SerialItemArray);

                        $("#D" + rowid).val(v.SerialItemArray).change();//v.SerialItem

                    });

                    console.log(res.ExchangeItems);
                    ///sales exchange items
                    $.each(res.ExchangeItems, function (i, v) {

                        $('#SalesExchangeItems').dataTable().fnAddData([v.Id, v.ProductId, v.WarehouseId, v.Product.Name, v.Description, v.vWarehouse.WhShortName, v.Price, v.Quantity, v.Amount, '<a data-itemId="0" href="#" class="dlttrashsubsection deleteItem"> <i class="fa fa-trash"></i></a>', null, false, false, v.CostPrice, v.CommissionAmount, v.CommissionPer, v.UserCommissionAmount]);
                        //console.log(v.BatchSerialItems);

                        $.each(v.BatchSerialItems, function (ii, vv) {
                            var deletestring = '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash"></i></a >';
                            if (vv.IsUsed == true) { deletestring = '<h5 style="color:Red; font-weight:bold">Sold</h5>' }

                            $('#BatchSerialList').dataTable().fnAddData([
                                vv.Id,
                                vv.SalesExchangeItemId,
                                vv.ProductId,
                                vv.BatchSerialNo,
                                0,//vv.SLNo,//rowCountpl + 1,
                                deletestring,
                                false,
                                vv.IsUsed,
                                false,
                                vv.PurchaseBatchId
                            ]);

                        });

                        var rowid = finalrowid;

                        $("#N" + rowid).autocomplete({
                            source: function (request, response) {
                                $.ajax({
                                    url: '../admin/ProductSearchAvgCosting/',
                                    dataType: "json",
                                    data: { query: $("#N" + rowid).val(), WarehouseId: $("#WHI" + rowid).val() },
                                    success: function (data) {
                                        //console.log(data);
                                        response($.map(data, function (item) {
                                            return { ProductId: item.Id, Description: item.Description, label: item.Category.Name + ' ' + item.Name + ' ' + item.Description + ' ' + item.Code, Price: item.Price, CostPrice: item.CostPrice, CommissionAmount: v.CommissionAmount, CommissionPer: v.CommissionPer };
                                        }));
                                    },
                                    error: function (xhr, status, error) {
                                        alert("Error");
                                    },
                                });
                            },
                            minLength: 3,
                            select: function (event, uirow) {
                                $("#PI" + rowid).html(uirow.item.ProductId);
                                //$("#WHI" + rowid).html(uirow.item.ProductId);

                                $("#P" + rowid).val(uirow.item.Price);
                                $("#CP" + rowid).val(uirow.item.CostPrice);
                                $("#CA" + rowid).val(uirow.item.CommissionAmount);
                                $("#CPR" + rowid).val(uirow.item.CommissionPer);
                                $("#UCA" + rowid).val(uirow.item.CommissionAmount * quantity);

                                $("#D" + rowid).val(uirow.item.Description);
                                var quantity = $("#Q" + rowid).val();
                                $("#A" + rowid).html(uirow.item.Price * quantity);
                                calculateSum();

                            }

                        });


                        $("#D" + rowid).select2({
                            minimumResultsForSearch: Infinity
                        });


                        $("#D" + rowid).empty();
                        arr.length = 0;

                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("ProductsBatchSerialMultiSelectForSalesRetrun", "Admin")',
                            dataType: 'json',
                            async: false,
                            data: { ProductId: $("#PI" + rowid).html(), salesreturnId: $("#BtnSave").attr("data-sale-Id") },
                            success: function (data) {

                                $("#D" + rowid).select2({
                                    data: data,
                                    escapeMarkup: function (markup) {
                                        return markup;
                                    },
                                    templateResult: function (data) {
                                        return data.html;
                                    },
                                    templateSelection: function (data) {
                                        return data.text;
                                    }

                                })

                            },
                            error: function (ex) {
                                alert('Failed.' + ex);
                            }

                        });

                        //console.log(v.SerialItemArray);

                        $("#D" + rowid).val(v.SerialItemArray).change();//v.SerialItem

                           });


                    $.each(res.SalesReturnPayments, function (i, v) {
                        $('#tblpayments').dataTable().fnAddData([v.Id, null, "", v.AccountHeadId, v.vChartofAccounts.AccName, v.Amount, v.PaymentCardNo, '<a data-itemId="0" href="#" class="dlttrashpayments deleteItem"> <i class="fa fa-trash"></i></a >']);
                    });


                    $("#Customer").val(res.CustomerId).change();
                    $("#Warehouse").val(res.WarehouseIdMain).change();

                    customerinfohide();
                    calculateSum();

                }).fail(function (err) {
                    console.log(err);
                });
            }
            else {
                var idGen = new Generator();
                $('#Code').val("SR-"+idGen.getId());

                $('#Discount').val(0);
                $('#Shipping').val(0);
                $('#TotalVat').val(0);
                $('#ServiceCharge').val(0);
                $('#PaidAmt').val(0);

            }


                 if (salesreturnId == 0) {
                     $(document).on('click', 'a.deleteItem', function (e) {
                         e.preventDefault();
                         var $self = $(this);
                         $(this).parents('tr').css("background-color", "#1f306f").fadeOut(800, function () {
                             $(this).remove();
                             calculateSum();
                         });
                     });
                 };


             });

            $.ajax({
                type: "GET",
                url: "../SalesReturn/GetCustomers",
                datatype: "Json",
                success: function (data) {

                    $.each(data, function (index, value) {
                        $('#Customer').append('<option value="' + value.Id + '">' + value.Name + '</option>');
                    });
                }
            });


            $.ajax({
                type: "GET",
                url: "../SalesReturn/GetAccountHead",
                datatype: "Json",
                success: function (data) {
                    //console.log(data);

                    $.each(data, function (index, value) {
                        $('#AccountHead').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                    });



                    $.each(data, function (index, value) {
                        $('#AccountHeadRow').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                    });
                    //$('#AccountHeadRow').append('<option value=null>=N/A=</option>');

                }
            });



            //$.ajax({
            //    type: "GET",
            //    url: "../SalesReturn/GetPaymentTypes",
            //    datatype: "Json",
            //    success: function (data) {

            //        $.each(data, function (index, value) {
            //            $('#PaymentTypes').append('<option value="' + value.Value + '">' + value.Text + '</option>');
            //        });
            //    }
            //});


        });

        function Generator() { };
        Generator.prototype.rand = Math.floor(Math.random() * 26) + Date.now();
        Generator.prototype.getId = function () {
            return this.rand++;
        };


        $('.mydatepicker').datepicker({
            dateFormat: 'dd-M-yy',
            todayHighlight: true,
            autoclose: true
        });

        $('#SalesReturnItems').on('change', ".quantity , .price ", update);

        function update() {

            //alert('hit');
            var qty = parseFloat($(this).parents('tr').find(".quantity").val());
            var price = parseFloat($(this).parents('tr').find(".price").val());
            var amount = qty * price;
            $(this).parents('tr').find(".amount").text(amount);



            var commissionper = parseFloat($(this).parents('tr').find(".commissionper").text());
            var commissionamount = parseFloat($(this).parents('tr').find(".commissionamount").text());
            var usercommisionamount = qty * commissionamount;

            //alert(commissionamount);
            if (commissionper > 0) {
                usercommisionamount = (amount * commissionper)/100
            }

            $(this).parents('tr').find(".usercommissionamount").text(usercommisionamount);
            //alert('abc');
            calculateSum();
        }



        $('#SalesExchangeItems').on('change', ".quantity , .price ", updateExchange);

        function updateExchange() {

            //alert('hit');
            var qty = parseFloat($(this).parents('tr').find(".quantity").val());
            var price = parseFloat($(this).parents('tr').find(".price").val());
            var amount = qty * price;
            $(this).parents('tr').find(".amount").text(amount);



            var commissionper = parseFloat($(this).parents('tr').find(".commissionper").text());
            var commissionamount = parseFloat($(this).parents('tr').find(".commissionamount").text());
            var usercommisionamount = qty * commissionamount;

            //alert(commissionamount);
            if (commissionper > 0) {
                usercommisionamount = (amount * commissionper) / 100
            }

            $(this).parents('tr').find(".usercommissionamount").text(usercommisionamount);
            //alert('abc');
            calculateSum();
        }


        //$('#SalesReturnItems').on('change', ".prdname , .description", AddRow);

        //function AddRow() {

        //    var x = SalesReturnItems.row(':last-child').data();
        //    console.log(x);
        //    //var qty = parseFloat($(this).parents('tr').find(".quantity").val());
        //    //var price = parseFloat($(this).parents('tr').find(".price").val());
        //    //var amount = qty * price;
        //    //$(this).parents('tr').find(".amount").text(amount);
        //    //calculateSum();
        //}




        function generateRandom() {
            const randomNum = 100000 + Math.random() * 100000;
            return Math.round(randomNum / 10) * 10;
        }
        var finalrowid = 'N1234';



        var SalesReturnItems = $('#SalesReturnItems').DataTable({
            dom: '<"dom_wrapper fh-fixedHeader"fl>tip',
            'aoColumns': [
                { 'sClass': 'id d-none', 'visible': true },
                { 'sClass': 'productid d-none', 'visible': true },
                { 'sClass': 'warehouseid d-none', 'visible': true },

                { 'sClass': 'prdname_row', 'visible': true },
                { 'sClass': 'description_row', 'visible': true },
                { 'sClass': 'warehouse_row text-center', 'visible': true },

                { 'sClass': 'price_row', 'visible': true },
                { 'sClass': 'quantity_row', 'visible': true },
                { 'sClass': 'amount text-right', 'visible': true },
                null,
                {
                    "sClass": "checkbox",
                    "visible": true,
                    "render": function () {
                        return '<input type="checkbox" class="clickchk"  onchange ="cbChange(this)"  data-toggle="modal" data-target="#checkModal" >';
                    }
                },
                { "sClass": "IsDelete d-none", "visible": true },
                { "sClass": "IsTransaction d-none", "visible": true },
                { 'sClass': 'costprice d-none', 'visible': true },
                { 'sClass': 'commissionamount d-none', 'visible': true },
                { 'sClass': 'commissionper d-none', 'visible': true },
                { 'sClass': 'usercommissionamount d-none', 'visible': true }
            ],
            columnDefs: [
                {
                    'render': function (data, type, row) {
                        return '<input class="prdname form-control" name="prdname" type="text" value="' + data + '" >';

                    },
                    'targets': 3
                },
                {
                    "render": function (data, type, row) {
                        //<input class="input-tags" type="text" data-role="tagsinput">
                        //return '<input class="input-tags description form-control" name="description" type="text" data-val="true"  value="' + data + '">';
                        return '<select class="description form-control" name="description" data-val="true" value="' + data + '" multiple = "multiple">';


                    },
                    "targets": 4
                },
                {
                    'render': function (data, type, row) {
                        return '<input class="form-control price text-center" name="price" type="number" data-val="true"  value="' + data + '"  autocomplete = "off" >';
                    },
                    'targets': 6
                },
                {
                    "render": function (data, type, row) {

                        return '<input class="form-control quantity text-center" name="quantity" type="number"   value="' + data + '"  autocomplete = "off"  >';
                    },
                    "targets": 7
                }
            ],
            "fnCreatedRow": function (nRow, aData, iDataIndex) {
                var rowid = generateRandom();
                //alert(aData);
                $(nRow).attr('id', 'rowid' + rowid);
                $('td:eq(1)', nRow).attr('id', 'PI' + rowid);
                $('td:eq(2)', nRow).attr('id', 'WHI' + rowid);
                $('td:eq(3)', nRow).find("input[name='prdname']").attr('id', 'N' + rowid);
                $('td:eq(4)', nRow).find("select[name='description']").attr('id', 'D' + rowid);
                $('td:eq(5)', nRow).find("input[name='warehouse']").attr('id', 'W' + rowid);
                $('td:eq(6)', nRow).find("input[name='price']").attr('id', 'P' + rowid);
                $('td:eq(7)', nRow).find("input[name='quantity']").attr('id', 'Q' + rowid);
                $('td:eq(8)', nRow).attr('id', 'A' + rowid);
                $('td:eq(12)', nRow).attr('id', 'T' + rowid);
                $('td:eq(13)', nRow).attr('id', 'CP' + rowid);
                $('td:eq(14)', nRow).attr('id', 'CA' + rowid);
                $('td:eq(15)', nRow).attr('id', 'CPR' + rowid);
                $('td:eq(16)', nRow).attr('id', 'UCA' + rowid);




                finalrowid = rowid;


                var serialrowid = "#D" + rowid;
                //alert(serialrowid);
                $(document).on('change', serialrowid, function () {

                    var countlength = $(serialrowid + ' :selected').length;

                    //alert('found');
                    //alert(countlength);

                    if (countlength > 0) {
                        $("#Q" + rowid).val(countlength);
                        var price = parseFloat($("#P" + rowid).val());

                        var amount = countlength * price;
                        //alert(amount);
                        $("#A" + rowid).text(amount);
                        $("#T" + rowid).text('True');


                        var CommissionAmount = parseFloat($("#CA" + rowid).text());
                        var commissionper = parseFloat($("#CPR" + rowid).text());


                        var usercommissionamount = countlength * CommissionAmount;

                        //alert(commissionamount);
                        if (commissionper > 0) {
                            usercommissionamount = (amount * commissionper) / 100
                        }



                        //alert(amount);
                        $("#UCA" + rowid).text(usercommissionamount);
                    }

                    //$('#SalesReturnItems').on('change', ".quantity , .price", update);

                    //function update() {

                        //alert('hit');
                        //var qty = parseFloat(countlength);


                        calculateSum();
                    //}

                    //calculateSum();
                    //alert(countlength);
                });



            },
            'paging': false,
            'info': false,
            'ordering': false,
            'searching': false,

            language: { search: '', searchPlaceholder: "Search..." }
        });


        ////fahad
        var SalesExchangeItems = $('#SalesExchangeItems').DataTable({
        dom: '<"dom_wrapper fh-fixedHeader"fl>tip',
        'aoColumns': [
            { 'sClass': 'id d-none', 'visible': true },
            { 'sClass': 'productid d-none', 'visible': true },
            { 'sClass': 'warehouseid d-none', 'visible': true },

            { 'sClass': 'prdname_row', 'visible': true },
            { 'sClass': 'description_row', 'visible': true },
            { 'sClass': 'warehouse_row text-center', 'visible': true },

            { 'sClass': 'price_row', 'visible': true },
            { 'sClass': 'quantity_row', 'visible': true },
            { 'sClass': 'amount text-right', 'visible': true },
            null,
            {
                "sClass": "checkbox",
                "visible": true,
                "render": function () {
                    return '<input type="checkbox" class="clickchk"  onchange ="cbChangeExchange(this)"  data-toggle="modal" data-target="#checkModalExchange" >';
                }
            },
            { "sClass": "IsDelete d-none", "visible": true },
            { "sClass": "IsTransaction d-none", "visible": true },
            { 'sClass': 'costprice d-none', 'visible': true },
            { 'sClass': 'commissionamount d-none', 'visible': true },
            { 'sClass': 'commissionper d-none', 'visible': true },
            { 'sClass': 'usercommissionamount d-none', 'visible': true }
        ],
        columnDefs: [
            {
                'render': function (data, type, row) {
                    return '<input class="prdname form-control" name="prdname" type="text" value="' + data + '" >';

                },
                'targets': 3
            },
            {
                "render": function (data, type, row) {
                    //<input class="input-tags" type="text" data-role="tagsinput">
                    //return '<input class="input-tags description form-control" name="description" type="text" data-val="true"  value="' + data + '">';
                    return '<select class="description form-control" name="description" data-val="true" value="' + data + '" multiple = "multiple">';


                },
                "targets": 4
            },
            {
                'render': function (data, type, row) {
                    return '<input class="form-control price text-center" name="price" type="number" data-val="true"  value="' + data + '"  autocomplete = "off" >';
                },
                'targets': 6
            },
            {
                "render": function (data, type, row) {

                    return '<input class="form-control quantity text-center" name="quantity" type="number"   value="' + data + '"  autocomplete = "off"  >';
                },
                "targets": 7
            }
        ],
        "fnCreatedRow": function (nRow, aData, iDataIndex) {
            var rowid = generateRandom();
            //alert(aData);
            $(nRow).attr('id', 'rowid' + rowid);
            $('td:eq(1)', nRow).attr('id', 'PI' + rowid);
            $('td:eq(2)', nRow).attr('id', 'WHI' + rowid);
            $('td:eq(3)', nRow).find("input[name='prdname']").attr('id', 'N' + rowid);
            $('td:eq(4)', nRow).find("select[name='description']").attr('id', 'D' + rowid);
            $('td:eq(5)', nRow).find("input[name='warehouse']").attr('id', 'W' + rowid);
            $('td:eq(6)', nRow).find("input[name='price']").attr('id', 'P' + rowid);
            $('td:eq(7)', nRow).find("input[name='quantity']").attr('id', 'Q' + rowid);
            $('td:eq(8)', nRow).attr('id', 'A' + rowid);
            $('td:eq(12)', nRow).attr('id', 'T' + rowid);
            $('td:eq(13)', nRow).attr('id', 'CP' + rowid);
            $('td:eq(14)', nRow).attr('id', 'CA' + rowid);
            $('td:eq(15)', nRow).attr('id', 'CPR' + rowid);
            $('td:eq(16)', nRow).attr('id', 'UCA' + rowid);




            finalrowid = rowid;


            var serialrowid = "#D" + rowid;
            //alert(serialrowid);
            $(document).on('change', serialrowid, function () {

                var countlength = $(serialrowid + ' :selected').length;

                //alert('found');
                //alert(countlength);

                if (countlength > 0) {
                    $("#Q" + rowid).val(countlength);
                    var price = parseFloat($("#P" + rowid).val());

                    var amount = countlength * price;
                    //alert(amount);
                    $("#A" + rowid).text(amount);
                    $("#T" + rowid).text('True');


                    var CommissionAmount = parseFloat($("#CA" + rowid).text());
                    var commissionper = parseFloat($("#CPR" + rowid).text());


                    var usercommissionamount = countlength * CommissionAmount;

                    //alert(commissionamount);
                    if (commissionper > 0) {
                        usercommissionamount = (amount * commissionper) / 100
                    }



                    //alert(amount);
                    $("#UCA" + rowid).text(usercommissionamount);
                }

                //$('#SalesReturnItems').on('change', ".quantity , .price", update);

                //function update() {

                //alert('hit');
                //var qty = parseFloat(countlength);


                calculateSum();
                //}

                //calculateSum();
                //alert(countlength);
            });



        },
        'paging': false,
        'info': false,
        'ordering': false,
        'searching': false,

        language: { search: '', searchPlaceholder: "Search..." }
    });

        //$(document).on('click', 'a.f', function (e) {
        //    e.preventDefault();
        //    var $self = $(this);
        //    $(this).parents('tr').css("background-color", "#1f306f").fadeOut(800, function () {
        //        $(this).remove();
        //        calculateSum();
        //    });
        //});

    autocompletefunction();
    function autocompletefunction() {
        $("#Search").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '../admin/ProductSearchAvgCosting/',
                    dataType: "json",
                    data: { query: $("#Search").val(), WarehouseId: $("#Warehouse").val()  },
                    success: function (data) {
                        //console.log(data);
                        response($.map(data, function (item) {
                            //return { ProductId: item.Id, Description: item.Description, label: item.Name, Price: item.Price, Code: item.Code };
                            return { ProductId: item.Id, Description: item.Description, ProductName: item.Name + ' ' + item.Description, label: item.Category.Name + ' ' + item.Name + ' ' + item.Description + ' ' + item.Code, Price: item.Price, CostPrice: item.CostPrice, CommissionAmount: item.CommissionAmount, CommissionPer: item.CommissionPer };
                        }));
                    },
                    error: function (xhr, status, error) {
                        alert("Error");
                    },
                });
            },
            autoFocus: true,
            minLength: 3,
            select: function (event, ui) {


                var duplicatefound = 0;

                $('#SalesReturnItems tbody tr').each(function () {
                    //alert('searching');
                    //alert(ui.item.ProductId);
                    //alert($(this).find('.BatchSerialNo').val());
                    //alert(ui.item.label);

                    //alert($(this).find('.BatchSerialNo').val());
                    if ($.trim($(this).find('.ProductId').text()) == ui.item.ProductId) {
                        //alert('Duplicate Found !!');
                        toastr.error('Duplicate Found !! ' + ui.item.label);
                        return true;
                    }

                });


                if (duplicatefound == 0) {
                    //$('#SalesReturnItems').dataTable().fnAddData([
                    //    0,
                    //    SalesReturnItemId,
                    //    ProductId,
                    //    ui.item.label,
                    //    0,//rowCountpl + 1,
                    //    '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash"></i></a >',
                    //    false,
                    //    false,
                    //    true,
                    //    ui.item.BatchSerialId
                    //]);
                    newrowwithui(ui);

                }





                //newrowwithui(ui);

                calculateSum();
                $('#Search').val("");


                return false;
            }
        });
    }


    autocompletefunctionExchange();
    function autocompletefunctionExchange() {
        $("#SearchExchange").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '../admin/ProductSearchAvgCosting/',
                    dataType: "json",
                    data: { query: $("#SearchExchange").val(), WarehouseId: $("#Warehouse").val() },
                    success: function (data) {
                        //console.log(data);
                        response($.map(data, function (item) {
                            //return { ProductId: item.Id, Description: item.Description, label: item.Name, Price: item.Price, Code: item.Code };
                            return { ProductId: item.Id, Description: item.Description, ProductName: item.Name + ' ' + item.Description, label: item.Category.Name + ' ' + item.Name + ' ' + item.Description + ' ' + item.Code, Price: item.Price, CostPrice: item.CostPrice, CommissionAmount: item.CommissionAmount, CommissionPer: item.CommissionPer };
                        }));
                    },
                    error: function (xhr, status, error) {
                        alert("Error");
                    },
                });
            },
            autoFocus: true,
            minLength: 3,
            select: function (event, ui) {


                var duplicatefound = 0;

                $('#SalesExchangeItems tbody tr').each(function () {
                    //alert('searching');
                    //alert(ui.item.ProductId);
                    //alert($(this).find('.BatchSerialNo').val());
                    //alert(ui.item.label);

                    //alert($(this).find('.BatchSerialNo').val());
                    if ($.trim($(this).find('.ProductId').text()) == ui.item.ProductId) {
                        //alert('Duplicate Found !!');
                        toastr.error('Duplicate Found !! ' + ui.item.label);
                        return true;
                    }

                });


                if (duplicatefound == 0) {
                    //$('#SalesReturnItems').dataTable().fnAddData([
                    //    0,
                    //    SalesReturnItemId,
                    //    ProductId,
                    //    ui.item.label,
                    //    0,//rowCountpl + 1,
                    //    '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash"></i></a >',
                    //    false,
                    //    false,
                    //    true,
                    //    ui.item.BatchSerialId
                    //]);
                    newrowwithuiExchange(ui);

                }





                //newrowwithui(ui);

                calculateSum();
                $('#SearchExchange').val("");

                return false;
            }
        });
    }




    autocompletefunctionPhoneNo();
    function autocompletefunctionPhoneNo() {
        $("#PhoneNo").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '../admin/CustomerSearchByPhoneNo/',
                    dataType: "json",
                    data: { query: $("#PhoneNo").val() },
                    success: function (data) {
                        console.log(data);
                        response($.map(data, function (item) {
                            return { PhoneNo: item.PhoneNo, CustomerName: item.CustomerName, PrimaryAddress: item.PrimaryAddress, label: item.PhoneNo + ' ' + item.CustomerName + ' ' + item.PrimaryAddress };
                        }));
                    },
                    error: function (xhr, status, error) {
                        alert("Error");
                    },
                });
            },
            autoFocus: true,
            minLength: 3,
            change: function (event, ui) {
                if (ui.item === null) {
                    //$(this).val('');
                    //$('#PhoneNo').val('');
                    $('#CustomerName').val('');
                    $('#CustomerAddress').val('');
                }
            },
            select: function (event, ui) {
                //$('#SearchCustomer').val(ui.item.PhoneNo);

                $("#PhoneNo").val(ui.item.PhoneNo);
                $("#CustomerName").val(ui.item.CustomerName);
                $("#CustomerAddress").val(ui.item.PrimaryAddress);

                return false;
            }
        });
    }

    $('#CustomerName').keydown(function () {
        if ($('#CustomerName').val() == "") {
            $('#PhoneNo').val('');
            //$('#CustomerName').val('');
            $('#CustomerAddress').val('');
        }

    });





    autocompletefunctionInvoiceNo();
    function autocompletefunctionInvoiceNo() {
        $("#InvoiceNo").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '../admin/SalesSearchByInvoiceNo/',
                    dataType: "json",
                    data: { query: $("#InvoiceNo").val() },
                    success: function (data) {
                        console.log(data);
                        response($.map(data, function (item) {
                            return { SaleCode: item.SaleCode, CustomerName: item.CustomerName, PrimaryAddress: item.PrimaryAddress, PhoneNo: item.PhoneNo, label: item.SaleCode + ' ' + item.CustomerName + ' ' + item.PhoneNo + ' ' + item.PrimaryAddress, CustomerId: item.CustomerId, SaleId: item.SaleId };
                        }));
                    },
                    error: function (xhr, status, error) {
                        alert("Error");
                    },
                });
            },
            autoFocus: true,
            minLength: 3,
            change: function (event, ui) {
                if (ui.item === null) {
                    //$(this).val('');
                    //$('#PhoneNo').val('');
                    $('#CustomerName').val('');
                    $('#CustomerAddress').val('');
                    $('#InvoiceId').val('');
                    $('#InvoiceNo').val('');
                    $('#Customer').val(null).show();
                    $('#PhoneNo').val('');
                }
            },
            select: function (event, ui) {
                //$('#SearchCustomer').val(ui.item.PhoneNo);
                //alert(ui.item.CustomerId);
                $('#Customer').val(ui.item.CustomerId).change();
                //alert($('#Customer').val());

                customerinfohide();

                $("#PhoneNo").val(ui.item.PhoneNo);
                $("#CustomerName").val(ui.item.CustomerName);
                $("#CustomerAddress").val(ui.item.PrimaryAddress);

                $('#InvoiceId').val(ui.item.SaleId);
                $('#InvoiceNo').val(ui.item.SaleCode);



                resetData();
                getSaleInfoForReturn(ui.item.SaleId);

                calculateSum();
                //alert('ok');

                return false;
            }
        });
    };



    function resetData() {

        var table = $('#SalesReturnItems').DataTable()
        var tableExchange = $('#SalesExchangeItems').DataTable()

        var tblpaymentsabc = $('#tblpayments').DataTable();

        table.rows().remove().draw(false);
        tableExchange.rows().remove().draw(false);
        tblpaymentsabc.rows().remove().draw(false);

        //var myTable = $('#tbl').DataTable();
        //myTable.rows().delete();

        //$('#myform').find('input:text').each(function () {
        //    //$(this).val('0');


        //    if ($(this).attr('id') == 'SaleCode' || $(this).attr('id') == 'myInput') {

        //        $(this).val('');
        //    }
        //    else {

        //        $(this).val('0');
        //    }

        //}
        //);



        //$('#SaleCode').text('').change();
        //$('#SaleCode').val('abc');
        //alert('hit');


        calculateSum();
        //$('#Product').focus();
    };




    autocompletefunctionBarcodeScan();
    function autocompletefunctionBarcodeScan() {
        $("#SearchSerial").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '../admin/ProductsSerialSearchByBarcodeForSalesReturn/',
                    dataType: "json",
                    data: { query: $("#SearchSerial").val() },
                    success: function (data) {
                        //console.log(data);
                        response($.map(data, function (item) {
                            return { SerialId: item.Id, ProductId: item.ProductId, label: item.BatchSerialNo + ' ' + item.ProductName, ProductName: item.ProductName, Description: item.Descriptionm, BatchSerialNo: item.BatchSerialNo, Price: item.SalePrice, CostPrice: item.CostPrice, CommissionAmount: item.CommissionAmount, CommissionPer: item.CommissionPer };
                        }));
                    },
                    error: function (xhr, status, error) {
                        alert("Error");
                    },
                });
            },
            autoFocus: true,
            focus: function (event, ui) { event.preventDefault(); },
            minLength: 1,
            select: function (event, ui) {


                var duplicatefound = 0;

                $('#SalesReturnItems tbody tr').each(function () {
                    if ($.trim($(this).find('.ProductId').text()) == ui.item.ProductId) {
                        var array = $(this).find('.description').val();
                        var quantityval = $(this).find('.quantity').val();

                        $(this).find('.IsTransaction').val(true);

                        var serialtextboxid = $(this).find('.description').attr('id');
                        var quantityid = $(this).find('.quantity ').attr('id');

                        $.each(array, function (key, value) {

                            if (value == ui.item.SerialId) {
                                toastr.error('Dupliacte Serial Found !! ' + ui.item.label);

                            }
                            else {
                                array.push(ui.item.SerialId.toString());
                                 $("#" + serialtextboxid).val(array).trigger('change');

                                return true;
                            }


                        });

                        duplicatefound = 1;
                        return true;
                    }

                });


                if (duplicatefound == 0) {
                    newrowwithuiBarcode(ui);
                }

                //newrowwithuiBarcode(ui);

                calculateSum();
                $('#SearchSerial').val("");


                return false;
            }
        }).on("focus", function () {
            if ($("#SearchSerial").val().length > 0)
            {
                $(this).autocomplete("search", '');

            };

        });
    }


    autocompletefunctionBarcodeScanExchange();
    function autocompletefunctionBarcodeScanExchange() {
        $("#SearchSerialExchange").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '../admin/ProductsSerialSearchByBarcodeForSalesReturn/',
                    dataType: "json",
                    data: { query: $("#SearchSerial").val() },
                    success: function (data) {
                        //console.log(data);
                        response($.map(data, function (item) {
                            return { SerialId: item.Id, ProductId: item.ProductId, label: item.BatchSerialNo + ' ' + item.ProductName, ProductName: item.ProductName, Description: item.Descriptionm, BatchSerialNo: item.BatchSerialNo, Price: item.SalePrice, CostPrice: item.CostPrice, CommissionAmount: item.CommissionAmount, CommissionPer: item.CommissionPer };
                        }));
                    },
                    error: function (xhr, status, error) {
                        alert("Error");
                    },
                });
            },
            autoFocus: true,
            focus: function (event, ui) { event.preventDefault(); },
            minLength: 1,
            select: function (event, ui) {


                var duplicatefound = 0;

                $('#SalesReturnItems tbody tr').each(function () {
                    if ($.trim($(this).find('.ProductId').text()) == ui.item.ProductId) {
                        var array = $(this).find('.description').val();
                        var quantityval = $(this).find('.quantity').val();

                        $(this).find('.IsTransaction').val(true);

                        var serialtextboxid = $(this).find('.description').attr('id');
                        var quantityid = $(this).find('.quantity ').attr('id');

                        $.each(array, function (key, value) {

                            if (value == ui.item.SerialId) {
                                toastr.error('Dupliacte Serial Found !! ' + ui.item.label);

                            }
                            else {
                                array.push(ui.item.SerialId.toString());
                                 $("#" + serialtextboxid).val(array).trigger('change');

                                return true;
                            }


                        });

                        duplicatefound = 1;
                        return true;
                    }

                });


                if (duplicatefound == 0) {
                    newrowwithuiBarcode(ui);
                }

                //newrowwithuiBarcode(ui);

                calculateSum();
                $('#SearchSerial').val("");


                return false;
            }
        }).on("focus", function () {
            if ($("#SearchSerial").val().length > 0)
            {
                $(this).autocomplete("search", '');

            };

        });
    }



    autocompleteSerialSearchfunction();

    function autocompleteSerialSearchfunction() {
        $("#slnoSearch").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '../admin/ProductsBatchSerialForSalesReturn/',
                    dataType: "json",
                    data: { query: $("#slnoSearch").val(), ProductId: ProductId },
                    success: function (data) {
                        //console.log(data);
                        //alert(data);
                        response($.map(data, function (item) {
                            //return { ProductId: item.Id, Description: item.Description, label: item.Name, Price: item.Price, Code: item.Code };
                            return { BatchSerialId: item.Id, label: item.BatchSerialNo };
                        }));
                    },
                    error: function (xhr, status, error) {
                        alert("Error");
                    },
                });
            },
            autoFocus: true,
            minLength: 3,
            select: function (event, ui) {

                var duplicatefound = 0;

                $('#BatchSerialList tbody tr').each(function () {

                    //alert($(this).find('.BatchSerialNo').val());
                    //alert(ui.item.label);

                    //alert($(this).find('.BatchSerialNo').val());
                    if ($(this).find('.BatchSerialNo').val() == ui.item.label) {
                        //alert('Duplicate Found !!');
                        toastr.error('Duplicate Found !! ' + ui.item.label);
                        duplicatefound = 1;
                        return true;
                    }

                });


                if (duplicatefound == 0) {
                    $('#BatchSerialList').dataTable().fnAddData([
                        0,
                        SalesReturnItemId,
                        ProductId,
                        ui.item.label,
                        0,//rowCountpl + 1,
                        '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash"></i></a >',
                        false,
                        false,
                        true,
                        ui.item.BatchSerialId
                    ]);

                }


                var targetTablepl = $("#BatchSerialList").DataTable();

                var xcount = targetTablepl.rows(':visible').count();
                //alert(xcount);
                var table = $('#SalesReturnItems').DataTable();
                //var datacurrentvalue = table.row($('input[type=checkbox]:checked').parents('tr')).data();
                var rownovouchersub = table.row($('input[type=checkbox]:checked').parents('tr')).index();
                //alert(rownovouchersub);

                var cellprice  = $('#SalesReturnItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();
                console.log(cellprice);
                //cellprice.data(xcount);

                var cellqty = table.cell(rownovouchersub, 7);
                cellqty.data(xcount);
                var cellamount = table.cell(rownovouchersub, 8);
                cellamount.data(xcount * cellprice);



                var commissionamountrow = $('#SalesReturnItems tbody tr').filter(':has(:checkbox:checked)').find('.commissionamount').val();
                alert(commissionamountrow);
                console.log(commissionamountrow.data());
                var cellcommissionamount = table.cell(rownovouchersub, 15);
                cellcommissionamount.data(xcount * commissionamountrow);


                //update();

                calculateSum();


                $('#slnoSearch').val("");
                $('#slnoSearch').text("");


                return false;

                //calculateSum();


            }
        });
    }

        var SalesReturnItemId;
        var ProductId;

        var newDetailsId;
        var newOrderNo;
        var newUnitPrice;



        function cbChange(obj) {
            //calculateQtyBatch();

            var cbs = document.getElementsByClassName("clickchk");
            for (var i = 0; i < cbs.length; i++) {
                cbs[i].checked = false;
            }
            obj.checked = true;
            //alert('hit');
            //console.log(obj);


            var table = $('#SalesReturnItems').DataTable();
            //var tableserial = $('#tblserial').DataTable();
            var data = null;

            if (obj.checked == true) {

                data = table.row($('input[type=checkbox]:checked').parents('tr')).data();

                SalesReturnItemId = data[0];
                ProductId = data[1];


                //alert('clicked');
                //console.log(data);

                //alert(data[3]);
                //var termsid = data[0];
                ////////serialno = data[4];

                ////////SalesReturnItemId = data[2];
                ////////newDetailsId = data[1];
                ////////newOrderNo = data[4];
                ////////newUnitPrice = data[9];

                //alert(serialno);


                $('#BatchSerialList tbody tr').show();
                //alert('working');
                $('#BatchSerialList tbody tr').each(function () {
                    //$(this).hide();

                    //alert($.trim($(this).find('.IsDelete').text()));


                    if ($.trim($(this).find('.ProductId').text()) == ProductId && $.trim($(this).find('.IsDelete').text()) == 'false') { // if V is selected, hide
                        //  alert('found');
                        $(this).show();
                    }
                    else {
                        $(this).hide();
                    }
                });


                var targetTablepl = $("#BatchSerialList").DataTable();

                var xcount = targetTablepl.rows(':visible').count();
                //alert(xcount);
                var table = $('#SalesReturnItems').DataTable();
                //var datacurrentvalue = table.row($('input[type=checkbox]:checked').parents('tr')).data();
                var rownovouchersub = table.row($('input[type=checkbox]:checked').parents('tr')).index();
                //alert(rownovouchersub);

                var cellprice  = $('#SalesReturnItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();
                console.log(cellprice.data());
                //cellprice.data(xcount);

                var cellqty = table.cell(rownovouchersub, 7);
                cellqty.data(xcount);
                var cellamount = table.cell(rownovouchersub, 8);
                cellamount.data(xcount * cellprice);



                var commissionamountrow = $('#SalesReturnItems tbody tr').filter(':has(:checkbox:checked)').find('.commissionamount').val();
                alert(commissionamountrow);
                console.log(commissionamountrow.data());
                var cellcommissionamount = table.cell(rownovouchersub, 15);
                cellcommissionamount.data(xcount * commissionamountrow);

                calculateSum();


            }
            else {
                // alert('You Un-Checked it');
            }

        }



        function newblankrow() {


            var rowid = generateRandom();
            $('#SalesReturnItems').dataTable().fnAddData(['0', 0, "", '', "", 0, '0', 0, '<a data-itemId="0" href="#" class="dlttrashsubsection deleteItem"> <i class="fa fa-trash"></i></a>', null, false, true,0,0,0]);

            rowid = finalrowid;
            $("#N" + rowid).autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '../admin/ProductSearchAvgCosting/',
                        dataType: "json",
                        data: { query: $("#N" + rowid).val(), WarehouseId: $("#WHI" + rowid).val()  },
                        //data: { query: prdnametest },

                        success: function (data) {
                            //console.log(data);
                            response($.map(data, function (item) {
                                //return { ProductId: item.Id, Description: item.Description, label: item.Name, Price: item.Price, Code: item.Code };
                                return { ProductId: item.Id, Description: item.Description, label: item.Category.Name + ' ' + item.Name + ' ' + item.Description + ' ' + item.Code, Price: item.Price, CostPrice: item.CostPrice, CommissionAmount: item.CommissionAmount, CommissionPer: item.CommissionPer };
                            }));
                        },
                        error: function (xhr, status, error) {
                            alert("Error");
                        },
                    });
                },
                minLength: 3,
                select: function (event, uirow) {


                    //alert("#P" + rowid);
                    $("#PI" + rowid).html(uirow.item.ProductId);
                    //alert('hit');
                    $("#D" + rowid).val(uirow.item.Description);

                    $("#P" + rowid).val(uirow.item.Price);
                    $("#CP" + rowid).val(uirow.item.CostPrice);
                    $("#CA" + rowid).val(uirow.item.CommissionAmount);
                    $("#CPR" + rowid).val(uirow.item.CommissionPer);
                    $("#UCA" + rowid).val(uirow.item.CommissionAmount * quantity);


                    var quantity = $("#Q" + rowid).val();

                    $("#A" + rowid).html(uirow.item.Price * quantity);


                    //var myTab = document.getElementById('SalesReturnItems');


                    // GET THE CELLS COLLECTION OF THE CURRENT ROW.
                    //var objCells = myTab.rows.item(2).cells;
                    //console.log(objCells[1].attr('id'));
                    //alert($().val());

                    //$('#SalesReturnItems').data.reload();


                    //var table123 = $('#SalesReturnItems').DataTable();

                    //let lastRow = table123.rows[table123.rows.length - 1];
                    //console.log(lastRow);

                    //var x = table123.row(':last-child').data();
                    //var z = x[1];
                    //console.log(x);

                    //var z = $('#SalesReturnItems tbody tr').length;
                    ////alert(z);
                    //var abc = $('#SalesReturnItems').dataTable().fnGetData()
                    //console.log(abc);
                    ////var aData = table123.row(z).data()[5];
                    ////alert(aData[z][1]);// will show first column data

                    //if (z > 0) {
                    //    newblankrow();
                    //}
                }
            });




        }




    function cbChangeExchange(obj) {
        //calculateQtyBatch();

        var cbs = document.getElementsByClassName("clickchkExchange");
        for (var i = 0; i < cbs.length; i++) {
            cbs[i].checked = false;
        }
        obj.checked = true;
        //alert('hit');
        //console.log(obj);


        var table = $('#SalesExchangeItems').DataTable();
        //var tableserial = $('#tblserial').DataTable();
        var data = null;

        if (obj.checked == true) {

            data = table.row($('input[type=checkbox]:checked').parents('tr')).data();

            SalesExchangeItemId = data[0];
            ProductId = data[1];


            //alert('clicked');
            //console.log(data);

            //alert(data[3]);
            //var termsid = data[0];
            ////////serialno = data[4];

            ////////SalesExchangeItemId = data[2];
            ////////newDetailsId = data[1];
            ////////newOrderNo = data[4];
            ////////newUnitPrice = data[9];

            //alert(serialno);


            $('#BatchSerialListExchange tbody tr').show();
            //alert('working');
            $('#BatchSerialListExchange tbody tr').each(function () {
                //$(this).hide();

                //alert($.trim($(this).find('.IsDelete').text()));


                if ($.trim($(this).find('.ProductId').text()) == ProductId && $.trim($(this).find('.IsDelete').text()) == 'false') { // if V is selected, hide
                    //  alert('found');
                    $(this).show();
                }
                else {
                    $(this).hide();
                }
            });


            var targetTablepl = $("#BatchSerialListExchange").DataTable();

            var xcount = targetTablepl.rows(':visible').count();
            //alert(xcount);
            var table = $('#SalesExchangeItems').DataTable();
            //var datacurrentvalue = table.row($('input[type=checkbox]:checked').parents('tr')).data();
            var rownovouchersub = table.row($('input[type=checkbox]:checked').parents('tr')).index();
            //alert(rownovouchersub);

            var cellprice = $('#SalesExchangeItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();
            console.log(cellprice.data());
            //cellprice.data(xcount);

            var cellqty = table.cell(rownovouchersub, 7);
            cellqty.data(xcount);
            var cellamount = table.cell(rownovouchersub, 8);
            cellamount.data(xcount * cellprice);



            var commissionamountrow = $('#SalesExchangeItems tbody tr').filter(':has(:checkbox:checked)').find('.commissionamount').val();
            alert(commissionamountrow);
            console.log(commissionamountrow.data());
            var cellcommissionamount = table.cell(rownovouchersub, 15);
            cellcommissionamount.data(xcount * commissionamountrow);

            calculateSum();


        }
        else {
            // alert('You Un-Checked it');
        }

    }



    function newblankrowExchange() {


        var rowid = generateRandom();
        $('#SalesExchangeItems').dataTable().fnAddData(['0', 0, "", '', "", 0, '0', 0, '<a data-itemId="0" href="#" class="dlttrashsubsection deleteItem"> <i class="fa fa-trash"></i></a>', null, false, true, 0, 0, 0]);

        rowid = finalrowid;
        $("#N" + rowid).autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '../admin/ProductSearchAvgCosting/',
                    dataType: "json",
                    data: { query: $("#N" + rowid).val(), WarehouseId: $("#WHI" + rowid).val() },
                    //data: { query: prdnametest },

                    success: function (data) {
                        //console.log(data);
                        response($.map(data, function (item) {
                            //return { ProductId: item.Id, Description: item.Description, label: item.Name, Price: item.Price, Code: item.Code };
                            return { ProductId: item.Id, Description: item.Description, label: item.Category.Name + ' ' + item.Name + ' ' + item.Description + ' ' + item.Code, Price: item.Price, CostPrice: item.CostPrice, CommissionAmount: item.CommissionAmount, CommissionPer: item.CommissionPer };
                        }));
                    },
                    error: function (xhr, status, error) {
                        alert("Error");
                    },
                });
            },
            minLength: 3,
            select: function (event, uirow) {


                //alert("#P" + rowid);
                $("#PI" + rowid).html(uirow.item.ProductId);
                //alert('hit');
                $("#D" + rowid).val(uirow.item.Description);

                $("#P" + rowid).val(uirow.item.Price);
                $("#CP" + rowid).val(uirow.item.CostPrice);
                $("#CA" + rowid).val(uirow.item.CommissionAmount);
                $("#CPR" + rowid).val(uirow.item.CommissionPer);
                $("#UCA" + rowid).val(uirow.item.CommissionAmount * quantity);


                var quantity = $("#Q" + rowid).val();

                $("#A" + rowid).html(uirow.item.Price * quantity);


                //var myTab = document.getElementById('SalesExchangeItems');


                // GET THE CELLS COLLECTION OF THE CURRENT ROW.
                //var objCells = myTab.rows.item(2).cells;
                //console.log(objCells[1].attr('id'));
                //alert($().val());

                //$('#SalesExchangeItems').data.reload();


                //var table123 = $('#SalesExchangeItems').DataTable();

                //let lastRow = table123.rows[table123.rows.length - 1];
                //console.log(lastRow);

                //var x = table123.row(':last-child').data();
                //var z = x[1];
                //console.log(x);

                //var z = $('#SalesExchangeItems tbody tr').length;
                ////alert(z);
                //var abc = $('#SalesExchangeItems').dataTable().fnGetData()
                //console.log(abc);
                ////var aData = table123.row(z).data()[5];
                ////alert(aData[z][1]);// will show first column data

                //if (z > 0) {
                //    newblankrow();
                //}
            }
        });




    }



        //function split(val) {
        //    return val.split(/,\s*/);
        //}
        //function extractLast(term) {
        //    return split(term).pop();
        //}


        function newrowwithuiExchange(ui) {


            var rowid = generateRandom();

            $('#SalesExchangeItems').dataTable().fnAddData(['0', ui.item.ProductId, $("#Warehouse").val(), ui.item.ProductName, ui.item.Description, $('#Warehouse option:selected').text(), ui.item.Price, '1', ui.item.Price, '<a data-itemId="0" href="#" class="dlttrashsubsection deleteItem"> <i class="fa fa-trash"></i></a>', null, false, true, ui.item.CostPrice, ui.item.CommissionAmount, ui.item.CommissionPer ,ui.item.CommissionAmount]);
            //alert('found');
            rowid = finalrowid;

            $("#N" + rowid).autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '../admin/ProductSearchAvgCosting/',
                        dataType: "json",
                        data: { query: $("#N" + rowid).val(), WarehouseId: $("#WHI" + rowid).val() },
                        //data: { query: prdnametest },

                        success: function (data) {
                            //console.log(data);
                            response($.map(data, function (item) {
                                //return { ProductId: item.Id, Description: item.Description, label: item.Name, Price: item.Price, Code: item.Code };
                                return { ProductId: item.Id, Description: item.Description, label: item.Category.Name + ' ' + item.Name + ' ' + item.Description + ' ' + item.Code, Price: item.Price, CostPrice: item.CostPrice, CommissionAmount: item.CommissionAmount, CommissionPer: item.CommissionPer };
                            }));
                        },
                        error: function (xhr, status, error) {
                            alert("Error");
                        },
                    });
                },
                minLength: 3,
                autoFocus: true,
                select: function (event, uirow) {

                    //alert('hit');
                    //alert(rowid);

                    //alert("#P" + rowid);
                    $("#PI" + rowid).html(uirow.item.ProductId);
                    $("#D" + rowid).val(uirow.item.Description);
                    $("#P" + rowid).val(uirow.item.Price);

                    $("#CP" + rowid).val(uirow.item.CostPrice);
                    $("#CA" + rowid).val(uirow.item.CommissionAmount);
                    $("#CPR" + rowid).val(uirow.item.CommissionPer);

                    $("#UCA" + rowid).val(uirow.item.CommissionAmount * quantity);

                    var quantity = $("#Q" + rowid).val();
                    $("#A" + rowid).html(uirow.item.Price * quantity);
                    //newblankrow();

                    //alert(rowid);

                    //var serialrowid = "#D" + rowid;
                    ////alert(serialrowid);
                    //$(document).on('change', serialrowid, function () {

                    //    var countlength = $(serialrowid +' :selected').length;
                    //    $("#Q" + rowid).val(countlength);
                    //    //alert(countlength);
                    //});



                    $("#D" + rowid).empty();
                    $("#D" + rowid).val(null);
                    //$("#D" + rowid).select2();

                    //arr.length = 0;

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("ProductsBatchSerialMultiSelectForSalesRetrun", "Admin")',
                        dataType: 'json',
                        async: false,
                        data: { ProductId: $("#PI" + rowid).html()  },
                        success: function (data) {
                            console.log(data);


                            $("#D" + rowid).select2({
                                data: data,
                                escapeMarkup: function (markup) {
                                    return markup;
                                },
                                templateResult: function (data) {
                                    return data.html;
                                },
                                templateSelection: function (data) {
                                    return data.text;
                                }

                            })

                            //console.log(data);
                            //var s = '';//'<option value="-1">Please Select Product</option>';
                            ////alert(data.length);
                            //for (var i = 0; i < data.length; i++) {
                            //    s += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                            //}
                            ////console.log(s);


                            //$("#D" + rowid).html(s);

                            //arr = s;
                        },
                        error: function (ex) {
                            alert('Failed.' + ex);
                        }

                    });

                }
            });




            var stringarray = [""];
            var arr = [];

            var arr_pincode = {};//JSON.parse(`{"24":[${stringarray}]}`);
            //var selected_state = [24, 27];
            //var selected_pin = JSON.parse('["380001"]');

            //var already_slc_pin = [];
            //var current_pin = [];


            $("#D" + rowid).select2({
                minimumResultsForSearch: Infinity
            });


            $("#D" + rowid).empty();
            arr.length = 0;

            $.ajax({
                type: 'POST',
                url: '@Url.Action("ProductsBatchSerialMultiSelectForSalesRetrun", "Admin")',
                dataType: 'json',
                async: false,
                data: { ProductId: $("#PI" + rowid).html()  },
                success: function (data) {
                   // console.log(data);



                    $("#D" + rowid).select2({
                        data: data,
                        escapeMarkup: function (markup) {
                            return markup;
                        },
                        templateResult: function (data) {
                            return data.html;
                        },
                        templateSelection: function (data) {
                            return data.text;
                        }

                    });

                    //var s = '';//'<option value="-1">Please Select Product</option>';
                    ////alert(data.length);
                    //for (var i = 0; i < data.length; i++) {
                    //    s += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                    //}
                    ////console.log(s);


                    //$("#D" + rowid).html(s);

                    //arr = s;
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }

            });
            return false;
        };


        function newrowwithui(ui) {


            var rowid = generateRandom();

            $('#SalesReturnItems').dataTable().fnAddData(['0', ui.item.ProductId, $("#Warehouse").val(), ui.item.ProductName, ui.item.Description, $('#Warehouse option:selected').text(), ui.item.Price, '1', ui.item.Price, '<a data-itemId="0" href="#" class="dlttrashsubsection deleteItem"> <i class="fa fa-trash"></i></a>', null, false, true, ui.item.CostPrice, ui.item.CommissionAmount, ui.item.CommissionPer ,ui.item.CommissionAmount]);
            //alert('found');
            rowid = finalrowid;

            $("#N" + rowid).autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '../admin/ProductSearchAvgCosting/',
                        dataType: "json",
                        data: { query: $("#N" + rowid).val(), WarehouseId: $("#WHI" + rowid).val() },
                        //data: { query: prdnametest },

                        success: function (data) {
                            //console.log(data);
                            response($.map(data, function (item) {
                                //return { ProductId: item.Id, Description: item.Description, label: item.Name, Price: item.Price, Code: item.Code };
                                return { ProductId: item.Id, Description: item.Description, label: item.Category.Name + ' ' + item.Name + ' ' + item.Description + ' ' + item.Code, Price: item.Price, CostPrice: item.CostPrice, CommissionAmount: item.CommissionAmount, CommissionPer: item.CommissionPer };
                            }));
                        },
                        error: function (xhr, status, error) {
                            alert("Error");
                        },
                    });
                },
                minLength: 3,
                autoFocus: true,
                select: function (event, uirow) {

                    //alert('hit');
                    //alert(rowid);

                    //alert("#P" + rowid);
                    $("#PI" + rowid).html(uirow.item.ProductId);
                    $("#D" + rowid).val(uirow.item.Description);
                    $("#P" + rowid).val(uirow.item.Price);

                    $("#CP" + rowid).val(uirow.item.CostPrice);
                    $("#CA" + rowid).val(uirow.item.CommissionAmount);
                    $("#CPR" + rowid).val(uirow.item.CommissionPer);

                    $("#UCA" + rowid).val(uirow.item.CommissionAmount * quantity);

                    var quantity = $("#Q" + rowid).val();
                    $("#A" + rowid).html(uirow.item.Price * quantity);
                    //newblankrow();

                    //alert(rowid);

                    //var serialrowid = "#D" + rowid;
                    ////alert(serialrowid);
                    //$(document).on('change', serialrowid, function () {

                    //    var countlength = $(serialrowid +' :selected').length;
                    //    $("#Q" + rowid).val(countlength);
                    //    //alert(countlength);
                    //});



                    $("#D" + rowid).empty();
                    $("#D" + rowid).val(null);
                    //$("#D" + rowid).select2();

                    //arr.length = 0;

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("ProductsBatchSerialMultiSelectForSalesRetrun", "Admin")',
                        dataType: 'json',
                        async: false,
                        data: { ProductId: $("#PI" + rowid).html()  },
                        success: function (data) {
                            console.log(data);


                            $("#D" + rowid).select2({
                                data: data,
                                escapeMarkup: function (markup) {
                                    return markup;
                                },
                                templateResult: function (data) {
                                    return data.html;
                                },
                                templateSelection: function (data) {
                                    return data.text;
                                }

                            })

                            //console.log(data);
                            //var s = '';//'<option value="-1">Please Select Product</option>';
                            ////alert(data.length);
                            //for (var i = 0; i < data.length; i++) {
                            //    s += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                            //}
                            ////console.log(s);


                            //$("#D" + rowid).html(s);

                            //arr = s;
                        },
                        error: function (ex) {
                            alert('Failed.' + ex);
                        }

                    });

                }
            });




            var stringarray = [""];
            var arr = [];

            var arr_pincode = {};//JSON.parse(`{"24":[${stringarray}]}`);
            //var selected_state = [24, 27];
            //var selected_pin = JSON.parse('["380001"]');

            //var already_slc_pin = [];
            //var current_pin = [];


            $("#D" + rowid).select2({
                minimumResultsForSearch: Infinity
            });


            $("#D" + rowid).empty();
            arr.length = 0;

            $.ajax({
                type: 'POST',
                url: '@Url.Action("ProductsBatchSerialMultiSelectForSalesRetrun", "Admin")',
                dataType: 'json',
                async: false,
                data: { ProductId: $("#PI" + rowid).html()  },
                success: function (data) {
                   // console.log(data);



                    $("#D" + rowid).select2({
                        data: data,
                        escapeMarkup: function (markup) {
                            return markup;
                        },
                        templateResult: function (data) {
                            return data.html;
                        },
                        templateSelection: function (data) {
                            return data.text;
                        }

                    });

                    //var s = '';//'<option value="-1">Please Select Product</option>';
                    ////alert(data.length);
                    //for (var i = 0; i < data.length; i++) {
                    //    s += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                    //}
                    ////console.log(s);


                    //$("#D" + rowid).html(s);

                    //arr = s;
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }

            });
            return false;
        };


        function newrowwithuiBarcode(ui) {

                var rowid = generateRandom();
                $('#SalesReturnItems').dataTable().fnAddData(['0', ui.item.ProductId, $("#Warehouse").val(), ui.item.ProductName, ui.item.Description, $('#Warehouse option:selected').text(), ui.item.Price, '1', ui.item.Price, '<a data-itemId="0" href="#" class="dlttrashsubsection deleteItem"> <i class="fa fa-trash"></i></a>', null, false, true, ui.item.CostPrice, ui.item.CommissionAmount, ui.item.CommissionPer, ui.item.CommissionAmount]);



            rowid = finalrowid;

            $("#N" + rowid).autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '../admin/ProductSearchAvgCosting/',
                        dataType: "json",
                        data: { query: $("#N" + rowid).val(), WarehouseId: $("#WHI" + rowid).val()  },
                        //data: { query: prdnametest },

                        success: function (data) {
                            //alert('wait');

                            //console.log(data);
                            response($.map(data, function (item) {
                                //return { ProductId: item.Id, Description: item.Description, label: item.Name, Price: item.Price, Code: item.Code };
                                return { ProductId: item.Id, Description: item.Description, label: item.Category.Name + ' ' + item.Name + ' ' + item.Description + ' ' + item.Code, Price: item.Price, CostPrice: item.CostPrice, CommissionAmount: item.CommissionAmount, CommissionPer: item.CommissionPer };
                            }));
                        },
                        error: function (xhr, status, error) {
                            alert("Error");
                        },
                    });
                },
                minLength: 3,
                autoFocus: true,
                select: function (event, uirow) {

                    //alert("#P" + rowid);
                    $("#PI" + rowid).html(uirow.item.ProductId);
                    $("#D" + rowid).val(uirow.item.Description);
                    $("#P" + rowid).val(uirow.item.Price);

                    $("#CP" + rowid).val(uirow.item.CostPrice);
                    $("#CA" + rowid).val(uirow.item.CommissionAmount);
                    $("#CPR" + rowid).val(uirow.item.CommissionPer);

                    $("#UCA" + rowid).val(uirow.item.CommissionAmount * quantity);


                    var quantity = $("#Q" + rowid).val();
                    $("#A" + rowid).html(uirow.item.Price * quantity);
                    //newblankrow();

                    //alert(rowid);


                    $("#D" + rowid).empty();
                    $("#D" + rowid).val(null);
                    //$("#D" + rowid).select2();

                    //arr.length = 0;

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("ProductsBatchSerialMultiSelectForSalesRetrun", "Admin")',
                        dataType: 'json',
                        async: false,
                        data: { ProductId: $("#PI" + rowid).html()  },
                        success: function (data) {


                            $("#D" + rowid).select2({
                                data: data,
                                escapeMarkup: function (markup) {
                                    return markup;
                                },
                                templateResult: function (data) {
                                    return data.html;
                                },
                                templateSelection: function (data) {
                                    return data.text;
                                }

                            })

                            //alert('wait');
                            //console.log(data);
                            //var s = '';//'<option value="-1">Please Select Product</option>';
                            ////alert(data.length);
                            //for (var i = 0; i < data.length; i++) {
                            //    s += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                            //}
                            ////console.log(s);


                            //$("#D" + rowid).html(s);

                            //arr = s;
                        },
                        error: function (ex) {
                            alert('Failed.' + ex);
                        }

                    });

                }
            });




            var stringarray = [""];
            var arr = [];

            var arr_pincode = {};//JSON.parse(`{"24":[${stringarray}]}`);
            //var selected_state = [24, 27];
            //var selected_pin = JSON.parse('["380001"]');

            //var already_slc_pin = [];
            //var current_pin = [];


            $("#D" + rowid).select2({
                minimumResultsForSearch: Infinity
            });


            $("#D" + rowid).empty();
            arr.length = 0;

            $.ajax({
                type: 'POST',
                url: '@Url.Action("ProductsBatchSerialMultiSelectForSalesRetrun", "Admin")',
                dataType: 'json',
                async: false,
                data: { ProductId: $("#PI" + rowid).html()  },
                success: function (data) {



                    $("#D" + rowid).select2({
                        data: data,
                        escapeMarkup: function (markup) {
                            return markup;
                        },
                        templateResult: function (data) {
                            return data.html;
                        },
                        templateSelection: function (data) {
                            return data.text;
                        }

                    })

                    //console.log(data);
                    //var s = '';//'<option value="-1">Please Select Product</option>';
                    ////alert(data.length);
                    //for (var i = 0; i < data.length; i++) {
                    //    s += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                    //}
                    ////console.log(s);


                    //$("#D" + rowid).html(s);

                    //arr = s;
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }

            });


                $("#D" + rowid).val(ui.item.SerialId);
                $("#D" + rowid).change();


            return false;
        };





        function calculateSum() {
            var sum = 0;
            var sumQty = 0;

            var sumExchange = 0;
            var sumQtyExchange = 0;

            // iterate through each td based on class and add the values
            //$("#SalesReturnItems > tbody  > tr .amount").each(function () {

            //    var value = $(this).text();
            //    // add only if the value is number
            //    if (!isNaN(value) && value.length !== 0) {
            //        sum += parseFloat(value);
            //    }
            //});



            $("#SalesReturnItems > tbody  > tr .amount:visible").each(function () {
                //alert('found return');
                //var value = parseInt($(this).find('.amount').val());// $('.amount', this).text().replace(/[\$,]/g, '');//$(this).text();
                var value = $(this).text();

                //alert(value)
                // add only if the value is number
                if (!isNaN(value) && value.length !== 0) {
                    sum += parseFloat(value);
                }
            });


            $("#SalesExchangeItems > tbody  > tr .amount:visible").each(function () {
                //alert('found exchange');

                //var value = parseInt($(this).find('.amount').val());// $('.amount', this).text().replace(/[\$,]/g, '');//$(this).text();
                var valueExchange = $(this).text();

                //alert(value)
                // add only if the value is number
                if (!isNaN(valueExchange) && valueExchange.length !== 0) {
                    sumExchange += parseFloat(valueExchange);
                }
            });


            if (sum == 0.0 && sumExchange == 0.0) {
                $('#Discount').text("0");
                $('#GrandTotal').text("0");
                $('#TotalVat').text("0");
                $('#ServiceCharge').text("0");
                $('#Shipping').text("0");
            }


            $.each($("#BatchSerialList tbody tr"), function () {

                var Quantity = parseInt($(this).find('.SLNo').val());
                if (!isNaN(Quantity) && Quantity.length !== 0) {
                    sumQty++;
                }
            });


            $.each($("#BatchSerialListExchange tbody tr"), function () {

                var QuantityExchange = parseInt($(this).find('.SLNo').val());
                if (!isNaN(QuantityExchange) && QuantityExchange.length !== 0) {
                    sumQtyExchange++;
                }
            });


            $.each($("#SalesReturnItems tbody tr"), function () {

                var Quantity = parseInt($(this).find('.quantity').val());
                if (!isNaN(Quantity) && Quantity.length !== 0) {
                    sumQty += parseFloat(Quantity);
                }
            });

            $.each($("#SalesExchangeItems tbody tr"), function () {

                var QuantityExchange = parseInt($(this).find('.quantity').val());
                if (!isNaN(QuantityExchange) && QuantityExchange.length !== 0) {
                    sumQtyExchange += parseFloat(QuantityExchange);
                }
            });



            console.log(sum);
            console.log(sumExchange);


            $('#SubTotal').text(sum.toFixed(2)); //  - sumExchange.toFixed(2)
            $('#GrandTotal').val(sum.toFixed(2)); // - sumExcahnge.toFixed(2)
            $('#TotalQty').text(sumQty.toFixed(2)); // - sumQtyExchange.toFixed(2)

            $('#SubTotalExchange').text(sumExchange.toFixed(2));
            //$('#GrandTotalExchange').val(sumExchange.toFixed(2));
            $('#TotalQtyExchange').text(sumQtyExchange.toFixed(2));


            var discount = parseFloat($('#Discount').val()).toFixed(2);
            if (isNaN(discount)) return;
            var subtotal = parseFloat(sumExchange).toFixed(2) - parseFloat(sum).toFixed(2);


            var isTaxExcluded = '@HttpContextAccessor.HttpContext.Session.GetInt32("isTaxExcluded").ToString()';
            var TaxPer = '@HttpContextAccessor.HttpContext.Session.GetString("TaxPer").ToString()';
            var TotalVat = 0.00;


            if (TaxPer > 0)
            {
                //alert(isTaxExcluded);
                //alert(subtotal);
                //alert(TaxPer);

                $('#TotalVat').attr('readonly', true);

                if (isTaxExcluded == 1) {

                    var taxamount = (subtotal * (parseFloat(TaxPer)*100)) / 100;

                    $('#TotalVat').val(taxamount.toFixed(2));
                    TotalVat = taxamount.toFixed(2);
                }
                else {


                    var taxmount = subtotal -  (subtotal / (parseFloat(TaxPer) + 1));

                    $('#TotalVat').val(taxmount.toFixed(2));
                    //alert(taxmount);
                }


            }



            //var TotalVat = parseFloat($('#TotalVat').val()).toFixed(2);



            var ServiceCharge = parseFloat($('#ServiceCharge').val()).toFixed(2);
            var Shipping = parseFloat($('#Shipping').val()).toFixed(2);

            //console.log(TotalVat);
            //console.log(ServiceCharge);
            //console.log(Shipping);
            //console.log(subtotal);
            //console.log(Shipping);


            var grandtotal = parseFloat(parseFloat(TotalVat) + parseFloat(ServiceCharge) + parseFloat(Shipping) + parseFloat(subtotal) - parseFloat(discount)).toFixed(2);
            $('#GrandTotal').val(grandtotal);
            //$('#PaymentAmount').val(grandtotal);


            //var tableabc = $('#tblpayments').DataTable();
            //var column = tableabc.column(5);
            //$(column.footer()).html(
            //    column.data().reduce(function (a, b) {
            //        return a + b;
            //    })
            //);


            var sumpayment = 0.00;
            $("#tblpayments > tbody  > tr .Amount").each(function () {

                var value = $(this).text();
                // add only if the value is number
                if (!isNaN(value) && value.length !== 0) {
                    sumpayment += parseFloat(value);
                }
            });





            //alert(sumpayment);

            $('#TotalCollectionAmount').text(sumpayment.toFixed(2));
            $('#PaymentAmount').val(grandtotal - sumpayment);



            var totalcommissionamount = 0.00;
            $("#SalesReturnItems > tbody  > tr .usercommissionamount").each(function () {

                var value = $(this).text();
                // add only if the value is number
                if (!isNaN(value) && value.length !== 0) {
                    totalcommissionamount += parseFloat(value);
                }
            });
            //alert(totalcommissionamount);
            $('#UserCommission').val(totalcommissionamount.toFixed(2));


            //var sum = $('#tblpayments').DataTable().column(5).data().sum();
            //$('#TotalCollectionAmount').html(sum);

            //$.each($("#tblpayments tbody tr"), function () {

            //    var payamount = parseFloat($(this).find('.Amount').val());

            //    alert(payamount);

            //    if (!isNaN(payamount) && payamount.length !== 0) {
            //        sumQty += parseFloat(payamount);
            //    }
            //});



            //$('#TotalCollectionAmount').text(sumQty.toFixed(2));



            //console.log(grandtotal);
        };

        //function DiscountAmount() {
        //    //blankme("Discount");
        //    //blankme("GrandTotal");
        //    var discount = parseFloat($('#Discount').val()).toFixed(2);
        //    if (isNaN(discount)) return;
        //    var subtotal = parseFloat($('#SubTotal').text()).toFixed(2);
        //    var grandtotal = parseFloat(a - b).toFixed(2);
        //    $('#GrandTotal').val(grandtotal);
        //}

        @*function saveOrder(data) {

            //alert('Fahad found salesReturn');
            //console.log(data);
            return $.ajax({
                contentType: 'application/json; charset=utf-8',
                //contentType: "application/json",
                dataType: 'json',
                type: 'POST',
                url: "../SalesReturn/AddSalesReturn",
                data: data,
                success: function (result) {
                    //console.log(result);
                    //alert('Wait');
                    if (result.Success == "1") {
                        toastr.success("Data Save Successfully");

                        window.setTimeout(function () {
                            // Move to a new location or you can do something else
                                 window.location.href = '@Url.Action("Index", "SalesReturn")';
                        }, 1000);

                }
                else {
                    toastr.error(result.ex);
                }
            },
            error: function (result) {

                if (result.ex = "") {
                    toastr.error("Unable To Save The Data");
                } else {
                    toastr.error(result.ex);

                }
            }
            });
        }*@

        $("#BtnSave").click(function (e) {
            e.preventDefault();

            if (submitValidation()) {

                var discount;
                if (parseFloat($('#Discount').val()).toFixed(2) == "NaN") {
                    discount = 0;
                }
                else {
                    discount = $('#Discount').val();
                }


                if ($('#tblpayments').length == 0) {
                    $('#PaymentAmount').val($('#mainpaidamount').val());
                    //$('#PaymentTypes').val().change();


                    AddPayments();
                }



                var UserId = '@HttpContextAccessor.HttpContext.Session.GetInt32("UserId").ToString()';
                var ComId = '@HttpContextAccessor.HttpContext.Session.GetInt32("ComId").ToString()';


                var orderArr = [];
                orderArr.length = 0;
                var i = 0
                $.each($("#SalesReturnItems tbody tr"), function () {

                    var array = $(this).find('.description').val();
                    var stringtext = $(this).find('.description option:selected').text();

                    var option_all = $(this).find('.description option:selected').map(function () {
                        return $(this).text();
                    }).get().join(',');
                    console.log(option_all);

                    var arraytext = option_all.split(",");
                    var firstsalesreturnitemid = $(this).find('td:eq(0)').html();
                    var firstproductid = $(this).find('td:eq(1)').html();


                    var orderbatchArr = [];
                    orderbatchArr.length = 0;

                    console.log(array);
                    $.each(array, function (i) {
                        orderbatchArr.push({
                            Id: 0,
                            SalesReturnItemId: firstsalesreturnitemid,
                            ProductId: firstproductid,
                            BatchSerialNo: arraytext[i],
                            SLNo: 0,
                            IsDelete: false,
                            IsUsed: false,
                            IsTransaction: false,
                            ComId: ComId,
                            PurchaseBatchId: array[i]
                        });
                    });

                    if ($(this).find('td:eq(0)').html() == 0 && $(this).find('td:eq(11)').html() == 'false') {
                        orderArr.push({

                            Id: $(this).find('td:eq(0)').html(),
                            ProductId: $(this).find('td:eq(1)').html(),
                            SalesReturnId: parseInt($("#BtnSave").attr("data-sale-Id")),
                            WarehouseId: $(this).find('td:eq(2)').html(), //$('#Warehouse option:selected').text()
                            //Name: $(this).find('td:eq(2)').html(),
                            Name: $(this).find('.prdname').val(),
                            //Description: $(this).find('.description').val(),
                            Price: $(this).find('.price').val(),
                            CostPrice: $(this).find('td:eq(13)').html(),
                            CommissionAmount: $(this).find('td:eq(14)').html(),
                            CommissionPer: $(this).find('td:eq(15)').html(),
                            UserCommissionAmount: $(this).find('td:eq(16)').html(),

                            //Price: parseFloat($(this).find('td:eq(4)').html()),
                            Quantity: parseFloat($(this).find('.quantity').val()),
                            Amount: parseFloat($(this).find('td:eq(8)').html()),
                            BatchSerialItems: orderbatchArr,
                            SerialItem: array.toString(),
                            IsDelete: $(this).find('td:eq(11)').html(),
                            IsTransaction: $(this).find('td:eq(12)').html(),
                            ComId: ComId
                            //SerialItem: $(this).find('.description').val()
                        });


                    }
                    else {

                        orderArr.push({

                            Id: $(this).find('td:eq(0)').html(),
                            ProductId: $(this).find('td:eq(1)').html(),
                            SalesReturnId: parseInt($("#BtnSave").attr("data-sale-Id")),
                            WarehouseId: $(this).find('td:eq(2)').html(), //$('#Warehouse option:selected').text()
                            //Name: $(this).find('td:eq(2)').html(),
                            Name: $(this).find('.prdname').val(),
                            //Description: $(this).find('.description').val(),
                            Price: $(this).find('.price').val(),
                            CostPrice: $(this).find('td:eq(13)').html(),
                            CommissionAmount: $(this).find('td:eq(14)').html(),
                            CommissionPer: $(this).find('td:eq(15)').html(),
                            UserCommissionAmount: $(this).find('td:eq(16)').html(),

                            //Price: parseFloat($(this).find('td:eq(4)').html()),
                            Quantity: parseFloat($(this).find('.quantity').val()),
                            Amount: parseFloat($(this).find('td:eq(8)').html()),
                            BatchSerialItems: orderbatchArr,
                            SerialItem: array.toString(),
                            IsDelete: $(this).find('td:eq(11)').html(),
                            IsTransaction: $(this).find('td:eq(12)').html(),
                            ComId: ComId
                            //SerialItem: $(this).find('.description').val()
                        });

                    }

                });



                var orderArrExchange = [];
                orderArrExchange.length = 0;
                var i = 0

                //console.log($("#SalesExchangeItems").length());
                //var tableexchangeitems = document.getElementById("SalesExchangeItems");
                //var totalRowCount = tableexchangeitems.rows.length;
                //var tbodyRowCount = tableexchangeitems.tBodies[0].rows.length; // 3
                //var abcdef  = $('#SalesExchangeItems tbody tr').length;
                //alert(abcdef);
                //alert(tbodyRowCount);

                var tableabcd = $('#SalesExchangeItems').DataTable();
                    //alert( 'Empty table' );

                if (tableabcd.data().any())
                {
                    $.each($("#SalesExchangeItems tbody tr"), function () {


                        var array = $(this).find('.description').val() || "";
                        //console.log(array);
                        //alert('wait check');

                        var stringtext = $(this).find('.description option:selected').text();

                        var option_all = $(this).find('.description option:selected').map(function () {
                            return $(this).text();
                        }).get().join(',');
                        console.log(option_all);

                        var arraytext = option_all.split(",");
                        var firstsalesexchangeitemid = $(this).find('td:eq(0)').html();
                        var firstproductid = $(this).find('td:eq(1)').html();


                        var orderbatchArrExchange = [];
                        orderbatchArrExchange.length = 0;

                        console.log(array);
                        $.each(array, function (i) {
                            orderbatchArrExchange.push({
                                Id: 0,
                                SalesExchangeItemId: firstsalesexchangeitemid,
                                ProductId: firstproductid,
                                BatchSerialNo: arraytext[i],
                                SLNo: 0,
                                IsDelete: false,
                                IsUsed: false,
                                IsTransaction: false,
                                ComId: ComId,
                                PurchaseBatchId: array[i]
                            });
                        });

                        if ($(this).find('td:eq(0)').html() == 0 && $(this).find('td:eq(11)').html() == 'false') {
                            orderArrExchange.push({

                                Id: $(this).find('td:eq(0)').html(),
                                ProductId: $(this).find('td:eq(1)').html(),
                                SalesReturnId: parseInt($("#BtnSave").attr("data-sale-Id")),
                                WarehouseId: $(this).find('td:eq(2)').html(), //$('#Warehouse option:selected').text()
                                //Name: $(this).find('td:eq(2)').html(),
                                Name: $(this).find('.prdname').val(),
                                //Description: $(this).find('.description').val(),
                                Price: $(this).find('.price').val(),
                                CostPrice: $(this).find('td:eq(13)').html(),
                                CommissionAmount: $(this).find('td:eq(14)').html(),
                                CommissionPer: $(this).find('td:eq(15)').html(),
                                UserCommissionAmount: $(this).find('td:eq(16)').html(),

                                //Price: parseFloat($(this).find('td:eq(4)').html()),
                                Quantity: parseFloat($(this).find('.quantity').val()),
                                Amount: parseFloat($(this).find('td:eq(8)').html()),
                                BatchSerialItems: orderbatchArrExchange,
                                SerialItem: array.toString(),
                                IsDelete: $(this).find('td:eq(11)').html(),
                                IsTransaction: $(this).find('td:eq(12)').html(),
                                ComId: ComId
                                //SerialItem: $(this).find('.description').val()
                            });


                        }
                        else {

                            orderArrExchange.push({

                                Id: $(this).find('td:eq(0)').html(),
                                ProductId: $(this).find('td:eq(1)').html(),
                                SalesReturnId: parseInt($("#BtnSave").attr("data-sale-Id")),
                                WarehouseId: $(this).find('td:eq(2)').html(), //$('#Warehouse option:selected').text()
                                //Name: $(this).find('td:eq(2)').html(),
                                Name: $(this).find('.prdname').val(),
                                //Description: $(this).find('.description').val(),
                                Price: $(this).find('.price').val(),
                                CostPrice: $(this).find('td:eq(13)').html(),
                                CommissionAmount: $(this).find('td:eq(14)').html(),
                                CommissionPer: $(this).find('td:eq(15)').html(),
                                UserCommissionAmount: $(this).find('td:eq(16)').html(),

                                //Price: parseFloat($(this).find('td:eq(4)').html()),
                                Quantity: parseFloat($(this).find('.quantity').val()),
                                Amount: parseFloat($(this).find('td:eq(8)').html()),
                                BatchSerialItems: orderbatchArrExchange,
                                SerialItem: array.toString(),
                                IsDelete: $(this).find('td:eq(11)').html(),
                                IsTransaction: $(this).find('td:eq(12)').html(),
                                ComId: ComId
                                //SerialItem: $(this).find('.description').val()
                            });

                        }

                    });

                }



                var paidamt = 0;

                var SalesReturnPaymentSub = { "Id": "", "SalesReturnId": "", "PaymentTypeId": "", "AccountHeadId": "", "Amount": "", "PaymentCardNo": "", "ComId": "", "LuserId": "", "RowNo": "", };
                var paymentArr = [];
                paymentArr.length = 0;
                var i = 0
                var oTablePayment = $('#tblpayments').dataTable().fnGetData();
                for (var i = 0; i < oTablePayment.length; i++) {



                    SalesReturnPaymentSub.Id = 0;//oTablePayment[i][0] || 0;
                    SalesReturnPaymentSub.PaymentTypeId= oTablePayment[i][1];
                    SalesReturnPaymentSub.SalesReturnId = parseInt($("#BtnSave").attr("data-sale-Id"));

                    SalesReturnPaymentSub.AccountHeadId = oTablePayment[i][3];
                    //alert(AccountHeadId);
                    SalesReturnPaymentSub.Amount = oTablePayment[i][5];
                    SalesReturnPaymentSub.ComId = ComId;
                    SalesReturnPaymentSub.LuserId = UserId;
                    SalesReturnPaymentSub.RowNo = i;


                    SalesReturnPaymentSub.PaymentCardNo = oTablePayment[i][6];
                    console.log(SalesReturnPaymentSub);

                    paymentArr.push(SalesReturnPaymentSub);
                    SalesReturnPaymentSub = { "Id": "0", "SalesReturnId": "", "PaymentTypeId": "", "AccountHeadId": "", "Amount": "", "PaymentCardNo": "", "ComId": "", "LuserId": "", "RowNo": "" };

                }
                console.log(paymentArr);




                var data = JSON.stringify({
                    Id: parseInt($("#BtnSave").attr("data-sale-Id")),

                    SaleId: $("#InvoiceId").val(),
                    CustomerId: $("#Customer").val(),
                    //AccountPayTypeId: $("#AccountHead").val(),

                    CustomerName: $("#CustomerName").val(),
                    PhoneNo: $("#PhoneNo").val() || 0,
                    PrimaryAddress: $("#CustomerAddress").val(),

                    WarehouseIdMain: $("#Warehouse").val(),

                    SalesReturnCode: $("#Code").val(),
                    SalesReturnDate: $("#Date").val(),
                    //PaymentMethod: $("#Payment").val(),
                    Total: parseFloat($("#SubTotal").text()),
                    Notes: $("#Notes").val(),
                    //Status: $("#Status").val(),
                    isSerialSalesReturn: 'True',
                    Discount: discount,

                    TotalVat: $("#TotalVat").val(),
                    ServiceCharge: $("#ServiceCharge").val(),
                    Shipping: $("#Shipping").val(),

                    GrandTotal: parseFloat($('#GrandTotal').val()).toFixed(2),
                    NetAmount: parseFloat($('#GrandTotal').val()).toFixed(2),
                    totalcommissionamount: parseFloat($('#UserCommission').val()).toFixed(2),


                    //PaidAmt: paidamt,
                    DisAmt: discount,
                    //DueAmt: dueamt,

                    Items: orderArr,
                    ExchangeItems: orderArrExchange,

                    SalesReturnPayments: paymentArr
                });



                 //console.log(data);
                    $.ajax({
                        contentType: 'application/json; charset=utf-8',
                        //contentType: "application/json",
                        dataType: 'json',
                        type: 'POST',
                        url: "../SalesReturn/AddSalesReturn",
                        data: data,
                        success: function (result) {
                            //console.log(result);
                            //alert('Wait');
                            if (result.Success == "1") {
                                toastr.success("Data Save Successfully");

                                window.setTimeout(function () {
                                    // Move to a new location or you can do something else
                                         window.location.href = '@Url.Action("Index", "SalesReturn")';
                                }, 1000);

                        }
                        else {
                            toastr.error(result.ex);
                        }
                        },
                        error: function (result) {

                            if (result.ex = "") {
                                toastr.error("Unable To Save The Data");
                            } else {
                                toastr.error(result.ex);

                            }
                        }
                      });

                ////console.log(data);
                ////alert('Wait');
                //$.when(saveOrder(data)).then(function (response) {
                //    //console.log(response);
                //    //location.href = "../SalesReturn/index";
                //}).fail(function (err) {

                //});
            }
        });

        //$('#BtnUpdate').click(function (e) {
        //    e.preventDefault();

        //    if (submitValidation()) {



        //        var discount;
        //        if (parseFloat($('#Discount').val()).toFixed(2) == "NaN") {
        //            discount = 0;
        //        }
        //        else {
        //            discount = $('#Discount').val();
        //        }


        //        var orderArr = [];
        //        orderArr.length = 0;

        //        $.each($("#SalesReturnItems tbody tr"), function () {













        //            orderArr.push({

        //                Id: $(this).find('td:eq(0)').html(),
        //                ProductId: $(this).find('td:eq(1)').html(),
        //                WarehouseId: $(this).find('td:eq(2)').html(),

        //                //Name: $(this).find('td:eq(2)').html(),
        //                Name: $(this).find('.name').val(),
        //                //WarehouseName: $(this).find('.warehouse_row').val(),

        //                Description: $(this).find('.description').val(),
        //                Price: $(this).find('.price').val(),

        //                //Price: parseFloat($(this).find('td:eq(4)').html()),
        //                Quantity: parseInt($(this).find('.quantity').val()),
        //                Amount: parseFloat($(this).find('td:eq(8)').html()),
        //                BatchSerialItems: orderbatchArr,
        //                ComId: ComId

        //                //Id: $(this).find('td:eq(0)').html(),
        //                //ProductId: $(this).find('td:eq(1)').html(),

        //                //Name: $(this).find('td:eq(2)').html(),
        //                ////Description: $(this).find('td:eq(3)').html(),
        //                //Description: $(this).find('.description').val(),

        //                //Price: parseFloat($(this).find('td:eq(4)').html()),
        //                //Quantity: parseInt($(this).find('.quantity').val()),
        //                //Amount: parseFloat($(this).find('td:eq(6)').html())
        //            });
        //        });


        //        var paidamt = 0;
        //        var dueamt = parseFloat($('#GrandTotal').val()).toFixed(2);
        //        if ($("#Status").val() == "Paid") {
        //            paidamt = parseFloat($('#GrandTotal').val()).toFixed(2);
        //            dueamt = 0;
        //            //alert(paidamt);
        //        }


        //        var paidamt = 0;
        //        var dueamt = parseFloat($('#GrandTotal').val()).toFixed(2);
        //        if ($("#Status").val() == "Paid") {
        //            //alert($("#Status").val());
        //            paidamt = parseFloat($('#GrandTotal').val()).toFixed(2);
        //            dueamt = 0;
        //            //alert(paidamt);
        //        }
        //        else if ($("#Status").val() == "Advance") {
        //            paidamt = parseFloat($('#PaidAmt').val()).toFixed(2);
        //            dueamt = parseFloat($('#GrandTotal').val()).toFixed(2) - parseFloat($('#PaidAmt').val()).toFixed(2);
        //        }
        //        else {
        //            dueamt = parseFloat($('#GrandTotal').val()).toFixed(2);
        //            //alert('not found');
        //        }





        //        var data = {

        //            Id: parseInt($("#BtnSave").attr("data-sale-Id")),
        //            //Id: parseInt($("#BtnUpdate").attr("data-sale-Id")),
        //            CustomerId: parseInt($("#Customer").val()),
        //            AccountPayTypeId: $("#AccountHead").val(),

        //            SalesReturnCode: $("#Code").val(),
        //            SalesReturnDate: $("#Date").val(),
        //            PaymentMethod: $("#Payment").val(),
        //            Total: parseFloat($("#SubTotal").text()),
        //            Notes: $("#Notes").val(),
        //            Status: $("#Status").val(),


        //            TotalVat: $("#TotalVat").val(),
        //            ServiceCharge: $("#ServiceCharge").val(),
        //            Shipping: $("#Shipping").val(),


        //            Discount: discount,//parseFloat($('#Discount').val()).toFixed(2),
        //            GrandTotal: parseFloat($('#GrandTotal').val()).toFixed(2),
        //            NetAmount: parseFloat($('#GrandTotal').val()).toFixed(2),
        //            PaidAmt: paidamt,
        //            DisAmt: discount,
        //            DueAmt: dueamt,



        //            Items: orderArr
        //        };

        //        //console.log(data);
        //        //$.when(updateOrder(data)).then(function (response) {
        //        $.when(saveOrder(data)).then(function (response) {
        //            console.log(response);
        //            location.href = "../SalesReturn/index";
        //        }).fail(function (err) {
        //            console.log(err);
        //        });
        //    }

        //});
</script>
                            }

