@*@model IEnumerable<Atrai.Core.Entity.SalesReturnModel>*@
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Sales Return List";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}



<style>
    /*div.dataTables_wrapper div.dataTables_filter input {
            width: 130px;
        }
    */
    .p-15 {
        padding: 10px 13px 15px 13px !important;
    }

    .card-dashboard p {
        font-size: 12px;
        font-family: arial narrow;
    }

    .media p {
        font-size: 14px;
        font-family: "Arial Narrow";
    }

    .media {
        font-size: 12px;
        font-family: "Arial Narrow";
        text-align: right;
        padding-bottom: 2px !important;
    }

    a {
        color: #0a275ec9;
    }
    /*
        tbody tr td {
            font-family: "Arial Narrow";
            font-size: 13px;
        }*/

    .lineheight {
        margin-bottom: 1px;
    }

    h5 {
        margin-top: 5px;
        margin-bottom: 1px;
    }



    .table-sm th {
        /*        padding: 5px;
            font-size: 13px;*/
        /*        border-color: black;
            border-bottom-width:10px;*/
    }

    hr.solid {
        border-top: 2px solid #bbb;
        margin-top: .2rem;
        margin-bottom: .2rem;
        vertical-align: middle;
    }

        .border {
      border: 1px solid #c9c9c9 !important;
    }
</style>

<div class="page-wrapper">
    <div class="container-fluid">
        <!-- Start Page Content -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">

                        
                                @Html.Hidden("FromDate", null, new { @class = "form-control text-center FromDate", @placeholder = "From Date", @autocomplete = "off", name = "FromDate" })
                                @Html.Hidden("ToDate", null, new { @class = "form-control text-center ToDate", @placeholder = "To Date", @autocomplete = "off", name = "ToDate" })


                        @*<h5 class="card-header">SalesReturn List</h5>*@
                        <div class="row mb-1">
                            <div class="col-md-2 col-12">
                                @Html.ActionLink("New Sales Return", "AddSalesReturnBySerialSearch", null, null, new { @class = "btn btn-outline-success btn-block rounded-0", @id = "btnBack" })

                            </div>
                            <div class="col-md-4 col-12">


                                <h4 style="color: #1976d2;">Sales Return List</h4>

                            </div>
                            <div class="col-md-3 col-12">
                                <label class="pr-2"><input type="radio" name="RptType" value="PDF" checked="checked" /> PDF  </label>
                                <label class="pr-2"><input type="radio" name="RptType" value="EXCEL" /> EXCEL  </label>
                                <label class="pr-2"><input type="radio" name="RptType" value="WORD" /> WORD  </label>

                            </div>
                        </div>


                        <div class="card p-1 mb-1">
                            <div class="row">
                                <div class="col-md-2 col-12">
                                    <div class="input-group mb-1">
                                        @Html.DropDownList("Customers", ViewBag.Customers as List<SelectListItem>, "Select Customers", new { id = "CustomerId", @class = "form-control form-control-sm" })
                                    </div>
                                </div>
                                <div class="col-md-2 col-12">
                                    <div class="input-group mb-1">
                                        @Html.DropDownList("Users", ViewBag.Users as List<SelectListItem>, "Select User", new { id = "UserId", @class = "form-control form-control-sm" })
                                    </div>
                                </div>
                                <div class="col-md-2 col-12">

                                    @Html.DropDownList("Status", new List<SelectListItem>
                                    {
                                    new SelectListItem() {Text = "Due", Value="Due"},

                                    }, "Select Status", new { @class = "form-control form-control-sm" })

                                </div>
                                <div class="col-md-4 col-12  mb-2">
                                               <div class="form-inline divHiddenItems">
                                         <div class="input-group input-group-sm">
                                        <div class="input-group-prepend">
                                            <div class="input-group-text">
                                               <i class="fa fa-calendar"></i>
                                             </div>
                                        </div>
                                        <input type="text" class="form-control from-control-sm" name="date" id="daterange-btn" style="width: auto;">
                                         <button id='btnDec' type="button" class="btn btn-danger rounded-0" title='Decrement month'><i class="fa fa-calendar-minus-o" aria-hidden="true"></i></button>
                                        <button id='btnInc' type="button" class="btn btn-info  rounded-0" title='Increment month'><i class="fa fa-calendar-plus-o" aria-hidden="true"></i></button>
                                        </div>
                                        @*<span type="button" class="btn btn-sm btn-outline-info" id="daterange-btn">

                                            <i class="fa fa-calendar"></i>&nbsp; <span>defaut date</span>

                                            <i class="fa fa-caret-down"></i>
                                        </span>
                                        <input id="daterange-btn" size="40" value="">*@
                                    </div>
                                </div>

@*                                <div class="col-md-3 col-12">
                                    <div class="input-group input-group-sm mb-1">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                <label for="FDate">From Date</label>
                                            </span>
                                        </div>
                                        @Html.TextBox("FromDate", null, new { @class = "form-control text-center FromDate", @placeholder = "Select From Date ", @autocomplete = "off", name = "FromDate" })
                                    </div>
                                </div>
                                <div class="col-md-3 col-12">
                                    <div class="input-group input-group-sm mb-1">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                <label for="TDate">To Date</label>
                                            </span>
                                        </div>
                                        @Html.TextBox("ToDate", null, new { @class = "form-control text-center ToDate", @placeholder = "Select To Date ", @autocomplete = "off", name = "ToDate" })
                                    </div>
                                </div>*@


                            </div>
                        </div>




                                    <div class="table-responsive">
                            <table id="SalesReturnlist" class="table table-sm table-bordered text-nowrap table-striped table-hover">
                            </table>
                        </div>




                        <div class="p-1 mb-1">
                            <div class="row">
                                @*<div class="col-md-3 col-12">
                                    </div>*@


                                <div class="col-md-3 col-12">

                                    <div class="card-dashboard p-20 mt-3" style="background:antiquewhite">
                                        <div class="media">
                                            <div class="media-left meida media-middle">
                                                <span><i class="fa fa-usd f-s-40 color-primary"></i></span>
                                            </div>
                                            <div class="media-body media-text-right">
                                                <h5>User Wise Return</h5>
                                                <p id="fullinfoone" class="m-b-0"></p>
                                            </div>
                                        </div>
                                    </div>
                                    @*<div class="card-dashboard p-20 mt-3" style="background:lavender">
                                        <div class="media">
                                        <div class="media-left meida media-middle">
                                        <span><i class="fa fa-usd f-s-40 color-primary"></i></span>
                                        </div>
                                        <div class="media-body media-text-right">
                                        <h5>User Wise Commission</h5>
                                        <p id="fullinfofour" class="m-b-0"></p>
                                        </div>
                                        </div>
                                        </div>*@

                                </div>
                                <div class="col-md-3 col-12">

                                    <div class="card-dashboard p-20 mt-3" style="background:beige">
                                        <div class="media">
                                            <div class="media-left meida media-middle">
                                                <span><i class="fa fa-usd f-s-40 color-primary"></i></span>
                                            </div>
                                            <div class="media-body media-text-right">
                                                <h5>Date Wise Return</h5>
                                                <p id="fullinfotwo" class="m-b-0"></p>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="card-dashboard p-20 mt-3" style="background:aliceblue">
                                        <div class="media">
                                            <div class="media-left meida media-middle">
                                                <span><i class="fa fa-usd f-s-40 color-primary"></i></span>
                                            </div>
                                            <div class="media-body media-text-right">
                                                <h5>Post / Unpost Return</h5>
                                                <p id="fullinfoeight" class="m-b-0"></p>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="col-md-3 col-12">

                                    <div class="card-dashboard p-20 mt-3" style="background:seashell">
                                        <div class="media">
                                            <div class="media-left meida media-middle">
                                                <span><i class="fa fa-usd f-s-40 color-primary"></i></span>
                                            </div>
                                            <div class="media-body media-text-right">
                                                <h5>Paid By Head</h5>
                                                <p id="fullinfothree" class="m-b-0"></p>
                                            </div>
                                        </div>
                                    </div>



                                    <div class="card-dashboard p-20 mt-3" style="background:honeydew">
                                        <div class="media">
                                            <div class="media-left meida media-middle">
                                                <span><i class="fa fa-usd f-s-40 color-primary"></i></span>
                                            </div>
                                            <div class="media-body media-text-right">
                                                <h5>Top Returning Customer</h5>
                                                <p id="fullinfoseven" class="m-b-0"></p>
                                            </div>
                                        </div>
                                    </div>

                                </div>

                                <div class="col-md-3 col-12">

                                    <div class="card-dashboard p-20 mt-3" style="        background: lavenderblush">
                                        <div class="media">
                                            <div class="media-left meida media-middle">
                                                <span><i class="fa fa-usd f-s-40 color-primary"></i></span>
                                            </div>
                                            <div class="media-body media-text-right">
                                                <h5>Top Return Item</h5>
                                                <p id="fullinfofive" class="m-b-0"></p>
                                            </div>
                                        </div>
                                    </div>



                                    <div class="card-dashboard p-20 mt-3" style="background:ivory">
                                        <div class="media">
                                            <div class="media-left meida media-middle">
                                                <span><i class="fa fa-usd f-s-40 color-primary"></i></span>
                                            </div>
                                            <div class="media-body media-text-right">
                                                <h5>Top Due Return To Customer</h5>
                                                <p id="fullinfosix" class="m-b-0"></p>
                                            </div>
                                        </div>
                                    </div>


                                </div>

                            </div>
                        </div>




                    </div>
                </div>
            </div>
        </div>
        <!-- End PAge Content -->
    </div>
</div>






@section Scripts{





<script TransactionId="text/javascript">


        DefaultFormat('pdf');
        $('input[type="radio"]').change(function () {
            selectedValue = this.value;
            DefaultFormat(selectedValue);

        });

        function DefaultFormat(selectedValue) {
            $.ajax({
                type: "GET",
                url: "../Admin/SetReportFormat",
                datatype: "Json",
                data: { reportformat: selectedValue },
                success: function (data) {
                    if (data.Success == 1) {
                        //toastr.success(selectedValue + " Format Selected");
                    }
                }
            });
        }


        //$('input[type="radio"]').on('click change', function (e) {
        //    console.log(e.type);
        //    alert(e.type);


        //});




        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
            CurrentDate();

            $(".FromDate").datepicker({

                dateFormat: "dd-M-y",
                changeMonth: true,
                changeYear: true

            });


        $(".ToDate").datepicker({

            dateFormat: "dd-M-y",
            changeMonth: true,
            changeYear: true

        });

        function CurrentDate() {
            var date = new Date();
            var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
            var val = date.getDate() + "-" + months[date.getMonth()] + "-" + date.getFullYear().toString().substr(-2);
            if ($(".FromDate").val() == '') {
                $(".FromDate").val(val);
            }
            if ($(".ToDate").val() == '') {
                $(".ToDate").val(val);
            }
        }

            var CustomerId = $("#CustomerId").val();
            var UserId = $("#UserId").val();
            var Status = $("#Status").val();


                var fromdate = $("#FromDate").val();
                var todate = $("#ToDate").val();


            var permission = false;
            var UserRole = `@HttpContextAccessor.HttpContext.Session.GetString("UserRole")`;
            //alert(UserRole);
            //alert(permission);

            if (UserRole.toLowerCase().includes("admin")) { permission = true; };
            //alert(permission);



            loaddata(fromdate, todate, CustomerId, UserId, $("#Status").val() ,1);

            loadsummarydata($("#FromDate").val(), $("#ToDate").val(), $("#CustomerId").val(), $("#UserId").val());



            function format(d) {
                //console.log(d.Items);
                var trs = '';
                var trf = '';
                var sumindsalesprice = 0.00;
                var sumindcostprice = 0.00;
                var suminddiscount = 0.00;
                var sumindquantity = 0.00;

                var sumindprofit = 0.00;
                var sumindcomissionamount = 0.00;

                var sumsalesprice = 0.00;
                var sumcostprice = 0.00;
                var sumavgcostprice = 0.00;

                var sumprofit = 0.00;
                //var sumcommission = 0.00;



                var i = 0;



                $.each($(d.Items), function (key, value) {
                    //console.log(d.Items);

                    //console.log(value);
                    i++;
                    var indsalesprice = - (parseFloat(d.Items[key].Price));
                    var indcostprice = - (parseFloat(d.Items[key].CostPrice));
                    var indavgcostprice = - (parseFloat(d.Items[key].CostPrice));

                    var inddiscount = - (  (((parseFloat(d.Items[key].Price)) * (parseFloat(d.Items[key].IndDisPer)))/100) + (parseFloat(d.Items[key].IndDiscount) || 0) +    ((parseFloat(d.Items[key].IndDiscountProportion)) || 0));
                    var indquantity = - (parseFloat(d.Items[key].Quantity));
                    var indprofit = - (parseFloat(parseFloat(indsalesprice - indcostprice) * parseFloat(indquantity)) + parseFloat(inddiscount));
                    //alert(indprofit);
                    //var indcomission = - parseFloat(d.Items[key].CommissionAmount);

                    var totalsalesprice = - parseFloat((indsalesprice-inddiscount) * indquantity);
                    var totalcostprice = - parseFloat(indcostprice * indquantity);
                    var totalavgcostprice = parseFloat(indavgcostprice);

                    var totalprofit = - parseFloat(totalsalesprice - totalcostprice) ;//- totalservicecharge - totalvat;

                    //console.log(profit);

                    sumindsalesprice += parseFloat(indsalesprice);
                    //sumindcostprice += parseFloat(indcostprice);

                    suminddiscount += parseFloat(inddiscount);
                    sumindquantity += parseFloat(indquantity);
                    //sumindprofit += indprofit.toFixed();
                   // sumindcomissionamount += parseFloat(indcomission);

                    sumsalesprice += parseFloat(totalsalesprice);
                    //sumcostprice += parseFloat(totalcostprice);
                    //sumavgcostprice += parseFloat(totalavgcostprice);

                    //sumprofit += parseFloat(totalprofit.toFixed(2));
                    //sumcommission += parseFloat(sumindcomissionamount);


                    if (permission == false)
                    {
                        indcostprice = 0.00;
                        indavgcostprice = 0.00;
                        indprofit = 0.00;
                        totalcostprice = 0.00;
                    }
                    else
                    {
                    //alert('found');
                        sumindcostprice += parseFloat(indcostprice);

                        sumindprofit += parseFloat(indprofit.toFixed());

                        sumcostprice += parseFloat(totalcostprice);

                        sumavgcostprice += parseFloat(totalavgcostprice);
                        //alert(sumavgcostprice);

                        sumprofit += parseFloat(totalprofit.toFixed(2));

                    }

                    trs += '<tr><td>Return</td><td>' + i + '</td><td>' + d.Items[key].Product.Category.Name + '</td><td>' + d.Items[key].Product.Code + '</td><td>' + d.Items[key].Product.Name + '</td><td>' + indsalesprice.toLocaleString() + '</td><td>' + indquantity.toLocaleString() + '</td><td>' + indcostprice.toLocaleString() + '</td><td>' + indavgcostprice.toLocaleString() + '</td><td>' + inddiscount.toLocaleString() + '</td><td>' + totalsalesprice.toLocaleString() + '</td><td>' + totalcostprice.toLocaleString() + '</td><td>' + indprofit.toLocaleString() + '</td></tr>';






                })


                if (i > 1) {
                    trf += '<tr><td></td><td></td><td>Total :</td><td></td><td>Item Count : '+ i +'</td><td>' + sumindsalesprice.toLocaleString() + '</td><td>' + sumindquantity.toLocaleString() + '</td><td>' + sumindcostprice.toLocaleString() + '</td><td>' + sumavgcostprice.toLocaleString() + '</td><td>' + suminddiscount.toLocaleString() + '</td><td>' + sumsalesprice.toLocaleString() + '</td><td>' + sumcostprice.toLocaleString() + '</td><td>' + sumindprofit.toLocaleString() + '</td></tr>';

                }

                i = 0;


                 $.each($(d.ExchangeItems), function (key, value) {
                    //console.log(d.Items);

                    //console.log(value);
                    i++;
                    var indsalesprice = (parseFloat(d.ExchangeItems[key].Price));
                    var indcostprice = (parseFloat(d.ExchangeItems[key].CostPrice));
                    var indavgcostprice = (parseFloat(d.ExchangeItems[key].CostPrice));

                    var inddiscount = (((parseFloat(d.ExchangeItems[key].Price)) * (parseFloat(d.ExchangeItems[key].IndDisPer)))/100) + (parseFloat(d.ExchangeItems[key].IndDiscount) || 0) + (parseFloat(d.ExchangeItems[key].IndDiscountProportion) || 0);
                    var indquantity = (parseFloat(d.ExchangeItems[key].Quantity));
                    var indprofit = parseFloat(parseFloat(indsalesprice - indcostprice) * parseFloat(indquantity)) - parseFloat(inddiscount);
                    //alert(indprofit);
                    //var indcomission = parseFloat(d.ExchangeItems[key].CommissionAmount);

                    var totalsalesprice = parseFloat((indsalesprice-inddiscount) * indquantity);
                    var totalcostprice = indcostprice * indquantity;
                    var totalavgcostprice = indavgcostprice;

                    var totalprofit = totalsalesprice - totalcostprice ;//- totalservicecharge - totalvat;

                    //console.log(profit);

                    sumindsalesprice += parseFloat(indsalesprice);
                    //sumindcostprice += parseFloat(indcostprice);

                    suminddiscount += parseFloat(inddiscount);
                    sumindquantity += parseFloat(indquantity);
                    //sumindprofit += indprofit.toFixed();
                    //sumindcomissionamount += parseFloat(indcomission);

                    sumsalesprice += parseFloat(totalsalesprice);
                    //sumcostprice += parseFloat(totalcostprice);
                    //sumavgcostprice += parseFloat(totalavgcostprice);

                    //sumprofit += parseFloat(totalprofit.toFixed(2));
                    //sumcommission += parseFloat(sumindcomissionamount);


                    if (permission == false)
                    {
                        indcostprice = 0.00;
                        indavgcostprice = 0.00;
                        indprofit = 0.00;
                        totalcostprice = 0.00;
                    }
                    else
                    {
                    //alert('found');
                        sumindcostprice += parseFloat(indcostprice);

                        sumindprofit += parseFloat(indprofit.toFixed());

                        sumcostprice += parseFloat(totalcostprice);

                        sumavgcostprice += parseFloat(totalavgcostprice);

                        sumprofit += parseFloat(totalprofit.toFixed(2));

                    }

                    trs += '<tr><td>Exchange</td><td>' + i + '</td><td>' + d.ExchangeItems[key].Product.Category.Name + '</td><td>' + d.ExchangeItems[key].Product.Code + '</td><td>' + d.ExchangeItems[key].Product.Name + '</td><td>' + indsalesprice.toLocaleString() + '</td><td>' + indquantity.toLocaleString() + '</td><td>' + indcostprice.toLocaleString() + '</td><td>' + indavgcostprice.toLocaleString() + '</td><td>' + inddiscount.toLocaleString() + '</td><td>' + totalsalesprice.toLocaleString() + '</td><td>' + totalcostprice.toLocaleString() + '</td><td>' + indprofit.toLocaleString() + '</td></tr>';


                })





                if (i > 1) {
                    trf += '<tr><td></td><td></td><td>Total :</td><td></td><td>Item Count : '+ i +'</td><td>' + sumindsalesprice.toLocaleString() + '</td><td>' + sumindquantity.toLocaleString() + '</td><td>' + sumindcostprice.toLocaleString() + '</td><td>' + sumavgcostprice.toLocaleString() + '</td><td>' + suminddiscount.toLocaleString() + '</td><td>' + sumsalesprice.toLocaleString() + '</td><td>' + sumcostprice.toLocaleString() + '</td><td>' + sumindprofit.toLocaleString() + '</td></tr>';

                }

                // `d` is the original data object for the row
                return '<div class="offset-md-1 col-md-6"><table class="table text-center table-sm text-nowrap table-bordered">' +
                    '<thead class="border">' +
                    '<th>Type</th>' +
                    '<th>SLNo.</th>' +
                    '<th>Category</th>' +
                    '<th>Code</th>' +
                    '<th>Product Name</th>' +
                    '<th>Sales Price</th>' +
                    '<th>Quantity</th>' +
                    '<th>Cost Price</th>' +
                    '<th>Total Average Cost</th>' +
                    '<th>Ind. Discount</th>' +
                    '<th>Total Sales</th>' +
                    '<th>Total Cost</th>' +
                    '<th>Total Profit</th>' +
                    '</thead><tbody>' +

                    trs +
                    '</tbody><tfoot class="text-center font-weight-bold">' + trf + '</tfoot></table></div>';
            }



            $('#SalesReturnlist tbody').on('click', 'td.details-control', function () {
                var tr = $(this).closest('tr');
                var row = table.row(tr);

                if (row.child.isShown()) {
                    // This row is already open - close it
                    row.child.hide();
                    tr.removeClass('shown');
                }
                else {
                    // Open this row
                    row.child(format(row.data())).show();
                    tr.addClass('shown');
                }
            });


            function loaddata(FromDate = "", ToDate = "", CustomerId = "", UserId = "",Status = "", isAll = 1) {
            //alert(CustomerId, FromDate, ToDate);








            table = $('#SalesReturnlist').DataTable({
                initComplete: function () {

                    var input = $('.dataTables_filter input'),//.unbind(),
                        self = this.api(),

                        //$searchButton = $('<button class="btn rounded-0 btn-info btn-sm" tabindex="0" aria-controls="SalesReturnlist" TransactionId="button" title="Search"><span><i class="mdi mdi-file-excel"></i></span></button>')
                        //    .text('Search')
                        //    .click(function () {
                        //        if (input.val().length > 0) {
                        //            self.search(input.val()).draw();

                        //        }
                        //        else {
                        //            loaddata(fromdate, todate, CustomerId, UserId , Status, 1);

                        //        }
                        //    }),
                        //$clearButton = $('<button class="btn rounded-0 btn-warning btn-sm" tabindex="0" aria-controls="SalesReturnlist" TransactionId="button" title="Export to PDF"><span><i class="mdi mdi-file-pdf"></i></span></button>')
                        //    .text('Clear')
                        //    .click(function () {
                        //        input.val('');
                        //        $searchButton.click();
                        //    }),
                        $allButton = $('<button class="btn rounded-0 btn-primary btn-sm" tabindex="0" aria-controls="SalesReturnlist" TransactionId="button" title="Load"><span><i class="mdi mdi-file-excel"></i></span></button>')
                            .text('Customer & Load')
                            .click(function () {
                                input.val('');
                                //alert(FromDate);
                                loaddata(fromdate, todate, CustomerId, UserId , Status , 1);

                                loadsummarydata($("#FromDate").val(), $("#ToDate").val(), $("#CustomerId").val(), $("#UserId").val());


                                //table.ajax.reload();


                            })
                    $('.dataTables_filter').prepend($allButton);//, $clearButton//, $searchButton
                },

                serverSide: true,  //"scrollX": true,
                "orderCellsTop": true,

                "iDisplayLength": 10,
                "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],

                dom: '<"dom_wrapper fh-fixedHeader"fl>tip',

                buttons: {
                    dom: {
                        button: {
                            className: 'btn rounded-0'
                        }
                    },
                    buttons: [
                    ]
                },
                "ajax": {
                    "url": "@Url.Action("GetSalesReturnList", "SalesReturn")",
                    "data": { FromDate: $("#FromDate").val(), ToDate: $("#ToDate").val(), CustomerId: $("#CustomerId").val(), UserId: $("#UserId").val(), Status: $("#Status").val(), isAll: isAll },
                    "type": "POST",
                    "datatype": "json"
                },
                "columns": [
                            { "title": "Id", "data": "Id", "visible": false },
                        //    { "title": "SalesReturn Code", "data": "SalesReturnCode", "searchable": true },


                        {
                            "title":"Sales Return Code",
                        "className": "text-nowrap",
                        "data": {
                            Id: "SalesReturnCode"
                        },
                        "searchable": true,

                        "render": function (data, InternetUserId, row) {

                            var myUrlprint = '@Url.Action("SalesReturnReport", "SalesReturn")?SalesReturnId=' + data.Id;
                            var SalesReturnCode = data.SalesReturnCode;
                            var buttons = '';
                            buttons += '<span data-toggle="tooltip" title="Print"> <a href=\"' + myUrlprint + '\" class=\"btn btn-icon btn-success btn m-b-0\" target=\"_blank\"><i class="fa fa-print"> ' + SalesReturnCode +'</i></a></span>';
                            return buttons;
                        }
                    },

                    {
                        "class": 'details-control',
                        "role":"row",
                        "orderable": false,
                        "data": null,
                        "defaultContent": ''
                    },

                    { "title": "Entry User", "data": "SalesReturnUser", "className": "nowrap text-nowrap text-center", "searchable": true },




                    { "title": "Return Date", "data": "SalesReturnDateString", "className": "nowrap text-nowrap text-center", "searchable": false },
                    { "title": "Customer Name", "data": "CustomerName", "className": "nowrap text-nowrap text-center", "searchable": true },
                    { "title": "Primary Address", "data": "PrimaryAddress", "className": "nowrap text-nowrap text-center","searchable": true },
                    { "title": "Phone No", "data": "PhoneNo", "className": "nowrap text-nowrap text-center", "searchable": true },
                    { "title": "Notes", "data": "Notes", "className": "nowrap text-nowrap text-center", "searchable": true },
                    { "title": "Total", "data": "Total", "className": "nowrap text-nowrap text-center", "searchable": true },
                    { "title": "Discount", "data": "Discount", "className": "nowrap text-nowrap text-center", "searchable": true },
                    { "title": "Net Amount", "data": "NetAmount", "className": "nowrap text-nowrap text-center", "searchable": true },
                            //{ "title": "Status", "data": "Status", "searchable": true },
                    { "title": "Paid Amt.", "data": "PaidAmt", "className": "nowrap text-nowrap text-center", "searchable": false },
                            //{ "title": "Received By", "data": "ReceivingHead", "searchable": false },

                            {
                                "title": "Paid By",
                                //"data": "SalesReturnPayments",
                                "data": {
                                    Id: "Id" //,
                                },
                                "className": "nowrap text-nowrap text-center", "searchable": false,
                                "render": function (data, type, row) {
                                    //console.log(data);



                                    //for (var i = 0; i < data.length; i++) {
                                    //    //output += '<p class="lineheight">' + data[i].WhShortName + ' : ' + data[i].CurrentStock + ' : ' + data[i].CostingValue.toFixed(2) + ' : ' + data[i].SalesReturnValue;
                                    //    //totalSalesReturnvalue = totalSalesReturnvalue + parseFloat(data[i].SalesReturnValue.toFixed(2))

                                    //    if (i < data.length - 1) {
                                    //        output += "  </p>";

                                    //        //'<p>' + this + '</p>'
                                    //    }
                                    //    count++;
                                    //};
                                    var dueamount = data.NetAmount - data.PaidAmt;


                                    if (data.SalesReturnPayments.length != 0) {

                                        var output = "";

                                        for (var i = 0; i < data.SalesReturnPayments.length; i++) {
                                            if (data.SalesReturnPayments[i].vChartofAccounts != null) {
                                                //console.log(data[i]);
                                                output += '<p class="lineheight" style="font-weight: bold; color:darkgreen">' + data.SalesReturnPayments[i].vChartofAccounts.AccName + " : " + data.SalesReturnPayments[i].Amount
                                            }

                                            if (i < data.SalesReturnPayments.length - 1) {
                                                output += "  </p>";

                                                //'<p>' + this + '</p>'
                                            }
                                        };

                                        console.log(data.NetAmount);
                                        if (dueamount > 0) {
                                            output += '<p class="lineheight" style="font-weight: bold; color:red">Due  : ' + dueamount + '</p>';
                                        };


                                        //console.log(output);

                                        return output;
                                    }
                                    else {

                                        var output = '<p style="font-weight: bold; color:red">Due : ' + dueamount + '</p>';
                                        return output;

                                        //return null;
                                    }
                                }

                            },



                            { "title": "Total Cost", "data": "FinalCostingPrice", "searchable": false, "visible": false  },
                    { "title": "Profit", "data": "Profit", "searchable": false, "visible": false },
                    { "title": "Profit %", "data": "ProfitPercentage", "searchable": false, "visible": false },


                    {
                        "title": "Post.Status",
                        "data": {
                            Id: "Id" //,
                        },
                        "render": function (data, type, row) {
                            var information = '';
                            if (!data.isPosted) {
                                information = '<p class="narrowlineheight" style="font-weight: bold; color:red">Not Posted</p>';
                            }
                            else {
                                information = '<p class="narrowlineheight" style="font-weight: bold; color:darkgreen">Posted</p>';
                            }
                            return information;
                        }

                    },
                            {
                                "title": "Action",
                                "className" : "text-nowrap",
                                //"data": "Id",
                                "data": {
                                    Id: "Id" //,
                                    //VoucherTypeName:"VoucherTypeName",
                                    //isPosted:"isPosted"
                                },
                                "render": function (data, type, row) {

                                    var myUrledit = '@Url.Action("EditSalesReturn", "SalesReturn")?SalesReturnId=' + data.Id;
                                    var myUrldelete = '@Url.Action("DeleteSalesReturn", "SalesReturn")?SalesReturnId=' + data.Id;
                                    var myUrlposedit = '@Url.Action("POSEdit", "SalesReturn")?SalesReturnId=' + data.Id;
                                    var myUrlSerialSalesReturnedit = '@Url.Action("EditSalesReturnBySerialSearch", "SalesReturn")?SalesReturnId=' + data.Id;

                                    var myUrlReport = '@Url.Action("SalesReturnReport", "SalesReturn")?SalesReturnId=' + data.Id;
                                    var message = `return confirm('Are you sure you want to Remove the SalesReturn Information ?')`;

                                    var buttons = '';// '<span data-toggle="tooltip" title="Report"> <a href=\"' + myUrlReport + '\"  class=\"btn btn-icon btn-success btn-sm rounded-0 m-b-5\" target=\"_blank\"><i class="fa fa-print"></i></a></span>';
                                    if (!data.isPosted) {
                                        if (data.isPOSSalesReturn) {
                                            buttons += '<span data-toggle="tooltip" title="POS Edit"> <a href=\"' + myUrlposedit + '\" class=\"btn btn-icon btn-info btn-sm rounded-0 rounded-0 m-b-5\" target=\"_blank\"><i class="fa fa-edit"></i></a></span>';
                                        }
                                        //else if (data.isSerialSalesReturn) {
                                        //    buttons += '<span data-toggle="tooltip" title="Barcode Scan SalesReturn Edit"> <a href=\"' + myUrlSerialSalesReturnedit + '\" class=\"btn btn-icon btn-default btn-sm rounded-0 rounded-0 m-b-5\" target=\"_blank\"><i class="fa fa-edit"></i></a></span>';
                                        //}
                                        else {
                                            buttons += '<span data-toggle="tooltip" title="Edit"> <a href=\"' + myUrledit + '\" class=\"btn btn-icon btn-warning btn-sm rounded-0 m-b-5\" target=\"_blank\"><i class="fa fa-edit"></i></a></span>';
                                        }
                                        buttons += '<span data-toggle="tooltip" title="Delete"> <a href=\"' + myUrldelete + '\"  onclick = \"' + message + '\"  class=\"btn btn-icon btn-danger btn-sm rounded-0 m-b-5\" target=\"_self\"><i class="fa fa-remove"></i></a></span>';
                                    }
                                    else
                                    {
                                       // buttons += '<span data-toggle="tooltip" title="View"> <a href=\"' + myUrlView + '\" class=\"fa fa-eye text-info px-1 h4\" target=\"_blank\"></a></span>';
                                    }
                                    return buttons;

                                    //if (!data.isPOSSalesReturn) {
                                    //    return '<span data-toggle="tooltip" title="Edit"> <a href=\"' + myUrledit + '\" class=\"btn btn-icon btn-warning btn-sm rounded-0 mb-1\" target=\"_blank\"><i class="fa fa-edit"></i></a></span>' +
                                    //        '<span data-toggle="tooltip" title="Delete"> <a href=\"' + myUrldelete + '\" onclick=return confirm("Are you sure you want to Remove this Customer ?")  class=\"btn btn-icon btn-danger btn-sm rounded-0 mb-1\" target=\"_blank\"><i class="fa fa-remove"></i></a></span>' +
                                    //        '<span data-toggle="tooltip" title="Report"> <a href=\"' + myUrlReport + '\"  class=\"btn btn-icon btn-success btn-sm rounded-0 mb-1\" target=\"_blank\"><i class="fa fa-print"></i></a></span>';
                                    //}
                                    //else {
                                    //    return '<span data-toggle="tooltip" title="POS Edit"> <a href=\"' + myUrlposedit + '\" class=\"btn btn-icon btn-warning btn-sm rounded-0 mb-1\" target=\"_blank\"><i class="fa fa-edit"></i></a></span>' +
                                    //        '<span data-toggle="tooltip" title="Delete"> <a href=\"' + myUrldelete + '\" onclick=return confirm("Are you sure you want to Remove this Customer ?")  class=\"btn btn-icon btn-danger btn-sm rounded-0 mb-1\" target=\"_blank\"><i class="fa fa-remove"></i></a></span>' +
                                    //        '<span data-toggle="tooltip" title="Report"> <a href=\"' + myUrlReport + '\"  class=\"btn btn-icon btn-success btn-sm rounded-0 mb-1\" target=\"_blank\"><i class="fa fa-print"></i></a></span>';
                                    //}
                                }

                            }
                ],

                //"columnDefs": [
                //    { "width": "100px", "targets": 0 },
                //    { "width": "140px", "targets": 1 },
                //    { "width": "100px", "targets": 2 },
                //    { "width": "120px", "targets": 3 },
                //    { "width": "120px", "targets": 4 },
                //    { "width": "100px", "targets": 5 }
                //],
                "order": [0, "desc"],
                "processing": true,
                "language": {
                    sLengthMenu: " _MENU_",
                    search: "",
                    searchPlaceholder: "Search..."
                },
                "destroy": true
            });
            //$('#SalesReturnlist_filter input').unbind();
            // alert('Load Successfully');
            //$('.dataTables_filter input').bind('keyup', function (e) {
            //    if (e.keyCode == 13) {
            //        //alert('enter');
            //        table.search(this.value).draw();
            //    }
            //});
        }





             function loadsummarydata(abcFromDate = "", abcToDate = "" , CustomerId = "" , UserId = "") {

                 //alert($("#FromDate").val());

                 var x = $("#FromDate").val();
                 var y = $("#ToDate").val();
                 var CustomerId = $("#CustomerId").val();
                 var UserId = $("#UserId").val();
                 var Status = $("#Status").val();


                 //alert(x , y);
                $.ajax({

                        url: '@Url.Action("GetSalesReturnSummaryInfo", "SalesReturn")',
                    data: { FromDate: x, ToDate: y, CustomerId: CustomerId, UserId: UserId },
                        //data: JSON.stringify(purchasesmain),
                        //type: 'POST',
                        //async: true,
                        contentType: 'application/json;',
                        dataType: 'json',
                        success: function (result) {
                            //console.log(result);
                            //console.log(result.SalesReturnbyuser);
                            //console.log(result.SalesReturnreceivebyhead);


                            var output = "";
                            if (result.salesreturnbyuser.length != 0) {
                                for (var i = 0; i < result.salesreturnbyuser.length; i++) {
                                    if (result.salesreturnbyuser[i] != null) {
                                        console.log(result.salesreturnbyuser[i]);
                                        output += '<p class="lineheight"  ; color:black">' + result.salesreturnbyuser[i].UserName + " : " + result.salesreturnbyuser[i].TotalsalesreturnCount + " : " + result.salesreturnbyuser[i].TotalsalesreturnSum + ' </p>'
                                    }
                                };
                            }
                            document.getElementById("fullinfoone").innerHTML = output;



                            //output = "";
                            //if (result.commissionbyuser.length != 0) {
                            //    for (var i = 0; i < result.commissionbyuser.length; i++) {
                            //        if (result.commissionbyuser[i] != null) {
                            //            //console.log(result.commissionbyuser[i]);
                            //            output += '<p class="lineheight"  ; color:black">' + result.commissionbyuser[i].UserName + " : " + result.commissionbyuser[i].TotalsalesreturnCount + " : " + result.commissionbyuser[i].TotalCommissionAmount + ' </p>'
                            //        }
                            //    };
                            //}
                            //document.getElementById("fullinfofour").innerHTML = output;






                            output = "";
                            if (result.totalsalesreturnsummary.length != 0) {
                                for (var i = 0; i < result.totalsalesreturnsummary.length; i++) {
                                    if (result.totalsalesreturnsummary[i] != null) {
                                        console.log(result.totalsalesreturnsummary[i]);
                                        output += '<p class="lineheight"  > Total sales Return :' + result.totalsalesreturnsummary[i].TotalsalesreturnCount + ' </p>'
                                        output += '<p class="lineheight"  > Total Return Value : ' + result.totalsalesreturnsummary[i].TotalsalesreturnValue + ' </p>'
                                        //output += '<p class="lineheight"  > Total Costing : ' + result.totalsalesreturnsummary[i].TotalCosting + ' </p>'
                                        //output += '<p class=""  > Total Profit : '  + result.totalsalesreturnsummary[i].TotalProfit + ' </p>'
                                    }

                                };
                            }
                            document.getElementById("fullinfotwo").innerHTML = output;



                            output = "";
                            if (result.salesreturnreceivebyhead.length != 0) {
                                for (var i = 0; i < result.salesreturnreceivebyhead.length; i++) {
                                    if (result.salesreturnreceivebyhead[i] != null) {
                                        //console.log(result.salesreturnreceivebyhead[i]);


                                        if (result.salesreturnreceivebyhead[i].AccName == "Due" && result.salesreturnreceivebyhead[i].Amount > 0) {
                                            output += '<p class="lineheight" style="color:red;">Tota Due  : ' + result.salesreturnreceivebyhead[i].Amount + '</p>';
                                        }
                                        else {
                                            output += '<p class="lineheight"  ; color:black">' + result.salesreturnreceivebyhead[i].AccName + " : " + result.salesreturnreceivebyhead[i].Amount + ' </p>'
                                        }

                                    }
                                };



                            }
                            document.getElementById("fullinfothree").innerHTML = output;


                            var output = "";
                            if (result.topsellingitem.length != 0) {
                                for (var i = 0; i < result.topsellingitem.length; i++) {
                                    if (result.topsellingitem[i] != null) {
                                        //console.log(result.topsellingitem[i]);
                                        output += '<p class="lineheight"  ; color:black">' + result.topsellingitem[i].ProductName + " : " + result.topsellingitem[i].ProductCount + ' </p>'
                                    }
                                };
                            }
                            document.getElementById("fullinfofive").innerHTML = output;



                            output = "";
                            if (result.topsellingcustomer.length != 0) {
                                for (var i = 0; i < result.topsellingcustomer.length; i++) {
                                    if (result.topsellingcustomer[i] != null) {

                                        if (result.topsellingcustomer[i].CustomerName == "") {
                                            result.topsellingcustomer[i].CustomerName = "=N/A=";
                                        }

                                        //console.log(result.topsellingcustomer[i]);
                                        output += '<p class="lineheight"  ; color:black">' + result.topsellingcustomer[i].CustomerName + " : " + result.topsellingcustomer[i].salesreturnAmount + ' </p>'
                                    }
                                };
                            }
                            document.getElementById("fullinfoseven").innerHTML = output;



                            output = "";
                            if (result.topduecustomer.length != 0) {
                                for (var i = 0; i < result.topduecustomer.length; i++) {



                                    var DueAmount = result.topduecustomer[i].Totalsalesreturn - result.topduecustomer[i].ReceivedAmount;

                                    if (result.topduecustomer[i] != null && DueAmount > 0) {

                                        if (result.topduecustomer[i].CustomerName == "") {
                                            result.topduecustomer[i].CustomerName = "=N/A=";
                                        }

                                        output += '<p class="lineheight"  ; color:black">' + result.topduecustomer[i].CustomerName + " : " + DueAmount + ' </p>'
                                    }
                                };
                            }
                            document.getElementById("fullinfosix").innerHTML = output;


                            output = "";
                            if (result.postunpostcount.length != 0) {
                                for (var i = 0; i < result.postunpostcount.length; i++) {
                                    if (result.postunpostcount[i] != null && result.postunpostcount[i].DocCount > 0 && result.postunpostcount[i].isPosted == false) {
                                        output += '<p class="lineheight"  ; color:black">' + "Not Posted : " + result.postunpostcount[i].DocCount + ' </p>'
                                    }
                                    else {
                                        output += '<p class="lineheight"  ; color:black">' + "Posted : " + result.postunpostcount[i].DocCount + ' </p>'
                                    }
                                };
                            }
                            document.getElementById("fullinfoeight").innerHTML = output;



                            toastr.success('Summary Load Successfully.');
                            //alert('Wait');
                        },
                        error: function () {
                            toastr.error('Unable to Load');
                            //alert('Unable to Save');
                        }
                    });


            };


    });



        @*var CultureInfoViewFormat = '@HttpContextAccessor.HttpContext.Session.GetString("CultureInfoViewFormat").ToString()';
            var CurrencyShortNameViewFormat = '@HttpContextAccessor.HttpContext.Session.GetString("CurrencyShortName").ToString()';


            var formatter = new Intl.NumberFormat(CultureInfoViewFormat, ///'en-US'
                {
                style: 'currency',
                currency: CurrencyShortNameViewFormat,///'BDT'
                minimumFractionDigits: 2,
            });*@

</script>




}










