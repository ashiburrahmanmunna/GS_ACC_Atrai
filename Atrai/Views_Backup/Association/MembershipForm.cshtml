@model Atrai.Core.Entity.MemberModel
@{ ViewData["Title"] = "MembershipForm";
    Layout = "~/Views/Shared/_adminLayout.cshtml"; }


<div class="page-wrapper">
    <div class="container" style="max-width:900px;">
        <!-- Start Page Content -->
        <div class="py-7 text-center">
            <h1 id="styletext">তামাকুমন্ডি লেইন বণিক সমিতি</h1>
            <h1>
                Tamakumandi Lane Banik Shamity
            </h1>
            <h6>
                আব্দুল লতিফ তৃতীয় তলা , তামাকুমুন্ডি লেইন , জুবলি রোড , চট্টগ্রাম
            </h6>
            <h4 class="label text-nowrap">
                <span class="label other">সদস্য ভর্তি ফরম</span>
            </h4>
            <p class="lead"></p>
        </div>
        <!-- End PAge Content -->


        <div id="modalbodyrakin" class="row card p-4">
            <div class="col-md-12 order-md-1">
                <form asp-controller="Association" asp-action="AddMember" method="post" enctype="multipart/form-data">
                    <div class="row">

                        <br>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @if (Model != null)
                        {

                    <input type="hidden" id="MemberId" MemberNameEng="MemberId" value="@Model.Id" /> @*@Html.HiddenFor(model => model.MasterLCID)*@
                                    @Html.HiddenFor(model => model.LuserId)
                                                    @Html.HiddenFor(model => model.ComId)
                                                    @Html.HiddenFor(model => model.LuserIdUpdate) @*@Html.HiddenFor(model => model.CreateDate)*@
                                                    @Html.HiddenFor(model => model.UpdateDate)

                                                    @Html.HiddenFor(model => model.IsApplied) 
                                                    @Html.HiddenFor(model => model.IsChecked)
                                                    @Html.HiddenFor(model => model.isVerified)
                                                    @Html.HiddenFor(model => model.isApproved) 
                                                    @Html.HiddenFor(model => model.isCanceled)
                                    }
                                    else
                                    
                                    {
                                    <input type="hidden" id="comid" Name="comid" value="" />
                                    }


                 
                        <div class="col-md-4  col-12">
                            @Html.LabelFor(model => model.MemberType, "মেম্বারশিপ এর ধরণ :", htmlAttributes: new { @class = "control-label" })
                            @*@Html.DropDownListFor(m => m.MarketId, ViewBag.MarketId as List<SelectListItem>, "--Select From List--", new { id = "MarketId", @class = "form-control form-control-sm" })*@

                            @Html.DropDownList("MemberType", new List<SelectListItem>
                                                                                                                    {
                                        new SelectListItem() {Text = "সাধারণ সদস্য", Value="General Member"},
                                        new SelectListItem() {Text = "আজীবন সদস্য", Value="Life Member"},
                                    }, "মেম্বারশিপ এর ধরণ", new { id = "MemberType", @class = "form-control  form-control-sm" })

                            @Html.ValidationMessageFor(model => model.MemberType, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-4  col-12">
                            @Html.LabelFor(model => model.MemberAccessId, "Member Id :", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.MemberAccessId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MemberAccessId, "", new { @class = "text-danger" })

                        </div>

                        <div class="col-md-4  col-12">
                            @Html.LabelFor(model => model.CreateDate, "তারিখ :", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.CreateDate, "{0:dd-MMM-yyyy}", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })

                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-6 col-12">
                            @Html.LabelFor(model => model.MembersNameBng, "আবেদনকারীর নাম (বাংলায়):", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.MembersNameBng, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MembersNameBng, "", new { @class = "text-danger" })

                        </div>
                        <div class="col-md-6 col-12">
                            @Html.LabelFor(model => model.MembersNameEng, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.MembersNameEng, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MembersNameEng, "", new { @class = "text-danger" })

                        </div>
                    </div>



                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.FathersNameBng, "পিতার নাম (বাংলায়):", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.FathersNameBng, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FathersNameBng, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.FathersNameEng, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.FathersNameEng, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FathersNameEng, "", new { @class = "text-danger" })
                        </div>

                    </div>


                    <div class="row">
                        <div class="col-md-4 col-12">
                            @Html.LabelFor(model => model.BusinessAddressBng, "প্রতিষ্ঠানের ঠিকানা :", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.BusinessAddressBng, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BusinessAddressBng, "", new { @class = "text-danger" })

                        </div>
                        <div class="col-md-4 col-12">
                            @Html.LabelFor(model => model.BusinessAddressEng, "প্রতিষ্ঠানের ঠিকানা :", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.BusinessAddressEng, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BusinessAddressEng, "", new { @class = "text-danger" })

                        </div>
                        <div class="col-md-4 col-12">
                            @Html.LabelFor(model => model.FixedAddress, "স্থায়ী ঠিকানা :", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.FixedAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FixedAddress, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="row">


                        <div class="col-md-6 col-12">
                            @Html.LabelFor(model => model.MemberType, "মালিকানার ধরণ :", htmlAttributes: new { @class = "control-label" })
                            @*@Html.DropDownListFor(m => m.MarketId, ViewBag.MarketId as List<SelectListItem>, "--Select From List--", new { id = "MarketId", @class = "form-control form-control-sm" })*@

                            @Html.DropDownList("MemberType", new List<SelectListItem>
                                                                                    {
                                        new SelectListItem() {Text = "জমিদার", Value="জমিদার"},
                                        new SelectListItem() {Text = "উপ ভাড়াটিয়া", Value="উপ ভাড়াটিয়া"},
                                        new SelectListItem() {Text = "সেলামিতে ক্রয় কৃত দোকানের মালিক", Value="সেলামিতে ক্রয় কৃত দোকানের মালিক"},
                                    }, "মালিকানার ধরণ", new { id = "MemberType", @class = "form-control  form-control-sm" })

                            @Html.ValidationMessageFor(model => model.MemberType, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3 col-12">
                            @Html.LabelFor(model => model.EducationalQualification, "শিক্ষাগত যোগ্যতা :", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.EducationalQualification, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EducationalQualification, "", new { @class = "text-danger" })

                        </div>
                        <div class="col-md-3 col-12">
                            @Html.LabelFor(model => model.Occupation, "পেশা :", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.Occupation, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })

                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-3 col-12">
                            @Html.LabelFor(model => model.DOB, "জন্ম তারিখ :", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })

                        </div>
                        <div class="col-md-3 col-12">
                            @Html.LabelFor(model => model.BloodGroup, "রক্তের গ্রুপ :", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.BloodGroup, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BloodGroup, "", new { @class = "text-danger" })

                        </div>


                        <div class="col-md-3 col-12">
                            @Html.LabelFor(model => model.Mobile, "প্রতিষ্ঠানের ফোন নং :", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })

                        </div>
                        <div class="col-md-3 col-12">
                            @Html.LabelFor(model => model.MemberHomePhone, "বাসার ফোন নং :", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.MemberHomePhone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MemberHomePhone, "", new { @class = "text-danger" })

                        </div>
                    </div>







                    <div class="row">
                        <div class="col-md-8 col-12">
                            @Html.LabelFor(model => model.ProposerName, "প্রস্তাব কারীর নাম :", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.ProposerName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProposerName, "", new { @class = "text-danger" })

                        </div>

                        <div class="col-md-4  col-12">
                            @Html.LabelFor(model => model.MemberAccessId, "সদস্য নং :", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.MemberAccessId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MemberAccessId, "", new { @class = "text-danger" })

                        </div>
                        <div class="col-md-4  col-12">
                            @Html.LabelFor(model => model.ProposerMemberNo, "সদস্য নং :", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.ProposerMemberNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProposerMemberNo, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="row">

                        <div class="col-md-8  col-12">
                            @Html.LabelFor(model => model.SupporterName, "সমর্থনকারীর নাম :", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.SupporterName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SupporterName, "", new { @class = "text-danger" })

                        </div>
                        <div class="col-md-4 col-12">
                            @Html.LabelFor(model => model.SupporterMemberNo, " সদস্য নং :", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.SupporterMemberNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SupporterMemberNo, "", new { @class = "text-danger" })

                        </div>
                    </div>


                    <br>

                    <div class="d-block mx-auto">
                        <div class="col-md-4 offset-md-2">

                            <img src="..@Model.MemberImagePath" alt="img" id="UploadFile" class="img-thumbnail" style="height: 150px; width:150px" /> <br />
                            <input type="file" name="logoPostedFileBase" accept="image/x-png, image/gif, image/jpeg" id="FileUpload" onchange="PreviewImage()" />


                            @*@Html.HiddenFor(model => model.MemberImage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.HiddenFor(model => model.MemberFileExtension, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.MemberImage)*@


                            @*@Html.HiddenFor(model => model.MemberImagePath, new { htmlAttributes = new { @class = "form-control" } })

                        @if (Model == null)
                        {
                        }
                        else
                        {


                            if (Model.MemberImage == null)
                            {

                    <img src="@Url.Content("uploads/" + 0 + ".png")" class="img-thumbnail" multiple /> }
                            else
                            {
                    <img src="data:image/jpeg;base64,@(Convert.ToBase64String(Model.MemberImage))" class="img-thumbnail">}
                        }

                        @Html.ValidationMessageFor(model => model.MemberImage, "", new { @class = "text-danger" })
                        <input type="file" class="image-upload" MemberNameEng="file" id="myFile" />
                        <br />
                        <img src="" height="200" id='image_X' alt="Image preview...">
                        <div class="images">



                        </div>*@




                        </div>
                        <p>

                            আমি এই মর্মে অঙ্গীকার করিতেছি যে অত্র সমিতির আদর্শ ও উদ্দেশ্যের প্রতি আস্থা রাখে সমাজের সকল প্রকার আদেশ নির্দেশাবলী মানিয়ে চলতে বাধ্য থাকিব
                            গঠনতন্ত্রবিরোধী কোন প্রকার কাজ করব না এবং সমিতির মঙ্গলার্থে গৃহীত যেকোন পদক্ষেপের সর্বদা সহযোগিতা প্রদানের সচেষ্ট থাকব

                            অতএব আমাকে অত্র সমিতির সাধারন পাবলিক আজীবন সদস্য পদ লাভ করার সুযোগ দানে বাধিত করবেন

                        </p>
                    </div>
                    <table>
                        <tr>
                            <td>
                                @if (ViewBag.ActionType == "Create")
                                {
                    <input type="submit" value="Create" class="btn btn-primary btn-block" /> @*<button class="btn btn-primary btn-lg btn-block" type="button" onclick="Products_save()">Save</button>*@ }
                else if (ViewBag.ActionType == "Edit")
                {
            <input type="submit" value="Update" class="btn btn-warning btn-block" /> @*<button class="btn btn-warning btn-lg btn-block" type="button" onclick="Products_save()">Update</button>*@ }
        else if (ViewBag.ActionType == "Delete")
        {
            <button class="btn btn-danger btn-lg btn-block" type="button" onclick="Members_delete()">Delete</button>}

                            </td>

                            @*<td>
                        @Html.ActionLink("Back", "Index", "Members", null, new { @class = "btn btn-info btn-block" })

                    </td>*@

                        </tr>
                    </table>



                </form>

            </div>
        </div>


    </div>
</div>


@*@section scripts {
        <script type="text/javascript">
            $(document).ready(function () {


            });

            function PreviewImage() {
                var oFReader = new FileReader();
                oFReader.readAsDataURL(document.getElementById("FileUpload").files[0]);

                oFReader.onload = function (oFREvent) {
                    document.getElementById("UploadFile").src = oFREvent.target.result;
                };
            };






        </script>
    }*@

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {


        });

        function PreviewImage() {
            var oFReader = new FileReader();
            oFReader.readAsDataURL(document.getElementById("FileUpload").files[0]);

            oFReader.onload = function (oFREvent) {
                document.getElementById("UploadFile").src = oFREvent.target.result;
            };
        };
    </script>
}