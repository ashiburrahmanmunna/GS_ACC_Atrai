@using Microsoft.AspNetCore.Http
@*@Html.AntiForgeryToken()*@
@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery AntiForgery
@inject IHttpContextAccessor HttpContextAccessor
@model Atrai.Core.Entity.SalesModel
@{ ViewData["Title"] = "POS Sales";
    Layout = "~/Views/Shared/_adminLayout.cshtml"; }


<style>

    /*Maintaining txtarea or text box height when cell is going to be edited by fahad*/
    /*    button, input, optgroup, select, textarea, text {
        margin: 0;
        font-family: inherit;
        font-size: inherit;
        line-height: inherit;
        width: 100%;
    }*/

    /*   * {
        box-sizing: border-box;
    }*/

    #myInput {
        background-image: url('../../Content/css/searchicon.png');
        background-position: 10px 5px;
        background-repeat: no-repeat;
        width: 75%;
        padding: 11px 20px 13px 40px;
        border: 1px solid #ddd;
        /*font-size: 16px;
        margin-bottom: 12px;*/
    }

    #myInputSearch {
        background-image: url('../../Content/css/searchicon.png');
        background-position: 10px 5px;
        background-repeat: no-repeat;
        width: 100%;
        padding: 18px 20px 8px 40px;
        border: 1px solid #ddd;
        text-align: center;
        font-size: 22px;
        margin-bottom: 12px;
    }

    /*button, input, optgroup, select, textarea, text {
        margin: 0;
        font-family: inherit;
        font-size: 20px;
        line-height: inherit;
        width: 20%;
    }*/


    button.add, .sub {
        /*  margin: 4px;*/
        /* width: 20px;*/
        cursor: pointer;
    }

    .field {
        text-align: center;
        width: 40px;
        margin: 4px;
        color: salmon;
    }

    .hidden {
        display: none;
    }


    .cards tbody tr {
        float: left;
        padding: 5px;
        width: 23%; /*15.9rem;*/
        margin: 0.3rem;
        border: 0.0625rem solid rgba(0,0,0,.125);
        border-radius: .25rem;
        box-shadow: 0.25rem 0.25rem 0.5rem rgba(0,0,0,0.25);
        height: 134px;
        text-align: center;
        
    }

    .cards tbody td {
        display: block;
    }

    /*.table tbody label {
        display: none;
    }*/

    .cards tbody label {
        display: inline;
        position: relative;
        font-size: 85%;
        top: -0.5rem;
        float: left;
        color: #808080;
        min-width: 4rem;
        margin-left: 0;
        margin-right: 1rem;
        text-align: left;
    }
    thead .theadhide {
        display:none;

    }

    tr.selected label {
        color: #404040;
    }

    /*.table .fa {
        font-size: 2.5rem;
        text-align: center;
    }*/

    .cards .fa {
        /*font-size: 7.5rem;*/
        font-size: 1.5rem;
    }

    #tblproductsearch img {
        height: 80px !important;
        width: auto;
    }
    /*
    #tblproductsearch .searchproductimage img:hover {
        -moz-transform: scale(1.1) rotate(.01deg);
        -webkit-transform: scale(1.1) rotate(.01deg);
        transform: scale(1.1) rotate(.01deg);
    }*/

    table tr:hover {
        cursor: pointer;
    }
    /* For all tables*/
    table.sortable tr:hover {
        cursor: pointer;
    }

    .table-hover tbody tr:hover td, .table-hover tbody tr:hover th {
        background: no-repeat;
    }

    .table-sm th {
        font-size: 13px;
        font-weight: bold;
    }

    .table-sm td {
        font-size: 11.5px;
    }

    .SmallInput {
        /*    width: 50px;*/
        /*height: 10px;*/
        font-size: 12px;
        margin-bottom: 0px;
    }

    .select2-container {
        font-size: 12px;
    }
    /*    .select2fontsize {
        font-size: 12px;
    }*/

    /*    .select2-container {
        font-size: 12px !important;
    }*/
    /*    .table-hover tbody tr:hover {
        select2-container

        color: #212529;
        background-color: rgba(0,0,0,.075) !important;
    }*/
    /* only for this one*/


    .select2-selection {
        overflow: hidden !important;
        height: 32px !important;
        /*vertical-align:middle;*/
    }

    /*.select2-container--default .select2-selection--single .select2-selection__rendered,
    .select2-container--default .select2-selection--single .select2-selection__arrow {*/
    /*    color: #444;
    line-height: 28px;*/
    /*margin-top: 4px;
    }*/


</style>


<body>
    @*<div id="fakeloader-overlay" class="visible incoming"><div class="loader-wrapper-outer"><div class="loader-wrapper-inner"><div class="loader"></div></div></div></div>*@
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "myform" }))
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="page-wrapper">

                    <div class="container-fluid">
                        <div class="card mb-2">
                            @*<div class="card-header bg-info text-white">

        </div>*@
                           
                         
                           


                            @*<div id="dialog" title="Basic dialog">
                                <p> </p>
                            </div>*@

                            @if (Model != null)
                            {

                        <input type="hidden" id="Id" name="Id" value="@Model.Id" />
          
                        <input type="hidden" id="SaleCode" name="SaleCode" value="@Model.SaleCode" />
                        <input type="hidden" id="isDisPer" name="isDisPer" value="@Model.isDisPer" />

                        @Html.HiddenFor(model => model.isPOSSales)
                        @Html.HiddenFor(model => model.isSerialSales)
                        @Html.HiddenFor(model => model.LuserId)
                        @Html.HiddenFor(model => model.ComId)
                        @Html.HiddenFor(model => model.LuserIdUpdate)
                        @Html.HiddenFor(model => model.CreateDate)
                        @Html.HiddenFor(model => model.UpdateDate) 
                        }
                        else
                        {
                         <input type="hidden" id="LuserId" name="LuserId" value="" />
                            <input type="hidden" id="ComId" name="ComId" value="" />
                        }
                            <div class="card-body">
          
                                <div class="row">
                                    <div class="col-md-6 col-12">
                                        <div class="row">
                                            <div class="col-md-12 col-12">
                                                <div id="modalbodyfahad">
                                   
                                                        <div class="card-header">
                                                            <h6 class="text-left">Invoice @ViewBag.Title</h6>
                                                        </div>
                                                        <div class="row">


                                                            <div class="col-md-6 col-12">
                                                                <div class="input-group  mb-2" id="divQty">
                                                                    <div class="input-group-prepend">
                                                                        <span class="input-group-text py-0">
                                                                            Sales Date
                                                                        </span>
                                                                    </div>
                                                                    @*<input asp-for="SalesDate" class="form-control form-control-sm" type="date" autocomplete="off" />*@

                                                                    @Html.TextBox("SalesDate", null, new { @class = "form-control form-control-sm mydatepicker", @placeholder = "Select Sale Date ", autocomplete = "off" })

                                                                    <span asp-validation-for="SalesDate" asp-class="text-danger"></span>
                                                                </div>
                                                            </div>



                                                            <div class="col-md-6 col-12">
                                                                <div class="input-group  mb-2" id="divQty">
                                                                    <div class="input-group-prepend">
                                                                        <span class="input-group-text py-0">
                                                                            Invoice No
                                                                        </span>
                                                                    </div>
                                                                    @Html.EditorFor(model => model.SaleCode, new { htmlAttributes = new { @class = "form-control form-control-sm", @placeholder = "Auto Generated", disabled = "disabled" } })
                                                                </div>
                                                            </div>


                                                            <div class="col-md-12 col-12">
                                                                <div class="input-group  mb-2" id="divCustomer">
                                                                    <div class="input-group-prepend">
                                                                        <span class="input-group-text py-0">
                                                                            Customer
                                                                        </span>
                                                                    </div>
                                                                    @Html.DropDownList("Customer", ViewBag.Customer as List<SelectListItem>, new { id = "Customer", @class = "form-control" })
                                                                    <span class="input-group-append">
                                                                        <button class="btn btn-purple" type="button" onclick="CustomerInfo()" data-toggle="modal" data-target="#exampleModal">
                                                                            <span class="fa fa-eye"></span>
                                                                            @*Load*@
                                                                        </button>
                                                                        <!-- Button trigger modal -->
                                                                        @*<button type="button" class="btn btn-info" data-toggle="modal" data-target="#exampleModal">
                            <span class="mdi  mdi-plus-circle"></span>
                        </button>*@
                                                                    </span>
                                                                </div>
                                                            </div>

                                                        </div>
                                              
                                                </div>
                                            </div>
                                            <div class="col-md-12 col-12 my-2">
                                    
                                                    <div class="row">
                                                        <div class="col-md-12 col-12">
                                                            <div class="input-group  mb-2" id="divProduct">
                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text py-0">
                                                                        Product
                                                                    </span>
                                                                </div>
                                                                @Html.DropDownList("Product", ViewBag.Product as List<SelectListItem>, new { id = "Product", @class = "form-control" })
                                                                <div class="input-group-append">
                                                                    <button type="button" onclick="Add()" class="btn btn-info">
                                                                        <span class="mdi  mdi-plus-circle"></span>
                                                                    </button>
                                                                    @*<button type="button" onclick="DeleteRow()" class="btn btn-success mb-2 btn-block" id="btnDelete" value="Delete"/>*@
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-4 col-12">
                                                            <div class="input-group  mb-2" id="divStore">
                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text py-0">
                                                                        Store
                                                                    </span>
                                                                </div>
                                                                @Html.DropDownList("Warehouse", ViewBag.Warehouse as List<SelectListItem>, new { id = "Warehouse", @class = "form-control" })

                                                            </div>
                                                        </div>

                                                        <div class="col-md-4 col-12">
                                                            <div class="input-group  mb-2" id="divQty">
                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text py-0">
                                                                        Quantity
                                                                    </span>
                                                                </div>
                                                                @Html.TextBox("Quantity", "0", new { @class = "form-control form-control-sm" })
                                                            </div>
                                                        </div>

                                                        <div class="col-md-4 col-12">
                                                            <div class="input-group  mb-2" id="divUnitPrice">
                                                                <div class="input-group-prepend">
                                                                    <span class="input-group-text py-0">
                                                                        Sales Price
                                                                    </span>
                                                                </div>
                                                                @Html.TextBox("Price", "0", new { @class = "form-control form-control-sm" })
                                                            </div>
                                                        </div>
                                                        <div class="col-md-2 col-12">

                                                        </div>

                                                    </div>
                               

                                            </div>
                                            <div class="col-md-12 col-12 my-2">
                                                <div class="order-md-1">
                                                    
                                                        <div class="table-responsive">
                                                            <table id="tbl" class="table-sm table-striped table-hover text-nowrap" cellspacing="0" width="100%" style="font-weight:bold ; font-size:10px;">
                                                                <thead style="text-align: center;">
                                                                    <tr>
                                                                        <th>Product Id</th>
                                                                        <th>Warehouse Id</th>
                                                                        <th>Product</th>
                                                                        <th>Description</th>
                                                                        <th>Store</th>
                                                                        <th>Quantity</th>
                                                                        <th>Unit Price</th>
                                                                        <th>Amount</th>
                                                                        <th></th>
                                                                    </tr>
                                                                </thead>

                                                                <tbody>
                                                                    @if (Model.Items != null)
                                                                    {
                                                                        foreach (var item in Model.Items)
                                                                        {
                                                    <tr class="txtMult">
                                                        <td>
                                                            @Html.DisplayTextFor(i => item.ProductId)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayTextFor(i => item.WarehouseId)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayTextFor(i => item.Product.Name)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayTextFor(i => item.Description)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayTextFor(i => item.vWarehouse.WhShortName)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayTextFor(i => item.Quantity)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayTextFor(i => item.Price)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayTextFor(i => item.Amount)
                                                        </td>
                                                        <td>
                                                            <a class="dlttrash" data-itemId="0" href="#"><i class="fa fa-trash"></i></a>
                                                        </td>
                                                    </tr>
}
                                            }

                                                                </tbody>
                                                                <tfoot>
                                                                    <tr>
                                                                        <td></td>
                                                                        <td></td>


                                                                        <td class="text-right" colspan="3">
                                                                            <h4>Total : </h4>
                                                                        </td>
                                                                        <td colspan="1">
                                                                            <h4 class="subtotalqty">0.00</h4>
                                                                        </td>
                                                                        <td colspan="1">
                                                                        </td>
                                                                        <td colspan="1">
                                                                            <h4 class="subtotalamount text-right">0.00</h4>
                                                                        </td>
                                                                        <td colspan="1">
                                                                        </td>

                                                                    </tr>
                                                                </tfoot>

                                                            </table>
                                                        </div>


                                                   

                                                </div>
                                            </div>
                                            <div class="offset-md-2 col-md-10 col-12">
                                                <div class="card p-1">
                                                    <div class="col-md-12 col-12">
                                                        <div class="row my-1">
                                                            @*<div class="card-body p-1 d-none">
                                                                <div class="col-md-12 col-12 d-none">
                                                                    <div class="input-group  mb-2">
                                                                        <div class="input-group-prepend">
                                                                            <span class="input-group-text py-0">
                                                                                @Html.LabelFor(model => model.ttlCountQty)
                                                                            </span>
                                                                        </div>
                                                                        @Html.TextBoxFor(model => model.ttlCountQty, new { @id = "ttlCountQty", name = "MainttlCountQty", disabled = "disabled", @class = "form-control", @style = "font-size: 20px;" })
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-12 col-12 d-none">
                                                                    <div class="input-group  mb-1">
                                                                        <div class="input-group-prepend">
                                                                            <span class="input-group-text py-0">
                                                                                @Html.LabelFor(model => model.ttlSumQty)
                                                                            </span>
                                                                        </div>
                                                                        @Html.TextBoxFor(model => model.ttlSumQty, new { name = "MainttlSumQty", @id = "ttlSumQty", disabled = "disabled", @class = "form-control", @style = "font-size: 20px;" })
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-12 col-12 d-none ">
                                                                    <div class="input-group  mb-2">
                                                                        <div class="input-group-prepend">
                                                                            <span class="input-group-text py-0">
                                                                                @Html.LabelFor(model => model.ttlSumAmt)
                                                                            </span>
                                                                        </div>
                                                                        @Html.TextBoxFor(model => model.ttlSumAmt, new { name = "MainttlSumAmt", disabled = "disabled", @class = "form-control text-right", @style = "font-size: 20px;" })
                                                                    </div>
                                                                </div>
                                                            </div>*@


                                                            <div class="col-md-6 col-12">
                                                                <div class="input-group  mb-1">
                                                                    <div class="input-group-prepend">
                                                                        <span class="input-group-text border-0 bg-white">
                                                                            <span class="custom-control custom-radio">
                                                                                <input id="totalpercentage" name="totalpaymentMethod" type="radio" class="custom-control-input" value="totalpercentage" checked required>
                                                                                <label class="custom-control-label" for="totalpercentage">@Html.LabelFor(model => model.DisPer) </label>
                                                                            </span>
                                                                        </span>
                                                                    </div>

                                                                    @Html.TextBoxFor(model => model.DisPer, new { @class = "form-control border text-right", id = "maindisper", @style = "font-size: 20px;" })

                                                                </div>
                                                            </div>
                                                            <div class="col-md-6 col-12">
                                                                <div class="input-group  mb-1">
                                                                    <div class="input-group-prepend">
                                                                        <span class="input-group-text border-0 bg-white">
                                                                            <span class="custom-control custom-radio">
                                                                                <input id="totalamount" name="totalpaymentMethod" type="radio" class="custom-control-input" value="totalamount" required>
                                                                                <label class="custom-control-label pr-1" for="totalamount">Amount</label>
                                                                            </span>
                                                                        </span>
                                                                    </div>
                                                                    @Html.TextBoxFor(model => model.DisAmt, new { @class = "form-control border text-right", id = "maindisamt", @style = "font-size: 20px;" })

                                                                </div>
                                                            </div>
                                                            <div class="col-md-6 col-12">
                                                            </div>

                                                            <div class="col-md-6 col-12">
                                                                <div class="input-group  mb-1">
                                                                    <div class="input-group-prepend">
                                                                        <span class="input-group-text border-0 bg-white pr-5">
                                                                            @Html.LabelFor(model => model.TotalVat)
                                                                        </span>
                                                                    </div>
                                                                    @Html.TextBoxFor(model => model.TotalVat, new { @class = "form-control text-right border", id = "mainvat", @style = "font-size: 20px;" })
                                                                </div>
                                                            </div>

                                                            <div class="col-md-6 col-12">
                                                                <div class="input-group  mb-1">
                                                                    <div class="input-group-prepend">
                                                                        <span class="input-group-text bg-white text-danger font-weight-bold border-0">
                                                                            @Html.LabelFor(model => model.DueAmt)
                                                                        </span>
                                                                    </div>
                                                                    @Html.TextBoxFor(model => model.DueAmt, new { @class = "form-control text-danger text-right font-weight-bold border", id = "maindueamount", @style = "font-size: 20px;" })
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6 col-12">
                                                                <div class="input-group  mb-1">
                                                                    <div class="input-group-prepend">
                                                                        <span class="input-group-text bg-white border-0">
                                                                            @Html.LabelFor(model => model.ServiceCharge)
                                                                        </span>
                                                                    </div>
                                                                    @Html.TextBoxFor(model => model.ServiceCharge, new { @class = "form-control number border text-right", id = "mainservicecharge", @style = "font-size: 20px;" })
                                                                </div>
                                                            </div>
                                                            @*<div class="row bg-light my-1 m-0">*@
                                                            <div class="col-md-6 col-12">
                                                                <div class="input-group ">
                                                                    <div class="input-group-prepend pr-2">
                                                                        <span class="input-group-text border-0 bg-transparent">
                                                                            @Html.LabelFor(model => model.NetAmount)
                                                                        </span>
                                                                    </div>
                                                                    @Html.TextBoxFor(model => model.NetAmount, new { @class = "form-control border text-right", id = "mainnetamount", @style = "font-size: 20px;" })
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6 col-12">
                                                                <div class="input-group ">
                                                                    <div class="input-group-prepend pr-2">
                                                                        <span class="input-group-text border-0 bg-transparent ">
                                                                            @Html.LabelFor(model => model.PaidAmt) &nbsp;
                                                                        </span>
                                                                    </div>
                                                                    @Html.TextBoxFor(model => model.PaidAmt, new { @class = "form-control border text-purple font-weight-bold  text-right", id = "mainpaidamount", @style = "font-size: 20px;" })
                                                                </div>
                                                            </div>
                                                            @*</div>*@
                                                            <div class="col-md-12 col-12 my-1">
                                                                <div class="row">


                                                                    @if (ViewBag.Title == "Entry")
                                                                    {
                                                    <div class="col-md-3 col-12">
                                                        @Html.ActionLink("Back", "Index", "Sales", null, new { @class = "btn btn-info btn-block rounded-0", @id = "btnBack" })
                                                    </div>
                                                                        <div class="col-md-3 col-12">
                                                                            <button class="btn btn-danger rounded-0 btn-block" type="button" onclick="resetData()">Reset</button>

                                                                        </div> }
                                                                    else
                                                                    {
                                                    <div class="col-md-6 col-12">
                                                        @Html.ActionLink("Back", "Index", "Sales", null, new { @class = "btn btn-info btn-block rounded-0", @id = "btnBack" })
                                                    </div>}
                                                                    <div class="col-md-6 col-12">
                                                                        @if (ViewBag.ActionType == "Entry")
                                                                        {
                                                        <button id="dataSave" class="btn btn-purple rounded-0 btn-block spinnerclass" type="button">
                                                            <span class="d-none spinner-border spinner-border-sm " role="status" aria-hidden="true"></span>
                                                            CheckOut
                                                        </button> }
                                                    else if (ViewBag.ActionType == "Edit")
                                                    {
                                    <button id="dataSave" class="btn btn-warning rounded-0 btn-block spinnerclass" type="button">
                                        <span class="d-none spinner-border spinner-border-sm " role="status" aria-hidden="true"></span>
                                        Update
                                    </button> }
                                else if (ViewBag.ActionType == "Delete")
                                {
                        <button id="dataSave" class="btn btn-danger rounded-0 btn-block spinnerclass" type="button" onclick="Sales_delete()">
                            <span class="d-none spinner-border spinner-border-sm " role="status" aria-hidden="true"></span>
                            Delete
                        </button>}
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="col-md-6 col-12 mb-2 order-md-1">
                                        <div class="card p-1">
                                            <div class="row">
                                                <div class="col-md-6 col-12">
                                                    <div class="input-group  mb-1">
                                                        <div class="input-group-prepend">
                                                            <span id="btToggleDisplay" class="btn btn-purple">
                                                                <i class="fa fa-table" aria-hidden="true"></i>
                                                                <i class="fa fa-arrows-h" aria-hidden="true"></i>
                                                                <i class="fa fa-id-card-o" aria-hidden="true"></i>
                                                            </span>
                                                        </div>
                                                        <input type="text" id="myInput" class="form-control form-control-sm" onkeyup="myFunction()" onmouseover="this.focus();" placeholder="Search for names.." title="Type in a name">
                                                    </div>
                                                    @*<input type="text" id="myInput"  onkeyup="myFunction()" onmouseover="this.focus();" placeholder="Search for names.." title="Type in a name">*@

                                                </div>
                                                <div class="col-md-6 col-12">
                                                    <div class="input-group  mb-1" id="divCategory">
                                                        <div class="input-group-prepend">
                                                            <span class="input-group-text py-0">
                                                                Category
                                                            </span>
                                                        </div>
                                                        @Html.DropDownList("Category", ViewBag.Category as List<SelectListItem>, new { id = "Category", @class = "form-control" })
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row">

                                                <div class="col-md-12 col-12">
                                                    <table id="tblproductsearch" class="tbl table-hover no-footer text-center" width="100%" style="font-weight:bold ; font-size:10px;" font-family:"Arial Narrow", Arial, sans-serif;">
                                                    <thead class="d-none">

                                                    </thead>
                                                    </table>
                                                </div>
                                                <div class="col-md-12 order-md-1 mb-2">

                                                    <div class="card p-1">
                                                        <div class="table-responsive">
                                                            <table id="tblpayments" class="table tblpayments table-striped table-hover text-nowrap" cellspacing="0" width="100%">
                                                                <thead>
                                                                    <tr>
                                                                        <th class="text-center">Sales Payment Id</th>
                                                                        <th class="text-center">Payment Type Id</th>
                                                                        <th class="text-center">Payment Type</th>
                                                                        <th class="text-center">AccountHeadId</th>
                                                                        <th class="text-center">Accounts Head</th>
                                                                        <th class="text-center">Amount</th>
                                                                        <th class="text-center">Card No</th>
                                                                        <th class="text-center">Action</th>
                                                                    </tr>
                                                                </thead>

                                                                <tbody>
                                                                    @if (Model.SalesPayments != null)
                                                                    {
                                                                        foreach (var item in Model.SalesPayments)
                                                                        {
                                                                    <tr class="txtMultPayments">

                                                                        <td>
                                                                            @Html.DisplayTextFor(i => item.SalesId)
                                                                        </td>
                                                                        <td>
                                                                            @*@Html.DisplayTextFor(i => item.PaymentTypeId)*@
                                                                        </td>
                                                                        <td>
                                                                            @*@Html.DisplayTextFor(i => item.vPaymentType.TypeShortName)*@
                                                                        </td>
                                                                        <td>
                                                                            @Html.DisplayTextFor(i => item.AccountHeadId)
                                                                        </td>
                                                                        <td>
                                                                            @Html.DisplayTextFor(i => item.vChartofAccounts.AccName)
                                                                        </td>
                                                                        <td>
                                                                            @Html.DisplayTextFor(i => item.Amount)
                                                                        </td>
                                                                        <td>
                                                                            @Html.DisplayTextFor(i => item.PaymentCardNo)
                                                                        </td>
                                                                        <td>
                                                                            <a class="dlttrashpayments" data-itemId="0" href="#"><i class="fa fa-trash"></i></a>
                                                                        </td>
                                                                    </tr>}
                                                                    }
                                                                </tbody>


                                                            </table>
                                                        </div>
                                                        <div class="row my-2">
                                                            <div class="col-md-6 col-12">
                                                                <div class="input-group  mb-2" id="divSalesPayments">
                                                                    <div class="input-group-prepend">
                                                                        <span class="input-group-text py-0">
                                                                            Payment Type
                                                                        </span>
                                                                    </div>
                                                                    @Html.DropDownList("PaymentTypes", ViewBag.PaymentTypes as List<SelectListItem>, new { id = "PaymentTypes", @class = "form-control" })
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6 col-12">
                                                                <div class="input-group  mb-2" id="divSalesPayments">
                                                                    <div class="input-group-prepend">
                                                                        <span class="input-group-text py-0">
                                                                            Referance
                                                                        </span>
                                                                    </div>
                                                                    @Html.DropDownList("AccountHead", ViewBag.AccountHead as List<SelectListItem>, new { id = "AccountHead", @class = "form-control" })
                                                                </div>
                                                            </div>
                                                            <div class="col-md-5 col-12">
                                                                <div class="input-group  mb-2" id="divPaymentAmount">
                                                                    <div class="input-group-prepend">
                                                                        <span class="input-group-text py-0">
                                                                            Amount
                                                                        </span>
                                                                    </div>
                                                                    @Html.TextBox("PaymentAmount", "0", new { @class = "form-control" })
                                                                </div>
                                                            </div>
                                                            <div class="col-md-5 col-12">
                                                                <div class="input-group  mb-2" id="divPaymentCardNo">
                                                                    <div class="input-group-prepend">
                                                                        <span class="input-group-text py-0">
                                                                            Card No
                                                                        </span>
                                                                    </div>
                                                                    @Html.TextBox("PaymentCardNo", "0", new { @class = "form-control" })
                                                                </div>
                                                            </div>
                                                            <div class="col-md-2 col-12">
                                                                <button type="button" onclick="AddPayments()" class="btn btn-success mb-2 btn-block rounded-0">Add</button>
                                                                @*<button type="button" onclick="DeleteRow()" class="btn btn-success mb-2 btn-block" id="btnDelete" value="Delete"/>*@

                                                            </div>
                                                        </div>


                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>





                        @*</div>*@ @*customer payment grid and datatable Initializer*@

                    </div>

                </div>}

    <!-- Modal -->
    <div class="modal" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Customer Entry</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                    <div id="modalbodyfahad" class="row">



                        <div class="col-md-12 col-12">
                            <div class="input-group  mb-2" id="divCustomerName">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        Customer Name
                                    </span>
                                </div>
                                @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="col-md-6 col-12">
                            <div class="input-group  mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        @Html.LabelFor(model => model.EmailId)
                                    </span>
                                </div>
                                @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="col-md-6 col-12">
                            <div class="input-group  mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        @Html.LabelFor(model => model.PhoneNo)
                                    </span>
                                </div>
                                @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="col-md-6 col-12">
                            <div class="input-group  mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        @Html.LabelFor(model => model.City)
                                    </span>
                                </div>
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="col-md-6 col-12">
                            <div class="input-group  mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        @Html.LabelFor(model => model.PostalCode)
                                    </span>
                                </div>
                                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6 col-12">
                            <div class="input-group  mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        @Html.LabelFor(model => model.PrimaryAddress)
                                    </span>
                                </div>
                                @Html.EditorFor(model => model.PrimaryAddress, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="col-md-6 col-12">
                            <div class="input-group  mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        @Html.LabelFor(model => model.SecoundaryAddress)
                                    </span>
                                </div>
                                @Html.EditorFor(model => model.SecoundaryAddress, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>


                    </div>

                </div>
                <div class="modal-footer">
                    @*<button type="button" class="btn btn-secondary rounded-0 btn-danger" data-dismiss="modal">Close</button>*@
                    <button type="button" class="btn btn-danger rounded-0 btn-simple" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-purple rounded-0 btn-success">Update</button>
                </div>
            </div>
        </div>
    </div>


    @* invoice modal *@




    @section Scripts{
        <script type="text/javascript">

            $(document).ready(function () {

                setTimeout(function () {


                    $(".navbar-toggler").click();

                }, 1);

            });




            //function CloseModalPopup() {
            //    $("#exampleModal").modal('hide');
            //    //$("#exampleModal").close();
            //};

            function resetData() {

                //var tablegird = $('#tbl').DataTable();
                //tablegird.clear();
                //$("#tbl").empty();
                //$('#tbl tbody').empty();

                var table = $('#tbl').DataTable();
                var tblpaymentsabc = $('#tblpayments').DataTable();

                table.rows().remove().draw(false);
                tblpaymentsabc.rows().remove().draw(false);

                                //var myTable = $('#tbl').DataTable();
                //myTable.rows().delete();

                $('#myform').find('input:text').each(function () {
                    //$(this).val('0');


                    if ($(this).attr('id') == 'SaleCode' || $(this).attr('id') == 'myInput' ) {

                        $(this).val('');
                    }
                    else {

                        $(this).val('0');
                    }

                }
                );



                //$('#SaleCode').text('').change();
                //$('#SaleCode').val('abc');
                //alert('hit');


                TotalLoadQty();
                $('#Product').focus();
            };




        //$('#myInput').attr('autocomplete', 'off');
        //$('#myInputSearch').attr('autocomplete', 'off');
        $("#dialog").hide();
            $("#maindueamount").prop("readonly", true);
            $("#mainnetamount").prop("readonly", true);

            //$('#maindisper').attr('autocomplete', 'off');
            $("input[type='text']").attr("autocomplete", "off");

        $('#myform').submit(function () {
            $('select').removeAttr('disabled');
            //alert('ok');
        });

        //$(".entry-form input[type='text']").each(function () {
        //    $(this).val("");
        //});

        var tblproductsearch;
        //var tblproductserialsearch;

        @*$(window).bind('keydown', function (event) {
            if (event.ctrlKey || event.metaKey) {
                switch (String.fromCharCode(event.which).toLowerCase()) {
                    case 's':
                        event.preventDefault();
                        //alert('ctrl-s');
                        Sales_save();
                        break;
                    case 'd':
                        event.preventDefault();
                        //alert('ctrl-s');
                        Sales_delete();
                        break;
                    case 'n':
                        event.preventDefault();
                        //alert('ctrl-n');
                         window.location.href = '@Url.Action("POSCreate", "Sales")';
                        break;
                    case 'r':
                        event.preventDefault();
                        //alert('ctrl-r');
                            window.location.href = '@Url.Action("POSCreate", "Sales")';
                        break;
                    case 'b':
                        event.preventDefault();
                        //alert('ctrl-b');
                         window.location.href = '@Url.Action("Index", "Sales")';
                        //$('#btnBack').click(function () {
                        //    ///Code
                        //});
                    break;
                }
            }
        });*@


        $('#myInput').focus();

            $('#myInput').keyup(function () {
                tblproductsearch.search($(this).val()).draw();
            })

            CategorySearch(0);



            ////});
            //$('.dataTables_wrapper .col-md-6').addClass('col-md-12'); // <-- add this line
            //$('#tblproductsearch.odd').addClass('col-md-4 col-12');
            //$('#tblproductsearch.even').addClass('col-md-4 col-12');

            function CategorySearch(CategoryId) {

                //alert(CategoryId);
                ///var oTable = $('#tblproductsearch').DataTable();   //pay attention to capital D, which is mandatory to retrieve "api" datatables' object, as //Lionel said

                //var CategoryId = $("#categorygrid tbody tr.selected td:nth-child(2)").text();

                tblproductsearch = $('#tblproductsearch').DataTable({
                    serverSide: true,
                    //"scrollX": true,
                    processing: true,

                    //"bInfo" : false,
                    //searchDelay: 1,
                    ajax: {
                        url: '@Url.Action("GetProductListClick", "Sales")',
                        "data": { CategoryId: CategoryId },

                        type: "POST"
                    },
                    success: function (data) {
                        //console.log(data);
                        //alert(data);
                    },

                    columns: [

                        { "title": "ProductId", "data": "ProductId", "visible": false, "searchable": false, "sclass" : "productidsubs"},
                        { "title": "CategoryId", "data": "CategoryId", "visible": false, "searchable": false },

                        {
                            "title": "Image", "data": "ImagePath", "searchable": false
                            , "render": function (data) {
                                //console.log(data);
                                //return '<img src="..' + data + '" class="img-thumbnail" width="80px">';

                                var saleidedit =  $("#Id").val();
                                //alert(data);
                                if (saleidedit > 0) {
                                    return '<img src="../..' + data + '" class="img-thumbnail" width="80px" onerror=this.onerror=null;this.src="../../Content/ProductImages/0.png">';

                                }
                                else {
                                    //console.log(data);
                                    return '<img src="' + data + '" class="img-thumbnail" width="80px" onerror=this.onerror=null;this.src="../Content/ProductImages/0.png">';

                                }
                            }
                        },

                        {
                            "title": "Product", "data": "ProductName", "searchable": true, "render": function (data)
                            {
                                var res = data.toString().replace(".", " ").substring(0, 17).toString();
                                //alert(res);
                                //res.toString().replace(".", "&nbsp;");
                                var finaltext = pad(res, 17);

                                //console.log(finaltext);
                                return finaltext;
                            }
                        },

                        //{ "title": "Product", "data": "ProductName", "searchable": true },
                        { "title": "Barcode", "data": "ProductBarcode", "visible": true, "searchable": true },

                        { "title": "SalePrice", "data": "SalesPrice", "visible": false, "searchable": false },

                        { "title": "ProductId", "data": "ProductId", "visible": false, "searchable": false }

                    ],
                    "paging": true,
                    //"ordering": true,
                    "searching": true,
                    'select': true,
                    language: {
                        sLengthMenu: " _MENU_",
                        search: '',
                        searchPlaceholder: "Search..."
                    },
                    "info": true,
                    "iDisplayLength": 12,
                    "lengthMenu": [[4, 5,8, 10,12, 25, 50, -1], [4, 5, 8, 10, 12, 25, 50, "All"]],
                    //dom: '<"float-left"B>rt<"row"<"col-sm-4"l><"col-sm-4"i><"col-sm-4"p>>'
                    dom: '<"float-left">rt<"row"<"col-sm-2"l><"col-sm-10"i><"col-sm-12"p>>'

                });
            }
            function pad(str, max) {
                str = str.toString();
                return str.length < max ? pad(" " + str, max) : str;
            }


            $(document).on('click', '#tblproductsearch td', function (e) {
                //console.log(tblproductsearch.cell(this).data());
                //console.log($(this).closest('tr'));

                //var arr = $('tblproductsearch').dataTable().fnGetData($(this));
                //var Id = arr[1]; //returns first td value
                //console.log(Id);

                var row = $(this).closest('tr');
                var data = $('#tblproductsearch').dataTable().fnGetData(row);
                var productidabc = data["ProductId"];
                //console.log(data);
                //console.log(data["ProductId"]);
                //console.log(tblproductsearch(row_clicked).data());
                //console.log(tblproductsearch(row_clicked).data()['productid']);

                $('#Product').val(productidabc);//.change();
                $.when(ProductInfo()).then(Add());

            });




        function myFunction() {

            ///var oTable = $('#tblproductsearch').DataTable();   //pay attention to capital D, which is mandatory to retrieve "api" datatables' object, as //Lionel said
            $('#myInput').keyup(function(){
                tblproductsearch.search($(this).val()).draw() ;
            })


        }




        $(document).ready(function () {


            $("#tblproductsearch").toggleClass('cards');
            $("#tblproductsearch thead").toggle();


            $('#btToggleDisplay').on('click', function () {
                event.preventDefault();
                $("#tblproductsearch").toggleClass('cards');
                $("#tblproductsearch thead").toggle();
                //e.preventDefault();

            })



            $('#myInput').on('keypress', function (e) {
                var code = e.keyCode || e.which;
                if (code == 13) {

                    var totalvisibleRows = $('#tblproductsearch tbody tr:visible').length;
                    tblproductsearch.$('tr.selected').removeClass('selected');
                    if (totalvisibleRows == 1) {

                        $.each($('#tblproductsearch tr'), function () { //Loop through rows

                            //$("#Product").val()

                            if ($(this).children('td:visible').length > 1) { //If this row has more than one visible column

                                $(this).addClass('selected');


                                //console.log(tblproductsearch.row(this).data());

                                //var x = $.trim($(this).find(".searchproductid").text());
                                //var y = $.trim($(this).find(".searchcategoryid").text());

                                //var categoryid = tblproductsearch.row(this).data()["CategoryId"];
                                var productid = tblproductsearch.row(this).data()["ProductId"];

                                //alert(y);
                                //alert(x);
                                //var z = tblproductserialsearch.row(this).data()[1];
                                //alert(z);
                                //$(document).ready(function () {

                                //});


                                // Handler for .ready() called.
                                //$('#Category').val(categoryid);
                                //$('#Category').change();
                                $('#Product').val(productid);//.change();


                                    //$('#Product').change();
                                   // Add();


                                //alert($('#Category').val());
                                //alert($('#Product').val());


                                //e.preventDefault();
                                $.when(ProductInfo()).then(Add());//.then(BarcodeSearch()).then(ProductSerialSearch()).then(Add());
                                ///$('#ProductSerial').val(z);//.change();

                                //alert($('#ProductSerial').val());
                                $('#myInput').val('');
                                //alert('myinputblank');
                                //tblproductsearch.destroy();
                                //var empId = $("#EmpTable  tbody tr.selected td:first-child").text();
                                //CategorySearch(0);

                                //CategorySearch(selectedRow[0]);


                            }

                        })
                    }
                    else {

                    };




                    e.preventDefault();

                }
            });

        });




        ///alert($("#Id").val());
            if ($("#Id").val() > 0) {

            }
            else {
                CurrentDate();

                CustomerInfo();

            }
            $('.mydatepicker').datepicker({
                dateFormat: 'dd-M-yy',
                todayHighlight: true,
                autoclose: true
            });


      function CustomerInfo() {
        var MyAppUrlSettings = {
            MyUsefulUrl : '@Url.Action("CustomerInfo", "Sales")'
        }
          //alert('test');
        $.ajax({
            type: 'POST',
            url: MyAppUrlSettings.MyUsefulUrl,
            dataType: 'json',
            data: { id: $("#Customer").val()}, //, saleid: $("#Id").val()
            success: function (Customerss) {

                console.log(Customerss);
                $("#CustomerName").val(Customerss.CustomerName).show();

                //alert($("#Customer").val());
                //alert($('#Customer option:selected').text());


                if ($('#Customer option:selected').text() == "Walk in Customer")
                {
                    //$('#divCustomerName').show();
                    $("#CustomerName").val("").show();
                    $("#PrimaryAddress").attr('disabled', false);
                    $("#SecoundaryAddress").attr('disabled', false);
                    $("#PhoneNo").attr('disabled', false);
                    $("#City").attr('disabled', false);
                    $("#PostalCode").attr('disabled', false);
                    $("#EmailId").attr('disabled', false);

                   // alert('walk in customer working');

                }
                else {
                /*   $('#divCustomerName').hide();*/
                    $("#CustomerName").val(Customerss.Name).show();

                    //$("#PrimaryAddress").attr('disabled', true);
                    //$("#SecoundaryAddress").attr('disabled', true);
                    $("#PhoneNo").attr('disabled', true);
                    $("#City").attr('disabled', true);
                    $("#PostalCode").attr('disabled', true);
                    $("#EmailId").attr('disabled', true);

                   // alert('mahfuz working');


                }

                var Id = $("#Id").val();
                //alert(Id);
                if (Id > 0) {

                    if ($("#EmailId").val().length == 0) { $("#EmailId").val(Customerss.Email).show() };
                    if ($("#PrimaryAddress").val().length == 0) { $("#PrimaryAddress").val(Customerss.PrimaryAddress).show() };
                    if ($("#SecoundaryAddress").val().length == 0) { $("#SecoundaryAddress").val(Customerss.SecoundaryAddress).show() };
                    if ($("#PhoneNo").val().length == 0) { $("#PhoneNo").val(Customerss.Phone).show() };
                    if ($("#City").val().length == 0) { $("#City").val(Customerss.City).show() };


                }
                else {
                    $("#EmailId").val(Customerss.Email).show();
                    $("#PrimaryAddress").val(Customerss.PrimaryAddress).show();
                    $("#SecoundaryAddress").val(Customerss.SecoundaryAddress).show();
                    $("#PhoneNo").val(Customerss.Phone).show();


                    $("#City").val(Customerss.City).show();
                    $("#PostalCode").val(Customerss.PostalCode).show();
                //$("#ReferenceNo").val("=N/A=").show();
                //$("#SalesPerson").val("=N/A=").show();
                //alert('done');
                }


            },
            error: function (ex) {
                alert('Failed.' + ex);
            }
          });
        return false;
        };








        function ProductSearch() {

        //alert('prdsearch');
        $("#Product").empty();
        $("#Description").val("=N/A=");
        $("#Price").val(0);
        $("#Quantity").val(1);
        $("#IndVat").val(0);
        $("#IndDisPer").val(0);
        $("#IndDisAmt").val(0);
        $("#IndPrice").val(0);


            $.ajax({
                type: 'POST',
                url: '@Url.Action("getProduct", "Sales")',
                dataType: 'json',
                async: false,
                data: { id: $("#Category").val() },
                success: function (data) {
                    var s = '';//'<option value="-1">Please Select Product</option>';
                    //$.each(data, function (i, data) {
                    //    $("#Product").append('<option value="'+ data.Value + '">'
                    //        + data.Text + '</option>');
                    //});
                    for (var i = 0; i < data.length; i++) {
                        s += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                    }
                    $("#Product").html(s);
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }

            });
            return false;
        };


         function AccountSearch() {

        //alert('prdsearch');
             $("#AccountHead").empty();
        //$("#Description").val("=N/A=");
        //$("#Price").val(0);
        //$("#Quantity").val(1);
             var paymenttypesname = $('#PaymentTypes option:selected').text();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("getAccountHead", "Sales")',
                dataType: 'json',
                async: false,
                data: { id: paymenttypesname }, //$("#PaymentTypes").val()
                success: function (data) {
                    var s = '';//'<option value="-1">Please Select Product</option>';
                    //$.each(data, function (i, data) {
                    //    $("#Product").append('<option value="'+ data.Value + '">'
                    //        + data.Text + '</option>');
                    //});
                    for (var i = 0; i < data.length; i++) {
                        s += '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                    }
                    $("#AccountHead").html(s);
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }

            });
            return false;
        };




        function BarcodeInfo() {

        var MyAppUrlSettings = {
            MyUsefulUrl : '@Url.Action("BarcodeInfo", "Sales")'
        }

        $.ajax({
            type: 'POST',
            url: MyAppUrlSettings.MyUsefulUrl,
            dataType: 'json',
            async: false,
            data: { id: $("#Product").val() },
            success: function (Barcodes) {
                //alert('working');
                $("#Barcode").val(Barcodes.ProductId).show();
            },
            error: function (ex) {
                alert('Failed.' + ex);
            }
        });
        return false;
    };


    function ProductInfo() {

        var MyAppUrlSettings = {
            MyUsefulUrl : '@Url.Action("ProductInfo", "Sales")'
        }

        $.ajax({
            type: 'POST',
             url: MyAppUrlSettings.MyUsefulUrl,
            dataType: 'json',
            async: false,
            data: { id: $("#Product").val() },
            //headers: {
            //    "__RequestVerificationToken": formForgeryToken
            //},
            success: function (Productss) {
                //alert('working');


                $("#Quantity").val(1).show();
                $("#Description").val("=N/A=").show();


                $("#Price").val(Productss.Price).show();
                //$("#Barcode").$(this).val().show();
                //$("#IndVat").text(Productss.ProductBarcode).show();
                $("#Barcode").val(Productss.ProductId).show(); //need when necessary -fahad plz dont delete
                //$("#Barcode").text(Productss.ProductBarcode).show();
                $("#IndDisPer").val(Productss.vatPercentage).show();
                $("#IndDisAmt").val(0);

                $("#IndVatPercentage").val(Productss.vatPercentage);
                $("#IndVat").val(Productss.vatAmount).show();

                ////need calculatin here.
                $("#IndPrice").val(0);


                singleInputs();

            },
            error: function (ex) {
                alert('Failed.' + ex);
            }
        });
        return false;
    };

            function CurrentDate() {
                var date = new Date();
                var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
                    "Aug", "Sep", "Oct", "Nov", "Dec"];
                var val = date.getDate() + "-" + months[date.getMonth()] + "-" + date.getFullYear();
                $("#Date").val(val);

            }

        //function radiobutton() {
        //    $("input[type='radio']").click(function () {

        //        var radioValue = $("input[name='paymentMethod']:checked").val();

        //        //alert(radioValue);

        //        if (radioValue == "percentage") {

        //            //alert('percentage');
        //            $("#IndDisPer").prop("readonly", false);
        //            $("#IndDisAmt").prop("readonly", true);
        //            $("#IndDisPer").val(0);
        //            $("#isDisPerRow").val(true);

        //        }
        //        else if (radioValue == "amount") {

        //            $("#IndDisPer").prop("readonly", true);
        //            $("#IndDisAmt").prop("readonly", false);
        //            $("#IndDisPer").val(0);
        //            $("#isDisPerRow").val(false);
        //        }

        //    });

        //}

        function radiobuttontotal() {
            $("input[type='radio']").click(function () {

                var radioValue = $("input[name='totalpaymentMethod']:checked").val();

                ///alert(radioValue);

                if (radioValue == "totalpercentage") {

                    //alert('percentage');
                    $("#maindisper").prop("readonly", false);
                    $("#maindisamt").prop("readonly", true);
                    $("#maindisamt").val(0);
                    $("#isDisPer").val(true);



                }
                else if (radioValue == "totalamount") {

                    $("#maindisper").prop("readonly", true);
                    $("#maindisamt").prop("readonly", false);
                    $("#maindisper").val(0);
                    $("#isDisPer").val(false);
                }

            });

        }



        $(document).ready(function () {

        @*var ControllerAction = '@ViewBag.Title';
        alert(val);*@

            $('input.number').keyup(function (event) {

                // skip for arrow keys
                if (event.which >= 37 && event.which <= 40) return;

                // format number
                $(this).val(function (index, value) {
                    return value
                        .replace(/\D/g, "")
                        .replace(/\B(?=(\d{3})+(?!\d))/g, ",")
                        ;
                });
            });
            //$('#mainservicecharge').html(Number(price1).toLocaleString('en'));







            $('#Category').select2({})
                .on("select2:select", function (e) {

                    tblproductsearch.destroy();
                    //alert(('#Category').val());
                    CategorySearch($('#Category').val());

                });

            $('#Product').select2();
            //$('#Category').select2();
            $('#Warehouse').select2();
            $("#Customer").select2();
            $("#Barcode").select2();
            //$('#Barcode').append('<option value="" disabled selected>Please Select</option>');
            $("#ProductSerial").select2();
            $("#Country").select2();
            $("#PaymentTypes").select2();
            $("#AccountHead").select2();
            $("#SalesTerms").select2();

            if ($('h2').text() == "Invoice Entry") {
                //alert('enter');
                $("#CurrencyRate").val(1);
                $("#maindisper").val(0);
                $("#mainservicecharge").val(0);
                $("#mainvat").val(0);
                $("#mainpaidamount").val(0);
            }

            var UserId = '@HttpContextAccessor.HttpContext.Session.GetInt32("UserId").ToString()';
            var ComId = '@HttpContextAccessor.HttpContext.Session.GetInt32("ComId").ToString()';
            //alert(ComId);
            //alert(UserId);

            $("#LuserId").val(UserId.toString());
            $("#ComId").val(ComId.toString());
            //alert($("#ComId").val());



            //CustomerInfo();

            //$("#IndDisAmt").prop("readonly", true);
            $("#maindisamt").prop("readonly", true);
            $("#maindisper").prop("readonly", false);


            //radiobutton();
            radiobuttontotal();


            //var username = $.session.get('isBarcodeSearch');
            //alert(username);


            var isBarcodeSearch = '@HttpContextAccessor.HttpContext.Session.GetString("isBarcodeSearch")'.toLowerCase() == 'true';
            var isProductSearch = '@HttpContextAccessor.HttpContext.Session.GetString("isProductSearch")'.toLowerCase() == 'true';
            var isIMEISearch = '@HttpContextAccessor.HttpContext.Session.GetString("isIMEISearch")'.toLowerCase() == 'true';

            //var table = $('#tbl').DataTable();
            //var column = table.column($(this).attr('ProductId') ;
            //column.visible(true);    // To show
            //alert('testt');
            //alert(isProductSearch);

            //Product.hide();

            //////////if (isBarcodeSearch == true) {
            //////////    //alert(isBarcodeSearch);
            //////////    $('#divBarcode').show();
            //////////}
            //////////else {
            //////////    $('#divBarcode').hide();
            //////////}

            //////////if (isProductSearch == true) {
            //////////    $('#divProduct').show();
            //////////    $('#divIMEI').show();

            //////////} else {
            //////////    //alert('fake');
            //////////    $('#divProduct').hide();
            //////////    $('#divIMEI').hide();
            //////////}


            if (isIMEISearch == true) {

                $('#divIMEI').show();


            }
            else {
                $('#divIMEI').hide();
            }





            //ProductSearch();
            //$("#Category").change(function () {
            //    ProductSearch();
            //})

            $("#PaymentTypes").change(function () {
                AccountSearch();
            })


            $("#Price").change(function () {

                singleInputs();

            })

            $("#mainpaidamount").focusout(function () {

                //alert('hit');
                var x = $("#mainpaidamount").val();
                var y = $('#mainnetamount').val();
                var z = parseFloat(y) - parseFloat(x);

                //alert(x, y, z);

                $('#maindueamount').val(z.toFixed(2));
                $('#maindueamount').text(z.toFixed(2));


            })


            $("#mainservicecharge").focusout(function () {

                TotalLoadQty();
            })



            $("#maindisper").focusout(function () {

                TotalLoadQty();
            })
            $("#maindisamt,#mainvat").focusout(function () {

                TotalLoadQty();
            })



            //$('#pro1,#pro2,#pro3')



            $("#Product").change(function () {
                ProductInfo();


            })



            $('#tblpayments').dataTable({
                "aoColumns": [
                    { "sClass": "SalesPaymentSubId", "visible": false },
                    { "sClass": "PaymentTypeId", "visible": false },
                    { "sClass": "TypeShortName", "visible": true },
                    { "sClass": "AccountHeadId", "visible": false },
                    { "sClass": "Name", "visible": true },
                    { "sClass": "Amount", "visible": true },
                    { "sClass": "PaymentCardNo", "visible": true },
                    null
                ],
                "dom": 'T<"clear">lfrtip',
                "tableTools": {
                    "sRowSelector": "td:not(:first-child)"
                },
                select: {
                    style: 'os',
                    selector: 'td:first-child'
                },
                //"order": [[1, "asc"]],
                "bLengthChange": false,
                "bFilter": false,
                "bSort": false,
                "bInfo": false,
                "paging": false
            })


        $('#tbl').dataTable({
            "aoColumns": [
                { "name": "productid" , "sClass": "productid", "visible": false },
                { "name": "warehouseid" , "sClass": "warehouseid", "visible": false },  ////5
                { "name": "Name" , "sClass": "Name", "visible": true },
                { "name": "description" , "sClass": "description", "visible": true },/////  7
                { "name": "store" , "sClass": "store", "visible": true},   ////      9
                { "name": "quantity" , "sClass": "quantity", "visible": true }, ////      10
                { "name": "unitprice", "sClass": "unitprice", "visible": true}, ///////  16
                { "name": "ttlamount", "sClass": "ttlamount", "visible": true }, //////////  17
                null
            ],
            columnDefs: [
                {
                    "targets": 3,
                    "render": function (data, type, row) {
                        return '<input class="form-control form-control-sm SmallInput  text-center description" id="description" name="description" type="text" data-val="true" value=' + data + '>';
                    }

                },
                {
                    "targets": 5,
                    "render": function (data, type, row) {
                        return '<input class="form-control form-control-sm SmallInput  text-center quantity" id="quantity" name="quantity" type="text" data-val="true" value=' + data + '>';
                    }

                },
                {
                    "targets": 6,
                    "render": function (data, type, row) {
                        return '<input class="form-control form-control-sm SmallInput  text-right indprice"  id="indprice" name="indprice" type="text" data-val="true" value=' + data + '>';
                    }

                },
                {
                    "targets": 7,
                    "render": function (data, type, row) {
                        return '<input class="form-control form-control-sm SmallInput text-right ttlamount" disabled id="ttlamount" name="ttlamount" type="text" data-val="true" value=' + data + '>';
                    }

                }

            ],
            "dom": 'T<"clear">lfrtip',

            "tableTools": {
                "sRowSelector": "td:not(:first-child)"
            },
            //select: {
            //    style: 'os',
            //    selector: 'td:first-child'
            //},


            "bLengthChange": false,
            "bFilter": false,
            "bSort": false,
            ordering:false,
            "bInfo": false,
            searching: false,
            language: {
                search: '',
                searchPlaceholder: "Search..."
            },

            "scrollCollapse": true,
            "scrollY": "200px",
            "paging": false,
            //"retrieve": true,
            rowCallback: function (row) {
                $(row).addClass('txtMult');
            }
        })




            //table.draw(true);
            TotalLoadQty();




        //$('#btnDelete').click(function () {
        //    var table = $('#tbl').DataTable();
        //    table.row('.selected').remove().draw(false);
        //});


        $('#tbl tbody').on('click', '.dlttrash', function () {
            var table = $('#tbl').DataTable();

            table.row($(this).parents('tr')).remove().draw();

            var x = "500.00";
            var y = $('#tbl').height();
            var z = parseFloat(x) + parseFloat(y);

            $("html, body").animate({ scrollTop: z }, 500);


            TotalLoadQty();
            });



            $('#tblpayments tbody').on('click', '.dlttrashpayments', function () {
                var table = $('#tblpayments').DataTable();

                table.row($(this).parents('tr')).remove().draw();
                var x = "1300.00";
                var y = $('#tblpayments').height();
                var z = parseFloat(x) + parseFloat(y);

                $("html, body").animate({ scrollTop: z }, 1300);

            });



        //$("#SalesDate").datepicker({
        //    onSelect: function (date) {
        //        // Your CSS changes, just in case you still need them
        //        $('a.ui-state-default').removeClass('ui-state-highlight');
        //        $(this).addClass('ui-state-highlight');
        //        var dateFormat = $("#SalesDate").datepicker("option", "dateFormat");
        //        //setter
        //        $("#SalesDate").datepicker("option", "dateFormat", 'dd-M-yy');
        //    }
        //    });


        });


        ///newly added for payment method
        function AddPayments() {

            //var productcheck = $('#Product').val();
            //var descriptioncheck = $("#Description").val();
            //var serialcheck = $("#ProductSerial").val() || 0;
            //var qtycheck = $("#Quantity").val();
            //var tblpayments = $('#tblpayments').DataTable();

            //if (flag == 1) {

            //    multInputs();
            //    return;
            //}

            $('#tblpayments').dataTable().fnAddData([
                "0",
                $('#PaymentTypes').val(),
                $('#PaymentTypes option:selected').text(),
                $('#AccountHead').val(),
                $('#AccountHead option:selected').text(),

                $('#PaymentAmount').val(),
                $('#PaymentCardNo').val(),
                //$('#ProductSerial option:selected').text() || '=N/A=',
                '<a data-itemId="0" href="#" class="dlttrashpayments deleteItem"> <i class="fa fa-trash"></i></a >']);

            $('#PaymentAmount').val("0");
            $('#PaymentCardNo').val("=N/A=");
            //$('#PaymentTypes').val("0");
            //$('#AccountHead').val("0");
            //$('#PaymentTypes').text("");
            //$('#AccountHead').text("");


            //multInputs();

            //var x = $('#modalbodyfahad').height();
            //var y = $('#tbl').height();
            //var z = parseFloat(x) + parseFloat(y);

            //$("html, body").animate({ scrollTop: z }, 50);

        }


    // this function is used to add item to list table
        function Add() {

            var productcheck = $('#Product').val();
            var qtycheck = $("#Quantity").val();



            //alert(productcheck);
            //alert(descriptioncheck);
            //alert(serialcheck);



            var tbl = $('#tbl').DataTable();




            var flag = 0;
            tbl.rows().every(function () {
                var productidtd = this.data()[0];
                //var descriptiontd = this.data()[3];
                //console.log(this.data());
                //alert("table cell :" + productidtd.toString());
                //alert("textbox :" + productcheck.toString());

                //alert(descriptiontd);
                //alert(descriptioncheck);


                //console.log(productidtd);
                //console.log(productcheck);

                if ((productcheck == productidtd)) {///&& (descriptioncheck == descriptiontd)
                    toastr.warning("Quantity Increase.");
                    //alert(this.index());
                    flag = 1;


                    var cell = tbl.cell(this.index(), 5);
                    var prevqty = cell.data();
                    cell.data(parseFloat(prevqty) + parseFloat(qtycheck));

//                    cell.data(parseFloat(columnquantity) + parseFloat(qtycheck));


                    //alert('update done')
                    //alert(columnquantity);
                    //alert(columnindex);


                }





            });


            if (flag == 1) {


                TotalLoadQty();



                return;
            }

            var abc = $('#Quantity').val() * $('#Price').val();
            //alert(abc);

            $('#tbl').dataTable().fnAddData([
                $('#Product').val(),
                $('#Warehouse').val(),
                $('#Product option:selected').text(),
                '=N/A=',
                $('#Warehouse option:selected').text(),
                $('#Quantity').val(),
                $('#Price').val(),
                abc,
                '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash"></i></a >']);

            $('#Quantity').val("1");
            $('#Price').val("0");

            toastr.success("Product Added.");

            TotalLoadQty();
            //multInputs();

            var x = $('#modalbodyfahad').height();
            var y = $('#tbl').height();
            var z = parseFloat(x) + parseFloat(y);

            $("html, body").animate({ scrollTop: z }, 50);

        }

        function singleInputs() {

            //alert('singleinputs');

            var singleqty = $("#Quantity").val();
            var singlesalesprice = $("#Price").val();
            var singlevatpercentage = $("#IndVatPercentage").val();
            var singlevat = 0;//$("#IndVat").val();
            var singledisper = $("#IndDisPer").val();
            var singledisamt = $("#IndDisAmt").val();
            var singleindprice = 0;

            //alert(singleqty);
            //alert(singlesalesprice);
            //alert(singlevatpercentage);
            //alert(singlevat);
            //alert(singledisper);



            var radioValue = $("input[name='paymentMethod']:checked").val();

            ///alert(radioValue);
            if (radioValue == "percentage") {

                // alert('percentage');
                singledisamt = ((parseFloat(singleqty) * parseFloat(singlesalesprice)) * ((parseFloat(singledisper)) / 100));
                $("#IndDisAmt").text(singledisamt);//---fahad
                $("#IndDisAmt").val(singledisamt);//---fahad

                //alert('percentage');
                //$("#IndDisPer").prop("readonly", false);
                //$("#IndDisAmt").prop("readonly", true);
                //$("#IndDisPer").val(0);

            }
            else if (radioValue == "amount") {
                //alert('amount');
                //alert(singleqty);
                //alert(singlesalesprice);
                //alert(singledisamt);

                singledisper = ((((parseFloat(singledisamt))) / (parseFloat(singleqty) * parseFloat(singlesalesprice))) * 100);

                $("#IndDisPer").text(singledisper);//---fahad
                $("#IndDisPer").val(singledisper);//---fahad
                //$("#IndDisPer").prop("readonly", true);
                //$("#IndDisAmt").prop("readonly", false);
                //$("#IndDisPer").val(0);
            }




            //alert(singledisamt);

            singlevat = ((parseFloat(singleqty) * parseFloat(singlesalesprice)) * ((parseFloat(singlevatpercentage)) / 100));
            singleindprice = (parseFloat(singleqty) * parseFloat(singlesalesprice)) + ((parseFloat(singleqty) * parseFloat(singlesalesprice)) * ((parseFloat(singlevatpercentage)) / 100)) - (parseFloat(singledisamt));

            //alert(singleindprice);


            $("#IndVat").text(singlevat);//---fahad
            $("#IndVat").val(singlevat);//---fahad

            $("#IndPrice").text(singleindprice);//---fahad
            $("#IndPrice").val(singleindprice);//---fahad



            // alert('unitprice final function');

        }

            $(document).on('keyup', '.quantity', function () {

                //var v = $(this).val() || 0;
                //var c = $(this).parent().parent();
                //var d = $(this).parent().parent().index();
                //var s = c[0].cells[4].children[0].value || 0;
                //var t = parseFloat(v) * parseFloat(s);
                //c[0].cells[5].children[0].value = (t);

                TotalLoadQty();
            });
            $(document).on('keyup', '.unitprice', function () {
                TotalLoadQty();
            });


            function TotalLoadQty() {

                //alert('totalloadqty');
                var totalvalue = 0;
                var totalquantity = 0;
                var totalquantitycount = 0;


                var rows = $("#tbl").dataTable().fnGetNodes();


                for (var i = 0; i < rows.length; i++) {

                    var quantity = rows[i].cells[3].children[0].value;//.replace(/[\$,]/g, '');
                    var rate = rows[i].cells[4].children[0].value;//.replace(/[\$,]/g, '');
                    //var value = rows[i].cells[7].children[0].value;//.replace(/[\$,]/g, '');
                    var amount = parseFloat(rate) * parseFloat(quantity);
                    rows[i].cells[5].children[0].value = amount.toFixed(2);

                    totalvalue += parseFloat(amount.toFixed(2));
                    totalquantity += parseFloat(quantity);
                    totalquantitycount++;

                }
                //alert(totalvalue);
                //alert(totalquantity);
                //alert(totalquantitycount);

                $(".subtotalamount").val(totalvalue.toFixed(2));
                $(".subtotalamount").text(totalvalue.toFixed(2));

                //$(".subtotalqty").val(totalquantity);
                //$(".subtotalqty").text(totalquantity);

                var abcd = totalquantitycount.toString() + ' ( ' + totalquantity.toString() + ' )';

                $(".subtotalqty").val(abcd);//---fahad
                $(".subtotalqty").text(abcd);//---fahad


                //alert(ttlqty);
                $("#ttlSumQty").val(totalquantity);//---fahad
                $("#ttlSumQty").text(totalquantity);//---fahad

                $("#ttlCountQty").val(totalquantitycount);//---fahad
                $("#ttlCountQty").text(totalquantitycount);//---fahad


                $("#ttlSumAmt").val(totalvalue.toFixed(2));//---fahad
                $("#ttlSumAmt").text(totalvalue.toFixed(2));//---fahad


                //var t = ((parseFloat(totalvalue)) * 15) / 100;
                var disper = $('#maindisper').val().replace(/,/g, '') || 0;

                var servicecharge = $('#mainservicecharge').val().replace(/,/g, '');
                //alert(servicecharge);
                var vat = $('#mainvat').val();
                //var netamount = $('#mainnetamount').val();
                //var paidamount = $('#mainpaidamount').val();
                var dueamount = $('#maindueamount').val();
                var disamt = $('#maindisamt').val();
                var radioValue = $("input[name='totalpaymentMethod']:checked").val();

                    console.log(radioValue);
                    if (radioValue == "totalpercentage") {

                        //console.log(disper);
                        //console.log(totalvalue.toFixed(2));

                        //alert('totalpercentage');
                        var x = ((parseFloat(totalvalue.toFixed(2)) * parseFloat(disper)) / 100);
                        //console.log(x);
                        $('#maindisamt').val(x);


                    }
                    else if (radioValue == "totalamount") {
                        //console.log('totalamount');
                        //console.log(disamt);
                        //console.log(totalvalue);

                        var totaldisper = (parseFloat(disamt) / parseFloat(totalvalue.toFixed(2))) * 100;

                        //alert(totalvalue);
                        //alert(totaldisper);
                        //alert(disamt);
                        $("#maindisper").text(totaldisper.toFixed(2));//---fahad
                        $("#maindisper").val(totaldisper.toFixed(2));//---fahad


                    }


                    var disamt = $('#maindisamt').val();
                    var y = (parseFloat(totalvalue) - parseFloat(disamt)) + (parseFloat(servicecharge)) + (parseFloat(vat));


                        //alert(y);


                $('#mainnetamount').val(y.toFixed(2));


                    ////$("#mainpaidamount").text(y);//---fahad
                    ////$("#mainpaidamount").val(y);//---fahad


                    var paidamount = $('#mainpaidamount').val() || 0;


                var z = (parseFloat(y.toFixed(2)) - parseFloat(paidamount));

                $('#maindueamount').val(z.toFixed(2));

                    //tested

                    //alert(z);



                var zz = (parseFloat(y.toFixed(2)));

                    //var zz = ((parseFloat(y)) * (parseFloat(currencyrate)));

                    //alert(currencyrate);
                    //alert(zz);

                $('#NetAmountBDT').val(zz.toFixed(2));

            };

            function multInputs() {

                var mult = 0;
                var ttlqty = 0;
                var ttlcountqty = 0;
                var ttlunitprice = 0;
                var ttlvat = 0;
                var ttldisper = 0;
                var ttldisamt = 0;
                var ttlindprice = 0;
                var $total = 0;

                // for each row:

                $("tr.txtMult").each(function () {
                    // get the values from this row:

                    ////    var $val1 = $('.quantity', this).text();
                    ////    var $val2 = $('.indunitprice', this).text();
                    ////    var $val3 = $('.indvat', this).text();
                    ////    var $val4 = $('.inddisper', this).text();
                    ////    var $val5 = $('.inddisamt', this).text();
                    ////    var $val6 = $('.indprice', this).text();


                    ////    //alert($('.isDisPerRow').text());
                    ////    var valcheck = $('.isDisPerRow', this).text();

                    ////    var x = ((($val2 * $val4) / 100) * ($val1));
                    ////    //alert(x);
                    ////    $('.inddisamt', this).text(x);
                    ////    $('.inddisamt', this).val(x);


                    ////    var $IndTotalVat = ($val1 * (($val2 * 15) / 100));
                    ////    //var $IndTotalDiscount = ($val1 * (($val2 * 15) / 100));

                    ////    $total = ($val1 * 1) * ($val2 * 1);


                    ////    $('.indvat', this).text($IndTotalVat);
                    ////    $('.indvat', this).val($IndTotalVat);


                    ////    $('.amount', this).text($total);
                    ////    $('.amount', this).val($total);


                    ////    mult += $total;


                    ////    ttlqty += parseFloat($val1);


                    ////    ttlcountqty += parseFloat(1);

                    ////    ttlunitprice += parseFloat($val2);
                    ////    ttlvat += parseFloat($val3);
                    ////    ttldisper += parseFloat($val4);
                    ////    ttldisamt += parseFloat($val5);
                    ////    ttlindprice += parseFloat($val6);


                    ////});
                    //////$(".subtotalamount").text(mult);
                    //////$(".subtotalamount").text(mult);




                    //////$(".subtotalqty").text(ttlqty);
                    //////$(".subtotalcountqty").text(ttlcountqty);//---fahad
                    //////$(".subtotalunitprice").text(ttlunitprice);
                    //////$(".subtotalindprice").text(ttlindprice);



                    //////alert(ttlqty);
                    //////$("#ttlSumQty").val(ttlqty);//---fahad
                    //////$("#ttlSumQty").text(ttlqty);//---fahad

                    //////$("#ttlCountQty").val(ttlcountqty);//---fahad
                    //////$("#ttlCountQty").text(ttlcountqty);//---fahad


                    //////$("#ttlSumAmt").val(mult);//---fahad
                    //////$("#ttlSumAmt").text(mult);//---fahad

                    ////if (parseFloat(ttlvat) > 0) {
                    ////    $("#mainvat").val(ttlvat);//---fahad
                    ////    $("#mainvat").text(ttlvat);//---fahad
                    ////}





                    ////var disper = $('#maindisper').val();
                    ////var disamt = $('#maindisamt').val();

                    //////var myStr = 'this,is,a,test';
                    //////var newStr = myStr.replace(/,/g, '-');
                    //////alert(newStr);

                    //////var myStr = $('#mainservicecharge').val().replace(/,/g, '');
                    //////var newStr = myStr.replace(/,/g, '');
                    //////alert(myStr);


                    //var servicecharge = $('#mainservicecharge').val().replace(/,/g, '');
                    ////alert(servicecharge);
                    //var vat = $('#mainvat').val();
                    ////var netamount = $('#mainnetamount').val();
                    ////var paidamount = $('#mainpaidamount').val();
                    //var dueamount = $('#maindueamount').val();
                    //var currencyrate = $('#CurrencyRate').val();
                    //var netamountbdt = $('#mainnetamountbdt').val();


                    ////var radioValue = $("input[name='totalpaymentMethod']:checked").val();

                    //////alert(radioValue);
                    ////if (radioValue == "totalpercentage") {

                    ////    //alert('totalpercentage');
                    ////    var x = ((mult * disper) / 100);
                    ////    $('#maindisamt').val(x);


                    ////}
                    ////else if (radioValue == "totalamount") {
                    ////    //alert('totalamount');
                    ////    var totaldisper = (parseFloat(disamt) / (parseFloat(mult))) * 100;

                    ////    //alert(mult);
                    ////    //alert(totaldisper);
                    ////    //alert(disamt);
                    ////    $("#maindisper").text(totaldisper);//---fahad
                    ////    $("#maindisper").val(totaldisper);//---fahad


                    ////}

                    ////var y = (parseFloat(mult) - parseFloat(disamt)) + (parseFloat(servicecharge)) + (parseFloat(vat));





                    ////$('#mainnetamount').val(y);


                    ////$("#mainpaidamount").text(y);//---fahad
                    ////$("#mainpaidamount").val(y);//---fahad


                    ////var paidamount = $('#mainpaidamount').val();


                    ////var z = (parseFloat(y) - parseFloat(paidamount));

                    ////$('#maindueamount').val(z);

                    //////tested

                    //////alert(z);




                    ////var zz = ((parseFloat(y)) * (parseFloat(currencyrate)));

                    //////alert(currencyrate);
                    //////alert(zz);

                    ////$('#NetAmountBDT').val(zz);


                }
                )

            };

            function Sales_delete() {
                var Id = $("#Id").val();
                //alert(Id);
                $.ajax({

                    url: '@Url.Action("DeleteSale", "Sales")',
                    //url: '@Url.Action("Delete")',
                    data: { saleId: Id }, //use id here
                    //data: JSON.stringify(salesmain),
                    type: 'get',
                    async: false,
                    contentType: 'application/json;',
                    dataType: 'json',
                    success: function (result) {

                        if (result.Success == "1") {
                            window.location.href = '@Url.Action("Index", "Sales")';
                        }
                        else {
                            alert(result.ex);
                        }
                    }
                });
            }

            //function Sales_save() {
            $("#dataSave").click(function () {
                // Step 1: Read View Data and Create JSON Object


                //if (!$("#myform").valid()) {
                //    toastr.error('Please Fill Up All Necessary Information Correctly.');

                //    var validator = $("form").validate();
                //    console.log(validator.errorList);


                //    $("html, body").animate({ scrollTop: 0 }, 500);
                //    return false;
                //}

                var checked = true;
                var radioValue = $("input[name='totalpaymentMethod']:checked").val();
                //alert(radioValue);
                if (radioValue == "totalpercentage") { checked = true }
                else {
                    checked = false
                }

                if ($('#tblpayments').length == 0) {
                    $('#PaymentAmount').val($('#mainpaidamount').val());
                    $('#PaymentTypes').val().change();


                    AddPayments();
                }


                // Creating SalesSub Json Object
                var salessub = { "Id": "", "SalesTypeId": "", "ProductId": "", "ProductSerialId": "", "WarehouseId": "", "Description": "", "Quantity": "", "Price": "", "IndVatPer": "", "IndVat": "", "IndDisPer": "","IndDisPerRow": "","IndDiscount": "", "IndDisAmt": "", "IndPrice": "", "Amount": "", "isDisPerRow": "", "Size": "", "Carton": "", "PCTN": "", "RowNo": "" };
                var SalesPaymentSub = { "Id": "", "SalesId": "", "PaymentTypeId": "", "AccountHeadId": "", "Amount": "", "PaymentCardNo": "", "ComId": "", "LuserId": "", "RowNo": "" };




                // Creating SalesMain Json Object
                var salesmain = {
                    "Id": "", "SaleCode": "", "ReferenceNo": "", "SalesDate": "", "SalesPerson": "",
                    "CustomerId": "", "CustomerName": "", "PrimaryAddress": "", "SecoundaryAddress": "", "PhoneNo": "", "EmailId": "", "City": "", "PostalCode": "",

                    "ttlCountQty": "", "ttlSumQty": "", "ttlUnitPrice": "", "ttlIndVat": "", "ttlIndDisAmt": "",
                    "ttlIndPrice": "", "ttlSumAmt": "", "DisPer": "", "DisAmt": "",

                    "ServiceCharge": "", "TotalVat": "", "NetAmount": "", "PaidAmt": "", "DueAmt": "", "CountryId": "",
                    "CurrencyRate": "", "NetAmountBDT": "", "Notes": "", "ComId": "", "LuserId": "", "isDisPer": "","isDisPerRow": "","CurrencyRate": "0",

                    "Items": [],
                    "SalesPayments": []


                };

                // Set Sales Main Value
                salesmain.Id = $("#Id").val();
                salesmain.SaleCode = $("#SaleCode").val();
                //salesmain.ReferenceNo = $("#ReferenceNo").val();
                salesmain.SalesDate = $("#SalesDate").val();
                //salesmain.SalesPerson = $("#SalesPerson").val();

                salesmain.CustomerId = $("#Customer").val();
                salesmain.CustomerName = $("#CustomerName").val();

                salesmain.PrimaryAddress = $("#PrimaryAddress").val();
                salesmain.SecoundaryAddress = $("#SecoundaryAddress").val();
                salesmain.PhoneNo = $("#PhoneNo").val() || "";
                salesmain.EmailId = $("#EmailId").val();
                salesmain.City = $("#City").val();
                salesmain.PostalCode = $("#PostalCode").val();


                salesmain.ttlCountQty = $("#MainttlCountQty").val();
                salesmain.ttlSumQty = $("#MainttlSumQty").val();
                salesmain.ttlUnitPrice = $("#MainttlUnitPrice").val();
                //salesmain.ttlIndVatPer = $("#MainttlIndVatPer").val();
                salesmain.ttlIndVat = $("#MainttlIndVat").val();

                salesmain.ttlIndDisAmt = $("#MainttlIndDisAmt").val();
                salesmain.ttlIndPrice = $("#MainttlIndPrice").val();
                salesmain.ttlSumAmt = $("#MainttlSumAmt").val();

                salesmain.DisPer = $("#maindisper").val();
                salesmain.DisAmt = $("#maindisamt").val();
                /////$('#mainservicecharge').val();//ServiceCharge
                salesmain.ServiceCharge = $("#mainservicecharge").val().replace(/,/g, '');
                salesmain.TotalVat = $("#mainvat").val();
                salesmain.NetAmount = $("#mainnetamount").val();
                salesmain.PaidAmt = $("#mainpaidamount").val();
                salesmain.DueAmt = $("#maindueamount").val();
                //salesmain.CountryId = $("#Country").val();
                //salesmain.CurrencyRate = $("#CurrencyRate").val();
                //salesmain.NetAmountBDT = $("#NetAmountBDT").val();
                salesmain.Notes = $("#Notes").val();
                salesmain.isDisPer = checked;

                salesmain.Total = $("#ttlSumAmt").val();//$("#MainttlUnitPrice").val();
                salesmain.Discount = $("#maindisamt").val();
                salesmain.GrandTotal = $("#mainnetamount").val();
                salesmain.Notes = 'POS Sales';//$("#maindueamount").val();
                salesmain.PaymentMethod = $('#PaymentTypes option:selected').text();
                salesmain.Status = 'Paid';//$("#maindueamount").val();
                salesmain.isPOSSales = 'True';//$("#maindueamount").val();
                salesmain.CurrencyRate = '0';//$("#maindueamount").val();



                //salesmain.ComId = $("#ComId").val();
                //salesmain.LuserId = $("#LuserId").val();
                salesmain.ComId = '@HttpContextAccessor.HttpContext.Session.GetInt32("ComId").ToString()';
                salesmain.LuserId = '@HttpContextAccessor.HttpContext.Session.GetInt32("UserId").ToString()';

                //alert('@HttpContextAccessor.HttpContext.Session.GetInt32("UserId").ToString()');
                //alert('@HttpContextAccessor.HttpContext.Session.GetInt32("ComId").ToString()');



                //var table = $('#tbl').DataTable();
                //console.log(column);

                ////sales subs data
                var oTable = $('#tbl').dataTable().fnGetData();
                var rows = $('#tbl').dataTable().fnGetNodes();

                for (var i = 0; i < oTable.length; i++) {
                    //var oTableRow = oTable[i];
                    //alert(oTableRow);
                    salessub.RowNo = i + 1;
                    // IF This view is for edit then it will read Id from Hidden field
                    if ($('h2').text() == "Invoice Edit") {
                        salessub.Id = $('#Id').val();

                    }
                    else {
                        salessub.Id = 0;
                    }


                    //alert(oTable[i][$('.productid').val()]);

                    //salessub.SalesTypeId = oTable[i][0];

                    salessub.ProductId = oTable[i][0];

                    //salessub.barcode = oTable[i][2];

                    //salessub.ProductSerialId = oTable[i][4];
                    //alert(oTable[i][4])

                    salessub.WarehouseId = oTable[i][1];


                    //salessub.Description = oTable[i][3];
                    salessub.Description = rows[i].cells[1].children[0].value;
                    salessub.Quantity = rows[i].cells[3].children[0].value;
                    salessub.Price = rows[i].cells[4].children[0].value;
                    salessub.Amount = rows[i].cells[3].children[0].value * rows[i].cells[4].children[0].value;

                    salessub.isDisPerRow = false;
                    salessub.IndDisPer = 0;
                    salessub.IndDisPerRow = 0;
                    salessub.IndDiscount = 0;
                    salessub.PCTN = 0;


                    //salessub.Quantity = oTable[i][12];
                    //salessub.Price = oTable[i][13];

                    //salessub.IndVatPer = oTable[i][14];
                    //salessub.IndVat = oTable[i][15];
                    //salessub.IndDisPer = oTable[i][16];
                    //salessub.IndDisAmt = oTable[i][17];
                    //salessub.IndPrice = oTable[i][18];


                    //salessub.Amount = oTable[i][12] * oTable[i][18];

                    //alert(oTable[i][17]);
                    //salessub.isDisPerRow = oTable[i][20];

                    //salessub.Size = oTable[i][21];
                    //salessub.Carton = oTable[i][22];
                    //salessub.PCTN = oTable[i][23];



                    //var oTable = $('#example').dataTable();


                    // adding to SalesMain.SalesSub List Item
                    salesmain.Items.push(salessub);
                    salessub = {
                        "SalesTypeId": "", "ProductId": "", "ProductSerialId": "", "WarehouseId": "", "Description": "", "Quantity": "", "Price": "",
                        "IndVatPer": "", "IndVat": "", "IndDisPer": "", "IndDisAmt": "", "IndPrice": "",
                        "Amount": "", "isDisPerRow": "", "Size": "", "Carton": "", "PCTN": "", "RowNo": ""
                    };

                }


                //////payment types added by fahad last update and modification
                var oTablePayment = $('#tblpayments').dataTable().fnGetData();
                for (var i = 0; i < oTablePayment.length; i++) {

                    // IF This view is for edit then it will read Id from Hidden field
                    if ($('h2').text() == "Invoice Edit") {
                        SalesPaymentSub.SalesId = $('#Id').val();

                    }
                    else {
                        SalesPaymentSub.SalesId = 0;
                    }


                    SalesPaymentSub.Id = oTablePayment[i][0];
                    SalesPaymentSub.PaymentTypeId = oTablePayment[i][1];

                    SalesPaymentSub.AccountHeadId = oTablePayment[i][3];
                    //alert(SalesPaymentSub.AccountHeadId);
                    SalesPaymentSub.Amount = oTablePayment[i][5];
                    SalesPaymentSub.ComId = '@HttpContextAccessor.HttpContext.Session.GetInt32("ComId").ToString()';
                    SalesPaymentSub.LuserId = '@HttpContextAccessor.HttpContext.Session.GetInt32("UserId").ToString()';
                    SalesPaymentSub.RowNo = i;


                    SalesPaymentSub.PaymentCardNo = oTablePayment[i][6];


                    // adding to SalesMain.SalesSub List Item
                    salesmain.SalesPayments.push(SalesPaymentSub);

                    var SalesPaymentSub = { "Id": "", "SalesId": "", "PaymentTypeId": "", "AccountHeadId": "", "Amount": "", "PaymentCardNo": "", "ComId": "", "LuserId": "", "RowNo": "" };


                }

                //console.log(salesmain);
                var antiForgeryToken = $("input[name=Dominate_ANTIFORZERY]").val();
                $.ajax({
                    type: 'POST',

                    //url: '/Sales/Create',
                    url: '@Url.Action("POSCreate", "Sales")',
                    dataType: 'json',
                    async: 'true',
                    headers: { "X-CSRF-TOKEN-Dominate_ANTIFORZERY": antiForgeryToken },
                    // data: JSON.stringify(salesmain),
                    data: { model: salesmain },
                    success: function (result) {

                        if (result.Success == "1") {
                            //window.location.href = "/Sales/index";


                            ///alert($("#Id").val());
                            if ($("#Id").val() > 0) {
                                toastr.warning("Data Update Successfully.");

                                var currentsaleid = result.Id;
                                var urllink = '@Url.Action("SaleReport", "Sales", new { Saleid = "xxxx"})'.replace("xxxx", currentsaleid);
                                window.open(urllink, '_blank');

                                window.setTimeout(function () {
                                    window.location.href = '@Url.Action("Index", "Sales")';
                                }, 500);
                                //$("#Id").val(0);

                            }
                            else {
                                toastr.success("Data Save Successfully.");
                                $("#Id").val(0);
                                resetData();
                                StopSpinner(".spinnerclass");
                                var currentsaleid = result.Id;
                                var urllink = '@Url.Action("SaleReport", "Sales", new { Saleid = "xxxx"})'.replace("xxxx", currentsaleid);
                                window.open(urllink, '_blank');
                            }
                            StopSpinner(".spinnerclass");

                            @*if ($('h2').text() == "Invoice Edit") {
                            window.location.href = '@Url.Action("Index", "Sales")';
                            }
                            else {
                            }*@



                        }
                        else {
                            alert(result.message);
                            StopSpinner(".spinnerclass");
                        }
                    }
                });



            });

        </script>

    }


</body>







