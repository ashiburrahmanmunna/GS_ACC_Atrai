@using Microsoft.AspNetCore.Http
@*@model Atrai.Core.Entity.PurchaseModel*@
@inject IHttpContextAccessor HttpContextAccessor
@model int
@{ ViewData["Title"] = "AddPurchase";
    Layout = "~/Views/Shared/_adminLayout.cshtml"; }
@*<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">*@
<style type="text/css">


    .table th {
        text-align: center;
    }

    .table > tbody > tr > td, .table > tbody > tr > td > input {
        /*        line-height: 32px;*/
        vertical-align: middle;
        font-size: 13px;
        font-weight: 500;
        font-family: Arial 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        /*       border: none;*/
        background: whitesmoke;
    }

    .table td, .table th {
        padding-right: .20rem;
        padding-top: 0.10rem;
        padding-bottom: 0.15rem;
        padding-left: 0.15rem;
        padding-right: 0.45rem;
        border-top: none;
    }

    .dataTables_scrollHeadInner {
        width: 100% !important;
    }

        .dataTables_scrollHeadInner table {
            width: 100% !important;
        }

    .select2-selection {
        overflow: hidden !important;
        height: 42px !important;
        /*vertical-align:middle;*/
    }

    .select2-container--default .select2-selection--single .select2-selection__rendered,
    .select2-container--default .select2-selection--single .select2-selection__arrow {
        /*    color: #444;
    line-height: 28px;*/
        margin-top: 7px;
    }

    .bg_1 {
        background-color: green;
    }

    .bg_2 {
        background-color: gray;
    }

    .error_msg {
        color: #f00;
        display: none;
    }

    .table {
        /* width: 100%; */
        /* max-width: 100%; */
        margin-bottom: 0px;
    }

    .dataTables_empty {
        text-align: center !important;
    }




    .ui-combobox {
        display: inline-block;
        margin: 0;
        margin-right: 1.8em;
        position: relative;
    }

    .ui-combobox-input {
        padding: 0.2em;
        margin: 0;
    }

    .ui-combobox-button {
        position: absolute;
        width: 1.8em !important;
        margin: 0;
        margin-left: -1px;
        top: 0;
        bottom: 0;
    }

        .ui-combobox-button .ui-button-text {
            padding: 0em;
        }

    .ui-combobox .ui-autocomplete {
        max-height: 10em;
        overflow-y: auto;
        overflow-x: hidden;
    }
</style>
@*<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/css/bootstrap-datepicker3.css" rel="stylesheet" />*@

<body>
    <div class="page-wrapper">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-header py-1">
                            @*<input type="hidden" id="isPOSPurchase" name="isPOSPurchase" value="" />*@

                            @*<h2>
                                Batch Purchase / Serial Product Received / Store-In
                            </h2>*@
                        </div>
                        <div class="card-body" id="masterPurchase">
                            @*<input type="hidden" id="purchaseid" />*@
                            <div class="card p-2">
                                <div class="col-md-12">
                                    <div class="row">
                                        @*<div class="col-md-4 col-12">
                        <div class="form-group">
                            <label for="Name">Supplier &nbsp  </label>
                            <select id="Supplier" class="form-control" onchange="blankme(this.id)">
                                <option value="">Select Supplier</option>
                            </select>
                            <small id="error_Supplier" class="form-text error_msg">Select supplier from list</small>
                        </div>
                    </div>
                    <div class="col-md-4 col-12">
                        <div class="form-group">
                            <label for="Code"> Code  &nbsp</label>
                            @Html.TextBox("Code", null, new { @class = "form-control", @placeholder = "Enter Purchase No", onkeyup = "blankme(this.id)", autocomplete = "off" })
                            <small id="error_Code" class="form-text error_msg col-md-offset-2 "> Purchase Code is Required</small>
                        </div>
                    </div>
                    <div class="col-md-4 col-12">
                        <div class="form-group">
                            <label for="Date"> Date  &nbsp</label>
                            @Html.TextBox("Date", null, new { @class = "form-control mydatepicker", @placeholder = "Select Purchase Date ", onchange = "blankme(this.id)", autocomplete = "off" })
                            <small id="error_Date" class="form-text error_msg col-md-offset-2 ">Purchase Date is Required</small>
                        </div>
                    </div>*@






                                        <div class="col-md-4 col-12">
                                            <div class="form-group">
                                                <div class="input-group  mb-2">
                                                    <select id="Supplier" class="form-control" onchange="blankme(this.id)">
                                                        <option value="">Select Supplier</option>
                                                    </select>
                                                    <small id="error_Supplier" class="form-text error_msg">Select Supplier from list</small>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-md-3 col-12">
                                            <div class="form-group">
                                                <div class="input-group  mb-2">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text py-0">
                                                            Code :
                                                        </span>
                                                    </div>


                                                    @Html.TextBox("Code", null, new { @class = "form-control", @placeholder = "Enter Purchase No", onkeyup = "blankme(this.id)", autocomplete = "off", @readonly = "readonly" })
                                                    <small id="error_Code" class="form-text error_msg col-md-offset-2 "> Purchase Code is Required</small>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-md-2 col-12">
                                            <div class="form-group">
                                                <div class="input-group  mb-2">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text py-0">
                                                            Date :
                                                        </span>
                                                    </div>
                                                    @Html.TextBox("Date", null, new { @class = "form-control mydatepicker", @placeholder = "Select Purchase Date ", onchange = "blankme(this.id)", autocomplete = "off" })
                                                    <small id="error_Date" class="form-text error_msg col-md-offset-2 ">Purchase Date is Required</small>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3 col-12">

                                            <h2 style="color:darkgreen;font-weight:bold;font-family: 'Lato';">
                                                Purchases / Store In
                                            </h2>
                                        </div>

                                    </div>

                                    <div class="row" id="supplierinfo">
                                        <div class="col-md-4 col-12">
                                            <div class="form-group">
                                                <label for="Code">Supplier Name  &nbsp</label>
                                                @Html.TextBox("SupplierName", null, new { @class = "form-control", @placeholder = "Enter Supplier Name", onkeyup = "blankme(this.id)", autocomplete = "off" })
                                                @*<small id="error_PhoneNo" class="form-text error_msg col-md-offset-2 "> Supplier Name Required</small>*@
                                            </div>
                                        </div>
                                        <div class="col-md-4 col-12">
                                            <div class="form-group">
                                                <label for="Code">Phone No  &nbsp</label>
                                                @Html.TextBox("PhoneNo", null, new { @class = "form-control", @placeholder = "Enter Phone No", onkeyup = "blankme(this.id)", autocomplete = "off" })
                                                @*<small id="error_PhoneNo" class="form-text error_msg col-md-offset-2 "> Supplier Phone No Required</small>*@
                                            </div>
                                        </div>
                                        <div class="col-md-4 col-12">
                                            <div class="form-group">
                                                <label for="Date">Address  &nbsp</label>
                                                @Html.TextBox("SupplierAddress", null, new { @class = "form-control", @placeholder = "Select Supplier Address", onchange = "blankme(this.id)", autocomplete = "off" })
                                                @*<small id="error_SupplierAddress" class="form-text error_msg col-md-offset-2 "> Supplier Address Required</small>*@
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="col-md-12">


                                    <div class="row">

                                        <div class="col-md-8 col-12">
                                            <label class="col-md-2">Search Product</label>
                                            <div class="input-group  col-md-10">
                                                <span class="input-group-btn"><button class="btn btn-primary rounded-0" type="submit"><i class="ti-search"></i></button></span>
                                                <input type="text" placeholder="Search Product" name="Search" id="Search" class="form-control">
                                                <div class="input-group-append">
                                                    <button type="button" class="btn-primary btn-sm" data-toggle="modal" data-target="#productinfoModal"><i class="fa fa-plus"></i></button>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-4 col-12">
                                            <label class="col-md-6">Warehouse</label>
                                            <div class="input-group col-md-8">
                                                @Html.DropDownList("Warehouse", ViewBag.Warehouse as List<SelectListItem>, new { id = "Warehouse", @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>

                                </div>

                                <br />
                            </div>


                            <div class="table-responsive">
                                <table class="table table-hover" id="PurchaseItems" style="width:100%">
                                    <thead>
                                        <tr>
                                            <th class="d-none">Id</th>
                                            <th class="d-none">Product Id</th>
                                            <th class="d-none">Warehouse Id</th>
                                            <th style="min-width:200px">Name</th>
                                            <th style="min-width:200px">Description</th>
                                            <th style="min-width:80px">Warehouse</th>
                                            <th style="min-width:80px;max-width:100px">Unit Price</th>
                                            <th style="min-width:80px;max-width:100px">Quantity</th>
                                            <th style="min-width:80px;max-width:100px">Amount</th>
                                            <th style="min-width:80px;max-width:100px"></th>
                                            <th style="min-width:80px;max-width:100px">Batch Info</th>
                                            <th>IsDelete</th>
                                            <th>IsTransaction</th>



                                        </tr>
                                    </thead>
                                    <tbody id="itemDetails">
                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <td class="d-none"></td>
                                            <td class="d-none"></td>
                                            <td class="d-none"></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td> <strong> Total:</strong> </td>
                                            <td> <strong id="TotalQty">  </strong> </td>
                                            <td> <strong id="SubTotal">  </strong> </td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td></td>



                                        </tr>
                                    </tfoot>
                                </table>
                            </div>

                            <small id="error_SubTotal" class="form-text error_msg">Atleast add one item</small>

                            <div class="row p-3">
                                <div class="card p-2 col-md-5">
                                    <div class="row">

                                        <div class="col-md-4 col-12">

                                            <div class="input-group  mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        VAT :
                                                    </span>
                                                </div>

                                                @Html.TextBox("TotalVat", null, new { @class = "form-control text-right", @Value = 0, @type = "input", @placeholder = "Total Vat Charge", onchange = "calculateSum()" })
                                                <small id="error_TotalVAT" class="form-text error_msg">Total VAT can't be empty</small>
                                            </div>
                                        </div>


                                        <div class="col-md-4 col-12">
                                            <div class="input-group  mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        Service :
                                                    </span>
                                                </div>

                                                @Html.TextBox("ServiceCharge", null, new { @class = "form-control text-right", @Value = 0, @type = "input", @placeholder = "Service Charge Amount ", onchange = "calculateSum()" })
                                                <small id="error_ServiceCharge" class="form-text error_msg">Service Charge can't be empty</small>
                                            </div>

                                        </div>

                                        <div class="col-md-4 col-12">

                                            <div class="input-group  mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        Shipping :
                                                    </span>
                                                </div>

                                                @Html.TextBox("Shipping", null, new { @class = "form-control text-right", @Value = 0, @type = "input", @placeholder = "Total Shipping Charge", onchange = "calculateSum()" })
                                                <small id="error_Shipping" class="form-text error_msg">Total Shipping can't be empty</small>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">

                                        <div class="col-md-6 col-12">
                                            <div class="input-group  mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        Discount :
                                                    </span>
                                                </div>

                                                @Html.TextBox("Discount", null, new { @class = "form-control text-right", @Value = 0, @type = "input", @placeholder = "Discount Amount ", onchange = "calculateSum()" })
                                                <small id="error_Discount" class="form-text error_msg">Discount can't be empty</small>
                                            </div>

                                        </div>


                                        <div class="col-md-6 col-12">
                                            <div class="input-group  mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        Grand Total :
                                                    </span>
                                                </div>

                                                <input type="text" id="GrandTotal" class="form-control text-right" readonly style="font-size:22px;color:purple;font-weight:bold" />
                                                <small id="error_GrandTotal" class="form-text error_msg">Total is empty</small>
                                            </div>

                                        </div>



                                    </div>
                                    <div class="row">
                                        <div class="col-md-12 col-12">
                                            <label for="Notes"> Notes: </label>
                                            @Html.TextArea("Notes", new { @class = "form-control", @rows = "3", @placeholder = "Enter Notes" })
                                        </div>

                                    </div>
                                </div>
                                <div class="col-md-1 col-md-offset-2"></div>
                                <div class="col-md-6">
                                    <div class="card p-1">
                                        <div class="table-responsive">
                                            <table id="tblpayments" class="table table-md tblpayments display table-striped table-hover text-nowrap" cellspacing="0" width="100%">
                                                <thead>
                                                    <tr>
                                                        <th class="d-none text-center">Purchase Payment Id</th>
                                                        <th class="d-none text-center">Payment Type Id</th>
                                                        <th class="text-center">Payment Type</th>
                                                        <th class="d-none text-center">AccountHeadId</th>
                                                        <th class="text-center">Accounts Head</th>
                                                        <th class="text-center">Amount</th>
                                                        <th class="text-center">Card No</th>
                                                        <th class="text-center"></th>
                                                    </tr>
                                                </thead>
                                                <tbody id="paymentdetails">
                                                </tbody>
                                                <tfoot>
                                                    <tr>
                                                        <td class="d-none"></td>
                                                        <td class="d-none"></td>
                                                        <td></td>
                                                        <td class="d-none"></td>
                                                        <td> <strong> Total:</strong> </td>
                                                        <td> <strong id="TotalCollectionAmount">  </strong> </td>
                                                        <td></td>
                                                        <td></td>
                                                    </tr>
                                                </tfoot>
                                            </table>

                                        </div>
                                        <div class="row my-2">
                                            
                                            <div class="col-md-6 col-12">
                                                <div class="input-group  mb-2" id="divPurchasePayments">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text py-0">
                                                            <label for="Name">Account Head &nbsp  </label>
                                                        </span>
                                                    </div>
                                                    <select id="AccountHeadRow" class="form-control" onchange="blankme(this.id)">
                                                        @*<option value="">Select Receiving Head</option>*@


                                                    </select>
                                                </div>
                                            </div>
                                            <div class="col-md-5 col-12">
                                                <div class="input-group  mb-2" id="divPaymentAmount">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text py-0">
                                                            Amount
                                                        </span>
                                                    </div>
                                                    @Html.TextBox("PaymentAmount", "0", new { @class = "form-control" })
                                                </div>
                                            </div>
                                            <div class="col-md-9 col-12">
                                                <div class="input-group  mb-2" id="divPaymentCardNo">
                                                    <div class="input-group-prepend">
                                                        <span class="input-group-text py-0">
                                                            Card No / Bkash Number / Cheque
                                                        </span>
                                                    </div>
                                                    @Html.TextBox("PaymentCardNo", "0", new { @class = "form-control" })
                                                </div>
                                            </div>
                                            <div class="col-md-2 col-12">
                                                <button type="button" onclick="AddPayments()" class="btn btn-success mb-2 btn-block rounded-0">Add</button>
                                                @*<button type="button" onclick="DeleteRow()" class="btn btn-success mb-2 btn-block" id="btnDelete" value="Delete"/>*@

                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group row">

                                        <div class="col-md-6 col-12">
                                            @*<button type="submit" class="btn btn-success"> Save Changes </button>*@


                                            @if (ViewBag.ActionType == "Create")
                                            {
                                <input id="BtnSave" data-purchase-Id="@Model" class="btn  btn-primary btn-block  rounded-0" type="submit" value="Save" /> @*<button type="button" id="BtnSave"  class="btn btn-success btn-block rounded-0">Save</button>*@ }
                            else if (ViewBag.ActionType == "Edit")
                            { @*<input type="submit" id="BtnSave" value="Update" class="btn btn-warning btn-block rounded-0" />*@
                                            <input id="BtnSave" data-purchase-Id="@Model" class="btn btn-warning btn-block rounded-0" type="submit" value="Update purchase" /> } @*else if (ViewBag.ActionType == "Delete")
                    {
                        <button class="btn btn-danger btn-block rounded-0" type="button" onclick="Purchase_delete()">Delete</button>
                    }*@

                                        </div>

                                        <div class="col-md-6 col-12">
                                            @Html.ActionLink("Back", "Index", "Purchase", null, new { @class = "btn btn-info btn-block rounded-0", @id = "btnBack" })

                                        </div>

                                    </div>
                                </div>
                            </div>

                        </div>
                        </div>
                    <!-- panel-body -->
                </div>
                <!-- panel -->
            </div>
        </div>


    </div>

    <div class="modal" id="productinfoModal" tabindex="-1" role="dialog" aria-labelledby="productinfoModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="productinfoModalLabel">Add Product</h5>
                    <button id="btnclose" type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="productinfo" class="row">
                        <div class="col-md-12">

                            <div class="from-group row">

                                <div class="col-md-12 mb-2">
                                    <label>Name</label>
                                    <input type="text" id="Name" class="form-control form-control-sm" />
                                </div>
                                <div class="col-md-6 col-12 ">
                                    <label>Category</label>
                                    @Html.DropDownList("CategoryId", new SelectList((IEnumerable<SelectListItem>)ViewBag.Category, "Value", "Text"), "Select Category", htmlAttributes: new { @class = "form-control", id = "CategoryId" })
                                </div>

                                <div class="col-md-6 col-12 ">
                                    <label>Unit</label>
                                    @Html.DropDownList("UnitId", new SelectList((IEnumerable<SelectListItem>)ViewBag.Unit, "Value", "Text"), "Select Unit", htmlAttributes: new { @class = "form-control", id = "UnitId" })
                                </div>
                                <div class="col-md-6 col-12 mb-2">
                                    <label>Product Code</label>
                                    <input type="text" id="ProductCode" class="form-control form-control-sm" />
                                </div>
                                <div class="col-md-6 col-12 mb-2">
                                    <label>Brand</label>
                                    <input type="text" id="BrandName" class="form-control form-control-sm" />
                                </div>
                                <div class="col-md-6 col-12 mb-2">
                                    <label>Color</label>
                                    <input type="text" id="ColorName" class="form-control form-control-sm" />
                                </div>
                                <div class="col-md-6 col-12 mb-2">
                                    <label>Size</label>
                                    <input type="text" id="SizeName" class="form-control form-control-sm" />
                                </div>

                                <div class="col-md-6 col-12 mb-2">
                                    <label>Cost Price</label>
                                    <input type="text" id="CostPrice" class="form-control form-control-sm" />
                                </div>
                                <div class="col-md-6 col-12 mb-2">
                                    <label>Selling Price</label>
                                    <input type="text" id="Price" class="form-control form-control-sm" />
                                </div>
                                <div class="col-md-12 mb-2">
                                    <label>Description</label>
                                    <input type="text" id="Description" class="form-control form-control-sm" />
                                </div>

                                <br />

                            </div>



                        </div>
                    </div>  @*Datatable Initializer tblproductserialsearch*@
                </div>
                <div class="modal-footer">
                    @*<div class="col-md-12 mb-2" style="text-align:center">
                            <button type="button" onclick="Saveproductinfo()" class="btn btn-success rounded-0">Save Product</button>
                        </div>*@
                    <button type="button" class="btn btn-primary" onclick="Saveproductinfo()">Add New Product</button>

                    <button type="button" id="btnCloseProductModal" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>


    <div class="modal" id="checkModal" tabindex="-2" role="dialog" aria-labelledby="checkModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="col-12" style="display:none">

                    <div class="row">
                        <div class="col-md-4 col-12">
                        </div>
                        <div class="col-md-4 col-12">

                            <div id="qr-reader" style="width:260px;background-color:lavender"></div>
                            <div id="qr-reader-results"></div>


                        </div>
                    </div>
                </div>
                <div class="modal-header">
                    @*<h5 class="modal-title text-center" id="checkModalLabel">Batch Serial </h5>*@
                    @*<button id="btncloseabc" type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>*@





                    <div class="from-group row">
                        @*<div class="col mb-2">
                <input type="text" id="myInputSearch" class="form-control form-control-sm" onkeyup="myFunctionSearch()" onmouseover="this.focus();" placeholder="Search for PONO." title="Type in a name">
            </div>*@
                        <div class="col mb-2">
                            <input type="text" id="slnoPrefix" class="form-control form-control-sm" placeholder="Prefix" title="Prefix">
                        </div>

                    </div>
                    <div class="from-group row">

                        <div class="col mb-2">
                            <input type="number" id="BatchFromNo" class="form-control form-control-sm" placeholder="From NO." title="From No">
                        </div>

                    </div>
                    <div class="from-group row">

                        <div class="col mb-2">
                            <input type="number" id="BatchToNo" class="form-control form-control-sm" placeholder="To NO." title="To No">
                        </div>
                    </div>


                </div>
                <div id="BatchSerialListModal" class="modal-body">
                    <div class="from-group row">
                        <div class="col mb-2">
                            <input type="text" id="scanserial" class="form-control form-control-sm text-center" placeholder="Scan Serial / Barcode Scaner" title="Scan Serial">
                        </div>
                    </div>
                    <div class="row">
                        <div class="col order-md-1 mb-2">
                            <form class="card p-2">
                                <br />

                                @*<div class="table-responsive text-nowrap">

                                <table id="BatchSerialList" class="table display nowrap table-striped table-hover no-footer text-center" cellspacing="0" width="100%">*@


                                <div class="table-responsive">
                                    <table class="table table-hover text-nowrap" id="BatchSerialList" style="width:100%">

                                        <thead>
                                            <tr>
                                                <th class="d-none">Batch Id</th>
                                                <th class="d-none">Purchase Items Id</th>
                                                <th class="d-none">Product Id</th>
                                                <th>Product Serial</th>
                                                <th>SL No</th>
                                                <th>Action</th>
                                                <th class="">Is Delete</th>
                                                <th class="">Is Used</th>
                                                <th class="">IsTransaction</th>



                                            </tr>
                                        </thead>
                                        <tbody id="itemDetails">
                                        </tbody>
                                        @*<tfoot>
                                <tr>
                                    <td class="text-right" colspan="1">
                                        <h6>Total Qty :</h6>
                                    </td>
                                    <td> <strong id="TotalQtyBatch">  </strong> </td>
                                    <td></td>
                                    <td></td>

                                </tr>

                            </tfoot>*@
                                    </table>
                                </div>
                                <br />

                            </form>

                            <div class="row">

                                <div class="col ">
                                    <button type="button" onclick="AddSerialDataAuto()" class="btn btn-sm btn-primary mb-2 btn-block rounded-0">Auto</button>
                                </div>
                                <div class="col ">
                                    <button type="button" onclick="AddSerialData('')" class="btn btn-sm btn-success mb-2 btn-block rounded-0">Add</button>
                                </div>
                                <div class="col ">
                                    <button type="button" onclick="ShowAllPackingList()" class="btn btn-sm btn-info mb-2 btn-block rounded-0">Show All</button>
                                </div>
                                <div class="col ">
                                    <button type="button" class="btn btn-sm btn-danger mb-2 rounded-0 btn-simple btn-block" data-dismiss="modal">Close</button>
                                </div>

                            </div>


                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>




    @*<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.7.1/css/bootstrap-datepicker3.css" rel="stylesheet" />*@
    @section scripts {


        <script src="~/AdminEla/Assets/js/lib/barcodescaner/html5-qrcode.min.js"></script>

















        @*<script src="~/js/site.js" asp-append-version="true"></script>*@
<script type="text/javascript">








    $('#tblpayments').dataTable({
        "aoColumns": [
            { "sClass": "PurchasePaymentSubId", "visible": false },
            { "sClass": "PaymentTypeId", "visible": false },
            { "sClass": "TypeShortName", "visible": false },
            { "sClass": "AccountHeadId", "visible": false },
            { "sClass": "Name", "visible": true },
            { "sClass": "Amount", "visible": true },
            { "sClass": "PaymentCardNo", "visible": true },
            null
        ],
        "dom": 'T<"clear">lfrtip',
        "tableTools": {
            "sRowSelector": "td:not(:first-child)"
        },
        select: {
            style: 'os',
            selector: 'td:first-child'
        },
        //drawCallback: function () {
        //    var sum = $('#example').DataTable().column(2).data().sum();
        //    $('#TotalCollectionAmount').html(sum);
        //},
        //"order": [[1, "asc"]],
        "bLengthChange": false,
        "bFilter": false,
        "bSort": false,
        "bInfo": false,
        "paging": false
    })



    $('#tblpayments tbody').on('click', '.dlttrashpayments', function () {
        var table = $('#tblpayments').DataTable();

        table.row($(this).parents('tr')).remove().draw();
        var x = "1300.00";
        var y = $('#tblpayments').height();
        var z = parseFloat(x) + parseFloat(y);

        $("html, body").animate({ scrollTop: z }, 1300);


        calculateSum();

    });



    ///newly added for payment method
    function AddPayments() {

        $('#tblpayments').dataTable().fnAddData([
            "0",
            null,//$('#PaymentTypes').val(),
            '',//$('#PaymentTypes option:selected').text(),
            $('#AccountHeadRow').val(),
            $('#AccountHeadRow option:selected').text(),
            $('#PaymentAmount').val(),
            $('#PaymentCardNo').val(),
            '<a data-itemId="0" href="#" class="dlttrashpayments deleteItem"> <i class="fa fa-trash"></i></a >']);

        $('#PaymentAmount').val("0");
        $('#PaymentCardNo').val("=N/A=");


        calculateSum();

    }










        (function ($) {
            $.fn.inputFilter = function (inputFilter) {
                return this.on("input keydown keyup mousedown mouseup select contextmenu drop", function () {
                    if (inputFilter(this.value)) {
                        this.oldValue = this.value;
                        this.oldSelectionStart = this.selectionStart;
                        this.oldSelectionEnd = this.selectionEnd;
                    } else if (this.hasOwnProperty("oldValue")) {
                        this.value = this.oldValue;
                        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                    } else {
                        this.value = "";
                    }
                });
            };
        }(jQuery));


        $(document).ready(function () {



            var rowone
            $('#PurchaseItems tbody').on('click', 'td', function (e) {


                var table = $('#PurchaseItems').DataTable();
                rowone = $(this).parent();


                var data = table.row(rowone).data();
                //alert(data);
                data[12] = 'True';
                $(this).closest('tr').children('td.IsTransaction').text('True');

                calculateSum();
            });



            var row;
            var col;
            $('#PurchaseItems tbody').on('click', '.dlttrashsubsection', function (e) {

                var table = $('#PurchaseItems').DataTable();
                row = $(this).parent().parent();
                var data = table.row(row).data();
                data[11] = 'True';

                $(this).parent().parent().hide(); ///fahad for checking.
                toastr.error("Items Row Deleted");



                $(this).closest('tr').children('td.IsDelete').text('True');

                var x = "100.00";
                var y = $('#PurchaseItems').height();
                var z = parseFloat(x) + parseFloat(y);

                table.draw();

                $("html, body").animate({ scrollTop: z }, 500);
                $(".dataTables_scrollBody").scrollTop(9999);

                calculateSum();

            });



            var rowone
            $('#BatchSerialList tbody').on('click', 'td', function (e) {


                var table = $('#BatchSerialList').DataTable();
                rowone = $(this).parent();


                var data = table.row(rowone).data();
                //alert(data);
                data[8] = 'True';
                $(this).closest('tr').children('td.IsTransaction').text('True');

                calculateSum();
            });



            var row;
            var col;
            $('#BatchSerialList tbody').on('click', '.dlttrash', function (e) {

                var targetTablepl = $('#BatchSerialList').DataTable();
                row = $(this).parent().parent();
                var data = targetTablepl.row(row).data();
                data[6] = 'True';

                $(this).parent().parent().hide(); ///fahad for checking.
                toastr.error("Serial Row Deleted")



                $(this).closest('tr').children('td.IsDelete').text('True');

                var x = "100.00";
                var y = $('#BatchSerialList').height();
                var z = parseFloat(x) + parseFloat(y);

                targetTablepl.draw();

                $("html, body").animate({ scrollTop: z }, 500);
                $(".dataTables_scrollBody").scrollTop(9999);



                var xcount = targetTablepl.rows(':visible').count();
                //alert(xcount);
                var table = $('#PurchaseItems').DataTable();
                //var datacurrentvalue = table.row($('input[type=checkbox]:checked').parents('tr')).data();
                var rownovouchersub = table.row($('input[type=checkbox]:checked').parents('tr')).index();
                //alert(rownovouchersub);

                var cellprice  = $('#PurchaseItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();
                //console.log(cellprice);
                //cellprice.data(xcount);

                var cellqty = table.cell(rownovouchersub, 7);
                cellqty.data(xcount);
                var cellamount = table.cell(rownovouchersub, 8);
                cellamount.data(xcount * cellprice);


                calculateSum();

            });











            $("#ServiceCharge , #Shipping , #TotalVat , #Discount  ").inputFilter(function (value) {
                return /^-?\d*[.,]?\d{0,2}$/.test(value);
            });


            $(".price").inputFilter(function (value) {
                return /^-?\d*[.,]?\d{0,2}$/.test(value);
            });
            });


            function AddSerialData(scanstring) {


                //alert(scanstring);

                var check = $('#PurchaseItems').find('input[type=checkbox]:checked').length;
                //alert(check);

                if (check > 0) {
                    //alert(check);
                    //alert("Checkbox Selected");
                }
                else {
                    alert("At least One Row Should Be Selected");
                    e.preventDefault();
                }
                // alert(serialno);
                // alert('test');

                var targetTablepl = $("#BatchSerialList").DataTable();

                var rowCountpl = targetTablepl
                    .column(0)
                    .data()
                    .length;


                //$('#BatchSerialList').dataTable().fnAddData([
                //    0,
                //    PurchaseItemId,
                //    newDetailsId,
                //    0,
                //    rowCountpl + 1,
                //    '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash"></i></a >',
                //    false
                //]);
                var duplicatefound = 0;

                $('#BatchSerialList tbody tr').each(function () {
                    //alert('searching');
                    //alert(ui.item.ProductId);
                    //alert($(this).find('.BatchSerialNo').val());
                    //alert(ui.item.label);

                    //alert($(this).find('.BatchSerialNo').val());

                    //alert($.trim($(this).find('.BatchSerialNo').val()).length);

                    if ($.trim($(this).find('.BatchSerialNo').val()).length > 0 &&  $.trim($(this).find('.BatchSerialNo').val()) == scanstring) {
                        //alert('Duplicate Found !!');
                        toastr.error('Duplicate Found !! ' + scanstring);
                        duplicatefound = 1;


                        return true;
                    }

                });

                if (duplicatefound == 0) {
                    $('#BatchSerialList').dataTable().fnAddData([
                        0,
                        PurchaseItemId,
                        ProductId,
                        scanstring,
                        rowCountpl + 1,
                        '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash"></i></a >',
                        false,
                        false,
                        true
                    ]);


                    var xcount = targetTablepl.rows(':visible').count();
                    //alert(xcount);
                    var table = $('#PurchaseItems').DataTable();
                    //var datacurrentvalue = table.row($('input[type=checkbox]:checked').parents('tr')).data();
                    var rownovouchersub = table.row($('input[type=checkbox]:checked').parents('tr')).index();
                    //alert(rownovouchersub);

                    var cellprice = $('#PurchaseItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();
                    //console.log(cellprice);
                    //cellprice.data(xcount);

                    var cellqty = table.cell(rownovouchersub, 7);
                    cellqty.data(xcount);
                    var cellamount = table.cell(rownovouchersub, 8);
                    cellamount.data(xcount * cellprice);

                    calculateSum();
                }

            };

            $("#scanserial").keyup(function (e) {
                if (e.keyCode == 13) {
                    //alert('Captured Enter !');
                    //$('#scanserial').val();

                    AddSerialData($('#scanserial').val());
                    $('#scanserial').val('');
                    // Do whatever you need
                };
            });


            function AddSerialDataAuto() {


                var check = $('#PurchaseItems').find('input[type=checkbox]:checked').length;
                //alert(check);

                if (check > 0) {
                    //alert(check);
                    //alert("Checkbox Selected");
                }
                else {
                    alert("At least One Row Should Be Selected");
                    e.preventDefault();
                }
                // alert(serialno);
                // alert('test');

                var targetTablepl = $("#BatchSerialList").DataTable();

                var rowCountpl = targetTablepl
                    .column(0)
                    .data()
                    .length;


                //$('#BatchSerialList').dataTable().fnAddData([
                //    0,
                //    PurchaseItemId,
                //    newDetailsId,
                //    0,
                //    rowCountpl + 1,
                //    '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash"></i></a >',
                //    false
                //]);

                var from = $("#BatchFromNo").val();
                var to = $("#BatchToNo").val();
                var prefix = $("#slnoPrefix").val();


                if (prefix.length > 0 && from.length > 0 && to.length > 0) {
                    for (var i = from; i <= to; i++) {
                        $('#BatchSerialList').dataTable().fnAddData([
                            0,
                            PurchaseItemId,
                            ProductId,
                            prefix + i,
                            i,//rowCountpl + 1,
                            '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash"></i></a >',
                            false,
                            false,
                            true
                        ]);
                    }
                }
                else {
                    toastr.error("Please fill up Necessary Info.")
                };


                var xcount = targetTablepl.rows(':visible').count();
                //alert(xcount);
                var table = $('#PurchaseItems').DataTable();
                //var datacurrentvalue = table.row($('input[type=checkbox]:checked').parents('tr')).data();
                var rownovouchersub = table.row($('input[type=checkbox]:checked').parents('tr')).index();
                //alert(rownovouchersub);

                var cellprice  = $('#PurchaseItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();
                //console.log(cellprice);
                //cellprice.data(xcount);

                var cellqty = table.cell(rownovouchersub, 7);
                cellqty.data(xcount);
                var cellamount = table.cell(rownovouchersub, 8);
                cellamount.data(xcount * cellprice);

                calculateSum();


            }


            $('body').on('expanded.pushMenu collapsed.pushMenu', function () {
                setTimeout(function () {
                    $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
                }, 350);
            });


            function ShowAllPackingList() {
                var cbs = document.getElementsByClassName("clickchk");
                for (var i = 0; i < cbs.length; i++) {
                    cbs[i].checked = false;
                }

                $('#BatchSerialList tbody tr').each(function () {
                    $(this).show();
                });

            }


            var BatchSerialList = $('#BatchSerialList').DataTable({
                "aoColumns": [
                    { "sClass": "BatchId d-none", "visible": true },
                    { "sClass": "PurchaseItemid d-none", "visible": true },
                    { "sClass": "ProductId d-none", "visible": true },

                    {
                        "sClass": "BatchSerialNoRow ",
                        "visible": true
                    },

                    { "sClass": "SLNo", "visible": true },
                    { "sClass": "dltrashimage", "visible": true },
                    { "sClass": "IsDelete d-none", "visible": true },
                    { "sClass": "IsUsed d-none", "visible": true },
                    { "sClass": "IsTransaction d-none", "visible": true }



                ],
                columnDefs: [
                    {
                        "render": function (data, type, row) {
                           var IsUsed = row[7];
                           if (IsUsed == false) {
                                return '<input class="form-control form-control-sm BatchSerialNo  text-center" id="BatchSerialNo"  name="BatchSerialNo" type="text"  value = ' + data + '  >';
                           }
                           else {
                              return '<input class="form-control form-control-sm BatchSerialNo  text-center" id="BatchSerialNo"  name="BatchSerialNo" type="text"  value = ' + data + ' , readonly=readonly  >';
                           }

                        },
                        "targets": 3

                    }
                ],
                rowCallback: function (row) {
                    $(row).addClass('RowBatchSerialList');
                },
                scrollY: "240px",
                scrollX: true,
                //"scrollCollapse": true,
                'paging': false,
                'info': false,
                'ordering': false,
                'searching': false,
                language: { search: '', searchPlaceholder: "Search..." }
                //, sorting: false
            });



    function Saveproductinfo() {


        var Code = $("#ProductCode").val();
        var Name = $("#Name").val();
        var CostPrice = $("#CostPrice").val();
        var Price = $("#Price").val();
        var Description = $("#Description").val();

        var ColorName = $("#ColorName").text();
        var SizeName = $("#SizeName").text();
        var BrandName = $("#BrandName").val();
        var UnitId = $("#UnitId").val();
        var CategoryId = $("#CategoryId").val();




        var Product = {
            Code: Code,
            Name: Name,
            CostPrice: CostPrice,
            Price: Price,
            Description: Description,

            ColorName: ColorName,
            SizeName: SizeName,
            BrandName: BrandName,
            UnitId: UnitId,
            CategoryId: CategoryId

        }
        console.log(Product);
        //alert(`${Code} ${Name} ${CostPrice} ${Price}`);

        $.ajax({




            url: '@Url.Action("SaveProductModal", "Admin")',
            data: JSON.stringify(Product), //use id here
            //data: JSON.stringify(purchasesmain),
            type: 'POST',
            async: true,
            contentType: 'application/json;',
            dataType: 'json',
            success: function (result) {
                //alert(result);
                $("#Search").val($("#Name").val());
                $("#ProductCode").val("");
                $("#Name").val("");
                $("#CostPrice").val("");
                $("#Price").val("");
                $("#Description").val("");

                $("#SizeName").val("");
                $("#BrandName").val("");
                $("#ColorName").val("");
                $("#CategoryId").val(null);
                $("#UnitId").val(0);

                //productinfo_Info();
                toastr.success('Product Added Successfully.');
                $("#btnCloseProductModal").trigger("click");



                autocompletefunction();
                $("#Search").focus();
                var e = jQuery.Event("keydown");
                e.keyCode = 50;
                $("#search").trigger(e);

            },
            error: function () {
                toastr.error('Unable to Save');
                //alert('Unable to Save');
            }
        });
    }


    $('#supplierinfo').hide();

        function supplierinfohide() {

            if ($('#Supplier option:selected').text().toUpperCase() == "Cash Supplier".toUpperCase() || $('#Supplier option:selected').text().toUpperCase() == "Walk In Supplier".toUpperCase()) {

                $('#supplierinfo').show();


            }
            else {
                $('#supplierinfo').hide();
                $('#SupplierName').val('');
                $('#PhoneNo').val('');
                $('#SupplierAddress').val('');
            }
        }


        $('#Supplier').select2({})
        .on("select2:select", function (e) {


            supplierinfohide();

        });

        function blankme(id) {

            var val = document.getElementById(id).value;
            var error_id = "error_" + id;

            if (val == "" || val === 0.00) {

                document.getElementById(error_id).style.display = "block";
            }
            else {
                document.getElementById(error_id).style.display = "none";
            }
        }
        function submitValidation() {
            var supplier = document.getElementById("Supplier").value;
            //var accounthead = document.getElementById("AccountHead").value;

            var code = document.getElementById("Code").value;
            var date = document.getElementById("Date").value;
            //var paymentmethod = document.getElementById("Payment").value;
            //var pStaus = document.getElementById("Status").value;
            var total = parseFloat($("#SubTotal").text());
            var gtotal = parseFloat($("#GrandTotal").val());

            if (supplier == "" || code == "" || date == "" || (total == "" || total == 0.00 || isNaN(total)) || (gtotal == "" || gtotal == 0.00 || isNaN(gtotal))) {

                //if (pStaus == "") {
                //    document.getElementById("error_Status").style.display = "block";
                //}
                //else {
                //    document.getElementById("error_Status").style.display = "none";
                //}

                if (supplier == "") {
                    document.getElementById("error_Supplier").style.display = "block";
                }
                else {
                    document.getElementById("error_Supplier").style.display = "none";
                }


                //if (accounthead == "") {
                //    document.getElementById("error_AccountHead").style.display = "block";
                //}
                //else {
                //    document.getElementById("error_AccountHead").style.display = "none";
                //}


                if (code == "") {
                    document.getElementById("error_Code").style.display = "block";
                }
                else {
                    document.getElementById("error_Code").style.display = "none";
                }
                if (date == "") {
                    document.getElementById("error_Date").style.display = "block";
                }
                else {
                    document.getElementById("error_Date").style.display = "none";
                }
                //if (paymentmethod == "") {
                //    document.getElementById("error_Payment").style.display = "block";
                //}
                //else {
                //    document.getElementById("error_Payment").style.display = "none";
                //}
                if (total == "" || total === 0.00 || isNaN(total)) {
                    document.getElementById("error_SubTotal").style.display = "block";
                }
                else {
                    document.getElementById("error_SubTotal").style.display = "none";
                }
                if (gtotal == "" || gtotal === 0.00 || isNaN(gtotal)) {
                    document.getElementById("error_GrandTotal").style.display = "block";
                }
                else {
                    document.getElementById("error_GrandTotal").style.display = "none";
                }

                return false;
            }
            else {
                return true;
            }


        }



        $(document).ready(function () {
           // console.log("ready!");

             $('#masterPurchase').ready(function () {

            var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
                "Aug", "Sep", "Oct", "Nov", "Dec"];
            var value = new Date();
            var ret = value.getDate() + "-" + months[value.getMonth()] + "-" + value.getFullYear(); //value.getMonth() + 1 + "/" + value.getDate() + "/" + value.getFullYear();
            $("#Date").val(ret);


            function getPurchase(id) {
                return $.ajax({
                    type: 'GET',
                    datatype: "Json",
                    url: "../Purchase/GetPurchase",
                    data: "purchaseId=" + id
                });
            }

            var purchaseId = $("#BtnSave").attr("data-purchase-Id");

            if (purchaseId > 0) {
                $.when(getPurchase(purchaseId)).then(function (res) {
                    console.log(res);
                    var detArr = [];
                    $("#Code").val(res.PurchaseCode);

                    var value = new Date(res.PurchaseDate);

                    var ret = value.getDate() + "-" + months[value.getMonth()] + "-" + value.getFullYear(); //value.getMonth() + 1 + "/" + value.getDate() + "/" + value.getFullYear();


                    $("#Date").val(ret);

                    $("#SupplierName").val(res.SupplierName);
                    $("#PhoneNo").val(res.PhoneNo);
                    $("#SupplierAddress").val(res.PrimaryAddress);


                    $("#Notes").val(res.Notes);
                    //$("#Payment").val(res.PaymentMethod);
                    //$("#Status").val(res.Status);
                    $("#SubTotal").text(res.Total);

                    $("#TotalVat").val(res.TotalVat);
                    $("#ServiceCharge").val(res.ServiceCharge);
                    $("#Shipping").val(res.Shipping);
                    $("#ChequeNo").val(res.ChequeNo);


                    $("#Discount").val(res.Discount);
                    $("#GrandTotal").val(res.GrandTotal);


                    //if ($("#Status").val() == "Paid") {
                    //    //alert($("#Status").val());
                    //    $("#GrandTotal").val(res.GrandTotal);
                    //    //$("#DueAmt").val(0);
                    //    //alert(paidamt);
                    //}
                    //else if ($("#Status").val() == "Advance") {
                    //    $("#PaidAmt").val(res.PaidAmt);
                    //    //$("#DueAmt").val(res.DueAmt);

                    //}
                    //else {
                    //    //$("#DueAmt").val(res.DueAmt);
                    //    //alert('not found');
                    //}
                    //BatchSerialList.clear().draw();


                    $.each(res.Items, function (i, v) {

                        //var rowid = generateRandom();

                        //console.log(v.Quantity);
                        $('#PurchaseItems').dataTable().fnAddData([v.Id, v.ProductId, v.WarehouseId, v.Product.Name + ' ' + v.Product.BrandName + ' ' + v.Product.ModelName + ' ' + v.Product.SizeName + ' ' + v.Product.Description + ' ' + v.Product.Code, v.Description, v.vWarehouse.WhShortName, v.Price, v.Quantity, v.Amount, '<a data-itemId="0" href="#" class="dlttrashsubsection deleteItem"> <i class="fa fa-trash"></i></a>',null , false,false]);

                        ///console.log();
                        //console.log(v.PurchaseBatchItems);

                        $.each(v.PurchaseBatchItems, function (ii, vv) {

                            //var rowid = generateRandom();
                            //alert(vv.ProductId);

                            var deletestring = '<a data-itemId="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash"></i></a >';
                            if (vv.IsUsed == true) { deletestring = '<h5 style="color:Red; font-weight:bold">Sold</h5>'}

                            $('#BatchSerialList').dataTable().fnAddData([
                                vv.Id,
                                vv.PurchaseItemId,
                                vv.ProductId,
                                vv.BatchSerialNo,
                                vv.SLNo,//rowCountpl + 1,
                                deletestring,
                                false,
                                vv.IsUsed,
                                false
                            ]);

                        });
                        //BatchSerialList.draw();


                        var rowid = finalrowid;

                        //$("#N" + rowid).val(v.Name);
                        //$("#D" + rowid).val(v.Description);
                        //$("#P" + rowid).val(v.Price);


                        $("#N" + rowid).autocomplete({
                            source: function (request, response) {
                                $.ajax({
                                    url: '../admin/ProductSearch/',
                                    dataType: "json",
                                    data: { query: $("#N" + rowid).val() },
                                    success: function (data) {
                                        //console.log(data);
                                        response($.map(data, function (item) {
                                            //return { ProductId: item.Id, Description: item.Description, label: item.Name, Price: item.CostPrice };
                                            return { ProductId: item.Id, Description: item.Description, label: item.Category.Name + ' ' + item.Name + ' ' + item.BrandName + ' ' + item.ModelName + ' ' + item.SizeName + ' ' + item.Description + ' ' + item.Code, Price: item.CostPrice };
                                        }));
                                    },
                                    error: function (xhr, status, error) {
                                        alert("Error");
                                    },
                                });
                            },
                            minLength: 3,
                            select: function (event, uirow) {
                                $("#PI" + rowid).html(uirow.item.ProductId);
                                //$("#WHI" + rowid).html(uirow.item.ProductId);

                                $("#P" + rowid).val(uirow.item.Price);
                                $("#D" + rowid).val(uirow.item.Description);
                                var quantity = $("#Q" + rowid).val();
                                $("#A" + rowid).html(uirow.item.Price * quantity);
                                calculateSum();
                            }

                        });


                    });

                    $("#Supplier").val(res.SupplierId).change();
                    $("#Warehouse").val(res.WarehouseIdMain).change();


                    
                    //$("#AccountHead").val(res.AccountPayTypeId).change();

                    supplierinfohide();

                    calculateSum();

                    //$("#orderMasterId").val(res.result.MasterId);

                }).fail(function (err) {
                    console.log(err);
                });
            }
            else {
                var idGen = new Generator();
                $('#Code').val("MR-"+idGen.getId());


                $('#Discount').val(0);
                $('#Shipping').val(0);
                $('#TotalVat').val(0);
                $('#ServiceCharge').val(0);
                //$('#PaidAmt').val(0);




            }



                if (purchaseId == 0) {


                    $(document).on('click', 'a.deleteItem', function (e) {
                        e.preventDefault();
                        var $self = $(this);
                        $(this).parents('tr').css("background-color", "#1f306f").fadeOut(800, function () {
                            $(this).remove();
                            calculateSum();
                        });
                    });



                }





             });

            $.ajax({
                type: "GET",
                url: "../Purchase/GetSuppliers",
                datatype: "Json",
                success: function (data) {

                    $.each(data, function (index, value) {
                        $('#Supplier').append('<option value="' + value.Id + '">' + value.SupplierName + '</option>');
                    });
                }
            });

            $.ajax({
                type: "GET",
                url: "../Sales/GetAccountHead",
                datatype: "Json",
                success: function (data) {
                    //console.log(data);

                    $.each(data, function (index, value) {
                        $('#AccountHead').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                    });



                    $.each(data, function (index, value) {
                        $('#AccountHeadRow').append('<option value="' + value.Value + '">' + value.Text + '</option>');
                    });
                    //$('#AccountHeadRow').append('<option value=null>=N/A=</option>');

                }
            });


            //$.ajax({
            //    type: "GET",
            //    url: "../Purchase/GetAccountHead",
            //    datatype: "Json",
            //    success: function (data) {
            //        //console.log(data);

            //        $.each(data, function (index, value) {
            //            $('#AccountHead').append('<option value="' + value.Value + '">' + value.Text + '</option>');
            //        });
            //    }
            //});


        });

        function Generator() { };
        Generator.prototype.rand = Math.floor(Math.random() * 26) + Date.now();
        Generator.prototype.getId = function () {
            return this.rand++;
        };


        $('.mydatepicker').datepicker({
            dateFormat: 'dd-M-yy',
            todayHighlight: true,
            autoclose: true
        });

        $('#PurchaseItems').on('change', ".quantity , .price", update);

        function update() {

            var qty = parseFloat($(this).parents('tr').find(".quantity").val());
            var price = parseFloat($(this).parents('tr').find(".price").val());
            var amount = qty * price;
            $(this).parents('tr').find(".amount").text(amount);
            calculateSum();
        }


        //$('#PurchaseItems').on('change', ".prdname , .description", AddRow);

        //function AddRow() {

        //    var x = PurchaseItems.row(':last-child').data();
        //    console.log(x);
        //    //var qty = parseFloat($(this).parents('tr').find(".quantity").val());
        //    //var price = parseFloat($(this).parents('tr').find(".price").val());
        //    //var amount = qty * price;
        //    //$(this).parents('tr').find(".amount").text(amount);
        //    //calculateSum();
        //}




        function generateRandom() {
            const randomNum = 100000 + Math.random() * 100000;
            return Math.round(randomNum / 10) * 10;
        }
        var finalrowid = 'N1234';



        var PurchaseItems = $('#PurchaseItems').DataTable({
            dom: '<"dom_wrapper fh-fixedHeader"fl>tip',
            'aoColumns': [
                { 'sClass': 'id d-none', 'visible': true },
                { 'sClass': 'productid d-none', 'visible': true },
                { 'sClass': 'warehouseid d-none', 'visible': true },

                { 'sClass': 'prdname_row', 'visible': true },
                { 'sClass': 'description_row', 'visible': true },
                { 'sClass': 'warehouse_row text-center', 'visible': true },

                { 'sClass': 'price_row', 'visible': true },
                { 'sClass': 'quantity_row', 'visible': true },
                { 'sClass': 'amount text-right', 'visible': true },
                null,
                {
                    "sClass": "checkbox",
                    "visible": true,
                    "render": function () {
                        return '<input type="checkbox" class="clickchk"  onchange ="cbChange(this)"  data-toggle="modal" data-target="#checkModal" >';
                    }
                },
                { "sClass": "IsDelete d-none", "visible": true },
                { "sClass": "IsTransaction d-none", "visible": true }
            ],
            columnDefs: [
                {
                    'render': function (data, type, row) {
                        return '<input class="prdname form-control" name="prdname" type="text" value="' + data + '" >';

                    },
                    'targets': 3
                },
                {
                    "render": function (data, type, row) {

                        return '<input class="form-control description" name="description" type="text" data-val="true"  value="' + data + '" >';
                    },
                    "targets": 4
                },
                {
                    'render': function (data, type, row) {
                        return '<input class="form-control price text-center" name="price" type="number" data-val="true"  value="' + data + '"  autocomplete = "off" >';
                    },
                    'targets': 6
                },
                {
                    "render": function (data, type, row) {

                        return '<input class="form-control quantity text-center" name="quantity" type="number"   value="' + data + '"  autocomplete = "off"  >';
                    },
                    "targets": 7
                }
            ],
            "fnCreatedRow": function (nRow, aData, iDataIndex) {
                var rowid = generateRandom();
                //alert(aData);
                $(nRow).attr('id', 'rowid' + rowid);
                $('td:eq(1)', nRow).attr('id', 'PI' + rowid);
                $('td:eq(2)', nRow).attr('id', 'WHI' + rowid);
                $('td:eq(3)', nRow).find("input[name='prdname']").attr('id', 'N' + rowid);
                $('td:eq(4)', nRow).find("input[name='description']").attr('id', 'D' + rowid);
                $('td:eq(5)', nRow).find("input[name='warehouse']").attr('id', 'W' + rowid);
                $('td:eq(6)', nRow).find("input[name='price']").attr('id', 'P' + rowid);
                $('td:eq(7)', nRow).find("input[name='quantity']").attr('id', 'Q' + rowid);
                $('td:eq(8)', nRow).attr('id', 'A' + rowid);

                finalrowid = rowid;


            },
            'paging': false,
            'info': false,
            'ordering': false,
            'searching': false,

            language: { search: '', searchPlaceholder: "Search..." }
        });


    autocompletefunction();
    function autocompletefunction() {
            $("#Search").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '../admin/ProductSearch/',
                        dataType: "json",
                        data: { query: $("#Search").val() },
                        success: function (data) {
                            //console.log(data);
                            response($.map(data, function (item) {
                                //return { ProductId: item.Id, Description: item.Description, label: item.Name, Price: item.CostPrice, Code: item.Code };
                                return { ProductId: item.Id, Description: item.Description, label: item.Category.Name + ' ' + item.Name + ' ' + item.BrandName + ' ' + item.ModelName + ' ' + item.SizeName + ' ' + item.Description + ' ' + item.Code, Price: item.CostPrice };
                            }));
                        },
                        error: function (xhr, status, error) {
                            alert("Error");
                        },
                    });
                },
                autoFocus: true,
                minLength: 3,
                select: function (event, ui) {


                //var rowid = generateRandom();
                //$('#PurchaseItems').dataTable().fnAddData(['0', ui.item.ProductId, ui.item.label, ui.item.description, ui.item.Price, '1', ui.item.Price, '<a data-itemId="0" href="#" class="dlttrashsubsection deleteItem"> <i class="fa fa-trash"></i></a>']);

                //rowid = finalrowid;
                //$("#N" + rowid).autocomplete({
                //    source: function (request, response) {
                //        $.ajax({
                //            url: '../admin/ProductSearch/',
                //            dataType: "json",
                //            data: { query: $("#N" + rowid).val() },
                //            //data: { query: prdnametest },

                //            success: function (data) {
                //                console.log(data);
                //                response($.map(data, function (item) {
                //                    return { ProductId: item.Id, description: item.Description, label: item.Name, Price: item.CostPrice, Code: item.Code };
                //                }));
                //            },
                //            error: function (xhr, status, error) {
                //                alert("Error");
                //            },
                //        });
                //    },
                //    minLength: 3,
                //    select: function (event, uirow) {


                //        //alert("#P" + rowid);
                //        $("#PI" + rowid).html(uirow.item.ProductId);
                //        $("#D" + rowid).val(uirow.item.Code);

                //        $("#P" + rowid).val(uirow.item.Price);

                //        var quantity = $("#Q" + rowid).val();

                //        $("#A" + rowid).html(uirow.item.Price * quantity);


                //    }
                //});


                var duplicatefound = 0;

                $('#PurchaseItems tbody tr').each(function () {
                    //alert('searching');
                    //alert(ui.item.ProductId);
                    //alert($(this).find('.BatchSerialNo').val());
                    //alert(ui.item.label);

                    //alert($(this).find('.BatchSerialNo').val());
                    if ($.trim($(this).find('.ProductId').text()) == ui.item.ProductId) {
                        //alert('Duplicate Found !!');
                        toastr.error('Duplicate Found !! ' + ui.item.label);
                        duplicatefound = 1;


                        return true;
                    }

                });


                if (duplicatefound == 0) {

                    newrowwithui(ui);
                }
                calculateSum();
                $('#Search').val("");


                return false;
            }
        });
    }


        var PurchaseItemId;
        var ProductId;

        var newDetailsId;
        var newOrderNo;
        var newUnitPrice;


        function cbChange(obj) {
                //calculateQtyBatch();

            var cbs = document.getElementsByClassName("clickchk");
            for (var i = 0; i < cbs.length; i++) {
                cbs[i].checked = false;
            }
            obj.checked = true;
            //alert('hit');
            //console.log(obj);


            var table = $('#PurchaseItems').DataTable();
            //var tableserial = $('#tblserial').DataTable();
            var data = null;

            if (obj.checked == true) {
                //alert('working');
                //table = $('#tbl').DataTable();
                //table.draw();

                data = table.row($('input[type=checkbox]:checked').parents('tr')).data();

                PurchaseItemId = data[0];
                ProductId = data[1];


                //alert('clicked');
                //console.log(data);

                //alert(data[3]);
                //var termsid = data[0];
                ////////serialno = data[4];

                ////////PurchaseItemId = data[2];
                ////////newDetailsId = data[1];
                ////////newOrderNo = data[4];
                ////////newUnitPrice = data[9];

                //alert(serialno);


                $('#BatchSerialList tbody tr').show();
                //alert('working');
                $('#BatchSerialList tbody tr').each(function () {
                    //$(this).hide();

                    //alert($.trim($(this).find('.IsDelete').text()));


                    if ($.trim($(this).find('.ProductId').text()) == ProductId && $.trim($(this).find('.IsDelete').text()) == 'false') { // if V is selected, hide
                        //  alert('found');
                        $(this).show();
                    }
                    else {
                        $(this).hide();
                    }
                });


                var targetTablepl = $('#BatchSerialList').DataTable();
                var xcount = targetTablepl.rows(':visible').count();
                //alert(xcount);
                var table = $('#PurchaseItems').DataTable();
                //var datacurrentvalue = table.row($('input[type=checkbox]:checked').parents('tr')).data();
                //console.log(datacurrentvalue);

                //var datacurrentvalue = $('#PurchaseItems').find('input[type=checkbox]:checked').data();

                //$.each($("#PurchaseItems tbody tr"), function () {

                //    alert($(this).find('.price').val())

                //});

                //var cellprice  = $('#PurchaseItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();


                //$('#PurchaseItems tbody tr').filter(':has(:checkbox:checked)').each(function () {
                //    // this = td element
                //    alert($(this).find('.price').val())
                //});

                //console.log(datacurrentvalue);
                var rownovouchersub = table.row($('input[type=checkbox]:checked').parents('tr')).index();

                //alert(rownovouchersub);

                var cellprice  = $('#PurchaseItems tbody tr').filter(':has(:checkbox:checked)').find('.price').val();
                //console.log(cellprice.data());
                //cellprice.data(xcount);

                var cellqty = table.cell(rownovouchersub, 7);
                cellqty.data(xcount);
                var cellamount = table.cell(rownovouchersub, 8);
                cellamount.data(xcount * cellprice);

                calculateSum();


            }
            else {
                // alert('You Un-Checked it');
            }

        }

        function newblankrow() {


            var rowid = generateRandom();
            $('#PurchaseItems').dataTable().fnAddData(['0', 0, "", '',"", 0, '0', 0, '<a data-itemId="0" href="#" class="dlttrashsubsection deleteItem"> <i class="fa fa-trash"></i></a>',null,false,true]);

            rowid = finalrowid;
            $("#N" + rowid).autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '../admin/ProductSearch/',
                        dataType: "json",
                        data: { query: $("#N" + rowid).val() },
                        //data: { query: prdnametest },

                        success: function (data) {
                            //console.log(data);
                            response($.map(data, function (item) {
                                //return { ProductId: item.Id, Description: item.Description, label: item.Name, Price: item.CostPrice, Code: item.Code };
                                return { ProductId: item.Id, Description: item.Description, label: item.Category.Name + ' ' + item.Name + ' ' + item.BrandName + ' ' + item.ModelName + ' ' + item.SizeName + ' ' + item.Description + ' ' + item.Code, Price: item.CostPrice };
                            }));
                        },
                        error: function (xhr, status, error) {
                            alert("Error");
                        },
                    });
                },
                minLength: 3,
                select: function (event, uirow) {


                    //alert("#P" + rowid);
                    $("#PI" + rowid).html(uirow.item.ProductId);
                    $("#D" + rowid).val(uirow.item.Description);

                    $("#P" + rowid).val(uirow.item.Price);

                    var quantity = $("#Q" + rowid).val();

                    $("#A" + rowid).html(uirow.item.Price * quantity);


                    var myTab = document.getElementById('PurchaseItems');


                    // GET THE CELLS COLLECTION OF THE CURRENT ROW.
                    //var objCells = myTab.rows.item(2).cells;
                    //console.log(objCells[1].attr('id'));
                    //alert($().val());

                    //$('#PurchaseItems').data.reload();


                    //var table123 = $('#PurchaseItems').DataTable();

                    //let lastRow = table123.rows[table123.rows.length - 1];
                    //console.log(lastRow);

                    //var x = table123.row(':last-child').data();
                    //var z = x[1];
                    //console.log(x);

                    //var z = $('#PurchaseItems tbody tr').length;
                    ////alert(z);
                    //var abc = $('#PurchaseItems').dataTable().fnGetData()
                    //console.log(abc);
                    ////var aData = table123.row(z).data()[5];
                    ////alert(aData[z][1]);// will show first column data

                    //if (z > 0) {
                    //    newblankrow();
                    //}
                }
            });


        }

        function newrowwithui(ui) {

            var rowid = generateRandom();
            $('#PurchaseItems').dataTable().fnAddData(['0', ui.item.ProductId, $("#Warehouse").val(), ui.item.label, ui.item.Description, $('#Warehouse option:selected').text() , ui.item.Price, '1', ui.item.Price, '<a data-itemId="0" href="#" class="dlttrashsubsection deleteItem"> <i class="fa fa-trash"></i></a>',null,false,true]);

            rowid = finalrowid;
            $("#N" + rowid).autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '../admin/ProductSearch/',
                        dataType: "json",
                        data: { query: $("#N" + rowid).val() },
                        //data: { query: prdnametest },

                        success: function (data) {
                            //console.log(data);
                            response($.map(data, function (item) {
                                //return { ProductId: item.Id, Description: item.Description, label: item.Name, Price: item.CostPrice, Code: item.Code };
                                return { ProductId: item.Id, Description: item.Description, label: item.Category.Name + ' ' + item.Name + ' ' + item.BrandName + ' ' + item.ModelName + ' ' + item.SizeName + ' ' + item.Description + ' ' + item.Code, Price: item.CostPrice };
                            }));
                        },
                        error: function (xhr, status, error) {
                            alert("Error");
                        },
                    });
                },
                minLength: 3,
                autoFocus: true,
                select: function (event, uirow) {

                    //alert("#P" + rowid);
                    $("#PI" + rowid).html(uirow.item.ProductId);
                    $("#D" + rowid).val(uirow.item.Description);
                    $("#P" + rowid).val(uirow.item.Price);
                    var quantity = $("#Q" + rowid).val();
                    $("#A" + rowid).html(uirow.item.Price * quantity);
                    //newblankrow();
                }
            });





            //return false;
        }





        function calculateSum() {
            var sum = 0;
            var sumQty = 0;

            // iterate through each td based on class and add the values

            //$("tr.PurchaseItems:visible").each(function () {
            $("#PurchaseItems > tbody  > tr .amount:visible").each(function () {

                //var value = parseInt($(this).find('.amount').val());// $('.amount', this).text().replace(/[\$,]/g, '');//$(this).text();
                var value = $(this).text();

                //alert(value)
                // add only if the value is number
                if (!isNaN(value) && value.length !== 0) {
                    sum += parseFloat(value);
                }
            });

            if (sum == 0.0) {
                $('#Discount').text("0");
                $('#GrandTotal').text("0");
                $('#TotalVat').text("0");
                $('#ServiceCharge').text("0");
                $('#Shipping').text("0");


            }



            $.each($("#BatchSerialList tbody tr"), function () {

                var Quantity = parseInt($(this).find('.SLNo').val());
                if (!isNaN(Quantity) && Quantity.length !== 0) {
                    sumQty ++;
                }
            });




            $.each($("#PurchaseItems tbody tr:visible"), function () {

                var Quantity = parseInt($(this).find('.quantity').val());
                if (!isNaN(Quantity) && Quantity.length !== 0) {
                    sumQty += parseFloat(Quantity);
                }
            });


            //console.log(sum);
            $('#SubTotal').text(sum.toFixed(2));
            $('#GrandTotal').val(sum.toFixed(2));

            $('#TotalQty').text(sumQty.toFixed(2));

            var discount = parseFloat($('#Discount').val()).toFixed(2);
            if (isNaN(discount)) return;
            var subtotal = parseFloat(sum).toFixed(2);

            var isTaxExcluded = '@HttpContextAccessor.HttpContext.Session.GetInt32("isTaxExcluded").ToString()';
            var TaxPer = '@HttpContextAccessor.HttpContext.Session.GetString("TaxPer").ToString()';
            var TotalVat = 0.00;

            if (TaxPer > 0) {
                //alert(isTaxExcluded);
                //alert(subtotal);
                //alert(TaxPer);

                $('#TotalVat').attr('readonly', true);

                if (isTaxExcluded == 1) {

                    var taxamount = (subtotal * (parseFloat(TaxPer) * 100)) / 100;

                    $('#TotalVat').val(taxamount.toFixed(2));
                    TotalVat = taxamount.toFixed(2);
                }
                else {


                    var taxmount = subtotal - (subtotal / (parseFloat(TaxPer) + 1));

                    $('#TotalVat').val(taxmount.toFixed(2));
                    //alert(taxmount);
                }


            }

            //var TotalVat = parseFloat($('#TotalVat').val()).toFixed(2);
            var ServiceCharge = parseFloat($('#ServiceCharge').val()).toFixed(2);
            var Shipping = parseFloat($('#Shipping').val()).toFixed(2);

            //console.log(TotalVat);
            //console.log(ServiceCharge);
            //console.log(Shipping);
            //console.log(subtotal);
            //console.log(Shipping);


            var grandtotal = parseFloat(parseFloat(TotalVat) + parseFloat(ServiceCharge) + parseFloat(Shipping) + parseFloat(subtotal) - parseFloat(discount)).toFixed(2);
            $('#GrandTotal').val(grandtotal);
            console.log(grandtotal);


            var sumpayment = 0.00;
            $("#tblpayments > tbody  > tr .Amount").each(function () {

                var value = $(this).text();
                // add only if the value is number
                if (!isNaN(value) && value.length !== 0) {
                    sumpayment += parseFloat(value);
                }
            });



            //alert(sumpayment);

            $('#TotalCollectionAmount').text(sumpayment.toFixed(2));
            $('#PaymentAmount').val(grandtotal - sumpayment);



            //var totalcommissionamount = 0.00;
            //$("#PurchaseItems > tbody  > tr .usercommissionamount").each(function () {

            //    var value = $(this).text();
            //    // add only if the value is number
            //    if (!isNaN(value) && value.length !== 0) {
            //        totalcommissionamount += parseFloat(value);
            //    }
            //});

        };

        //function DiscountAmount() {
        //    //blankme("Discount");
        //    //blankme("GrandTotal");
        //    var b = parseFloat($('#Discount').val()).toFixed(2);
        //    if (isNaN(b)) return;
        //    var a = parseFloat($('#SubTotal').text()).toFixed(2);
        //    var c = parseFloat(a - b).toFixed(2);
        //    $('#GrandTotal').val(c);
        //}

        function saveOrder(data) {
            //alert('Fahad found purchases');
            //console.log(data);
            return $.ajax({
                contentType: 'application/json; charset=utf-8',
                //contentType: "application/json",
                dataType: 'json',
                type: 'POST',
                url: "../Purchase/AddPurchase",
                data: data
            });
        }

        $("#BtnSave").click(function (e) {
            e.preventDefault();

            if (submitValidation()) {

                var discount;
                if (parseFloat($('#Discount').val()).toFixed(2) == "NaN") {
                    discount = 0;
                }
                else {
                    discount = $('#Discount').val();
                }

            var UserId = '@HttpContextAccessor.HttpContext.Session.GetInt32("UserId").ToString()';
            var ComId = '@HttpContextAccessor.HttpContext.Session.GetInt32("ComId").ToString()';

                var orderArr = [];
                orderArr.length = 0;
                //alert('save start');
                $.each($("#PurchaseItems tbody tr"), function () {

                    //alert($(this).find('td:eq(3)').html());
                    //alert($(this).find('td:eq(3)').text());
                    var firstpurchaseitemid = $(this).find('td:eq(0)').html();
                    var firstproductid = $(this).find('td:eq(1)').html();


                    var orderbatchArr = [];
                    orderbatchArr.length = 0;

                    $.each($("#BatchSerialList tbody tr"), function () {
                        if ($.trim($(this).find('.BatchSerialNo').val()).length > 0) {
                            //alert($(this).find('td:eq(2)').html());
                            var secoundproductid = $(this).find('td:eq(2)').html();
                            //var IsDeletebatch = $(this).find('td:eq(6)').html();
                            //alert(IsDeletebatch);

                            if (firstproductid == secoundproductid) { // && IsDeletebatch == 'false'
                                //alert($(this).find('td:eq(0)').html());
                                // alert($(this).find('td:eq(6)').html());


                                if ($(this).find('td:eq(0)').html() == 0 && $(this).find('td:eq(6)').html() == 'false') {
                                    //alert('pruchaseid = 0');
                                    orderbatchArr.push({
                                        Id: $(this).find('td:eq(0)').html(),
                                        PurchaseItemId: firstpurchaseitemid,//$(this).find('td:eq(1)').html(),
                                        ProductId: $(this).find('td:eq(2)').html(),
                                        BatchSerialNo: $(this).find('.BatchSerialNo').val(),
                                        //SLNo: $(this).find('.SLNo').val()
                                        SLNo: $(this).find('td:eq(4)').html(), //$('#Warehouse option:selected').text()
                                        IsDelete: $(this).find('td:eq(6)').html(),
                                        IsUsed: $(this).find('td:eq(7)').html(),
                                        IsTransaction: $(this).find('td:eq(8)').html(),
                                        ComId: ComId
                                    });
                                }
                                else if ($(this).find('td:eq(0)').html() > 0) {
                                    //alert('pruchaseid > 0');
                                    orderbatchArr.push({
                                        Id: $(this).find('td:eq(0)').html(),
                                        PurchaseItemId: firstpurchaseitemid,//$(this).find('td:eq(1)').html(),
                                        ProductId: $(this).find('td:eq(2)').html(),
                                        BatchSerialNo: $(this).find('.BatchSerialNo').val(),
                                        //SLNo: $(this).find('.SLNo').val()
                                        SLNo: $(this).find('td:eq(4)').html(), //$('#Warehouse option:selected').text()
                                        IsDelete: $(this).find('td:eq(6)').html(),
                                        IsUsed: $(this).find('td:eq(7)').html(),
                                        IsTransaction: $(this).find('td:eq(8)').html(),
                                        ComId: ComId
                                    });


                                }
                                //else {
                                //    alert('pruchaseid =  else');
                                //}
                            }
                        }
                    });


                    //console.log(orderbatchArr);

                    orderArr.push({

                        Id: $(this).find('td:eq(0)').html(),
                        ProductId: $(this).find('td:eq(1)').html(),
                        PurchaseId : parseInt($("#BtnSave").attr("cf")),
                        WarehouseId: $(this).find('td:eq(2)').html(), //$('#Warehouse option:selected').text()
                        //Name: $(this).find('td:eq(2)').html(),
                        Name: $(this).find('.prdname').val(),
                        Description: $(this).find('.description').val(),
                        Price: $(this).find('.price').val(),

                        //Price: parseFloat($(this).find('td:eq(4)').html()),
                        Quantity: parseInt($(this).find('.quantity').val()),
                        Amount: parseFloat($(this).find('td:eq(8)').html()),
                        PurchaseBatchItems: orderbatchArr,
                        IsDelete: $(this).find('td:eq(11)').html(),
                        IsTransaction: $(this).find('td:eq(12)').html(),
                        ComId: ComId

                    });
                });


                //console.log(orderArr);

                //alert('wait 2');


                //alert($("#BtnSave").attr("data-purchase-Id"));

                //alert($("#AccountHead").val());


                var paidamt = 0;
                //var dueamt = parseFloat($('#GrandTotal').val()).toFixed(2);
                //if ($("#Status").val() == "Paid") {
                //    //alert($("#Status").val());
                //    paidamt = parseFloat($('#GrandTotal').val()).toFixed(2);
                //    dueamt = 0;
                //    //alert(paidamt);
                //}
                //else if ($("#Status").val() == "Advance") {
                //    paidamt = parseFloat($('#PaidAmt').val()).toFixed(2);
                //    dueamt = parseFloat($('#GrandTotal').val()).toFixed(2) - parseFloat($('#PaidAmt').val()).toFixed(2);
                //}
                //else {
                //    dueamt = parseFloat($('#GrandTotal').val()).toFixed(2);
                //    //alert('not found');
                //}


                //($("#Status").val() == "Paid") { parseFloat($('#GrandTotal').val()).toFixed(2);} else { 0;};




                var PurchasePaymentSub = { "Id": "", "PurchaseId": "", "PaymentTypeId": "", "AccountHeadId": "", "Amount": "", "PaymentCardNo": "", "ComId": "", "LuserId": "", "RowNo": "", };
                var paymentArr = [];
                paymentArr.length = 0;
                var i = 0
                var oTablePayment = $('#tblpayments').dataTable().fnGetData();
                for (var i = 0; i < oTablePayment.length; i++) {

                    PurchasePaymentSub.Id = 0;//oTablePayment[i][0] || 0;
                    PurchasePaymentSub.PaymentTypeId = oTablePayment[i][1];
                    PurchasePaymentSub.PurchaseId = parseInt($("#BtnSave").attr("data-purchase-Id"));

                    PurchasePaymentSub.AccountHeadId = oTablePayment[i][3];
                    //alert(AccountHeadId);
                    PurchasePaymentSub.Amount = oTablePayment[i][5];
                    PurchasePaymentSub.ComId = ComId;
                    PurchasePaymentSub.LuserId = UserId;
                    PurchasePaymentSub.RowNo = i;


                    PurchasePaymentSub.PaymentCardNo = oTablePayment[i][6];
                    //console.log(PurchasePaymentSub);

                    paymentArr.push(PurchasePaymentSub);
                    PurchasePaymentSub = { "Id": "0", "PurchaseId": "", "PaymentTypeId": "", "AccountHeadId": "", "Amount": "", "PaymentCardNo": "", "ComId": "", "LuserId": "", "RowNo": "" };

                }
                //console.log(paymentArr);

                //alert('wait');



                var data = JSON.stringify({
                    Id: parseInt($("#BtnSave").attr("data-purchase-Id")),
                    SupplierId: $("#Supplier").val(),
                    //AccountPayTypeId: $("#AccountHead").val(),

                    SupplierName: $("#SupplierName").val(),
                    PhoneNo: $("#PhoneNo").val(),
                    PrimaryAddress: $("#SupplierAddress").val(),

                    PurchaseCode: $("#Code").val(),
                    PurchaseDate: $("#Date").val(),
                    //PaymentMethod: $("#Payment").val(),
                    Total: parseFloat($("#SubTotal").text()),
                    Notes: $("#Notes").val(),
                    //Status: $("#Status").val(),
                    Discount: discount,

                    TotalVat: $("#TotalVat").val(),
                    ServiceCharge: $("#ServiceCharge").val(),
                    Shipping: $("#Shipping").val(),
                    //ChequeNo: $("#ChequeNo").val(),
                    //ChequeDate: $("#ChequeDate").val(),


                    GrandTotal: parseFloat($('#GrandTotal').val()).toFixed(2),
                    NetAmount: parseFloat($('#GrandTotal').val()).toFixed(2),
                    //PaidAmt: paidamt,
                    DisAmt: discount,
                    //DueAmt: dueamt,

                    Items: orderArr,
                    PurchasePayments: paymentArr
                });


                console.log(data);
                alert('wait');

                $.ajax({
                    contentType: 'application/json; charset=utf-8',
                    //contentType: "application/json",
                    dataType: 'json',
                    type: 'POST',
                    url: "../Purchase/AddPurchase",
                    data: data,
                        success: function (result) {
                            //console.log(result);
                            //alert('Wait');
                            if (result.Success == "1") {
                                toastr.success("Data Save Successfully");

                                window.setTimeout(function () {
                                    // Move to a new location or you can do something else
                                         window.location.href = '@Url.Action("Index", "Purchase")';
                                }, 1000);

                        }
                        else {
                            toastr.error(result.ex);
                        }
                        },
                        error: function (result) {

                            if (result.ex = "") {
                                toastr.error("Unable To Save The Data");
                            } else {
                                toastr.error(result.ex);

                            }
                        }
                      });

                //console.log(data);
                ////alert('Wait plz stop');
                //alert('Wait');

                //$.when(saveOrder(data)).then(function (response) {
                //    console.log(response);
                //    location.href = "../Purchase/index";
                //}).fail(function (err) {

                //});
            }
        });

        //$('#BtnUpdate').click(function (e) {
        //    e.preventDefault();

        //    if (submitValidation()) {

        //        var discount;
        //        if (parseFloat($('#Discount').val()).toFixed(2) == "NaN") {
        //            discount = 0;
        //        }
        //        else {
        //            discount = $('#Discount').val();
        //        }


        //        var orderArr = [];
        //        orderArr.length = 0;

        //        $.each($("#PurchaseItems tbody tr"), function () {
        //            orderArr.push({

        //                Id: 0,//$(this).find('td:eq(0)').html(),
        //                ProductId: $(this).find('td:eq(1)').html(),
        //                WarehouseId: $(this).find('td:eq(2)').html(),

        //                //Name: $(this).find('td:eq(2)').html(),
        //                Name: $(this).find('.name').val(),
        //                //WarehouseName: $(this).find('.warehouse_row').val(),

        //                Description: $(this).find('.description').val(),
        //                Price: $(this).find('.price').val(),

        //                //Price: parseFloat($(this).find('td:eq(4)').html()),
        //                Quantity: parseInt($(this).find('.quantity').val()),
        //                Amount: parseFloat($(this).find('td:eq(8)').html()),

        //                IsUsed: $(this).find('td:eq(7)').html(),
        //                IsTransaction: $(this).find('td:eq(8)').html()

        //                //Id: $(this).find('td:eq(0)').html(),
        //                //ProductId: $(this).find('td:eq(1)').html(),

        //                //Name: $(this).find('td:eq(2)').html(),
        //                ////Description: $(this).find('td:eq(3)').html(),
        //                //Description: $(this).find('.description').val(),

        //                //Price: parseFloat($(this).find('td:eq(4)').html()),
        //                //Quantity: parseInt($(this).find('.quantity').val()),
        //                //Amount: parseFloat($(this).find('td:eq(6)').html())
        //            });
        //        });


        //        var paidamt = 0;
        //        var dueamt = parseFloat($('#GrandTotal').val()).toFixed(2);
        //        if ($("#Status").val() == "Paid") {
        //            paidamt = parseFloat($('#GrandTotal').val()).toFixed(2);
        //            dueamt = 0;
        //            //alert(paidamt);
        //        }

        //        var data = {

        //            Id: parseInt($("#BtnSave").attr("data-purchase-Id")),
        //            //Id: parseInt($("#BtnUpdate").attr("data-purchase-Id")),
        //            SupplierId: parseInt($("#Supplier").val()),
        //            AccountPayTypeId: $("#AccountHead").val(),

        //            PurchaseCode: $("#Code").val(),
        //            PurchaseDate: $("#Date").val(),
        //            PaymentMethod: $("#Payment").val(),
        //            Total: parseFloat($("#SubTotal").text()),
        //            Notes: $("#Notes").val(),
        //            Status: $("#Status").val(),


        //            TotalVat: $("#TotalVat").val(),
        //            ServiceCharge: $("#ServiceCharge").val(),
        //            Shipping: $("#Shipping").val(),


        //            Discount: discount,//parseFloat($('#Discount').val()).toFixed(2),
        //            GrandTotal: parseFloat($('#GrandTotal').val()).toFixed(2),
        //            NetAmount: parseFloat($('#GrandTotal').val()).toFixed(2),
        //            PaidAmt: paidamt,
        //            DisAmt: discount,
        //            DueAmt: dueamt,



        //            Items: orderArr
        //        };

        //        //console.log(data);
        //        //$.when(updateOrder(data)).then(function (response) {
        //        $.when(saveOrder(data)).then(function (response) {
        //            console.log(response);
        //            location.href = "../Purchase/index";
        //        }).fail(function (err) {
        //            console.log(err);
        //        });
        //    }

        //});
</script>



        <script type="text/javascript">
            function docReady(fn) {
                // see if DOM is already available
                if (document.readyState === "complete"
                    || document.readyState === "interactive") {
                    // call on next available tick
                    setTimeout(fn, 1);
                } else {
                    document.addEventListener("DOMContentLoaded", fn);
                }
            }

            docReady(function () {
                var resultContainer = document.getElementById('qr-reader-results');
                var lastResult, countResults = 0;
                function onScanSuccess(decodedText, decodedResult) {
                    if (decodedText !== lastResult) {
                        ++countResults;
                        lastResult = decodedText;
                        // Handle on success condition with the decoded message.
                        beep();
                        //alert(decodedText);
                        AddSerialData(decodedText);

                        //var duplicatefound = 0;

                        ////$('#BatchSerialList').find('input').each(function () {
                        ////    // check if there is another one with the same value
                        ////    if ($('#BatchSerialList').find('input[value="' + $(this).val() + '"]').size() > 1) {
                        ////        // highlight this
                               
                        ////    } else {
                        ////        // otherwise remove
          
                        ////    }
                        ////});



                        //$('#BatchSerialList').find('input').each(function () {

                        //    alert($(this).find('.BatchSerialNo').val());


                        //    if ($(this).find('.BatchSerialNo').val() == decodedText) {
                        //        //alert('Duplicate Found !!');
                        //        toastr.error('Duplicate Found !! ' + decodedText);
                        //        duplicatefound = 1;
                        //        //alert('found');
                        //        return true;
                        //    }

                        //});
                        ////alert(duplicatefound);


                        //if (duplicatefound = 0) {
                        //    AddSerialData(decodedText);


                        //    //console.log(`Scan result ${decodedText}`, decodedResult);
                        //    //alert(decodedText);

                        //    //$("#slnoPrefix").val(decodedText);
                        //    //$("#slnoPrefix").focus();
                        //    //autocompletefunctionBarcodeScan();
                        //}
                    }
                }

                var html5QrcodeScanner = new Html5QrcodeScanner(
                    "qr-reader", { fps: 6, qrbox: 250 });
                html5QrcodeScanner.render(onScanSuccess);
            });





            //button.addEventListener("click", function () {
            //    beep();
            //});

            function beep() {
                (new Audio("data:audio/wav;base64,//uQRAAAAWMSLwUIYAAsYkXgoQwAEaYLWfkWgAI0wWs/ItAAAGDgYtAgAyN+QWaAAihwMWm4G8QQRDiMcCBcH3Cc+CDv/7xA4Tvh9Rz/y8QADBwMWgQAZG/ILNAARQ4GLTcDeIIIhxGOBAuD7hOfBB3/94gcJ3w+o5/5eIAIAAAVwWgQAVQ2ORaIQwEMAJiDg95G4nQL7mQVWI6GwRcfsZAcsKkJvxgxEjzFUgfHoSQ9Qq7KNwqHwuB13MA4a1q/DmBrHgPcmjiGoh//EwC5nGPEmS4RcfkVKOhJf+WOgoxJclFz3kgn//dBA+ya1GhurNn8zb//9NNutNuhz31f////9vt///z+IdAEAAAK4LQIAKobHItEIYCGAExBwe8jcToF9zIKrEdDYIuP2MgOWFSE34wYiR5iqQPj0JIeoVdlG4VD4XA67mAcNa1fhzA1jwHuTRxDUQ//iYBczjHiTJcIuPyKlHQkv/LHQUYkuSi57yQT//uggfZNajQ3Vmz+ Zt//+mm3Wm3Q576v////+32///5/EOgAAADVghQAAAAA//uQZAUAB1WI0PZugAAAAAoQwAAAEk3nRd2qAAAAACiDgAAAAAAABCqEEQRLCgwpBGMlJkIz8jKhGvj4k6jzRnqasNKIeoh5gI7BJaC1A1AoNBjJgbyApVS4IDlZgDU5WUAxEKDNmmALHzZp0Fkz1FMTmGFl1FMEyodIavcCAUHDWrKAIA4aa2oCgILEBupZgHvAhEBcZ6joQBxS76AgccrFlczBvKLC0QI2cBoCFvfTDAo7eoOQInqDPBtvrDEZBNYN5xwNwxQRfw8ZQ5wQVLvO8OYU+mHvFLlDh05Mdg7BT6YrRPpCBznMB2r//xKJjyyOh+cImr2/4doscwD6neZjuZR4AgAABYAAAABy1xcdQtxYBYYZdifkUDgzzXaXn98Z0oi9ILU5mBjFANmRwlVJ3/6jYDAmxaiDG3/6xjQQCCKkRb/6kg/wW+kSJ5//rLobkLSiKmqP/0ikJuDaSaSf/6JiLYLEYnW/+kXg1WRVJL/9EmQ1YZIsv/6Qzwy5qk7/+tEU0nkls3/zIUMPKNX/6yZLf+kFgAfgGyLFAUwY//uQZAUABcd5UiNPVXAAAApAAAAAE0VZQKw9ISAAACgAAAAAVQIygIElVrFkBS+Jhi+EAuu+lKAkYUEIsmEAEoMeDmCETMvfSHTGkF5RWH7kz/ESHWPAq/kcCRhqBtMdokPdM7vil7RG98A2sc7zO6ZvTdM7pmOUAZTnJW+NXxqmd41dqJ6mLTXxrPpnV8avaIf5SvL7pndPvPpndJR9Kuu8fePvuiuhorgWjp7Mf/PRjxcFCPDkW31srioCExivv9lcwKEaHsf/7ow2Fl1T/9RkXgEhYElAoCLFtMArxwivDJJ+bR1HTKJdlEoTELCIqgEwVGSQ+hIm0NbK8WXcTEI0UPoa2NbG4y2K00JEWbZavJXkYaqo9CRHS55FcZTjKEk3NKoCYUnSQ 0rWxrZbFKbKIhOKPZe1cJKzZSaQrIyULHDZmV5K4xySsDRKWOruanGtjLJXFEmwaIbDLX0hIPBUQPVFVkQkDoUNfSoDgQGKPekoxeGzA4DUvnn4bxzcZrtJyipKfPNy5w+9lnXwgqsiyHNeSVpemw4bWb9psYeq//uQZBoABQt4yMVxYAIAAAkQoAAAHvYpL5m6AAgAACXDAAAAD59jblTirQe9upFsmZbpMudy7Lz1X1DYsxOOSWpfPqNX2WqktK0DMvuGwlbNj44TleLPQ+Gsfb+GOWOKJoIrWb3cIMeeON6lz2umTqMXV8Mj30yWPpjoSa9ujK8SyeJP5y5mOW1D6hvLepeveEAEDo0mgCRClOEgANv3B9a6fikgUSu/DmAMATrGx7nng5p5iimPNZsfQLYB2sDLIkzRKZOHGAaUyDcpFBSLG9MCQALgAIgQs2YunOszLSAyQYPVC2YdGGeHD2dTdJk1pAHGAWDjnkcLKFymS3RQZTInzySoBwMG0QueC3gMsCEYxUqlrcxK6k1LQQcsmyYeQPdC2YfuGPASCBkcVMQQqpVJshui1tkXQJQV0OXGAZMXSOEEBRirXbVRQW7ugq7IM7rPWSZyDlM3IuNEkxzCOJ0ny2ThNkyRai1b6ev//3dzNGzNb//4uAvHT5sURcZCFcuKLhOFs8mLAAEAt4UWAAIABAAAAAB4qbHo0tIjVkUU//uQZAwABfSFz3ZqQAAAAAngwAAAE1HjMp2qAAAAACZDgAAAD5UkTE1UgZEUExqYynN1qZvqIOREEFmBcJQkwdxiFtw0qEOkGYfRDifBui9MQg4QAHAqWtAWHoCxu1Yf4VfWLPIM2mHDFsbQEVGwyqQoQcwnfHeIkNt9YnkiaS1oizycqJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7 FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb//////////////////////////// /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU="
                )).play();
            }







        </script>

    }


</body>
