@*@model IEnumerable<Atrai.Core.Entity.PurchaseModel>*@
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery AntiForgery
@inject IHttpContextAccessor HttpContextAccessor
@{ ViewData["Title"] = "Purchase List";
    Layout = "~/Views/Shared/_adminLayout.cshtml"; }



<div class="page-wrapper">
    <div class="container-fluid">
        <!-- Start Page Content -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        @*<h5 class="card-header">Purchase List</h5>*@
                        <div class="row mb-2">
                            <div class="col-md-2 col-12">
                                @Html.ActionLink("Create Purchase", "AddPurchase", null, null, new { @class = "btn btn-sm btn-outline-info btn-block rounded-0", @id = "btnBack" })
                            </div>
                            <div class="col-md-2 col-12">
                                @Html.ActionLink("Create Batch Purchase", "AddPurchaseBatch", null, null, new { @class = "btn btn-outline-primary btn-block rounded-0", @id = "btnBack" })
                            </div>
                            <div class="col-md-2 col-12 m-t-8">
                                <h4 class="card-header" style="color: #1976d2;">Purchase List</h4>
                            </div>
                            <div class="col-md-2 col-12">
                                <label class="pr-2"><input type="radio" name="RptType" value="PDF" checked="checked" /> PDF  </label>
                                <label class="pr-2"><input type="radio" name="RptType" value="EXCEL" /> EXCEL  </label>
                                <label class="pr-2"><input type="radio" name="RptType" value="WORD" /> WORD  </label>

                            </div>
                        </div>

                        <div class="card p-2 mb-2">
                            <div class="row">
                                <div class="col-md-3 col-12">
                                    <div class="input-group mb-2">
                                        @Html.DropDownList("Suppliers", ViewBag.Suppliers as List<SelectListItem>, "Select Suppliers", new { id = "SupplierId", @class = "form-control form-control-sm" })
                                    </div>
                                </div>
                                <div class="col-md-2 col-12">
                                    <div class="input-group mb-2">
                                        @Html.DropDownList("Users", ViewBag.Users as List<SelectListItem>, "Select Sales User", new { id = "UserId", @class = "form-control form-control-sm" })
                                    </div>
                                </div>
                                <div class="col-md-2 col-12">
                                    @Html.DropDownList("Status", new List<SelectListItem>
                                                                                                                                                                                                                {
                                            new SelectListItem() {Text = "Due", Value="Due"},
                                            new SelectListItem() {Text = "All Purchase", Value="All"},


                                        }, new { @class = "form-control form-control-sm" })

                                </div>

                                <div class="col-md-2 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                <label for="FDate">From Date</label>
                                            </span>
                                        </div>
                                        @Html.TextBox("FromDate", null, new { @class = "form-control form-control-sm text-center FromDate", @placeholder = "Select From Date ", @autocomplete = "off", name = "FromDate" })
                                    </div>
                                </div>
                                <div class="col-md-2 col-12">
                                    <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                <label for="TDate">To Date</label>
                                            </span>
                                        </div>
                                        @Html.TextBox("ToDate", null, new { @class = "form-control  form-control-md text-center ToDate", @placeholder = "Select To Date ", @autocomplete = "off", name = "ToDate" })
                                    </div>
                                </div>
                  

                            </div>
                        </div>

                        <div class="table-responsive m-t-10">
                            <table id="purchaselist" class="display table table-hover  table-bordered table-striped" cellspacing="0" width="100%">
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- End PAge Content -->
    </div>
</div>


@*<link href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css" rel="stylesheet" />
    <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>*@

@section Scripts{

    <script TransactionId="text/javascript">


        var filter = '@ViewBag.filter';
        $("#Status").val(filter);



        if (filter == "Due") {

            $(".FromDate").val('1-jan-' + new Date().getFullYear().toString().substr(-2));
        }


        DefaultFormat('pdf');
        $('input[type="radio"]').change(function () {
            selectedValue = this.value;
            DefaultFormat(selectedValue);

        });

        function DefaultFormat(selectedValue) {
            $.ajax({
                type: "GET",
                url: "../Admin/SetReportFormat",
                datatype: "Json",
                data: { reportformat: selectedValue },
                success: function (data) {
                    if (data.Success == 1) {
                        //toastr.success(selectedValue + " Format Selected");
                    }
                }
            });
        }

        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
            CurrentDate();

            $(".FromDate").datepicker({

                dateFormat: "dd-M-y",
                changeMonth: true,
                changeYear: true

            });


        $(".ToDate").datepicker({

            dateFormat: "dd-M-y",
            changeMonth: true,
            changeYear: true

        });

        function CurrentDate() {
            var date = new Date();
            var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
            var val = date.getDate() + "-" + months[date.getMonth()] + "-" + date.getFullYear().toString().substr(-2);
            if ($(".FromDate").val() == '') {
                $(".FromDate").val(val);
            }
            if ($(".ToDate").val() == '') {
                $(".ToDate").val(val);
            }
        }

            var SupplierId = $("#SupplierId").val();
            var UserId = $("#UserId").val();
            var Status = $("#Status").val();

        var fromdate = $("#FromDate").val();
        var todate = $("#ToDate").val();

            loaddata(fromdate, todate, SupplierId, UserId, $("#Status").val() ,1);



            function loaddata(FromDate = "", ToDate = "", SupplierId = "", UserId = "", Status = "", isAll = 1) {
            //alert(SupplierId, FromDate, ToDate);

            table = $('#purchaselist').DataTable({
                initComplete: function () {

                    var input = $('.dataTables_filter input'),//.unbind(),
                        self = this.api(),

                        //$searchButton = $('<button class="btn rounded-0 btn-info btn-sm" tabindex="0" aria-controls="purchaselist" TransactionId="button" title="Search"><span><i class="mdi mdi-file-excel"></i></span></button>')
                        //    .text('Search')
                        //    .click(function () {
                        //        if (input.val().length > 0) {
                        //            self.search(input.val()).draw();

                        //        }
                        //        else {
                        //            loaddata(fromdate, todate, SupplierId, 1);

                        //        }
                        //    }),
                        //$clearButton = $('<button class="btn rounded-0 btn-warning btn-sm" tabindex="0" aria-controls="purchaselist" TransactionId="button" title="Export to PDF"><span><i class="mdi mdi-file-pdf"></i></span></button>')
                        //    .text('Clear')
                        //    .click(function () {
                        //        input.val('');
                        //        $searchButton.click();
                        //    }),
                        $allButton = $('<button class="ml-5 btn rounded-0 btn-primary btn-sm" tabindex="0" aria-controls="purchaselist" TransactionId="button" title="Supplier Wise & Load"></button>')
                            .text('Supplier Wise & Load')
                            .click(function () {
                                input.val('');
                                //alert(FromDate);
                                loaddata(fromdate, todate, SupplierId, $("#UserId").val(), $("#Status").val() , 1);
                                //table.ajax.reload();


                            })
                    $('.dataTables_filter').append($allButton);//, $clearButton // , $searchButton
                },
                serverSide: true,  "scrollX": true,
                "orderCellsTop": true,

                "iDisplayLength": 10,
                "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],

                dom: '<"dom_wrapper fh-fixedHeader"lBf>tip',
                //dom:
                //    "<'row'<'col-sm-3'l><'col-sm-6 text-center'B><'col-sm-3'f>>" +
                //    "<'row'<'col-sm-12'tr>>" +
                //    "<'row'<'col-sm-5'i><'col-sm-7'p>>",
                buttons: {
                    dom: {
                        button: {
                            className: 'btn rounded-0'
                        }
                    },
                    buttons: [
                    ]
                },
                "ajax": {
                    "url": "@Url.Action("GetPurchaseList", "Purchase")",
                    "data": { FromDate: $("#FromDate").val(), ToDate: $("#ToDate").val(), SupplierId: $("#SupplierId").val(), UserId: $("#UserId").val(), Status: $("#Status").val() ,isAll: isAll },
                    "type": "POST",
                    "datatype": "json"
                },
                "columns": [
                    { "title": "Id", "data": "Id", "visible": false },
                               {
                            "title":"Purchase Code",
                                "className": "text-nowrap",
                                "data": {
                                    Id: "PurchaseCode"
                                },
                                "searchable": true,

                                "render": function (data, InternetUserId, row) {

                                    var myUrlprint = '@Url.Action("PurchaseReport", "Purchase")?PurchaseId=' + data.Id;
                                    var PurchaseCode = data.PurchaseCode;
                                    var buttons = '';
                                    buttons += '<span data-toggle="tooltip" title="Print"> <a href=\"' + myUrlprint + '\" class=\"btn btn-icon btn-success btn m-b-0\" target=\"_blank\"><i class="fa fa-print"> ' + PurchaseCode +'</i></a></span>';
                                    return buttons;
                                }
                            },
                    { "title": "Purchase Date", "data": "PurchaseDateString", "className": "nowrap text-nowrap text-center", "searchable": false },
                    { "title": "Supplier Name", "data": "SupplierName", "className": "nowrap text-nowrap text-center", "searchable": true },
                    { "title": "Primary Address", "data": "PrimaryAddress", "className": "nowrap text-nowrap text-center", "searchable": true },
                    { "title": "Phone No", "data": "PhoneNo", "className": "nowrap text-nowrap text-center", "searchable": true },
                    { "title": "Notes", "data": "Notes", "className": "nowrap text-nowrap text-center", "searchable": true },
                    { "title": "Total", "data": "Total", "className": "nowrap text-nowrap text-center", "searchable": true },
                    { "title": "Discount", "data": "Discount", "className": "nowrap text-nowrap text-center", "searchable": true },
                    { "title": "Net Amt.", "data": "NetAmount", "className": "nowrap text-nowrap text-center", "searchable": true },
                            //{ "title": "Status", "data": "Status", "searchable": true },
                    { "title": "Paid Amt.", "data": "PaidAmt", "className": "nowrap text-nowrap text-center", "searchable": false },
                    {
                        "title": "Received By",
                        //"data": "PurchasePayments",
                        "data": {
                            Id: "Id" //,
                        },
                        "className": "nowrap text-nowrap text-center", "searchable": false,
                        "render": function (data, type, row) {
                            //console.log(data);



                            //for (var i = 0; i < data.length; i++) {
                            //    //output += '<p class="lineheight">' + data[i].WhShortName + ' : ' + data[i].CurrentStock + ' : ' + data[i].CostingValue.toFixed(2) + ' : ' + data[i].PurchaseValue;
                            //    //totalPurchasevalue = totalPurchasevalue + parseFloat(data[i].PurchaseValue.toFixed(2))

                            //    if (i < data.length - 1) {
                            //        output += "  </p>";

                            //        //'<p>' + this + '</p>'
                            //    }
                            //    count++;
                            //};
                            var dueamount = data.NetAmount - data.PaidAmt;


                            if (data.PurchasePayments.length != 0) {

                                var output = "";

                                for (var i = 0; i < data.PurchasePayments.length; i++) {
                                    if (data.PurchasePayments[i].vChartofAccounts != null) {
                                        //console.log(data[i]);
                                        output += '<p class="narrowlineheight" style="font-weight: bold; color:darkgreen">' + data.PurchasePayments[i].vChartofAccounts.AccName + " : " + data.PurchasePayments[i].Amount
                                    }

                                    if (i < data.PurchasePayments.length - 1) {
                                        output += "  </p>";

                                        //'<p>' + this + '</p>'
                                    }
                                };

                                //console.log(data.NetAmount);
                                if (dueamount > 0) {
                                    output += '<p class="narrowlineheight" style="font-weight: bold; color:red">Due  : ' + dueamount + '</p>';
                                };


                                //console.log(output);

                                return output;
                            }
                            else {

                                var output = '<p class="narrowlineheight" style="font-weight: bold; color:red">Due : ' + dueamount + '</p>';
                                return output;

                                //return null;
                            }
                        }

                    },
                    {
                        "title": "Post.Status",
                        "data": {
                            Id: "Id" //,
                        },
                        "render": function (data, type, row) {
                            var information = '';
                            if (!data.isPosted) {
                                information = '<p class="narrowlineheight" style="font-weight: bold; color:red">Not Posted</p>';
                            }
                            else {
                                information = '<p class="narrowlineheight" style="font-weight: bold; color:darkgreen">Posted</p>';
                            }
                            return information;
                        }

                    },
                            {
                                "title": "Action",
                                "className" : "text-nowrap",
                                //"data": "Id",
                                "data": {
                                    Id: "Id" //,
                                    //VoucherTypeName:"VoucherTypeName",
                                    //isPosted:"isPosted"
                                },
                                "render": function (data, type, row) {

                                    var dueamount = data.NetAmount - data.PaidAmt;
                                    var myUrledit = '@Url.Action("EditPurchase", "Purchase")?PurchaseId=' + data.Id;
                                    var myUrldelete = '@Url.Action("DeletePurchase", "Purchase")?PurchaseId=' + data.Id;
                                    var myUrlposedit = '@Url.Action("POSEdit", "Purchase")?PurchaseId=' + data.Id;
                                    //var myUrlBathPurchaseedit = '@Url.Action("EditPurchaseBatch", "Purchase")?PurchaseId=' + data.Id;

                                    var myUrlReport = '@Url.Action("PurchaseReport", "Purchase")?PurchaseId=' + data.Id;
                                    var myUrlAccTransaction = '@Url.Action("AddTransaction", "Admin")?Type=Purchase&RefId=' + data.Id ;

                                    var message = `return confirm('Are you sure you want to Remove the Purchase Information ?')`;

                                    var buttons = '';//'<span data-toggle="tooltip" title="Report"> <a href=\"' + myUrlReport + '\"  class=\"btn btn-icon btn-success btn-sm rounded-0 m-b-5\" target=\"_blank\"><i class="fa fa-print"></i></a></span>';
                                    if (!data.isPosted) {
                                        if (data.isPOSPurchase) {
                                            buttons += '<span data-toggle="tooltip" title="POS Edit"> <a href=\"' + myUrlposedit + '\" class=\"btn btn-icon btn-info btn-sm rounded-0 m-b-5\" target=\"_blank\"><i class="fa fa-edit"></i></a></span>';
                                        }
                                        else {
                                            buttons += '<span data-toggle="tooltip" title="Edit"> <a href=\"' + myUrledit + '\" class=\"btn btn-icon btn-warning btn-sm rounded-0 m-b-5\" target=\"_blank\"><i class="fa fa-edit"></i></a></span>';
                                        }
                                        buttons += '<span data-toggle="tooltip" title="Delete">  <button class=\"btn btn-icon btn-danger btn-sm rounded-0 m-b-5\" onclick="ConfirmDialog(\' Are You Sure \',\'' + data.Id + '\')"><i class="fa fa-remove"></i></button> </span>';
                                    }
                                    else
                                    {
                                        if (dueamount > 0) {
                                            buttons += '<span data-toggle="tooltip" title="Received"> <a href=\"' + myUrlAccTransaction + '\"  class=\"btn btn-icon btn-danger btn-sm rounded-0 m-b-5\" target=\"_self\"><i class="fa fa-money"></i></a></span>';
                                        }
                                       // buttons += '<span data-toggle="tooltip" title="View"> <a href=\"' + myUrlView + '\" class=\"fa fa-eye text-info px-1 h4\" target=\"_blank\"></a></span>';
                                    }
                                    return buttons;

                                    //if (!data.isPOSPurchase) {
                                    //    return '<span data-toggle="tooltip" title="Edit"> <a href=\"' + myUrledit + '\" class=\"btn btn-icon btn-warning btn-sm rounded-0 mb-1\" target=\"_blank\"><i class="fa fa-edit"></i></a></span>' +
                                    //        '<span data-toggle="tooltip" title="Delete"> <a href=\"' + myUrldelete + '\" onclick=return confirm("Are you sure you want to Remove this Supplier ?")  class=\"btn btn-icon btn-danger btn-sm rounded-0 mb-1\" target=\"_blank\"><i class="fa fa-remove"></i></a></span>' +
                                    //        '<span data-toggle="tooltip" title="Report"> <a href=\"' + myUrlReport + '\"  class=\"btn btn-icon btn-success btn-sm rounded-0 mb-1\" target=\"_blank\"><i class="fa fa-print"></i></a></span>';
                                    //}
                                    //else {
                                    //    return '<span data-toggle="tooltip" title="POS Edit"> <a href=\"' + myUrlposedit + '\" class=\"btn btn-icon btn-warning btn-sm rounded-0 mb-1\" target=\"_blank\"><i class="fa fa-edit"></i></a></span>' +
                                    //        '<span data-toggle="tooltip" title="Delete"> <a href=\"' + myUrldelete + '\" onclick=return confirm("Are you sure you want to Remove this Supplier ?")  class=\"btn btn-icon btn-danger btn-sm rounded-0 mb-1\" target=\"_blank\"><i class="fa fa-remove"></i></a></span>' +
                                    //        '<span data-toggle="tooltip" title="Report"> <a href=\"' + myUrlReport + '\"  class=\"btn btn-icon btn-success btn-sm rounded-0 mb-1\" target=\"_blank\"><i class="fa fa-print"></i></a></span>';
                                    //}
                                }

                            }
                        ],
                "order": [0, "desc"],
                "processing": true,
                "language": {
                    sLengthMenu: " _MENU_",
                    search: "",
                    searchPlaceholder: "Search..."
                },
                "destroy": true
            });
            //$('#purchaselist_filter input').unbind();
            // alert('Load Successfully');
            //$('.dataTables_filter input').bind('keyup', function (e) {
            //    if (e.keyCode == 13) {
            //        //alert('enter');
            //        table.search(this.value).draw();
            //    }
            //});
        }






    });



        function ConfirmDialog(message,DeleteId) {
            $('<div></div>').appendTo('body')
                .html('<div><h6>' + message + '?</h6></div>')
                .dialog({
                    modal: true,
                    title: 'Delete message',
                    zIndex: 10000,
                    autoOpen: true,
                    width: 'auto',
                    resizable: false,
                    buttons: {
                        Yes: function () {
                            // $(obj).removeAttr('onclick');
                            // $(obj).parents('.Parent').remove();

                            $('body').append('<h1>Confirm Dialog Result: <i>Yes</i></h1>');
                            //alert(DeleteId);
                            Purchase_delete(DeleteId);
                            $(this).dialog("close");
                        },
                        No: function () {
                            $('body').append('<h1>Confirm Dialog Result: <i>No</i></h1>');

                            $(this).dialog("close");
                        }
                    },
                    close: function (event, ui) {
                        $(this).remove();
                    }
                });
        };


        function Purchase_delete(DeleteId) {
            var antiForgeryToken = $("input[name=Dominate_ANTIFORZERY]").val();
            $.ajax({

                url: '@Url.Action("DeletePurchase", "Purchase")',
                //data: { Id: DeleteId }, //use id here
                //data: JSON.stringify(Id: DeleteId ),
                //data: JSON.stringify(Purchasemain),
                headers: { "X-CSRF-TOKEN-Dominate_ANTIFORZERY": antiForgeryToken },
                type: 'POST',
                //contentType: 'application/json;',
                dataType: "json",
                data: { Id: DeleteId },
                success: function (result) {
                    if (result.success == "1") {

                        window.setTimeout(function () {
                            window.location.href = '@Url.Action("Index", "Purchase")';
                        }, 500);

                    }

                    if (result.error == "1") {
                        toastr.error(result.message);
                    }
                }
            });
        }


        @*var CultureInfoViewFormat = '@HttpContextAccessor.HttpContext.Session.GetString("CultureInfoViewFormat").ToString()';
        var CurrencyShortNameViewFormat = '@HttpContextAccessor.HttpContext.Session.GetString("CurrencyShortName").ToString()';


        var formatter = new Intl.NumberFormat(CultureInfoViewFormat, ///'en-US'
            {
            style: 'currency',
            currency: CurrencyShortNameViewFormat,///'BDT'
            minimumFractionDigits: 2,
        });*@

    </script>




}

