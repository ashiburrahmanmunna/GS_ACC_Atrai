@model Atrai.Core.ViewModel.SigninViewModel
@{ ViewData["Title"] = "Signup";
    Layout = "~/Views/Shared/_Layout.cshtml"; }



@*<div class="container-fluid">*@
@Html.AntiForgeryToken()

<div class="container pt-5 mt-5">
    <div class="row">

        <div class="col-md-10 offset-md-1 col-12 mb-2">
            <div class="card">
                <div class="card-header">

                    <div class="form-group row my-0">
                        <div class="col">
                            <h2 class="text-left" id="styletext">
                                Sign up
                            </h2>
                        </div>
                        <div class="col text-right">
                            @if (@ViewBag.comImagePath != null)
                            {
                            <img width="60" class="img-circle" src="..@ViewBag.comImagePath" onerror="this.style.display='none'"  id="main-img"> }
                            else
                            {
                            <img width="10" class="img-circle" src="../Content/ProductImages/0.png" id="main-img">}
                        </div>


                    </div>
                </div>
                <div class="card-body">

                    @if (TempData["UserSignUpFailed"] != null)
                    {
        <p class="alert alert-danger">@TempData["UserLoginFailed"]</p>}
                    <form id="myform" asp-action="Signup" asp-controller="Home" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="row">
                            <div class="col-md-5 col-12 mb-2">
                                <label asp-for="CompanyName" class="control-label"></label>
                                <input asp-for="CompanyName" class="form-control" />
                                <span asp-validation-for="CompanyName" class="text-danger"></span>
                            </div>
                            <div class="col-md-3 col-12 mb-2">
                                <label asp-for="CompanyShortName" class="control-label"></label>
                                <input asp-for="CompanyShortName" class="form-control" />
                                <span asp-validation-for="CompanyShortName" class="text-danger"></span>
                            </div>
                            <div class="col-md-4 col-12 mb-2">
                                <label asp-for="Web" class="control-label"></label>
                                <input asp-for="Web" class="form-control" />
                                <span asp-validation-for="Web" class="text-danger"></span>
                            </div>





                            <div class="col-md-5 col-12 mb-2">
                                @Html.LabelFor(x => x.BusinessTypeId)
                                @Html.DropDownListFor(x => x.BusinessTypeId,
                                new SelectList((IEnumerable<SelectListItem>)ViewBag.BusinessType, "Value", "Text"), "Select Business Type",
                                htmlAttributes: new { @class = "form-control", id = "BusinessTypeId" })
                                @Html.ValidationMessageFor(x => x.BusinessTypeId, "", new { @class = "text-danger" })
                            </div>





                            <div class="col-md-3 col-12 mb-2">
                                @Html.LabelFor(x => x.CountryId)
                                @Html.DropDownListFor(x => x.CountryId,
                                new SelectList((IEnumerable<SelectListItem>)ViewBag.Country, "Value", "Text"), "Select Country",
                                htmlAttributes: new { @class = "form-control", id = "CountryId" })
                                @Html.ValidationMessageFor(x => x.CountryId, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-4 col-12 mb-2">
                                @Html.LabelFor(x => x.SubscriptionTypeId)
                                @Html.DropDownListFor(x => x.SubscriptionTypeId,
                                                                                                                                    new SelectList((IEnumerable<SelectListItem>)ViewBag.SubscriptionType, "Value", "Text"), "Select Subscription Type",
                                                                                                                                    htmlAttributes: new { @class = "form-control", id = "SubscriptionTypeId" })
                                @Html.ValidationMessageFor(x => x.SubscriptionTypeId, "", new { @class = "text-danger" })
                            </div>







                            <div class="col-md-4 col-12 mb-2">
                                <label asp-for="ContactName" class="control-label"></label>
                                <input asp-for="ContactName" class="form-control" />
                                <span asp-validation-for="ContactName" class="text-danger"></span>
                            </div>
                            <div class="col-md-4 col-12 mb-2">
                                <label asp-for="ContactDesig" class="control-label"></label>
                                <input asp-for="ContactDesig" class="form-control" />
                                <span asp-validation-for="ContactDesig" class="text-danger"></span>
                            </div>
                            <div class="col-md-4 col-12 mb-2">

                                <label asp-for="PhoneNumber" class="control-label"></label>
                                <input asp-for="PhoneNumber" class="form-control" />
                                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                            </div>



                            <div class="col-md-6 col-12 mb-2">
                                <label asp-for="Email" class="control-label"></label>
                                <input asp-for="Email" class="form-control" />
                                <span asp-validation-for="Email" class="text-danger"></span>
                            </div>


                            <div class="col-md-3 col-12 mb-2">
                                <label asp-for="Password" class="control-label"></label>
                                <input type="password" asp-for="Password" class="form-control" />
                                <span asp-validation-for="Password" class="text-danger"></span>
                            </div>
                            <div class="col-md-3 col-12 mb-2">
                                <label asp-for="ConfirmPassword" class="control-label"></label>
                                <input type="password" asp-for="ConfirmPassword" class="form-control" />
                                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                            </div>




                            <div class="col-md-6 col-12 mb-2">
                                <label asp-for="BusinessAddress" class="control-label"></label>
                                <input asp-for="BusinessAddress" class="form-control" />
                                <span asp-validation-for="BusinessAddress" class="text-danger"></span>
                            </div>

                                                        
@*                            <div class="col-md-3 col-12 mb-2">
                                @Html.LabelFor(x => x.FiscalYearTypeId)
                                @Html.DropDownListFor(x => x.FiscalYearTypeId,
                                new SelectList((IEnumerable<SelectListItem>)ViewBag.FiscalYearType, "Value", "Text"),
                                htmlAttributes: new { @class = "form-control", id = "FiscalYearTypeId" })
                                @Html.ValidationMessageFor(x => x.FiscalYearTypeId, "", new { @class = "text-danger" })
                            </div>*@



                            <div class="col-md-3 col-6 my-4">
                                @Html.ActionLink("Back", "Login", "Home", null, new { @class = "btn btn-sm btn-outline-info btn-block  rounded-0", @id = "btnBack" })
                            </div>
                            <div class="col-md-3 col-6 my-4">
                                @*<input type="submit" value="Signup" class="btn btn-default btn-success rounded-0" />*@
                                @*<button id="create" class="btn btn-primary btn-block rounded-0" onclick="SaveCompanyInfo()" type="button">Confirm</button>*@

@*                                      <button id="create" class="btn btn-primary btn-block spinnerclass rounded-0" type="button">
                                                            <span class="d-none spinner-border spinner-border-sm " role="status" aria-hidden="true"></span> Confirm

                                      </button>*@

                                                   <button id="create" class="btn btn-primary btn-sm btn-block rounded-0" type="button"> Confirm  </button>

                            </div>


                        </div>
                    </form>
                </div>


            </div>
        </div>

    </div>
</div>


    @*<div class="row">


            <div class="wrapper-page animated fadeInDown">
                <div class="panel panel-color panel-primary">

                    @using (Html.BeginForm("Signup", "Home", FormMethod.Post, new { @class = "form-horizontal m-t-40" }))
                    {
                        @Html.AntiForgeryToken()
                        if (TempData["FFMsg"] != null)
                        {
                            <div class="alert alert-danger alert-dismissable">
                                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">
                                    ×
                                </button>
                                @TempData["FFMsg"].ToString()
                            </div>
                            <br />
                        }
                        <br />

                        <div class="form-group ">

                            <div class="col-xs-12">
                                @Html.TextBoxFor(m => m.CompanyName, new { @class = "form-control", placeholder = "Enter Company Name" })
                                @Html.ValidationMessageFor(x => x.CompanyName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group ">

                            <div class="col-xs-12">
                                @Html.TextBoxFor(m => m.ContactName, new { @class = "form-control", placeholder = "Enter Contact Name" })
                                @Html.ValidationMessageFor(x => x.ContactName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group ">
                            <div class="col-xs-12">
                                @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", placeholder = "Enter Phone No" })
                                @Html.ValidationMessageFor(x => x.PhoneNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group ">
                            <div class="col-xs-12">
                                @Html.TextBoxFor(m => m.Email, null, new { @class = "form-control", placeholder = "Enter Email" })
                                @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group ">

                            <div class="col-xs-12">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Enter Password" })
                                @Html.ValidationMessageFor(x => x.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group ">

                            <div class="col-xs-12">
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Enter Confirm Password" })
                                @Html.ValidationMessageFor(x => x.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group ">
                            <div class="col-xs-12">

                            </div>
                        </div>
                        <div class="form-group text-right">
                            <div class="col-xs-12">
                                <button class="btn btn-primary w-md" type="submit">Sign up</button>
                            </div>
                        </div>
                    }
                </div>
            </div>



        </div>*@
    @*</div>*@

    @section scripts {
        <script type="text/javascript">


        //$("#create").append('<span class="d-none spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>')


        var antiForgeryToken;
        var billeddateglobal = new Date();
        antiForgeryToken = $("input[name='Dominate_ANTIFORZERY']").val();

        $(document).ready(function () {

        });

           $("#create").click(function () {
               SaveCompanyInfo();
           });




        function SaveCompanyInfo() {

            //var d = parseFloat($("#TotalQty").val());
            //if (d > 15) {
            //    $("#TotalQty").removeClass(" yellow");
            //    $("#TotalQty").addClass("important red");
            //    $("#TotalQty").css({ 'color': 'yellow', 'font-size': '150%' });
            //    toastr.error('Load qty must not be greter than 15 metric ton');
            //    return true;
            //}
            //else {
            //    $("#TotalQty").removeClass("important red");
            //    $("#TotalQty").addClass(" yellow");
            //    $("#TotalQty").css({ 'color': 'green', 'font-size': '100%' });
            //}


            //$('select').removeAttr('disabled');


            if (!$("#myform").valid()) {
                toastr.error('Please Fill Up All Necessary Information Correctly.');
                $("html, body").animate({ scrollTop: 0 }, 500);
                $("#create").prop("disabled", false);
                 StopSpinner(".spinnerclass");
                return true;
            }



            var signinmodel = {

                Id: 0,

                Email: "",
                Web: "",
                Password: "",
                ConfirmPassword: "",
                CompanyName: "",
                ContactName: "",
                ContactDesig: "",
                CompanyShortName: "",


                PhoneNumber: "",
                BusinessAddress: "",
                SubscriptionTypeId: "",
                CountryId: "",
                BusinessTypeId: ""
            };



            signinmodel.Id = $("#Id").val();
            signinmodel.Email = $("#Email").val();

            signinmodel.Web = $("#Web").val();
            signinmodel.Password = $("#Password").val();
            signinmodel.ConfirmPassword = $("#ConfirmPassword").val();

            signinmodel.CompanyName = $("#CompanyName").val();
            signinmodel.ContactName = $("#ContactName").val();
            signinmodel.ContactDesig = $("#ContactDesig").val();
            signinmodel.CompanyShortName = $("#CompanyShortName").val();


            signinmodel.PhoneNumber = $("#PhoneNumber").val();
            signinmodel.BusinessAddress = $("#BusinessAddress").val();
            signinmodel.SubscriptionTypeId = $("#SubscriptionTypeId").val();
            signinmodel.CountryId = $("#CountryId").val();

            signinmodel.BusinessTypeId = $("#BusinessTypeId").val();

            toastr.success('Pleaes wait a moment to comlete your request...');

             $("#create").prop("disabled", true);
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Signup", "Home")',
                dataType: 'json',
                async: 'false',
                headers: { "X-CSRF-TOKEN-Dominate_ANTIFORZERY": antiForgeryToken },

                beforeSend: function() {
                    $('#loader').removeClass('hidden');
                    $('#create').attr('disabled');
                },
                data: { signinmodel: signinmodel },
                success: function (result) {
                    if (result.Success == "1") {

                        toastr.success('Registration Done Successfully.');
                        //var signinmodelidprint = result.Id;
                        //var urllink = '@Url.Action("InvoiceBillPrint", "Home", new { InvoiceBillId = "xxxx" })'.replace("xxxx", signinmodelidprint);

                        //window.open(urllink, '_blank');

                        setTimeout(
                            function () {
                                //do something special

                                //var urllinknew = '@Url.Action("Login", "Home")';
                                    //var urllinknew = '@Url.Action("EmailConfirmation", "Home")';
                                    var urllinknew = '@Url.Action("EmailConfirmation", "Home")?Email=' + signinmodel.Email +'&&PhoneNo=' + signinmodel.PhoneNumber;
                                    //alert(urllinknew);
                                    window.open(urllinknew, "_self");

                                @*if ($('#Update').length) {
                                    // var urllinknew = '@Url.Action("EmailConfirmation", "Home", new { Email = "fahad@gtrbd.com" , PhoneNo=  "01671303302"})';
                                    var urllinknew = '@Url.Action("EmailConfirmation", "Home")?Email=' + signinmodel.Email +'&&PhoneNo=' + signinmodel.PhoneNumber;
                                    //alert(urllinknew);
                                    window.open(urllinknew, "_self");
                                    /* it exists */
                                }
                                else {
                                    $("#create").prop("disabled", false);
                                    //$("#TruckNumber").val(result.TruckNumber);
                                    ClearData();
                                    /* it doesn't exist */
                                }*@



                            }, 3000);
                    }
                    else {
                        toastr.warning(result.ex);
                         $("#create").prop("disabled", false);
                        alert(result.ex);
                    }
                },
                complete: function(){
                    $('#loader').addClass('hidden');
                    $('#create').attr('enabled');
                },
                error: function (ex) {
                    alert('error');
                }
            });

            //$('#TotalQty').attr("disabled", true);


        };

        </script>
    }

