@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Issue List";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}


<style>
    .p-15 {
        padding: 10px 13px 15px 13px !important;
    }

    .card-dashboard p {
        font-size: 12px;
        font-family: arial narrow;
    }

    .media p {
        font-size: 14px;
        font-family: "Arial Narrow";
    }

    .media {
        font-size: 12px;
        font-family: "Arial Narrow";
        text-align: right;
        padding-bottom: 2px !important;
    }

    a {
        color: #0a275ec9;
    }
    /*
        tbody tr td {
            font-family: "Arial Narrow";
            font-size: 13px;
        }*/

    .lineheight {
        margin-bottom: 1px;
    }

    h5 {
        margin-top: 5px;
        margin-bottom: 1px;
    }



    .table-sm th {
        /*        padding: 5px;
            font-size: 13px;*/
        /*        border-color: black;
            border-bottom-width:10px;*/
    }

    hr.solid {
        border-top: 2px solid #bbb;
        margin-top: .2rem;
        margin-bottom: .2rem;
        vertical-align: middle;
    }
</style>



<div class="page-wrapper">
    <div class="container-fluid">
        <!-- Start Page Content -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">

                               @Html.Hidden("FromDate", null, new { @class = "form-control text-center FromDate", @placeholder = "From Date", @autocomplete = "off", name = "FromDate" })
                                @Html.Hidden("ToDate", null, new { @class = "form-control text-center ToDate", @placeholder = "To Date", @autocomplete = "off", name = "ToDate" })

                        @*<h5 class="card-header">Issue List</h5>*@
                        <div class="row mb-2">
                            <div class="col-md-2 col-12">
                                @Html.ActionLink("New Issue", "AddIssue", null, null, new { @class = "btn btn-outline-success btn-block rounded-0", @id = "btnBack" })
                            </div>
                            <div class="col-md-2 col-12">
                                <h4 style="color: #1976d2;">Issue List</h4>
                            </div>
                        </div>


                        <div class="card p-2 mb-2">
                            <div class="row">
                                @*                                <div class="col-md-2 col-12">
                                    <div class="input-group mb-2">
                                    @Html.DropDownList("Customers", ViewBag.Customers as List<SelectListItem>, "Select Customers", new { id = "CustomerId", @class = "form-control form-control-sm" })
                                    </div>
                                    </div>*@

                                 <div class="col-md-4 col-12  mb-2">
                                              <div class="form-inline divHiddenItems">
                                         <div class="input-group input-group-sm">
                                        <div class="input-group-prepend">
                                            <div class="input-group-text">
                                               <i class="fa fa-calendar"></i>
                                             </div>
                                        </div>
                                        <input type="text" class="form-control from-control-sm" name="date" id="daterange-btn" style="width: auto;">
                                         <button id='btnDec' type="button" class="btn btn-danger rounded-0" title='Decrement month'><i class="fa fa-calendar-minus-o" aria-hidden="true"></i></button>
                                        <button id='btnInc' type="button" class="btn btn-info  rounded-0" title='Increment month'><i class="fa fa-calendar-plus-o" aria-hidden="true"></i></button>
                                        </div>
                                        @*<span type="button" class="btn btn-sm btn-outline-info" id="daterange-btn">

                                            <i class="fa fa-calendar"></i>&nbsp; <span>defaut date</span>

                                            <i class="fa fa-caret-down"></i>
                                        </span>
                                        <input id="daterange-btn" size="40" value="">*@
                                    </div>
                                </div>

@*                                <div class="col-md-3 col-12">
                                    <div class="input-group input-group-sm mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                <label for="FDate">From Date</label>
                                            </span>
                                        </div>
                                        @Html.TextBox("FromDate", null, new { @class = "form-control text-center FromDate", @placeholder = "Select From Date ", @autocomplete = "off", name = "FromDate" })
                                    </div>
                                </div>
                                <div class="col-md-3 col-12">
                                    <div class="input-group input-group-sm mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                <label for="TDate">To Date</label>
                                            </span>
                                        </div>
                                        @Html.TextBox("ToDate", null, new { @class = "form-control text-center ToDate", @placeholder = "Select To Date ", @autocomplete = "off", name = "ToDate" })
                                    </div>
                                </div>*@
                                <div class="col-md-3 col-12">
                                    <label class="pr-2"><input type="radio" name="RptType" value="PDF" checked="checked" /> PDF  </label>
                                    <label class="pr-2"><input type="radio" name="RptType" value="EXCEL" /> EXCEL  </label>
                                    <label class="pr-2"><input type="radio" name="RptType" value="WORD" /> WORD  </label>

                                </div>

                            </div>
                        </div>


                        <div class="table-responsive">
                            <table id="Issuelist" class="table table-sm table-hover  table-bordered table-striped" cellspacing="0" width="100%">
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- End PAge Content -->
    </div>
</div>






@section Scripts{

<script TransactionId="text/javascript">

        DefaultFormat('pdf');
        $('input[type="radio"]').change(function () {
            selectedValue = this.value;
            DefaultFormat(selectedValue);

        });

        function DefaultFormat(selectedValue) {
            $.ajax({
                type: "GET",
                url: "../Admin/SetReportFormat",
                datatype: "Json",
                data: { reportformat: selectedValue },
                success: function (data) {
                    if (data.Success == 1) {
                        //toastr.success(selectedValue + " Format Selected");
                    }
                }
            });
        }


        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        //    CurrentDate();

        //    $(".FromDate").datepicker({

        //        dateFormat: "dd-M-y",
        //        changeMonth: true,
        //        changeYear: true

        //    });


        //$(".ToDate").datepicker({

        //    dateFormat: "dd-M-y",
        //    changeMonth: true,
        //    changeYear: true

        //});

        //function CurrentDate() {
        //    var date = new Date();
        //    var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
        //    var val = date.getDate() + "-" + months[date.getMonth()] + "-" + date.getFullYear().toString().substr(-2);
        //    if ($(".FromDate").val() == '') {
        //        $(".FromDate").val(val);
        //    }
        //    if ($(".ToDate").val() == '') {
        //        $(".ToDate").val(val);
        //    }
        //}

        var CustomerId = $("#CustomerId").val();
        var fromdate = $("#FromDate").val();
            var todate = $("#ToDate").val();

                  var permission = false;
            var UserRole = `@HttpContextAccessor.HttpContext.Session.GetString("UserRole")`;
            //alert(UserRole);
            //alert(permission);

            if (UserRole.toLowerCase().includes("admin")) { permission = true; };
            //alert(permission);


        loaddata();




            function format(d) {
                //console.log(d.Items);
                var trs = '';
                var trf = '';
                var sumindsalesprice = 0.00;
                var sumindcostprice = 0.00;
                var sumindquantity = 0.00;

                var sumindprofit = 0.00;
                var sumindcomissionamount = 0.00;

                var sumsalesprice = 0.00;
                var sumcostprice = 0.00;
                var sumavgcostprice = 0.00;

                var sumprofit = 0.00;
                var sumcommission = 0.00;



                var i = 0;



                $.each($(d.Items), function (key, value) {
                    //console.log(d.Items[0].Name);
                    //console.log(value);
                    i++;

                    var indcostprice = (parseFloat(d.Items[key].Product.CostPrice));
                    var indavgcostprice = (parseFloat(d.Items[key].AvgCostPrice));


                    var indquantity = (parseFloat(d.Items[key].Quantity));

                    var totalcostprice = indcostprice * indquantity;
                    var totalavgcostprice = indavgcostprice;



                    sumindquantity += parseFloat(indquantity);





                    if (permission == false)
                    {
                        indcostprice = 0.00;
                        indavgcostprice = 0.00;
                        totalcostprice = 0.00;
                    }
                    else
                    {
                    //alert('found');
                        sumindcostprice += parseFloat(indcostprice);

                        sumcostprice += parseFloat(totalcostprice);

                        sumavgcostprice += parseFloat(totalavgcostprice);

                    }

                    trs += '<tr><td>' + i + '</td><td>' + d.Items[key].Product.Category.Name + '</td><td>' + d.Items[key].Product.Code + '</td><td>' + d.Items[key].Product.Name + '</td><td>' + indquantity.toLocaleString() + '</td><td>' + indcostprice.toLocaleString() + '</td><td>' + indavgcostprice.toLocaleString() + '</td><td>' + totalcostprice.toLocaleString() + '</td></tr>';

                })

                if (i > 1) {
                    trf += '<tr><td></td><td>Total :</td><td></td><td>Item Count : '+ i +'</td><td>' + sumindquantity.toLocaleString() + '</td><td>' + sumindcostprice.toLocaleString() + '</td><td>' + sumavgcostprice.toLocaleString() + '</td><td>' + sumcostprice.toLocaleString() + '</td></tr>';

                }

                // `d` is the original data object for the row
                return '<div class="offset-md-1 col-md-6"><table class="table text-center table-sm text-nowrap table-border">' +
                    '<thead>' +
                    '<th>SLNo.</th>' +
                    '<th>Category</th>' +
                    '<th>Code</th>' +
                    '<th>Product Name</th>' +
                    '<th>Quantity</th>' +
                    '<th>Cost Price</th>' +
                    '<th>Total Average Cost</th>' +
                    '<th>Total Cost</th>' +
                    '</thead><tbody>' +

                    trs +
                    '</tbody><tfoot class="text-center font-weight-bold">' + trf + '</tfoot></table></div>';
            }



            $('#Issuelist tbody').on('click', 'td.details-control', function () {
                var tr = $(this).closest('tr');
                var row = table.row(tr);

                if (row.child.isShown()) {
                    // This row is already open - close it
                    row.child.hide();
                    tr.removeClass('shown');
                }
                else {
                    // Open this row
                    row.child(format(row.data())).show();
                    tr.addClass('shown');
                }
            });



        function loaddata() {
            //alert(CustomerId, FromDate, ToDate);

            table = $('#Issuelist').DataTable({
                initComplete: function () {

                    var input = $('.dataTables_filter input'),//.unbind(),
                        self = this.api(),

                        //$searchButton = $('<button class="btn rounded-0 btn-info btn-sm" tabindex="0" aria-controls="Issuelist" TransactionId="button" title="Search"><span><i class="mdi mdi-file-excel"></i></span></button>')
                        //    .text('Search')
                        //    .click(function () {
                        //        if (input.val().length > 0) {
                        //            self.search(input.val()).draw();

                        //        }
                        //        else {
                        //            loaddata(fromdate, todate, CustomerId, 1);

                        //        }
                        //    }),
                        $allButton = $('<button class="ml-1 btn rounded-0 btn-primary btn-sm" tabindex="0" aria-controls="Issuelist" TransactionId="button" title="Load"><span><i class="mdi mdi-file-excel"></i></span></button>')
                            .text('Load')
                            .click(function () {
                                input.val('');
                                //alert(FromDate);
                                loaddata();
                                //table.ajax.reload();


                            })
                    $('.dataTables_filter').append($allButton);//, $searchButton, $clearButton
                },

                serverSide: true,  "scrollX": true,
                "orderCellsTop": true,

                "iDisplayLength": 10,
                "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],

                dom: '<"dom_wrapper fh-fixedHeader"lBf>tip',

                buttons: {
                    dom: {
                        button: {
                            className: 'btn rounded-0'
                        }
                    },
                    buttons: [
                    ]
                },
                "ajax": {
                    "url": "@Url.Action("GetIssueList", "Issue")",
                    "data": { FromDate: $("#FromDate").val(), ToDate: $("#ToDate").val(), CustomerId: $("#CustomerId").val(), isAll: 1 },
                    "type": "POST",
                    "datatype": "json"
                },
                "columns": [
                            { "title": "Id", "data": "Id", "visible": false },
                            { "title": "Issue Code", "data": "IssueCode", "searchable": true },
                            {
                                "class": 'details-control',
                                "role":"row",
                                "orderable": false,
                                "data": null,
                                "defaultContent": ''
                            },
                            { "title": "Issue Date", "data": "IssueDateString", "searchable": false },
                            { "title": "Referance One", "data": "ReferanceOne", "searchable": true },
                            { "title": "Referance Two", "data": "ReferanceTwo", "searchable": true },
                            { "title": "Notes", "data": "Notes", "searchable": true },
                            { "title": "Post Status",
                                "data": {
                                    Id: "Id" //,
                                },
                                "render": function (data, type, row) {
                                    var information = '';
                                    if (!data.isPosted) {
                                        information = 'Not Posted';
                                    }
                                    else
                                    {
                                        information = 'Posted';
                                    }
                                    return information;
                                }

                            },
                            {
                                "title": "Action",
                                "className" : "text-nowrap",
                                //"data": "Id",
                                "data": {
                                    Id: "Id" //,
                                    //VoucherTypeName:"VoucherTypeName",
                                    //isPosted:"isPosted"
                                },
                                "render": function (data, type, row) {

                                    var myUrledit = '@Url.Action("EditIssue", "Issue")?IssueId=' + data.Id;
                                    var myUrldelete = '@Url.Action("DeleteIssue", "Issue")?IssueId=' + data.Id;
                                    var myUrlSerialIssueedit = '@Url.Action("EditIssueBySerialSearch", "Issue")?IssueId=' + data.Id;

                                    var myUrlReport = '@Url.Action("IssueReport", "Issue")?IssueId=' + data.Id;
                                    var message = `return confirm('Are you sure you want to Remove the Issue Information ?')`;

                                    var buttons = '<span data-toggle="tooltip" title="Report"> <a href=\"' + myUrlReport + '\"  class=\"btn btn-icon btn-success btn-sm rounded-0 m-b-5\" target=\"_blank\"><i class="fa fa-print"></i></a></span>';
                                    if (!data.isPosted) {
                                        {
                                            buttons += '<span data-toggle="tooltip" title="Edit"> <a href=\"' + myUrledit + '\" class=\"btn btn-icon btn-warning btn-sm rounded-0 m-b-5\" target=\"_blank\"><i class="fa fa-edit"></i></a></span>';
                                        }
                                        buttons += '<span data-toggle="tooltip" title="Delete"> <a href=\"' + myUrldelete + '\"  onclick = \"' + message + '\"  class=\"btn btn-icon btn-danger btn-sm rounded-0 m-b-5\" target=\"_self\"><i class="fa fa-remove"></i></a></span>';
                                    }
                                    else
                                    {
                                       // buttons += '<span data-toggle="tooltip" title="View"> <a href=\"' + myUrlView + '\" class=\"fa fa-eye text-info px-1 h4\" target=\"_blank\"></a></span>';
                                    }
                                    return buttons;
                                }

                            }
                        ],
                //"order": [0, "desc"],
                "processing": true,
                "language": {
                    sLengthMenu: " _MENU_",
                    search: "",
                    searchPlaceholder: "Search..."
                },
                "destroy": true
            });
        }

    });



</script>




}










