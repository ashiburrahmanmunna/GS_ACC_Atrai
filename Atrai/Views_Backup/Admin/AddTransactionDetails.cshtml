@*@Html.AntiForgeryToken()
    @using Microsoft.AspNetCore.Antiforgery
    @inject IAntiforgery AntiForgery*@

@model Atrai.Core.Entity.TransactionModel
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Add Transaction Details";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}


<style>
    /*  .input-validation-error {
                    border: 2px solid #f00;
                    background: #fee;
                }

                #styletext {
                    color: transparent;
                    background: #666666;
                    -webkit-background-clip: text;
                    -moz-background-clip: text;
                    background-clip: text;
                    text-shadow: 0px 3px 3px rgba(255,255,255,0.5);
                    font-weight: 100;
                    font-size: 40px;
                }


                th {
                    font-size: 14px;
                }

                td {
                    font-size: 12px;
                }


                div.dataTables_length {
                    float: right;
                }

                div.dataTables_filter {
                    float: left;
                    font-size: 17px;
                }

                div.dataTables_paginate {
                    float: right;
                }

                div.DTTT {
                    float: left;
                    margin-right: 50px;
                }

                div.buttons {
                    clear: both;
                }

                .fas, .far {
                    font-size: 10px !important;
                }

                .table-sm th {
                    padding: .8em;
                    background: rgb(192,196,196);
                    background: linear-gradient(0deg, rgba(192,196,196,0.6224556717218137) 1%, rgba(255,255,255,0.6224556717218137) 65%, rgba(151,149,162,0.2527077725621498) 100%);
                    font-family: 'Roboto Condensed', sans-serif;
                    font-weight: 500;
                    font-size: 15px;
                }

                .table-hover tbody tr:hover td, .table-hover tbody tr:hover th {
                    background: linear-gradient(0deg, rgba(192,196,196,0.6224556717218137) 1%, rgba(255,255,255,0.6224556717218137) 65%, rgba(151,149,162,0.2527077725621498) 100%);
                }

                table.dataTable tbody tr.selected, table.dataTable tbody th.selected, table.dataTable tbody td.selected {
                    color: green;
                }

                .select-box {
                    position: relative;
                    display: block;
                    width: 100%;
                    margin: 0 auto;
                    font-family: 'Open Sans', 'Helvetica Neue', 'Segoe UI', 'Calibri', 'Arial', sans-serif;
                    font-size: 18px;
                    color: #60666d;
                }

                #myInputSearch {
                    background-image: url('../../Content/css/searchicon.png');
                    background-position: 10px 12px;
                    background-repeat: no-repeat;
                    width: 100%;
                    padding: 12px 20px 12px 40px;
                    border: 1px solid #ddd;
                    text-align: center;
                    font-size: 22px;
                    margin-bottom: 12px;
                }

                  .tbltransactionlist th:first-child, .tbltransactionlist tbody td:first-child {
                    position: sticky !important;
                    left: 0px;
                    background-color: #f2f2f2e6 !important;
                    z-index: 1;
                }

                .tbltransactionlist tfoot td:first-child {
                    position: sticky !important;
                    left: 0px;
                    background-color: #f2f2f2e6 !important;
                    z-index: 1;
                }

                .tbltransactionlist th:nth-child(2) {
                    position: sticky !important;
                    left: 70px;
                    background-color: #f2f2f2e6 !important;
                    z-index: 1;
                }

                .tbltransactionlist tbody td:nth-child(2) {
                    position: sticky !important;
                    left: 70px;
                    background-color: #f2f2f2e6 !important;
                    z-index: 1;
                }

                .tbltransactionlist tbody td:nth-child(3), th:nth-child(3) {
                    position: sticky !important;
                    left: 140px;
                    background-color: #f2f2f2e6 !important;
                    z-index: 1;
                }


                table.dataTable.display tbody > tr.selected:hover, table.dataTable.display tbody > tr > .selected:hover {
                    background-color: transparent;
                }*/


                
                    .table td:last-child {
                  
                  background-color: transparent !important;
                }

                table.dataTable tbody > tr.selected, table.dataTable tbody > tr > .selected, .txtMultExportInvoice.selected {
                  background: linear-gradient(0deg, rgba(94, 121, 203, 0.57) 25%, rgba(209, 229, 250, 0.59) 86%, rgba(159, 217, 255, 0.55) 100%);
                  font-weight: bolder;
                  font-weight: 400;
                  color: #05025e;
                }

</style>


<div class="page-wrapper">
    @Html.AntiForgeryToken()
    <div class="container-fluid">
        <!-- Start Page Content -->

        <div class="card">
            <div class="card-header py-1">
                @*<div class="py-7 text-center">
                    <h2 id="styletext" class="text-center">@ViewBag.Title</h2>
                    </div>*@



                @if (@ViewBag.Type == "Sales" || @ViewBag.Type == "Customer")
                {
                    <h3 style="color:darkgreen">Received Amount From Customer</h3>
                }
                else if (@ViewBag.Type == "Purchase" || @ViewBag.Type == "Supplier")
                {
                    <h3 style="color:red">Paid To Supplier</h3>
                }
                else if (@ViewBag.Type == "Paid")
                {
                    <h3 style="color:red">Amount Paid</h3>
                }
                else if (@ViewBag.Type == "Received")
                {
                    <h3 style="color:darkgreen">Amount Received</h3>
                }
                else if (@ViewBag.Type == "CashContra")
                {
                    <h3 style="color:darkgreen"> Cash Received / Withdrawn from Bank.</h3>
                }
                else if (@ViewBag.Type == "BankContra")
                {
                    <h3 style="color:royalblue"> Cash Deposit To Bank.</h3>
                }
                else if (@ViewBag.Type == "CustomerDiscount")
                {
                    <h3 style="color:red"> Discount Given to Customer</h3>
                }
                else if (@ViewBag.Type == "SupplierDiscount")
                {
                    <h3 style="color:royalblue">Discount by Supplier.</h3>
                }
                else
                {
                    <h3 style="color:royalblue"> Accounts Transaction </h3>
                }
            </div>


            <div class="card-body">

                @using (Html.BeginForm("AddTransactionDetails", "Admin", FormMethod.Post, new { id = "myform", enctype = "multipart/form-data" }))
                {
                    @*@Html.AntiForgeryToken()*@
                    <div class="container-fluid">

                        <input type="hidden" id="mode" name="mode" value="@ViewBag.Title" />

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @if (Model != null)
                        {

                            <input type="hidden" id="Id" name="Id" value="@Model.Id" />
                            <input type="hidden" id="TransactionId" name="TransactionId" value="@Model.Id" />

                            <input type="hidden" id="LuserId" name="LuserId" value="@Model.LuserId" />
                            <input type="hidden" id="ComId" name="ComId" value="@Model.ComId" />
                            <input type="hidden" id="LuserIdUpdate" name="LuserIdUpdate" value="@Model.LuserIdUpdate" />
                            <input type="hidden" id="CreateDate" name="CreateDate" value="@Model.CreateDate" />
                            <input type="hidden" id="UpdateDate" name="UpdateDate" value="@Model.UpdateDate" />
                            <input type="hidden" asp-for="isSystem" />
                            <input type="hidden" asp-for="TransactionCategory" />
                            <input type="hidden" asp-for="TransactionType" />


                        }
                        else
                        {
                            <input type="hidden" id="ComId" name="ComId" value="0" />
                            <input type="hidden" id="Id" name="Id" value="" />
                            <input type="hidden" id="CreateDate" name="CreateDate" value="" />
                            <input type="hidden" id="UpdateDate" name="UpdateDate" value="" />


                        }




                        <div class="order-md-1">
                            <form class="needs-validation" novalidate>
                                <div class="row">

                                    <div id="divcurrencyid" class="col-md-3 col-12">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(x => x.CurrencyId)
                                                </span>
                                            </div>

                                            @Html.DropDownListFor(x => x.CurrencyId,
                                        new SelectList((IEnumerable<SelectListItem>)ViewBag.Currency, "Value", "Text"),
                                        htmlAttributes: new { @class = "form-control", id = "CurrencyId" })
                                            @Html.ValidationMessageFor(x => x.CurrencyId, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                    <div id="divcurrencyrate" class="col-md-3 col-12">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(x => x.CurrencyRate)
                                                </span>
                                            </div>

                                            @Html.TextBoxFor(x => x.CurrencyRate, null, new { @class = "form-control", @placeholder = "Currency Rate" , @value=1 })
                                            @Html.ValidationMessageFor(x => x.CurrencyRate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                </div>



                                <div class="row">

                                    <div class="col-md-3 col-12">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(model => model.TransactionCode, "Code")
                                                </span>
                                            </div>
                                            @Html.EditorFor(model => model.TransactionCode, new { htmlAttributes = new { @class = "form-control" , @readonly="readonly" } })
                                            @Html.ValidationMessageFor(model => model.TransactionCode, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <div class="col-md-3 col-12">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(model => model.InputDate, "Entry Date")
                                                </span>
                                            </div>
                                            <input asp-for="InputDate" class="form-control tg" value="@Model.InputDate.ToString("yyyy-MM-dd")" type="date" />
                                            <span asp-validation-for="InputDate" class="text-danger"></span>
                                        </div>
                                    </div>

                                </div>




                                <div class="row">
                                    @if (@ViewBag.Type == "Sales" || @ViewBag.Type == "Customer")
                                    {
                                        <div class="col-md-4 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.Customer, "Customer")
                                                    </span>
                                                </div>
                                                @Html.DropDownListFor(x => x.CustomerId,
                                        new SelectList((IEnumerable<SelectListItem>)ViewBag.Customer, "Value", "Text"), "Select Customer",
                                        htmlAttributes: new { @class = "form-control", id = "CustomerId" })
                                                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    }
                                    else if (@ViewBag.Type == "Purchase" || @ViewBag.Type == "Supplier")
                                    {
                                        <div id="divsupplierid" class="col-md-4 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(x => x.Supplier)
                                                    </span>
                                                </div>
                                                @Html.DropDownListFor(x => x.SupplierId,
                                        new SelectList((IEnumerable<SelectListItem>)ViewBag.Supplier, "Value", "Text"), "Select Supplier",
                                        htmlAttributes: new { @class = "form-control", id = "SupplierId" })
                                                @Html.ValidationMessageFor(x => x.SupplierId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    }

                                    <div class="col-md-2 col-12">
                                        <div type="button" class="btn btn-primary btn-block rounded-0 mb-2" id="addplus" onclick="getReferance()">Load</div>
                                    </div>
                                </div>


                                <div class="row">


                                    <div class="col-md-4 col-12">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(model => model.AccountPayTypeId, "Account Head")
                                                </span>
                                            </div>
                                            @Html.DropDownList("CashBankHead", null, htmlAttributes: new { id = "AccountPayTypeId", @class = "form-control" })

                                            @*<select asp-for="AccountId" class="form-control"></select>*@
                                            @Html.ValidationMessageFor(model => model.AccountPayTypeId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-3 col-12">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(model => model.TransactionAmount, "Amount")
                                                </span>
                                            </div>
                                            <input type="text" asp-for="TransactionAmount" class="form-control" />
                                            @Html.ValidationMessageFor(model => model.TransactionAmount, "", new { @class = "text-danger" })
                                        </div>
                                    </div>



                                 <div id="divdiscountamount" class="col-md-4 col-12  my-2 d-none">
                                                               <div class="input-group mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                                @Html.LabelFor(x => x.DiscountAmount)
                                            </span>
                                        </div>
                                    @Html.TextBoxFor(x => x.DiscountAmount, null, new { @class = "form-control"})
                                    @Html.ValidationMessageFor(x => x.DiscountAmount, "", new { @class = "text-danger" })
                                </div>
                                </div>


                                                                    
                                    <div class="col-md-3 col-12  d-none">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(model => model.VATAmount, "VATAmount")
                                                </span>
                                            </div>
                                            <input type="text" asp-for="VATAmount" class="form-control" />
                                            @Html.ValidationMessageFor(model => model.VATAmount, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    
                                    <div class="col-md-3 col-12  d-none">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(model => model.AITAmount, "AITAmount")
                                                </span>
                                            </div>
                                            <input type="text" asp-for="AITAmount" class="form-control" />
                                            @Html.ValidationMessageFor(model => model.AITAmount, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-4 col-12 d-none">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(model => model.AssetLiabilityAccountId, "Asset Liability Head")
                                                </span>
                                            </div>
                                            @Html.DropDownListFor(x => x.AssetLiabilityAccountId,
                                        new SelectList((IEnumerable<SelectListItem>)ViewBag.AssetLiabilityHead, "Value", "Text"), "Select Asset / Liability Head",
                                        htmlAttributes: new { @class = "form-control", id = "AssetLiabilityAccountId" })
                                            @*@Html.DropDownList("AssetLiabilityHead", null, htmlAttributes: new { id = "AssetLiabilityAccountId", @class = "form-control" })*@
                                            @*<select asp-for="AssetLiabilityAccountId" disabled class="form-control"></select>*@
                                            @Html.ValidationMessageFor(model => model.AssetLiabilityAccountId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-7 col-12">
                                        <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                                <span class="input-group-text py-0">
                                                    @Html.LabelFor(model => model.Description, "Description")
                                                </span>
                                            </div>
                                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <hr />

                                <div class="table-responsive mb-2">
                                    <button type="button" class="btn btn-primary rounded-0" data-toggle="modal" data-target="#exampleModal" id="viewmod"><i class="fa fa-plus fa-lg"></i></button>

                                    <table id="tbltransactionlist" class="tbltransactionlist text-nowrap display table table-striped table-hover table-bordered text-center" width="100%">
                                        <thead>
                                            <tr>

                                                <th>TransactionId</th>
                                                <th>Id</th>
                                                <th>Doc. Type</th>
                                                <th>Ref. Code</th>
                                                <th>Date</th>
                                                <th>Ref. Id</th>
                                                <th>Ref. Name</th>
                                                <th>Amount</th>
                                                <th>Discount</th>
                                                  <th>VAT</th>
                                                    <th>AIT</th>
                                                <th>Net Amount</th>
                                                <th>Rem. Due</th>
                                                <th>Action</th>

                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model != null)
                                            {
                                                if (Model.TransactionDetails != null)
                                                {
                                                    foreach (var item in Model.TransactionDetails)
                                                    {
                                                        <tr class="txtMultmasterlcdetails">

                                                            <td>
                                                                @item.TransactionId
                                                            </td>
                                                            <td>
                                                                @item.Id
                                                            </td>
                                                            @if (@ViewBag.Type == "Sales" || @ViewBag.Type == "Customer")
                                                            {
                                                                if (@item.Sales != null)
                                                                {
                                                                    <td>Sales</td>
                                                                    <td>@item.Sales.SaleCode</td>
                                                                    <td> @item.Sales.SalesDate.ToString("dd-MMM-yy")  </td>
                                                                    <td> @item.SalesId   </td>
                                                                    <td> @item.Sales.CustomerModel.Name</td>
                                                                    <td> @item.Sales.NetAmount </td>
                                                                 }
                                                                else
                                                                {
                                                                    <td> Sales</td>
                                                                    <td> Prev. Due</td>
                                                                    <td> </td>
                                                                    <td> </td>
                                                                    <td> @Model.Customer.Name</td>
                                                                    <td> 0</td> 
                                                                }

                                                            }
                                                            else if (@ViewBag.Type == "Purchase" || @ViewBag.Type == "Supplier") 
                                                            {
                                                                if (@item.Purchase != null)
                                                                {
                                                                    <td>Purchase</td>
                                                                    <td>@item.Purchase.PurchaseCode</td>
                                                                    <td> @item.Purchase.PurchaseDate.ToString("dd-MMM-yy")   </td>
                                                                    <td> @item.PurchaseId   </td>
                                                                    <td> @item.Purchase.SupplierModel.SupplierName</td>
                                                                    <td> @item.Purchase.NetAmount </td>
                                                                }
                                                                else
                                                                {
                                                                    <td> Purchase</td>
                                                                    <td> Prev. Due</td>
                                                                    <td> </td>
                                                                    <td> </td>
                                                                     <td> @Model.Supplier.SupplierName</td>
                                                                    <td> 0</td> 
                                                                }

                                                            }
                                                            <td>
                                                                @item.Discount
                                                            </td>
                                                                       <td>
                                                                @item.VAT
                                                            </td>
                                                                       <td>
                                                                @item.AIT
                                                            </td>
                                                            <td>
                                                                @item.NetAmount
                                                            </td>
                                                            <td>
                                                                @item.NetAmount
                                                            </td>
                                                            <td>
                                                                @*<a data-itemid="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash fa-2x"></i></a>*@
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                            }

                                        </tbody>

                                        <tfoot>
                                            <tr class="font-weight-bolder">
                                                <td colspan="4">
                                                    @*<button type="button" class="btn-purple btn-sm" data-toggle="modal" data-target="#productinfoModal"><i class="fa fa-plus"></i></button>*@

                                                </td>

                                                <td class="text-right h6" colspan="3">
                                                    <h6>Total Amount :</h6>
                                                </td>
                                                <td class="ttlamount h5">

                                                </td>
                                                <td class="ttldiscount h5">

                                                </td>
                                                           <td class="ttlvat h5">

                                                </td>
                                                           <td class="ttlait h5">

                                                </td>
                                                <td class="ttlnetamount h5">

                                                </td>
                                                <td class="ttlremdue h5">

                                                </td>



                                            </tr>
                                        </tfoot>
                                    </table>

                                </div>

                                @*</div>*@

                                <div class="row col-md-8 col-12 m-0 p-0">
                                    
                                    <div class="col-md-3 col-12 mr-0 mb-1">
                                    @if (ViewBag.ActionType == "Create")
                                    {
                                    @*<input type="submit" value="Save Changes" class="btn  btn-outline-primary rounded-0" /> *@

                                    <button id="AddTransactionDetails" class="btn  btn-outline-primary btn-block rounded-0" onclick="ConfirmDialog('Do you want to save ?')" type="button">Save</button>

                                    }
                                    else if (ViewBag.ActionType == "Edit")
                                    {
                                    <button id="AddTransactionDetails" class="btn btn-outline-warning btn-block text-danger rounded-0" onclick="ConfirmDialog('Do you want to update ?')" type="button">Update Changes</button>
                                    }
@*                                    else if (ViewBag.ActionType == "Delete")
                                    {
                                    <button class="btn btn-outline-danger btn-block rounded-0" type="button" onclick="Bank_delete()">Delete</button>
                                    }*@
                                </div>
                                     <div class="col-md-2 col-6 mb-1">
                                    @Html.ActionLink("Reset", "AddTransactionDetails", "Admin", null, new { @class = "btn btn-warning btn-block rounded-0" })
                                </div>
                               <div class="col-md-3 col-6 mb-1">
                                    @Html.ActionLink("Back To List", "TransactionList", "Admin", null, new { @class = "btn btn-info btn-block rounded-0" })
                                </div>
                           

                                <div class="col-md-4 col-12">
                                        <!-- Example single danger button -->
                                    <div class="dropdown">
                                            <a class="btn btn-primary btn-block rounded-0 dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                Add New Entry
                                            </a>

                                            <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">

                                                @Html.ActionLink("Transaction", "AddTransaction", null, null, new { @class = "dropdown-item", @id = "btnBack" })
                                                <hr data-content="Received" class="hr-text">
                                                @Html.ActionLink("By Income", "AddTransaction", new { Type = "Received" }, new { @class = "dropdown-item", @id = "btnBack" })
                                                @Html.ActionLink("From Customer", "AddTransaction", new { Type = "Customer" }, new { @class = "dropdown-item", @id = "btnBack" })
                                                @Html.ActionLink("By Invoice", "AddTransaction", new { Type = "Sales" }, new { @class = "dropdown-item", @id = "btnBack" })
                                                @Html.ActionLink("From Customer - Multiple Invoice", "AddTransactionDetails", new { Type = "Customer" }, new { @class = "dropdown-item", @id = "btnBack" })
                                                @*<div class="dropdown-divider"></div>*@
                                                <hr data-content="Paid" class="hr-text">
                                                @Html.ActionLink("For Expense", "AddTransaction", new { Type = "Paid" }, new { @class = "dropdown-item", @id = "btnBack" })
                                                @Html.ActionLink("To Supplier", "AddTransaction", new { Type = "Supplier" }, new { @class = "dropdown-item", @id = "btnBack" })
                                                @Html.ActionLink("By Purchase Order", "AddTransaction", new { Type = "Purchase" }, new { @class = "dropdown-item", @id = "btnBack" })
                                                @Html.ActionLink("To Supplier - Multiple Invoice", "AddTransactionDetails", new { Type = "Supplier" }, new { @class = "dropdown-item", @id = "btnBack" })

                                                <hr data-content="Accounts" class="hr-text">
                                                @Html.ActionLink("Cash Received From Bank", "AddTransaction", new { Type = "CashContra" }, new { @class = "dropdown-item", @id = "btnBack" })
                                                @Html.ActionLink("Cash Deposit To Bank", "AddTransaction", new { Type = "BankContra" }, new { @class = "dropdown-item", @id = "btnBack" })
                                                <hr data-content="Discount" class="hr-text">
                                                @Html.ActionLink("Discount To Customer", "AddTransaction", new { Type = "CustomerDiscount" }, new { @class = "dropdown-item", @id = "btnBack" })
                                                @Html.ActionLink("Discount From Supplier", "AddTransaction", new { Type = "SupplierDiscount" }, new { @class = "dropdown-item", @id = "btnBack" })

                                            </div>
                                        </div>
                                    </div>



                                </div>


                            </form>
                        </div>

                    </div>

                    <div class="modal" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog modal-lg" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="exampleModalLabel">Add Invoice</h5>
                                    
                                    <div class="float-right mt-1 ml-5">
                                    <label class="pr-2"><input type="radio" name="RptType" value="NetAmount" checked="checked" /> Net Amount  </label>
                                    <label class="pr-2"><input type="radio" name="RptType" value="Discount" /> Discount  </label>
                                    <label class="pr-2"><input type="radio" name="RptType" value="VAT" /> VAT  </label>
                                    <label class="pr-2"><input type="radio" name="RptType" value="AIT" /> AIT </label>

                                    </div>
                                    
                                    <button id="btnclose" type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>

                                <div class="modal-body">
                                    <div id="SubSectionList" class="">
                                        @*<div class="col-md-12 order-md-1">*@
                                        <div class="table-responsive">
                                            @*<table id="tblreferance" class="table-sm table-responsive table-striped table-hover text-center;" style="text-align: center; width:100%">*@
                                            <table id="tblreferance" class="table-striped table table-sm table-hover text-center" width="100%">
                                                <thead class="text-nowrap">
                                                    <tr>
                                                        <th>TransactionId</th>
                                                        <th>Id</th>
                                                        <th>Doc. Type</th>
                                                        <th>Ref. Code</th>
                                                        <th>Date</th>
                                                        <th>Ref. Id</th>
                                                        <th>Ref. Name</th>
                                                        <th>Amount</th>
                                                        <th>Discount</th>
                                                        <th>VAT</th>
                                                        <th>AIT</th>
                                                        <th>Net Amount</th>
                                                        <th>Rem. Due</th>
                                                        <th>Action</th>
                                                    </tr>
                                                </thead>
                                                @*<tbody>
                                                    @if (ViewBag.RefDocList != null)
                                                    {
                                                    foreach (var item in ViewBag.RefDocList)
                                                    {
                                                    <tr class="txtMultmasterlcdetails">

                                                    <td>
                                                    @item.TransactionId
                                                    </td>
                                                    <td>
                                                    @item.Id
                                                    </td>
                                                    <td>
                                                    @item.DocType
                                                    </td>
                                                    <td>
                                                    @item.RefCode
                                                    </td>
                                                    <td>
                                                    @item.RefId
                                                    </td>
                                                    <td>
                                                    @item.RefName
                                                    </td>
                                                    <td>
                                                    @item.Amount
                                                    </td>
                                                    <td>
                                                    @item.Discount
                                                    </td>
                                                    <td>
                                                    @item.NetAmouont
                                                    </td>
                                                    <td>
                                                    <a data-itemid="0" href="#" class="dlttrash deleteItem"> <i class="fa fa-trash fa-2x"></i></a>
                                                    </td>
                                                    </tr>
                                                    }
                                                    }

                                                    </tbody>*@
                                                <tfoot>
                                                    <tr>
                                                        <td colspan="4">
                                                        </td>
                                                        <td class="text-right" colspan="3">
                                                            <h6>Total Rec. Amt.</h6>
                                                        </td>
                                                        <td colspan="1">
                                                            <h6 class="ttlloadamountreferance">0.00</h6>
                                                        </td>
                                                        <td colspan="1"></td>
                                                        <td colspan="1"></td>
                                                        <td colspan="1"></td>

                                                    </tr>
                                                </tfoot>
                                            </table>

                                        </div>

                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <div class="col-md-12">


                                        <div class="row">
                                            <div class="col-md-2 col-12">
                                                <button type="button" class="btn btn-block btn-danger rounded-0" data-dismiss="modal">Close</button>
                                                @*<button type="button" id="btnCloseProductModal" class="btn btn-secondary" data-dismiss="modal">Close</button>*@

                                            </div>

                                            <div class="col-md-3 col-12">
                                            </div>




                                            <div class="col-md-5 col-12">
                                                <h4>Total Selected Amount : </h4>
                                            </div>

                                            <div class="col-md-2 col-12">
                                                <input type="text" id="TotalAmountReferance" class="form-control disabled" />
                                            </div>

                                        </div>

                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>


                }
            </div>


            @section scripts{


            <script>

                var isMultiCurrency = '@HttpContextAccessor.HttpContext.Session.GetInt32("isMultiCurrency").ToString()';
                if (isMultiCurrency == "0")
                {
                  $("#divcurrencyid").hide();
                  $("#divcurrencyrate").hide();
                }


                function ConfirmDialog(message) {
                    $('<div></div>').appendTo('body')
                        .html('<div><h6>' + message + '?</h6></div>')
                        .dialog({
                            modal: true,
                            title: 'Save / Update message',
                            zIndex: 10000,
                            autoOpen: true,
                            width: 'auto',
                            resizable: false,
                            buttons: {
                                Yes: function () {

                                    $(this).dialog("close");
                                    $("#AddTransactionDetails").prop("disabled", true);
                                    SaveTransactionModel();
                                },
                                No: function () {

                                    $(this).dialog("close");

                                }
                            },
                            close: function (event, ui) {
                                $(this).remove();
                            }
                        });
                };

                $('#exampleModal').on('shown.bs.modal', function (e) {
                    $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
                });


                var antiForgeryToken;
                antiForgeryToken = $("input[name='Dominate_ANTIFORZERY']").val();


                $('#TransactionAmount').attr("disabled", true);
                $('#TotalAmountReferance').attr("disabled", true);


                function TransactionModel_delete() {

                    var Id = $("#Id").val();


                    $.ajax({

                        url: '@Url.Action("Delete", "Admin")',
                        //url: '@Url.Action("Delete")',
                        data: JSON.stringify({ id: Id }), //use id here
                        //data: JSON.stringify(salesmain),
                        type: 'POST',
                        async: 'false',
                        //headers: { "X-CSRF-TOKEN-Dominate_ANTIFORZERY": antiForgeryToken },
                        contentType: 'application/json;',
                        dataType: 'json',
                        success: function (result) {
                            if (result.Success == "1") {
                                customFile('3', result.ex);
                                window.setTimeout(function () {
                                    // Move to a new location or you can do something else
                                    window.location.href = '@Url.Action("TransactionList", "Admin")';
                                }, 500);
                            }
                            else {
                                toastr.error(result.ex);
                            }
                        }
                    });
                }


                var tblRefList;
                var tbltransactionlist;


                //$("#AssetLiabilityAccountId").select2();
                //$("select").select2({
                //    theme: "bootstrap4",
                //});





                function getReferance() {


                    var CustomerId = $("#CustomerId option:selected").val();
                    var SupplierId = $("#SupplierId option:selected").val();
                    //console.log(CustomerId);
                    //console.log(SupplierId);


                    if (CustomerId == "")
                    {
                        toastr.error("Please Select Customer First.");
                        return true;
                    }

                    if (SupplierId == "")
                    {
                        toastr.error("Please Select Supplier First.");
                        return true;

                    }



                    $.ajax({
                        type: 'GET',
                        url: '@Url.Action("GetRefDetails", "Admin")',
                        //dataType: 'json',
                        contentType: 'application/json;',
                        dataType: 'json',
                        //async: 'false',
                       // headers: { "X-CSRF-TOKEN-Dominate_ANTIFORZERY": antiForgeryToken },
                        data: { CustomerId: CustomerId, SupplierId: SupplierId },
                        success: function (result) {

                            if (result.success == "1") {
                                if ($.fn.DataTable.isDataTable('#tblreferance')) {
                                    tblRefList.clear().draw();
                                }

                                var d = result.data;
                                //console.log(d);
                                for (var i = 0; i < d.length; i++) {
                                                   //console.log(d[i]);
                                    $('#tblreferance').dataTable().fnAddData([
                                        d[i].TransactionId,
                                        d[i].Id,
                                        d[i].DocType,
                                        d[i].RefCode,
                                        d[i].RefDate,
                                        d[i].RefId,
                                        d[i].RefName,
                                        d[i].Amount,
                                        d[i].Discount,
                                        d[i].VAT,
                                        d[i].AIT,
                                        d[i].NetAmount,
                                        0,
                                        ""
                                    ]);
                                }
                                //if (CustomerId > 0) {
                                //    $('#tblreferance').dataTable().fnAddData([
                                //        0,
                                //        0,
                                //        "Sales",
                                //        "Prev. Due",
                                //        "",
                                //        null,
                                //        $("#CustomerId option:selected").text(),
                                //        0,
                                //        0,
                                //        0,
                                //        0,
                                //        ""
                                //    ]);
                                //}

                                //    if (SupplierId > 0) {
                                //    $('#tblreferance').dataTable().fnAddData([
                                //        0,
                                //        0,
                                //        "Purchase",
                                //        "Prev. Due",
                                //        "",
                                //        null,
                                //         $("#SupplierId option:selected").text(),
                                //        0,
                                //        0,
                                //        0,
                                //        0,
                                //        ""
                                //    ]);
                                //}


                                $("#CustomerId").select2({disabled:'readonly'});

                                $("#viewmod").click();
                                

                                toastr.success('Data loaded in memory');

                                //TotalLoadAmountReferance();
                                //TotalLoadAmount();

                                    //$("#mod").trigger('click');
                                }
                                else {
                                    alert(result.ex);
                                }
                            }
                        });

                };


                function ClearData() {
                    $("#Id").val('');
                    $("#TransactionCode").val('');
                    $("#Description").val('');
                }

                function SaveTransactionModel() {

                    //var d = parseFloat($("#TransactionAmount").val());
                    //if (d > 15) {
                    //    $("#TransactionAmount").removeClass(" yellow");
                    //    $("#TransactionAmount").addClass("important red");
                    //    $("#TransactionAmount").css({ 'color': 'yellow', 'font-size': '150%' });
                    //    toastr.error('Load qty must not be greter than 15 metric ton');
                    //    return true;
                    //}
                    //else {
                    //    $("#TransactionAmount").removeClass("important red");
                    //    $("#TransactionAmount").addClass(" yellow");
                    //    $("#TransactionAmount").css({ 'color': 'green', 'font-size': '100%' });
                    //}


                    $('select').removeAttr('disabled');


                    if (!$("#myform").valid()) {
                        toastr.error('Please Fill Up All Necessary Information Correctly.');
                        $("html, body").animate({ scrollTop: 0 }, 500);
                        $("#AddTransactionDetails").prop("disabled", false);
                        return true;
                    }


                    var TransactionSubData = {
                        "Id": 0,
                        "TransactionId": "",
                        "SalesId": "",
                        "PurchaseId": "",
                        "Amount": 0.00,
                        "Discount": 0.00,
                        "VAT": 0.00,
                        "AIT": 0.00,
                        "NetAmount": 0.00,
                        "ComId":"",
                        "LuserId":""
                    };

                    var TransactionModel = {
                        Id: "",
                        TransactionCode: "",
                        TransactionType: "",
                        TransactionCategory: "",


                        InputDate: "",
                        AccountId: "",
                        AssetLiabilityAccountId: "",

                        Description: "",
                        CurrencyId: "",
                        CurrencyRate: 0.00,


                        TransactionAmount: 0.00,
                        DiscountAmount: 0.00,
                        VATAmount: 0.00,
                        AITAmount: 0.00,


                        //isPost:false,
                        AccountPayTypeId:null,
                        CustomerId:null,
                        SupplierId:null,
                        PurchaseId:null,
                        SalesId:null,


                        TransactionDetails: []

                    };


                    TransactionModel.Id = $("#Id").val();
                    TransactionModel.TransactionCode = $("#TransactionCode").val();
                    TransactionModel.TransactionType = $("#TransactionType").val();
                    TransactionModel.TransactionCategory = $("#TransactionCategory").val();

                    TransactionModel.InputDate = $("#InputDate").val();
                    //TransactionModel.AccountId = $("#AccountId option:selected").val();
                    TransactionModel.AssetLiabilityAccountId = $("#AssetLiabilityAccountId option:selected").val();
                    TransactionModel.AccountPayTypeId = $("#AccountPayTypeId option:selected").val();
                    TransactionModel.CustomerId = $("#CustomerId option:selected").val();
                    TransactionModel.SupplierId = $("#SupplierId option:selected").val();



                    //TransactionModel.LuserId = $("#LuserId").val();//'@HttpContextAccessor.HttpContext.Session.GetString("LuserId")';
                    //TransactionModel.ComId = $("#ComId").val();//'@HttpContextAccessor.HttpContext.Session.GetString("ComId")';
                    TransactionModel.CreateDate = $("#CreateDate").val();

                    TransactionModel.CurrencyId = $("#CurrencyId").val();
                    TransactionModel.CurrencyRate = $("#CurrencyRate").val();
                    TransactionModel.Description = $("#Description").val();
                    TransactionModel.TransactionAmount = $("#TransactionAmount").val();
                    TransactionModel.DiscountAmount = $("#DiscountAmount").val();
                    TransactionModel.VATAmount = $("#VATAmount").val();
                    TransactionModel.AITAmount = $("#AITAmount").val();




                    var oTablesubdatacheck = $('#tbltransactionlist').dataTable().fnGetData();

                    if (oTablesubdatacheck.length == 0) {
                        alert("Please Fill Necessary Data.");
                        return;
                    }

                    if ($.fn.DataTable.isDataTable('#tbltransactionlist')) {
                        var rows = $("#tbltransactionlist").dataTable().fnGetNodes();
                        //var oTablevouchrSub = $('#tbltransactionlist').dataTable().fnGetData();

                        //var data_AccId = tblVouchersub.column('AccId:name').data();

                        //console.log(rows);

                        var DeliveryReferanceIds = tbltransactionlist.column('TransactionId:name').data();
                        ////console.log(DeliveryReferanceIds);
                        ////alert(DeliveryReferanceIds.length)
                        var TransactionModelSubIds = tbltransactionlist.column('Id:name').data();
                        var TransactionModelSubRefIds = tbltransactionlist.column('ReferanceId:name').data();

                        //console.log(TransactionModelSubRefIds);

                        //var Truckloadnetamounts = tbltransactionlist.column('Truckloadnetamount:name').data();
                        ////var Truckloadnetamounts = rows[i].cells[8].children[0].value | 0;

                        for (var i = 0; i < DeliveryReferanceIds.length; i++) {

                            TransactionSubData.TransactionId = $("#Id").val();
                            TransactionSubData.Id = TransactionModelSubIds[i];

                            //console.log($.trim(rows[i].cells[0].innerHTML.replace(/[\$,]/g, '')));
                            if ($.trim(rows[i].cells[0].innerHTML.replace(/[\$,]/g, '')) == "Sales")
                            {
                                TransactionSubData.SalesId = TransactionModelSubRefIds[i];
                            }
                            if ($.trim(rows[i].cells[0].innerHTML.replace(/[\$,]/g, '')) == "Purchase")
                            {
                                TransactionSubData.PurchaseId = TransactionModelSubRefIds[i];
                            }

                            //TransactionSubData.Amount = rows[i].cells[6].children[0].value.replace(/[\$,]/g, '');
                            TransactionSubData.Discount = rows[i].cells[5].children[0].value.replace(/[\$,]/g, '');
                            TransactionSubData.VAT = rows[i].cells[6].children[0].value.replace(/[\$,]/g, '');
                            TransactionSubData.AIT = rows[i].cells[7].children[0].value.replace(/[\$,]/g, '');

                            TransactionSubData.NetAmount = rows[i].cells[8].children[0].value.replace(/[\$,]/g, '');

                            TransactionSubData.ComId = '@HttpContextAccessor.HttpContext.Session.GetInt32("ComId")';
                            TransactionSubData.LuserId = '@HttpContextAccessor.HttpContext.Session.GetInt32("UserId")';

                            TransactionModel.TransactionDetails.push(TransactionSubData);



                               TransactionSubData = {
                                    "Id": 0,
                                    "TransactionId": "",
                                    "SalesId": "",
                                    "PurchaseId": "",
                                    "Amount": 0.00,
                                    "Discount": 0.00,
                                    "VAT": 0.00,
                                    "AIT": 0.00,
                                    "NetAmount": 0.00,
                                    "ComId":"",
                                    "LuserId":""
                                };

                        }
                        //console.log(TransactionModel);
                        //alert('Wait');
                    }


                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("AddTransaction", "Admin")',
                        dataType: 'json',
                        async: 'false',
                       headers: { "X-CSRF-TOKEN-Dominate_ANTIFORZERY": antiForgeryToken },
                        data: { model: TransactionModel },
                        success: function (result) {
                            if (result.Success == "1") {

                                toastr.success('Data Save Successfully');
                                tblRefList.clear();
                                ClearData();
                                tbltransactionlist.clear();
                                tbltransactionlist.draw();
                                //alert('found');

                                //console.log(result.Id);



                                 var transactionidprint = result.Id;


                                window.setTimeout(function () {
                                    // Move to a new location or you can do something else

                                    //alert(transactionidprint);

                                    //var url = '@Url.Action("Print", "Admin")';
                                    //window.open(url, '_blank')


                                    var urllink = '@Url.Action("TransactionVoucherViewReport", "Admin", new { TransactionId = "xxxx"})'.replace("xxxx", transactionidprint);

                                    //alert(urllink);

                                    //var url = '@Url.Action("Print", "Admin")?id=' + transactionidprint;
                                    //alert(urllink);

                                    window.open(urllink, '_blank');
                                }, 500);


                                //alert($("#TransactionId").val());
                                //if ($('#edit').length > 0) {
                                if ( $("#TransactionId").val() > 0) {

                                    window.location.href = '@Url.Action("TransactionList", "Admin")';
                                }
                               


                                getReferance();

                                TotalLoadAmountReferance();
                                TotalLoadAmount();

                                $("#AddTransactionDetails").prop("disabled", false);



                                $("#TransactionAmount").val(0);//---fahad
                                $(".ttlloadamountreferance").text(0);//---fahad


                                

                                //alert(result.TransactionCode);
                                $("#TransactionCode").val(result.TransactionCode);
                                $("#Description").val(result.Description);


                            }
                            else {
                                alert(result.ex);
                            }
                        },
                        error: function (ex) {
                            alert('error');
                        }
                    });

                    $('#TransactionAmount').attr("disabled", true);


                };

                $('#tbltransactionlist').on('keyup', '.NetAmount , .VAT , .AIT , .Discount'  , function () {
                    TotalLoadAmount();
                });


                //$('#tbltransactionlist').on('keyup', ".NetAmount , .Discount , .VAT  , .AIT ", TotalLoadAmount()); //tbltransactionlist



                function TotalLoadAmount() {


                    //var abcdef = $('#tblreferance').DataTable();

                    //var $loadnetamount;

                    //var totalloadnetamount = 0;

                    //var oTable = $("#tbltransactionlist").dataTable().fnGetData();
                    var rows = $("#tbltransactionlist").dataTable().fnGetNodes();
                    //console.log(rows);

                     let $loadamount = 0.00;
                     let $loaddiscountamount = 0.00;
                     let $loadvatamount = 0.00;
                     let $loadaitamount = 0.00;

                     let $loadnetamount = 0.00;
                     let $loadremdueamount = 0.00;

                     let $totalloadamount = 0.00;
                     let $totalloaddiscountamount= 0.00;
                     let $totalloadvatamount= 0.00;
                     let $totalloadaitamount= 0.00;

                     let $totalloadnetamount= 0.00;
                     let $totalloadremdueamount= 0.00;


                    for (var i = 0; i < rows.length; i++) {



                        $loadamount = rows[i].cells[4].innerHTML.replace(/[\$,]/g, '');
                        //alert($loadamount);


                        $loaddiscountamount = rows[i].cells[5].children[0].value.replace(/[\$,]/g, '');
                        $loadvatamount = rows[i].cells[6].children[0].value.replace(/[\$,]/g, '');
                        $loadaitamount = rows[i].cells[7].children[0].value.replace(/[\$,]/g, '');

                        $loadnetamount = rows[i].cells[8].children[0].value.replace(/[\$,]/g, '');
                        rows[i].cells[9].children[0].value = $loadamount  - $loadnetamount - $loaddiscountamount - $loadvatamount - $loadaitamount;
                        $loadremdueamount = rows[i].cells[9].children[0].value.replace(/[\$,]/g, '');



                        //alert($loaddiscountamount);
                        // alert($loadnetamount);
                        //alert($loadremdueamount);


                        //var k=loadnetamount.toFixed(2);


                        $totalloaddiscountamount += parseFloat($loaddiscountamount);
                        $totalloadvatamount += parseFloat($loadvatamount);
                        $totalloadaitamount += parseFloat($loadaitamount);

                        $totalloadamount += parseFloat($loadamount);
                        $totalloadnetamount += parseFloat($loadnetamount);
                        $totalloadremdueamount += parseFloat($loadremdueamount);


                        //alert($totalloaddiscountamount);
                        //alert($totalloadamount);
                        //alert($totalloadnetamount);
                        //alert($totalloadremdueamount);



                    }




                    $(".ttlamount").val($totalloadamount.toLocaleString());
                    $(".ttlamount").text($totalloadamount.toLocaleString());

                    $(".ttldiscount").val($totalloaddiscountamount.toLocaleString());
                    $(".ttldiscount").text($totalloaddiscountamount.toLocaleString());

                    $(".ttlvat").val($totalloadvatamount.toLocaleString());
                    $(".ttlvat").text($totalloadvatamount.toLocaleString());

                    $(".ttlait").val($totalloadaitamount.toLocaleString());
                    $(".ttlait").text($totalloadaitamount.toLocaleString());

                    $(".ttlnetamount").val($totalloadnetamount.toLocaleString());
                    $(".ttlnetamount").text($totalloadnetamount.toLocaleString());

                    $(".ttlremdue").val($totalloadremdueamount.toLocaleString());
                    $(".ttlremdue").text($totalloadremdueamount.toLocaleString());



                    //$(".ttlloadnetamount").val(totalloadnetamount.toLocaleString());
                    //$(".ttlloadnetamount").text(totalloadnetamount.toLocaleString());

                    $("#TransactionAmount").val($totalloadnetamount.toLocaleString());//---fahad
                    $("#TransactionAmount").text($totalloadnetamount.toLocaleString());//---fahad

                    
                    $("#DiscountAmount").val($totalloaddiscountamount);//---fahad
                    $("#DiscountAmount").text($totalloaddiscountamount);//---fahad

                    $("#VATAmount").val($totalloadvatamount);//---fahad
                    $("#VATAmount").text($totalloadvatamount);//---fahad


                    $("#AITAmount").val($totalloadaitamount);//---fahad
                    $("#AITAmount").text($totalloadaitamount);//---fahad

                    //var d =parseFloat( totalloadnetamount.toLocaleString());
                    //if (d > 15) {
                    //    $("#TransactionAmount").removeClass(" yellow");
                    //    $("#TransactionAmount").addClass("important red");
                    //    $("#TransactionAmount").css({ 'color': 'yellow', 'font-size': '150%' });
                    //    toastr.error('Load qty must not be greter than 15 metric ton');
                    //}
                    //else {
                    //    $("#TransactionAmount").removeClass("important red");
                    //    $("#TransactionAmount").addClass(" yellow");
                    //    $("#TransactionAmount").css({ 'color': 'green', 'font-size': '100%' });
                    //}


                };

                function TotalLoadAmountReferance() {


                    var totalloadamountreferance = 0;

                    //var oTable = $("#tbltransactionlist").dataTable().fnGetData();
                    var rows = $("#tblreferance").dataTable().fnGetNodes();
                    //console.log(rows);

                    var abcdef = $('#tblreferance').DataTable();

                    var $loadnetamount;
                    var xyz = $('#TransactionAmount').val();

                    for (var i = 0; i < rows.length; i++) {
                        //alert('for loop');
                        //var $loadnetamount = rows[i].cells[6].children[0].valueAsNumber || 0.00;
                        if ($(rows[i]).hasClass('selected')) {
                           // aReturn.push(aTrs[i]);

                            //console.log(rows[i]);
                            var x = document.getElementById("tblreferance").rows[i+1].cells[4].innerText;
                            //console.log(x);
                            $loadnetamount = x;//rows[i].val();// .cells[6].children[0].value.replace(/[\$,]/g, '');
                            totalloadamountreferance += parseFloat($loadnetamount);


                        }


                    }
                    totalloadamountreferance = totalloadamountreferance + parseFloat(xyz);


                    $(".ttlloadamountreferance").val(totalloadamountreferance.toLocaleString());
                    $(".ttlloadamountreferance").text(totalloadamountreferance.toLocaleString());

                    $("#TotalAmountReferance").val(totalloadamountreferance.toLocaleString());//---fahad
                    $("#TotalAmountReferance").text(totalloadamountreferance.toLocaleString());//---fahad



                    //var d = parseFloat(totalloadamountreferance.toLocaleString());
                    //if (d > 15) {
                    //    $("#TotalAmountReferance").removeClass(" yellow");
                    //    $("#TotalAmountReferance").addClass("important red");
                    //    $("#TotalAmountReferance").css({ 'color': 'yellow', 'font-size': '150%' });
                    //    toastr.error('Load qty must not be greter than 15 metric ton');
                    //}
                    //else {
                    //    $("#TotalAmountReferance").removeClass("important red");
                    //    $("#TotalAmountReferance").addClass(" yellow");
                    //    $("#TotalAmountReferance").css({ 'color': 'green', 'font-size': '100%' });
                    //}

                    //tblreferance.draw();

                };


                $(document).ready(function () {







                    tblRefList = $("#tblreferance").DataTable({

                        "aoColumns": [

                            { name: "TransactionId", "sClass": "TransactionId", "visible": false },
                            { name: "Id", "sClass": "Id", "visible": false },
                            { name: "DocType", "sClass": "DocType", "visible": true },
                            { name: "ReferanceCode", "sClass": "ReferanceCode", "visible": true },
                            { name: "ReferanceDate", "sClass": "ReferanceDate", "visible": true },
                            { name: "ReferanceId", "sClass": "ReferanceId", "visible": false },
                            { name: "ReferanceName", "sClass": "ReferanceName", "visible": true },
                            { name: "RefAmount", "sClass": "RefAmount text-right", "visible": true },
                            { name: "Discounta", "sClass": "Discounta text-center", "visible": false },
                            { name: "VATa", "sClass": "VATa text-center", "visible": false },
                            { name: "AITa", "sClass": "AITa text-center", "visible": false },
                            { name: "NetAmount", "sClass": "NetAmount text-center", "visible": false },
                            { name: "RemDueAmount", "sClass": "RemDueAmount text-center", "visible": false },
                            { name: "IsDelete", "sClass": "Action", "visible": false }
                        ],



                        //rowCallback: function (row) {
                        //    $(row).addClass('txtMultmasterlcdetails');
                        //},
                        select: {
                            style: 'multi',
                            selector: 'td:nth-child(2),td:nth-child(3),td:nth-child(4),td:nth-child(5),td:nth-child(6)'
                        },

                        buttons: [
                            {
                                extend: "selectAll",
                                className: "btn-sm btn-info fa fa-check",
                                text: '',
                            },
                            {
                                extend: "selectNone",
                                className: "btn-sm btn-warning fa fa-times",
                                text: '',
                            },
                            {
                            extend: "selectRows",
                            className: "btn-sm btn-success fa fa-plus",
                            text: '',
                            action: function (e, sourceTable, button, config) {
                                var total_attached_value = 0;//$("#TransactionAmount").val();
                                //var total_readyto_attached_value = $("#TotalAmountReferance").val();

                                //var abc = parseFloat(parseFloat(total_attached_value) + parseFloat(total_readyto_attached_value));
                                //alert(abc);


                                //if (abc <= 15) {

                                    var selectedRows = sourceTable.rows(".selected");
                                    var mData = selectedRows.data();

                                    selectedRows.remove().draw();
                                    targetTable = $("#tbltransactionlist").DataTable();


                                    var rowCount = targetTable
                                        .column(0)
                                        .data()
                                        .length;

                                    $.each(mData, function (idx, item) {

                                        console.log(idx);
                                        console.log(item);
                                        item[13] = idx + 1 + rowCount;
                                         
                                        var reporttype = $("input[name=RptType]:checked").val();
                                        

                                        if (reporttype == 'Discount') {
                                        item[8] = item[9];
                                        item[9] = 0;
                                        }
                                 

                                        //alert(item[24]);
                                        targetTable.row.add(JSON.parse(JSON.stringify(

                                            item
                                        )));
                                      
                                        //alert('data added');

                                    })

                                    targetTable.draw();
                                    TotalLoadAmount();
                                    ////multInputsProduct();
                                //}
                            }
                        }],
                      initComplete: function () {

                            $("#tblreferance button").on("click", function (evt) {

                                var t1 = $("#tblreferance").DataTable();
                                var t2 = $("#tbltransactionlist").DataTable();
                                var tr = $(this).closest("tr");
                                var row = t1.row(tr);
                                //console.log(row);
                                var data = JSON.parse(JSON.stringify(row.data()));
                                //alert(data[0]);
                                row.remove().draw();
                                t2.row.add(data).draw();

                                //multInputsProduct();
                            });
                        },
                        //"bFilter": true,
                        "paging": false,
                        //"order": false,
                        "orderable":false,
                        //"retrieve": true,
                        "iDisplayLength": 10,
                        "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
                        "scrollX": true,
                        "scrollY": 400,
                        scrollCollapse: true,
                        //"order": [2, 'asc'],
                        //"oLanguage": { "sZeroRecords": "", "sEmptyTable": "" },
                        //dom: 'tBlip' //fahad
                        dom: '<"top"fiB>rt',
                        "language": {
                            sLengthMenu: " _MENU_",
                            search: "",
                            searchPlaceholder: "Search..."
                        }
                    });


                    //tblRefList.MakeCellsEditable({
                    //    "onUpdate": myCallbackFunction,
                    //    "inputCss": 'my-input-class',
                    //    "columns": [8],

                    //    "inputTypes": [
                    //        {
                    //            "column": 8,
                    //            "type": "text",
                    //            "options": null
                    //        }

                    //    ]
                    //});


                    tblRefList
                        .on('select', function (e, dt, type, indexes) {
                            TotalLoadAmountReferance();
                            TotalLoadAmount();
                        })
                        .on('deselect', function (e, dt, type, indexes) {
                            TotalLoadAmountReferance();
                            TotalLoadAmount();
                        });


                    //function myCallbackFunction(updatedCell, updatedRow, oldValue) {
                    //    var total = 0;


                    //    multInputslcdetails();
                    //    console.log(total);

                    //    console.log("The new value for the cell is: " + updatedCell.data());
                    //    console.log("The old value for that cell was: " + oldValue);
                    //    console.log("The values for each cell in that row are: " + updatedRow.data());
                    //    console.log(updatedRow.index());


                    //    var cell_balanceqty = tblRefList.cell(updatedRow.index(), 12);
                    //    //alert(cell_balanceqty.data());


                    //    if (updatedCell.data() > cell_balanceqty.data()) {
                    //        alert('Wrong Input');
                    //        console.log($(this).index());

                    //        var cell = tblRefList.cell(updatedRow.index(), 8);
                    //        cell.data(cell_balanceqty.data());


                    //    }

                    //    TotalLoadAmountReferance();
                    //    TotalLoadAmount();

                    //}


                    function multInputslcdetails() {

                        var totalloadamountreferance = 0;



                        $("tr.selected").each(function () {


                            {

                                // get the values from this row:
                                var $val1 = $('.loadamountreferance', this).text().replace(/[\$,]/g, '');


                                totalloadamountreferance += parseFloat($val1);

                                //totalvalue += parseFloat($val4);


                            }
                            //ttlqty += $val1;

                        });

                        //var x = totalvalue.toFixed(3);

                        $(".ttlloadamountreferance").val(totalloadamountreferance.toLocaleString());
                        $(".ttlloadamountreferance").text(totalloadamountreferance.toLocaleString());

                        $("#TotalAmountReferance").val(totalloadamountreferance.toLocaleString());//---fahad
                        $("#TotalAmountReferance").text(totalloadamountreferance.toLocaleString());//---fahad

                        //var d = parseFloat(totalloadamountreferance.toLocaleString());
                        //if (d > 15) {
                        //    $("#TotalAmountReferance").removeClass(" yellow");
                        //    $("#TotalAmountReferance").addClass("important red");
                        //    $("#TotalAmountReferance").css({ 'color': 'yellow', 'font-size': '150%' });
                        //    toastr.error('Load qty must not be greter than 15 metric ton');
                        //}
                        //else {
                        //    $("#TotalAmountReferance").removeClass("important red");
                        //    $("#TotalAmountReferance").addClass(" yellow");
                        //    $("#TotalAmountReferance").css({ 'color': 'green', 'font-size': '100%' });
                        //}



                    };



                    tbltransactionlist = $('#tbltransactionlist').DataTable({
                        columns: [

                            { name: "TransactionId", "sClass": "TransactionId", "visible": false },
                            { name: "Id", "sClass": "Id", "visible": false },
                            { name: "DocType", "sClass": "DocType", "visible": true },
                            { name: "ReferanceCode", "sClass": "ReferanceCode", "visible": true },
                            { name: "ReferanceDate", "sClass": "ReferanceDate", "visible": true },
                            { name: "ReferanceId", "sClass": "ReferanceId", "visible": false },
                            { name: "ReferanceName", "sClass": "ReferanceName", "visible": true },
                            { name: "RefAmount", "sClass": "RefAmount text-right", "visible": true },
                            { name: "Discount", "sClass": "Discount text-center", "visible": true },
                            { name: "VAT", "sClass": "VAT text-center", "visible": true },
                            { name: "AIT", "sClass": "AIT text-center", "visible": true },

                            { name: "NetAmount", "sClass": "NetAmount text-center", "visible": true },
                            { name: "RemDueAmount", "sClass": "RemDueAmount text-center", "visible": true },
                            { name: "IsDelete", "sClass": "Action", "visible": false }],
                        //"tableTools": {
                        //    "sRowSelector": "td:not(:first-child)"
                        //},
                        //dom: 'litpfB',
                        dom: 'tBlip',//fahad
                        //select: "multi",

                        select: {
                            style: 'multi',
                            selector: 'td:nth-child(1),td:nth-child(2),td:nth-child(3),td:nth-child(4)'
                        },

                        columnDefs: [

                            {

                                render: function (data) {
                                    return "<input type='number' data-val='true'  data-val-required='Please Fill Discount.' class='form-control form-control-sm discount text-center' value='" + data + "'/>"
                                },
                                "targets": 8
                            },

                            {

                                render: function (data) {
                                    return "<input type='number' data-val='true'  data-val-required='Please Fill VAT.' class='form-control form-control-sm vat text-center' value='" + data + "'/>"
                                },
                                "targets": 9
                            },

                            {

                                render: function (data) {
                                    return "<input type='number' data-val='true'  data-val-required='Please Fill AIT.' class='form-control form-control-sm ait text-center' value='" + data + "'/>"
                                },
                                "targets": 10
                            },

                            {

                                render: function (data) {
                                    return "<input type='number' data-val='true'  data-val-required='Please Fill Amount.' class='form-control form-control-sm amount text-center'  value='" + data + "'/>"
                                },
                                "targets": 11
                            },

                            {

                                render: function (data) {
                                    return "<input type='number' data-val='true'  data-val-required='Please Fill Amount.' class='form-control form-control-sm remamount text-center'  value='" + data + "' readonly=readonly/>"
                                },
                                "targets": 12
                            }

                        ],
                        //AddTransactionDetailsdRow: function (row) {
                        //    $(".datecell", row).datepicker(
                        //        { dateFormat: 'dd-M-yy' }
                        //        //$('#datepicker').datepicker({ dateFormat: 'dd-mm-yy' }).val();

                        //    ).val();
                        //},
                        buttons: [{
                            extend: "selectRows",
                            text: 'Detach From Transaction',
                            className:"rounded-0 btn-danger mb-1 mt-2",

                            action: function (e, sourceTable, button, config) {

                                var selectedRows = sourceTable.rows(".selected");
                                var mData = selectedRows.data();
                                selectedRows.remove().draw();
                                targetTable = $("#tblreferance").DataTable();
                                $.each(mData, function (idx, item) {
                                    targetTable.row.add(JSON.parse(JSON.stringify(item)));
                                })
                                targetTable.draw();
                                TotalLoadAmount();
                                //multInputsProduct();
                            }

                        }],

                        initComplete: function () {
                            $("#tbltransactionlist button").on("click", function (evt) {

                                var t1 = $("#tbltransactionlist").DataTable();
                                var t2 = $("#tblreferance").DataTable();
                                var tr = $(this).closest("tr");
                                var row = t1.row(tr);

                                if (row.data().length > 0 || row.data() != "undefined")
                                {
                                               //console.log(row);
                                var data = JSON.parse(JSON.stringify(row.data()));
                                //alert(data[0]);
                                row.remove().draw();
                                t2.row.add(data).draw();
                                }


                                //multInputsProduct();
                            });



                        },

                        "bFilter": false,
                        //"bSort": true,
                        ordering :false,
                        "bInfo": false,
                        "async": false,
                        "paging": false,
                        "retrieve": true,
                        //"iDisplayLength": 10,
                        //"lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
                        "scrollX": false,
                        "scrollCollapse": true
                        //rowCallback: function (row) {
                        //    $(row).addClass('txtMultInventorySub');
                        //}
                        //,select: "multi"
                    });

                    TotalLoadAmount();


                });
            </script>
            }
        </div>

    </div>
</div>




