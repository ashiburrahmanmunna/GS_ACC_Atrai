
@model IEnumerable<Atrai.Core.Entity.DocumentList>
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@*@using Atrai.Models.Common

    @{
        UserPermission permission = HttpContextAccessor.HttpContext.Session.GetObject<UserPermission>("userpermission");
    }*@
@{ ViewData["Title"] = "Post Document";
    Layout = "~/Views/Shared/_adminLayout.cshtml"; }

<style>

/*    table.dataTable tbody > tr.selected, table.dataTable tbody > tr > .selected {
        background-color: #b2c4e8d1;
    }

    .table > tbody > tr > td, .table > tbody > tr > th, .table > tfoot > tr > td, .table > tfoot > tr > th, .table > thead > tr > td, .table > thead > tr > th {
        line-height: 24px;
        vertical-align: middle;
        text-align:center;
    }
*/


             @@media screen and (max-width: 767px) {
             div.dt-buttons  {
                width: 50%!important;
            }
    }


</style>


@using (Html.BeginForm())
{

    <div class="page-wrapper">
        @Html.AntiForgeryToken()
        <div class="container-fluid">
            <div class="card my-2">

@*                                @Html.Hidden("FromDate", null, new { @class = "form-control text-center FromDate", @placeholder = "From Date", @autocomplete = "off", name = "FromDate" })
                                @Html.Hidden("ToDate", null, new { @class = "form-control text-center ToDate", @placeholder = "To Date", @autocomplete = "off", name = "ToDate" })
*@
            <div class="card-header">
                      <div class="col-md-3 col-12">
                        <h4>Document List</h4>
                    </div>
            </div>
            <div class="card-body p-1 m-1">

                <div class="row">

                         <div class="col-md col-12  mb-2">
                         
                                      <div class="form-inline divHiddenItems">
                                 <div class="input-group input-group-sm">
                                <div class="input-group-prepend">
                                    <div class="input-group-text">
                                       <i class="fa fa-calendar"></i>
                                     </div>
                                </div>
                                <input type="text" class="form-control from-control-sm" name="date" id="daterange-btn" style="width: auto;">
                                 <button id='btnDec' type="button" class="btn btn-danger rounded-0" title='Decrement month'><i class="fa fa-calendar-minus-o" aria-hidden="true"></i></button>
                                <button id='btnInc' type="button" class="btn btn-info  rounded-0" title='Increment month'><i class="fa fa-calendar-plus-o" aria-hidden="true"></i></button>
                                </div>

@*                                <span type="button" class="btn btn-sm btn-outline-info" id="daterange-btn">

                                    <i class="fa fa-calendar"></i>&nbsp; <span>defaut date</span>

                                    <i class="fa fa-caret-down"></i>
                                </span>*@
                          @*        <input id="daterange-btn" size="40" value="">*@
                            </div>
                        </div>


                                <div class="col-md col-6 d-none">
                                    <div class="input-group  input-group-sm mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text">From Date</span>
                                        </div>
                                        @Html.TextBox("FromDate", null, new { @class = "form-control form-control-sm text-center FromDate", @placeholder = "Select From Date ", @autocomplete = "off", name = "FromDate" })
                                    </div>
                                </div>

                               <div class="col-md col-6 d-none">
                                    <div class="input-group input-group-sm mb-2">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text">To Date</span>
                                        </div>
                                        @Html.TextBox("ToDate", null, new { @class = "form-control form-control-sm text-center ToDate", @placeholder = "Select To Date ", @autocomplete = "off", name = "ToDate" })
                                    </div>
                                </div>

                        <div class="col-md col-6">
                            <div class="input-group mb-2">
                                @Html.DropDownList("Warehouse", ViewBag.Warehouse as List<SelectListItem>,  new { @class = "form-control form-control-sm" })
                            </div>
                        </div>


                    <div class="col-md col-6 ">
                        <div class="input-group  input-group-sm mb-2">
                            <div class="input-group-prepend">
                                <span class="input-group-text">
                                    Document Type
                                </span>
                            </div>
                            @Html.DropDownList("DocType", null, null, htmlAttributes: new { @class = "form-control  form-control-sm" })
                        </div>
                    </div>
              
                    <div class="col-md col-7">
                        <fieldset>
                            <label><input type="radio" name="criteria" checked="checked" value="All" style="margin-left: 10px" /> All</label>
                            <label><input type="radio" name="criteria" value="Post" style="margin-left: 20px" /> Post </label>
                            <label><input type="radio" name="criteria" value="UnPost" style="margin-left: 20px" /> UnPost</label>
                        </fieldset>
                    </div>
                    <div class="col-md-1 col-5">
                        <input type="submit" id="btnLoad" value="Load" class="btn btn-sm btn-success btn-block rounded-0" />
                    </div>
           
                </div>
            </div>

            </div>

            <div class="table-responsive card p-2">
                <table id="tbllist" class="table table-striped table-bordered table-sm  table-hover" cellspacing="0" width="100%">
                    <thead class="text-nowrap">
                        @{
                                    <tr>
                                        <th>

                                        </th>
                                          <th>
                                              CostCalculation Id
                                        </th>
                                <th class="text-nowrap">
                                              Posted Date
                                        </th>


                                        <th>
                                            Document Id
                                        </th>
                                        <th>
                                            Document No
                                        </th>
                                        <th>
                                            Document Type
                                        </th>
                                        <th>
                                            Document Date
                                        </th>
                                        <th>
                                            User Info
                                        </th>
                                        <th>Net Amount</th>
                                        <th>Location</th>

                                        <th>
                                            Remarks
                                        </th>
                                        <th>
                                            Approve Status
                                        </th>
                                <th class="text-nowrap">
                                            Posted
                                        </th>
                                        <th></th>
                                    </tr>
                        }

                    <thead>
                    <tbody>

                        @foreach (var item in Model)
                        {
                        <tr>
                            <td>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CostCaclculatedId)
                            </td>
                                <td class="text-nowrap">
                                @Html.DisplayFor(modelItem => item.CreatedDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DocumentId)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DocumentNo)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DocumentType)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DocumentDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UserInfo)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.NetAmount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Location)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Remarks)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ApproveStatus)
                            </td>
                                <td class="text-nowrap">
                                @Html.DisplayFor(modelItem => item.DocumentStatus)
                            </td>

                            <td class="text-nowrap">
                                <span data-toggle="tooltip" title="Print!">
                                    @if (item.DocumentType == "Purchase")
                                    {
                                        @Html.ActionLink(" ", "PurchaseReport", "Purchase", new { purchaseid = item.DocumentId }, new { @target = "_blank", @class = "fa fa-print btn btn-success btn-xs" })
                                    }
                                    else if (item.DocumentType == "Sales")
                                    {
                                        @Html.ActionLink(" ", "SaleReport", "Sales", new { saleId = item.DocumentId }, new { @target = "_blank", @class = "fa fa-print btn btn-success btn-xs" })
                                    }
                                    else if (item.DocumentType == "SalesReturn ")
                                    {
                                        @Html.ActionLink("", "SalesReturnReport", "SalesReturn", new { saleReturnId = item.DocumentId }, new { @target = "_blank", @class = "fa fa-print btn btn-success btn-xs" })
                                    }
                                    else if (item.DocumentType == "PurchaseReturn")
                                    {
                                        @Html.ActionLink("", "PurchaseReturnReport", "PurchaseReturn", new { PurchaseReturnId = item.DocumentId }, new { @target = "_blank", @class = "fa fa-print btn btn-success btn-xs" })
                                    }
                                    else if (item.DocumentType == "Damage")
                                    {
                                        @Html.ActionLink("", "DamageReport", "Damage", new { DamageId = item.DocumentId }, new { @target = "_blank", @class = "fa fa-print btn btn-success btn-xs" })
                                    }
                                    else if (item.DocumentType == "InternalTransfer")
                                    {
                                        @Html.ActionLink(" ", "InternalTransferReport", "InternalTransfer", new { InternalTransferId = item.DocumentId }, new { @target = "_blank", @class = "fa fa-print btn btn-success btn-xs" })
                                    }
                                    else if (item.DocumentType == "Issue")
                                    {
                                        @Html.ActionLink(" ", "IssueReport", "Issue", new { IssueId = item.DocumentId }, new { @target = "_blank", @class = "fa fa-print btn btn-success btn-xs" })
                                    }
                                    else if (item.DocumentType.Contains("Voucher"))
                                    {
                                        @Html.ActionLink(" ", "Print", "Accounts", new { id = item.DocumentId , type = item.DocumentType }, new { @target = "_blank", @class = "fa fa-print btn btn-success btn-xs" })
                                    }
                                    else if (item.DocumentType.Contains("Account"))
                                    {
                                        @Html.ActionLink(" ", "TransactionVoucherViewReport", "Admin", new { TransactionId = item.DocumentId , type = "PDF" }, new { @target = "_blank", @class = "fa fa-print btn btn-success btn-xs" })
                                    }
                                    else
                                    {
                                        @*@Html.ActionLink(" ", "Print", new { Id = item.DocumentId, type = "pdf", docname = item.DocumentType }, new { @target = "_blank", @class = "fa fa-print btn btn-success btn-xs" })*@
                                    }
                                </span>


                            </td>

                        </tr>
                        }
                    </tbody>

                </table>
            </div>

        </div>

    </div>


}



@section Scripts{
    <script type="text/javascript">



        var antiForgeryToken;

        $(document).ready(function () {

            //$(".table-responsive").attr("disabled", "disabled");


            antiForgeryToken = $("input[name='Dominate_ANTIFORZERY']").val();
            var tbllist = $('#tbllist').DataTable({
                'columnDefs': [
                    {
                        'targets': 1,
                        'visible': false,
                        'className': 'chkAllPost',
                        'searchable': false,
                         //orderable: true,


                    },
                    {
                        'targets': 2,
                        'searchable': false,
                         //'sorting': true,


                    },
                    {
                        'targets': 3,
                        'visible': false,
                        'searchable': false

                    },
                    {
                        orderable: false,
                        className: 'select-checkbox',
                        targets: 0
                    }

                ],
                'ordering':false,
                'paging': true,
                'searching': true,
                select: {
                    style: 'os',
                    selector: 'td:first-child'
                },
                //dom: 'Blfrtip',
                dom: "<'row'<'col-md-6 col-2'f><'col-md-6 col-10'B>>" +
                "<'row'<'col-md-12'tr>>" +
                "<'row'<'col-md-12 col-5'i><'col-md-12 col-7'p>>",
                buttons: [
                    //'selected',
                    //'selectedSingle',
                    'selectAll',
                    'selectNone',
                    {
                        attr: {
                            title: 'Post',
                            id: "btnPost",
                        },
                        text: 'Post',
                        className: "btn-success btnpost rounded-0",
                        action: function (e, dt, node, config) {

                                ConfirmDialog("Post");

                        }
                    },
                    {
                        attr: {
                            title: 'Un Post',
                            id: "btnUnPost",
                        },

                        text: 'UnPost',
                        className: "btn-warning btnunpost rounded-0",
                        action: function (e, dt, node, config) {
                            //alert('Button activated');
                           {
                                ConfirmDialog("UnPost");
                            }

                        }
                    }
                    //'selectRows',
                    //'selectColumns',
                    //'selectCells'
                ],
                'info': true,
                "language": {
                    sLengthMenu: " _MENU_",
                    search: "",
                    searchPlaceholder: "Search..."
                },

            }
            );

           // $('#tbllist tbody td').off('click');

            $(".btnpost, .btnunpost").append('<span class="d-none spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>')

            var viewbagtitle = "@ViewBag.criteria";
            //alert(viewbagtitle);

            if (viewbagtitle == "Post") {
                $(".btnunpost").show();
                $(".btnpost").hide();
            }
            else if (viewbagtitle == "UnPost") {
                $(".btnunpost").hide();
                $(".btnpost").show();
            }
            //else if (viewbagtitle != "") {
            //    $(".btnunpost").text("DisApprove");
            //    $(".btnpost").text("Approve");
            //    if (viewbagtitle == "Pending") {
            //        $(".btnunpost").show();
            //        $(".btnpost").show();
            //    }
            //    else if (viewbagtitle == "Approved") {
            //        $(".btnunpost").show();
            //        $(".btnpost").hide();
            //    }
            //    else if (viewbagtitle == "DisApproved") {
            //        $(".btnunpost").hide();
            //        $(".btnpost").show();
            //    }
            //}
            else
            {
                $(".btnunpost").hide();
                $(".btnpost").hide();
                $(".buttons-select-all").hide();
                $(".buttons-select-none").hide();
            };

            //$("input[name=criteria][value='Post']").prop("checked",true);
             $("input[name=criteria]").val([viewbagtitle]);


            var table = $('#tbllist').DataTable();


            $('#tbllist tbody').on('click', 'tr', function () {
                $(this).toggleClass('selected');
            });




            function fncSubmitPost() {

                //alert(table.rows('.selected').data().length + ' row(s) selected');

                var rows = table.rows('.selected').data();

                //console.log(rows);

                if (rows.length < 1) {
                    return false;
                }

                if ($('.btnpost').children('span').eq(1).hasClass('d-none')) {
                    $('.btnpost').children('span').eq(1).removeClass('d-none');
                    $('.btn').addClass('disabled');
                    $(".table *").prop('disabled', true);
                }



                var docid = [];
                var doctype = [];

                var criteria = "Post";


                for (var i = 0; i < rows.length; i++) {

                    var rowData = rows[i];
                    docid.push(rowData[3]);
                    doctype.push(rowData[5]);
                    //approvaltype.push(rowData[99]);


                }

                //console.log(docid);

                $.ajax({
                    type: 'POST',
                    headers: { "X-CSRF-TOKEN-Dominate_ANTIFORZERY": antiForgeryToken },
                url: '@Url.Action("PostUnpostDocument", "Admin")',
                dataType: 'json',
                async: true,
                    data: { docid: docid, criteria: criteria, doctype: doctype }, //, approvaltype: approvaltype
                    success: function (response) {
                        if (response.Success == "1") {
                            var selectedRows = table.rows(".selected");
                            selectedRows.remove().draw();
                            toastr.success(response.ex);
                            $("#btnLoad").focus();

                            if (!$('.btnpost').children('span').eq(1).hasClass('d-none')) {
                                //alert('now here');
                                $('.btnpost').children('span').eq(1).addClass('d-none');
                                $('.btn').removeClass('disabled');
                                $(".table *").prop('disabled', false);
                            }

                        }
                        else if (response.Success == "2") {
                            toastr.warning(response.ex);
                        }
                        else if (response.Success == "3") {
                            
                              $('.btn').addClass('disabled');
                            $(".table *").prop('disabled', true);

                            toastr.error(response.ex);

                            setTimeout(function () {
                                // whene transaction error then reload page
                                $("#btnLoad").click();
                            }, 5000);

                            //alert('Error Found.');

                        }
                        else {
                            toastr.error(response.ex);
                        }



                    },
                    error: function (ex) {
                        alert('Failed.' + ex);
                        if (!$('.btnpost').children('span').eq(1).hasClass('d-none')) {
                            $('.btnpost').children('span').eq(1).addClass('d-none');
                            $('.btn').removeClass('disabled');
                            $(".table *").prop('disabled', false);
                        }
                    }

                });

                //alert('Post Successfull');

            };
            function fncSubmitUnPost() {

                //alert(table.rows('.selected').data().length + ' row(s) selected');

                var rows = table.rows('.selected').data();
                if (rows.length < 1) {
                    return false;
                }


                //console.log(rows);

                if ($('.btnunpost').children('span').eq(1).hasClass('d-none')) {
                    $('.btnunpost').children('span').eq(1).removeClass('d-none');
                    $('.btn').addClass('disabled');
                    $(".table *").prop('disabled', true);
                }




                var docid = [];
                var doctype = [];
                var criteria = "UnPost";

                for (var i = 0; i < rows.length; i++) {

                    var rowData = rows[i];
                    //alert(rowData[0]);
                    //console.log(rowData);
                    docid.push(rowData[3]);
                    doctype.push(rowData[5]);
                }


                $.ajax({
                    type: 'POST',
                    headers: { "X-CSRF-TOKEN-Dominate_ANTIFORZERY": antiForgeryToken },
                url: '@Url.Action("PostUnpostDocument", "Admin")',
                dataType: 'json',
                async: true,
                    data: { docid: docid, criteria: criteria , doctype:doctype},
                    success: function (response) {
                        if (response.Success == "1") {
                            var selectedRows = table.rows(".selected");
                            selectedRows.remove().draw();
                            toastr.success(response.ex);
                            $("#btnLoad").focus();
                        }
                        else if (response.Success == "2") {
                            toastr.warning(response.ex);
                        }
                        else if (response.Success == "3") {
                            toastr.error(response.ex);
                            setTimeout(function () {
                                // whene transaction error then reload page
                                $("#btnLoad").click();
                            }, 7000);
                        }
                        else {
                            toastr.error(response.ex);
                        }

                        if (!$('.btnunpost').children('span').eq(1).hasClass('d-none')) {
                            $('.btnunpost').children('span').eq(1).addClass('d-none');
                            $('.btn').removeClass('disabled');
                            $(".table *").prop('disabled', false);
                        }

                    },



                    error: function (ex) {
                        alert('Failed.' + ex);

                        if (!$('.btnunpost').children('span').eq(1).hasClass('d-none')) {
                            $('.btnunpost').children('span').eq(1).addClass('d-none');
                            //$('.btnunpost').prop("disabled", false);
                            $('.btn').removeClass('disabled');
                            $(".table *").prop('disabled', false);
                        }
                    }

                });

                //alert('Unpost Successfull');

            };

            CurrentDate();

            $(".FromDate").datepicker({

                dateFormat: "dd-M-y",
                changeMonth: true,
                changeYear: true

            });
            $(".ToDate").datepicker({

                dateFormat: "dd-M-y",
                changeMonth: true,
                changeYear: true

            });

            function CurrentDate() {
                var date = new Date();
                var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
                    "Aug", "Sep", "Oct", "Nov", "Dec"];
                var val = date.getDate() + "-" + months[date.getMonth()] + "-" + date.getFullYear();


                if ($(".FromDate").val() == '') {
                    $(".FromDate").val(val);
                }
                if ($(".ToDate").val() == '') {
                    $(".ToDate").val(val);
                }


            }


            function ConfirmDialog(message) {
            $('<div></div>').appendTo('body')
                .html('<div><h6>' + message + '?</h6></div>')
                .dialog({
                    modal: true,
                    title: 'Confirmation message',
                    zIndex: 10000,
                    autoOpen: true,
                    width: 'auto',
                    resizable: false,
                    buttons: {
                        Yes: function () {

                            $(this).dialog("close");

                            if (message == "Post" || message=="Approve") {
                                fncSubmitPost();

                            }
                            else if (message == "UnPost" || message== "DisApprove") {
                                fncSubmitUnPost();
                            }


                        },
                        No: function () {
                            $(this).dialog("close");
                        }
                    },
                    close: function (event, ui) {
                        $(this).remove();
                    }
                });
        };
        });
    </script>

}


