@model Atrai.Core.Entity.AccountHeadModel
@{
    ViewData["Title"] = "AddAccountHead";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}


<div class="page-wrapper">
    <div class="container-fluid">
        <!-- Start Page Content -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header py-1 text-primary">
                        <h4>New Account Head</h4>

                    </div>

                    @*@Html.HiddenFor(m => m.Id, new { @value = Model.Id })
                        @Html.HiddenFor(m => m.CreateDate, new { @value = Model.CreateDate })
                        @Html.HiddenFor(m => m.LuserId, new { @value = Model.LuserId })*@

                    <div class="card-body">
                        <div class="basic-elements">
                            <form asp-controller="admin" asp-action="AddAccountHead" method="post">
                                @if (Model != null)
                                {
                                    <input type="hidden" asp-for="Id" />
                                    <input type="hidden" asp-for="CreateDate" />
                                    <input type="hidden" asp-for="LuserId" />
                                    <input type="hidden" asp-for="ComId" />

                                    <input type="hidden" asp-for="IsBankItem" />
                                    <input type="hidden" asp-for="IsChkRef" />
                                    <input type="hidden" asp-for="IsCashItem" />
                                    <input type="hidden" asp-for="IsItemAccmulateddDep" />
                                    <input type="hidden" asp-for="IsItemDepExp" />

                                    <input type="hidden" asp-for="isItemConsumed" />
                                    <input type="hidden" asp-for="isItemInventory" />
                                    <input type="hidden" asp-for="AccountCategory" />
                                    <input type="hidden" asp-for="LevelId" />
                                    <input type="hidden" asp-for="Level" />


                                }
                                else
                                {
                                    <input type="hidden" asp-for="Id" value="0" />
                                }
                                <div class="row">


                                <div class="col-md-8 col-12">


                                    <div class="form-group row">


                                        <div class="col-md-5 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.AccCode, htmlAttributes: new { @class = "control-label" })
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.AccCode, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.AccCode, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-md-7 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(x => x.AccName, htmlAttributes: new { @class = "control-label" })
                                                    </span>
                                                </div>
                                                @Html.TextBoxFor(x => x.AccName, null, new { @class = "form-control", @placeholder = "Enter Name " })
                                                @Html.ValidationMessageFor(x => x.AccName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div id="divAccountTypeHead" class="col-md-5 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(x => x.AccType)
                                                    </span>
                                                </div>
                                                @Html.DropDownList("AccType", new List<SelectListItem>
                                                {
                                                new SelectListItem() {Text = "Ledger", Value="L"},
                                                new SelectListItem() {Text = "Group", Value="G"},

                                                }, "Select Account Type", new { @class = "form-control" })
                                                @Html.ValidationMessage("AccType", "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        @*<div class="col-md-5 col-12">
                                            <div class="input-group mb-2">
                                            <div class="input-group-prepend">
                                            <span class="input-group-text py-0">
                                            @Html.LabelFor(model => model.AccountCategory, htmlAttributes: new { @class = "control-label" })
                                            </span>
                                            </div>
                                            @Html.DropDownList("AccountCategory", new List<SelectListItem>
                                            {
                                            new SelectListItem() {Text = "Asset", Value="Asset"},
                                            new SelectListItem() {Text = "Liabilities", Value="Liabilities"},
                                            new SelectListItem() {Text = "Income", Value="Income"},
                                            new SelectListItem() {Text = "Expense", Value="Expense"},

                                            }, "Select Account Category / Type", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(x => x.AccountCategory, "", new { @class = "text-danger" })
                                            @Html.ValidationMessageFor(model => model.AccountCategory, "", new { @class = "text-danger" })
                                            </div>
                                            </div>*@

                                        <div id="divAccountCategoryId" class="col-md-7 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(x => x.AccountCategoryId)
                                                    </span>
                                                </div>
                                                @Html.DropDownListFor(x => x.AccountCategoryId,new SelectList((IEnumerable<SelectListItem>)ViewBag.AccountCategoryId, "Value", "Text"), "Select Account Category", htmlAttributes: new { @class = "form-control select", id = "AccountCategoryId" })
                                                @Html.ValidationMessageFor(x => x.AccountCategoryId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class="col-md-5 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label" })
                                                    </span>
                                                </div>
                                                @Html.DropDownListFor(model => model.CountryId, null, new { @class = "form-control select", @id = "CountryID" })
                                                @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div id="divParentId" class="col-md-7 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(x => x.ParentId)
                                                    </span>
                                                </div>
                                                @Html.DropDownListFor(x => x.ParentId,
                                                new SelectList((IEnumerable<SelectListItem>)ViewBag.AccountGroupHead, "Value", "Text"), "Select Account Group", htmlAttributes: new { @class = "form-control select", id = "ParentId" })
                                                @Html.ValidationMessageFor(x => x.ParentId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>





                                        <div id="accumulateddepreciationdiv" class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @*@Html.LabelFor(model => model.AccumulatedDepId, htmlAttributes: new { @class = "control-label" })*@
                                                        Accumulated Depr.
                                                    </span>
                                                </div>
                                                @Html.DropDownListFor(model => model.AccumulatedDepId, null, "--Select From List--", new { @class = "form-control select", @id = "AccumulatedDepId" })
                                                @Html.ValidationMessageFor(model => model.AccumulatedDepId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div id="depreciationexpensediv" class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @*@Html.LabelFor(model => model.DepExpenseId, htmlAttributes: new { @class = "control-label" })*@
                                                        Depreciation Head
                                                    </span>
                                                </div>
                                                @Html.DropDownListFor(model => model.DepExpenseId, null, "--Select From List--", new { @class = "form-control select", @id = "DepExpenseId" })
                                                @Html.ValidationMessageFor(model => model.DepExpenseId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div id="depreciationratediv" class="col-md-6 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.DepreciationRate, htmlAttributes: new { @class = "control-label" })
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.DepreciationRate, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.DepreciationRate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group row">







                                        <div class="col-md-5 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.OpDebit, htmlAttributes: new { @class = "control-label" })
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.OpDebit, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.OpDebit, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="col-md-5 col-12">
                                            <div class="input-group mb-2">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text py-0">
                                                        @Html.LabelFor(model => model.OpCredit, htmlAttributes: new { @class = "control-label" })
                                                    </span>
                                                </div>
                                                @Html.EditorFor(model => model.OpCredit, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.OpCredit, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class="col-md-2 col-12 text-center">
                                            <input asp-for="isInactive" class="form-control form-control-sm">
                                            <label asp-for="isInactive"></label>

                                            <span asp-validation-for="isInactive" class="text-danger"></span>
                                        </div>
                                    </div>


                                    <br>
                                    <div>
                                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })

                                    </div>
                            <div class="form-group">
                                    @*<button type="submit" class="btn btn-primary rounded-0"> Save Changes </button>*@


                                    @if (ViewBag.ActionType == "Create")
                                    {
                                        <input type="submit" value="Save Changes" class="btn  btn-primary rounded-0" />
                                    }
                                    else if (ViewBag.ActionType == "Edit")
                                    {
                                        <input type="submit" value="Update Changes" class="btn btn-warning rounded-0" />
                                    }
                                    else if (ViewBag.ActionType == "Delete")
                                    {
                                        <button class="btn btn-danger rounded-0" type="button" onclick="COA_delete()">Delete</button>
                                        @*<input type="submit" value="Delete" class="btn btn-danger rounded-0" />*@
                                    }


                                    @Html.ActionLink("Back", "AccountHeadList", "Admin", null, new { @class = "btn btn-info rounded-0", @id = "btnBack" })

                                </div>
                                </div>
                                <div class="col-md-4 col-12">

                                    <table id="tblAccountList" class="table table-sm tblpayments table-striped table-bordered table-hover text-nowrap" cellspacing="0" width="100%">
                                        <thead>
                                            <tr>
                                                <th class="text-center">Acc Name</th>
                                                <th class="text-center">Acc Code</th>
                                                <th class="text-center">SL No.</th>
                                            </tr>
                                        </thead>
                                        <tbody id="paymentdetails">
                                        </tbody>
                                        <tfoot>
                                            <tr>
                                                <td></td>
                                                <td></td>
                                                <td></td>

                                            </tr>
                                        </tfoot>
                                    </table>

                                </div>
                                </div>

                                


                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End PAge Content -->
</div>




@section scripts {

<script type="text/javascript">

    function COA_delete() {

        var AccId = $("#Id").val();
        alert(AccId);
        $.ajax({

            url: '@Url.Action("DeleteAccount", "Admin")',
            //url: '@Url.Action("Delete")',
            //data: JSON.stringify({ AccountHeadId: AccId }), //use id here
            //data: JSON.stringify(salesmain),
            //data: { AccountHeadIdabc: AccId }, //use id here

            //url: "../Sales/GetSales",
            data: "AccountHeadTestId=" + AccId,

            type: 'POST',
            //contentType: 'application/json;',
            dataType: 'json',
            success: function (result) {

                if (result.Success == "1") {
                    window.location.href = '@Url.Action("AccountHeadList", "Admin")';
                }
                else {
                    alert(result.ex);
                }
            }
        });
    }



    //$('#ParentId').select2();




      var tblaccountList =$('#tblAccountList').DataTable({
            "aoColumns": [
                { "sClass": "accname", "visible": true },
                { "sClass": "acccode", "visible": true },
                { "sClass": "numericnumber", "visible": true }
            ],
            "bLengthChange": false,
            "bFilter": false,
            "bSort": false,
            "bInfo": false,
            "paging": false
        })

     $('#ParentId').select2({})
     .on("select2:select", function (e) {

         ParentHeadConfiguration(0);

     });

     var AccId = $("#Id").val();
     //alert(AccId);
     if (AccId == 0 || AccId == "")
     {
        ParentHeadConfiguration(0);
     }


      function ParentHeadConfiguration(AccId) {
            //alert($("#Customer").val());
             tblaccountList.rows().remove().draw(false);
                var MyAppUrlSettings = {
                    MyUsefulUrl : '@Url.Action("ParentAccountInfo", "Admin")'
                }
                   //alert('test');
                    $.ajax({
                        type: 'POST',
                        url: MyAppUrlSettings.MyUsefulUrl,
                        dataType: 'json',
                        data: { id: $("#ParentId").val()}, //, saleid: $("#Id").val()
                        success: function (result) {
                            //console.log(result);
                            //console.log(result.AccountHeadinfo);
                            //console.log(result.AccountHeadList);
                           //var AccId = $("#Id").val();
                            //if (AccId > 0)
                            {
                                $("#AccCode").val(result.AccountHeadinfo.AccCode);
                                $("#AccountCategoryId").val(result.AccountHeadinfo.AccountCategoryId);

                            }
                          

                             $.each(result.AccountHeadList, function (i, v) {


                                    $('#tblAccountList').dataTable().fnAddData([v.AccName, v.AccCode, v.NumericNumber]);

                            });

                            //if (Customerss.CreditLimit > 0)
                            //{
                            //    $('#CreditLimit').val(Customerss.CreditLimit);
                            //    $('#PrevDue').val(Customerss.PrevDue).change();
                            //   var totalcollection = $('#TotalCollectionAmount').text();
                            //   $('#TotalDue').val(Customerss.CreditLimit - totalcollection).change();

                            ////alert($('#PrevDue').val());
                            //}



                        },
                        error: function (ex) {
                            alert('Failed.' + ex);
                        }
                    });
                return false;
             };


    $(document).ready(function () {


        //alert('ready');
        $("#accumulateddepreciationdiv").hide();
        $("#depreciationexpensediv").hide();
        $("#depreciationratediv").hide();



        $("#depreciationdiv").hide();



        var abc = $("#ParentId option:selected").text();
        //var acchead = $('#Account option:selected').val() || 0;

        //var abc = $("#AccCode").text();
        //alert(abc);
        if (abc.includes("1-2-1")) {
            $("#accumulateddepreciationdiv").show();
            $("#depreciationexpensediv").show();
            $("#depreciationratediv").show();

            $("#depreciationdiv").show();

        }
        else {
            $("#accumulateddepreciationdiv").hide();
            $("#depreciationexpensediv").hide();
            $("#depreciationratediv").hide();

            $("#depreciationdiv").hide();


        }


        $('#ParentId').select2({})
            .on("select2:select", function (e) {

                ////alert('hit');
                //var acchead = $('#ParentID option:selected').text();
                //alert(acchead);

                //var acchead1 = $('#ParentID option:selected').val();
                //alert(acchead1);
                var data = $("#ParentId option:selected").text();

                //var e = document.getElementById("ParentID");
                //var strUser = e.value;

                //alert(data);
                //var data = $('#ParentID').select2('data');
                //alert(data[0].text);


                if (data.includes("1-2-1")) {
                    $("#accumulateddepreciationdiv").show();
                    $("#depreciationexpensediv").show();
                    $("#depreciationratediv").show();
                    $("#depreciationdiv").show();

                }
                else {
                    $("#accumulateddepreciationdiv").hide();
                    $("#depreciationexpensediv").hide();
                    $("#depreciationratediv").hide();
                    $("#depreciationdiv").hide();


                };

            });




    })


</script>
}