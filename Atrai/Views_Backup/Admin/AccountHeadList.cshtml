@model IEnumerable<Atrai.Core.Entity.AccountHeadModel>
@{ ViewData["Title"] = "AccountHead List";
                Layout = "~/Views/Shared/_adminLayout.cshtml"; }



<div class="page-wrapper">
    <div class="container-fluid">

        @*

            </div>*@

        <!-- Start Page Content -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                                @Html.Hidden("FromDate", null, new { @class = "form-control from-control-sm text-center FromDate", @placeholder = "From Date", @autocomplete = "off", name = "FromDate" })
                                @Html.Hidden("ToDate", null, new { @class = "form-control from-control-sm text-center ToDate", @placeholder = "To Date", @autocomplete = "off", name = "ToDate" })

                    <div class="card-header">
                            <div class="row">
                            <div class="col-md col-6">
                                @Html.ActionLink("Create Account Head", "AddAccountHead", null, null, new { @class = "btn btn-sm btn-outline-info btn-block rounded-0", @id = "btnBack" })
                            </div>
                            <div class="col-md col-6 mt-1">
                                <h4 style="color: #1976d2;">Account Head List</h4>
                            </div>


                            <div class="col-md col-6">
                                <a class="btn btn-block btn-sm rounded-0 btn-purple mb-1" href="Download?file=AccountsSample.xlsx" target="_blank">Download Sample</a>
                            </div>


                            <div class="col-md col-6">
                                <form id="myform" method="post" enctype="multipart/form-data" asp-action="UploadFilesAccounts" asp-controller="Admin">

                                    <div class="input-group input-group-sm">
                                        <span class="input-group-btn input-group-prepend">
                                            <span class="btn btn-primary rounded-0" onclick="$(this).parent().find('input[type=file]').click();">Browse</span>
                                            <input name="uploaded_file" onchange="$(this).parent().parent().find('.form-control').html($(this).val().split(/[\\|/]/).pop());" style="display: none;" type="file" id="FileUpload1">
                                        </span>
                                        <span class="form-control border border-primary" style="background: #f2f2f2e6;"></span>
                                        <input class="rounded-0 btn btn-primary btn-sm" type="submit" id="btnUpload" value="Upload" />

                                    </div>
                                </form>
                            </div>



                            </div>

                    </div>

                    <div class="card-body">
                        <div class="row mb-2">
                                 <div class="col-md col-8  mb-1">
                                              <div class="form-inline divHiddenItems">
                                         <div class="input-group input-group-sm">
                                        <div class="input-group-prepend">
                                            <div class="input-group-text">
                                               <i class="fa fa-calendar"></i>
                                             </div>
                                        </div>
                                        <input type="text" class="form-control  from-control-sm" name="date" id="daterange-btn" style="width: auto;">
                                         <button id='btnDec' type="button" class="btn btn-danger rounded-0" title='Decrement month'><i class="fa fa-calendar-minus-o" aria-hidden="true"></i></button>
                                        <button id='btnInc' type="button" class="btn btn-info  rounded-0" title='Increment month'><i class="fa fa-calendar-plus-o" aria-hidden="true"></i></button>
                                        </div>
                                    </div>
                                </div>

                            <div class="col-md col-4 divHiddenItems mb-1">
                                <button class="btn btn-sm btn-outline-info mb-0 btn-block rounded-0" type="button" onclick="ReportPrint('ViewLedger')">View</button>
                            </div>
@*                        <div class="col-md-3 col-12">
                            <div class="input-group input-group-sm mb-1">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        <label>From Date</label>
                                    </span>
                                </div>
                                @Html.TextBox("FromDate", null, new { @class = "form-control text-center FromDate", @placeholder = "Select From Date ", @autocomplete = "off", name = "FromDate" })
                            </div>
                        </div>

                        <div class="col-md-3 col-12">
                            <div class="input-group input-group-sm mb-1">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        <label>To Date </label>
                                    </span>
                                </div>
                                @Html.TextBox("ToDate", null, new { @class = "form-control text-center ToDate", @placeholder = "Select To Date ", @autocomplete = "off", name = "ToDate" })
                            </div>
                        </div>*@

                        <div class="col-md col-8 pt-2 divHiddenItems">
                            <fieldset class="float-right">
                                <label class="pr-2"><input type="radio" name="RptType" value="PDF" checked="checked" /> PDF  </label>
                                <label class="pr-2"><input type="radio" name="RptType" value="EXCEL" /> EXCEL  </label>
                                <label class="pr-2"><input type="radio" name="RptType" value="WORD" /> WORD  </label>
                            </fieldset>
                        </div>

                        <div class="col-md col-4 mt-1"> 
                            <button class="btn btn-sm btn-outline-success mb-0 btn-block rounded-0" type="button" onclick="ReportPrint('PrintLedger')">Ledger</button>
                        </div>



                                       </div>
              

                        <div class="table-responsive mt-1">
                            <table id="tbllist" class="display nowrap table table-sm table-hover  table-bordered" cellspacing="0" width="100%">
                            </table>
                        </div>

                        @*<div class="table-responsive mt-1">
                        <table id="example23" class="display nowrap table table-sm table-hover  table-bordered table-striped" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th>
                            @Html.DisplayNameFor(model => model.NumericNumber)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AccName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AccType)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.vAccountGroupHead)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AccountCategory)
                        </th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {

                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.NumericNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AccName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AccType)
                    </td>
                    @if (item.vAccountGroupHead == null)
                                    {
                    <td>
                        Base
                    </td> }
                                    else
                                    {
                    <td>
                        @Html.DisplayFor(modelItem => item.vAccountGroupHead.AccName)
                    </td>}
                    <td>
                        @Html.DisplayFor(modelItem => item.AccountCategory)
                    </td>
                    <td>
                        @if (item.isSystem == false)
                        {

                            <a href="@Url.Action("EditAccountHead", "Admin", new { AccountHeadid = item.Id })" class="btn btn-icon btn-warning btn-sm rounded-0 mb-1">
                                <i class="fa fa-edit"></i>
                            </a>
                            <a href="@Url.Action("RemoveAccountHead", "Admin", new { AccountHeadid = item.Id })" onclick="return confirm('Are you sure you want to Remove this AccountHead?')" class="btn btn-icon btn-danger btn-sm rounded-0 mb-1">
                                <i class="fa fa-remove"></i>
                            </a>}
                    </td>

                </tr>}

                </tbody>
            </table>


        </div>*@
     
                </div>
            </div>
        </div>
        <!-- End PAge Content -->
    </div>
</div>




@section Scripts{

    <script type="text/javascript">
        $(function () {
            var peopleList = $('#tbllist').DataTable({

                serverSide: true,  "scrollX": true,
                processing: true,

                ajax: {
                    url: '@Url.Action("GetAccountHeadList", "Admin")',
                    type: "POST"
                },
                    pagingType: 'full_numbers',
                    //pagingType: $(window).width() < 768 ? "simple" : "simple_numbers"

                    "language": {
                        "lengthMenu": "_MENU_",
                        //"zeroRecords": "Nothing found - sorry",
                        //"info": "Showing page _PAGE_ of _PAGES_",
                        "infoEmpty": "No records available",
                        "infoFiltered": "(filtered from _MAX_ total records)",
                        "searchPlaceholder": "Search",
                        "sSearch": '<em class="fa fa-search"></em>'
                    },

                select: {
                    style: 'single',
                    selector: 'td:nth-child(1),td:nth-child(2),td:nth-child(3),td:nth-child(4),td:nth-child(5),td:nth-child(6),td:nth-child(7),td:nth-child(8)'
                },
                dom: 'Bfrltip',
                buttons: [
                    //'copy', 'csv', 'excel', 'pdf', 'print'
                  
                        {       extend: 'excel',
                                text: '<i class="mdi mdi-file-excel"></i>',
                                className: 'btn-success',
                                titleAttr: 'Export to excel'
                        }
                        //,{
                        //    extend: 'colvis',
                        ////    "columns": ':not(:last-child)',
                        //    text: '<i class="mdi mdi-view-column"></i>',
                        //    className: 'btn-info',
                        ////    titleAttr: 'Show / hide columns',
                        ////    //collectionLayout: 'fixed two-column'

                        //}
                ],

                //"info": false,
                rowId: 'Id',
                columns: [

                    { "title": "Id", "data": "Id", "visible": false },
                    { "title": "SL No", "data": "NumericNumber", "searchable": true },
                    { "title": "Type", "data": "AccType", "searchable": true },
                    //{ "title": "Account Category Type", "data": "AccountCategory", "searchable": true },
                    { "title": "Account Category", "data": "AccountCategory", "searchable": true },

                    {
                        "title": "Base / Parent Head",
                        "data": "vAccountGroupHead",
                        "searchable": true,
                        "render": function (data, type, row) {
                            var parentaccname = "";

                            if (data != null) {
                                parentaccname = data.AccName + ' - ' + data.AccCode;

                            }
                            return parentaccname;

                        }
                    },
                    { "title": "Account Code", "data": "AccCode", "searchable": true },
                    { "title": "Account Head", "data": "AccName", "searchable": true },



                    //{ "title": "Balance", "data": "AccountBalance", "searchable": false },
                    {
                        "title":"Debit Balance",
                        "className": "text-nowrap",
                        "data": {
                            Id: "AccountBalance"
                        },
                        "searchable": false,
                        "render": function (data, row) {

                            //var myUrlprint = '@Url.Action("SubsidiaryLedger", "Admin")?Id=' + data.Id + '&Type=Account';

                            var myUrlprint = '@Url.Action("SubsidiaryLedger", "Admin")?Id=' + data.Id + '&Type=' + data.AccountCategory.AccountType +'';

                            
                            var AccountBalance = data.AccountBalance;
                            var buttons = '';
                            if (data.AccountBalance >= 0)
                            {
                            if (data.AccType == "L") {
                                buttons += AccountBalance;//'<span data-toggle="tooltip" title="Print"> <a href=\"' + myUrlprint + '\" class=\"btn btn-icon btn-success btn mb-0\" target=\"_blank\"><i class="fa fa-print"> ' + AccountBalance + '</i></a></span>';
                            }
                            }
                            return buttons;
                        }
                    },
                    {
                        "title":"Credit Balance",
                        "className": "text-nowrap",
                        "data": {
                            Id: "AccountBalance"
                        },
                        "searchable": false,
                        "render": function (data, row) {

                            //var myUrlprint = '@Url.Action("SubsidiaryLedger", "Admin")?Id=' + data.Id + '&Type=Account';

                            var myUrlprint = '@Url.Action("SubsidiaryLedger", "Admin")?Id=' + data.Id + '&Type=' + data.AccountCategory+'';

                            
                            var AccountBalance = -data.AccountBalance;
                            var buttons = '';
                            if (data.AccountBalance <0)
                            {
                                if (data.AccType == "L") {
                                    buttons +=  AccountBalance;//'<span data-toggle="tooltip" title="Print"> <a href=\"' + myUrlprint + '\" class=\"btn btn-icon btn-success btn mb-0\" target=\"_blank\"><i class="fa fa-print"> ' + AccountBalance + '</i></a></span>';
                                }
                            }
                            return buttons;
                        }
                    },
                    {
                        "title": "Action",
                        "data": "Id",
                        "render": function (data, type, row) {
                            var myUrledit = '@Url.Action("EditAccountHead", "Admin")?AccountHeadId=' + data;
                            var myUrldelete = '@Url.Action("DeleteAccountHead", "Admin")?AccountHeadId=' + data;
                            var message = `return confirm('Are you sure you want to Remove the AccountHead Information ?')`;


                            if (!data.isSystem) {
                                return '<span data-toggle="tooltip" title="Edit"> <a href=\"' + myUrledit + '\" class=\"btn btn-icon btn-warning btn-sm rounded-0 mb-1\" target=\"_blank\"><i class="fa fa-edit"></i></a></span>' +
                                    '<span data-toggle="tooltip" title="Delete"> <a href=\"' + myUrldelete + '\"  onclick = \"' + message + '\"   class=\"btn btn-icon btn-danger btn-sm rounded-0 mb-1\" target=\"_blank\"><i class="fa fa-remove"></i></a></span>';
                            }


                        }

                    }
                ]
            });
        });

        //CurrentDate();

        //$(".FromDate").datepicker({

        //    dateFormat: "dd-M-y",
        //    changeMonth: true,
        //    changeYear: true

        //});
        //$(".ToDate").datepicker({

        //    dateFormat: "dd-M-y",
        //    changeMonth: true,
        //    changeYear: true

        //});

        //function CurrentDate() {
        //    var date = new Date();
        //    var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
        //        "Aug", "Sep", "Oct", "Nov", "Dec"];
        //    var val = date.getDate() + "-" + months[date.getMonth()] + "-" + date.getFullYear().toString().substr(-2);


        //    if ($(".FromDate").val() == '') {
        //        $(".FromDate").val(val);
        //    }
        //    if ($(".ToDate").val() == '') {
        //        $(".ToDate").val(val);
        //    }


        //}

       function ReportPrint(btnvalue) {

                var peopleList = $('#tbllist').DataTable();
                var rows = peopleList.rows('.selected').data();

                var reporttype = $("input[name=RptType]:checked").val();
                var FromDate = $(".FromDate").val();
                var ToDate = $(".ToDate").val();

          // alert(FromDate);

                var productidlist = [];
                var pid = 0;
                var type = "Account";


                if (rows.length > 0) {
                    pid = rows[0]["Id"];
                    type = rows[0]["AccountCategory"];

                }
                //console.log(pid);
                //alert(WarehouseId);
                //alert(btnvalue);
                 var isViewPageReport = 1;

                if (btnvalue == "PrintLedger") {
                    isViewPageReport = 0;

                    if ((pid == null) || (pid == ""))
                    {
                        toastr.error("Please Select Account Head from the List.");
                        return true;
                    }
                    //alert('Wait');
                }


                
            $.ajax({
                type: 'POST',
                url: '@Url.Action("SubsidiaryLedger", "Admin")',
                dataType: 'json',
                async: true,
                data: { rptFormat: reporttype, action: btnvalue, Id: pid , Type:type, FromDate: FromDate, ToDate: ToDate,isViewPageReport:isViewPageReport},
                success: function (response) {

                    //setTimeout(function () {
                    //    window.open(response.Url, '_blank')
                    //}, 3000);

                    window.open(response.Url, '_blank')

                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }

            });

          }

    </script>
}