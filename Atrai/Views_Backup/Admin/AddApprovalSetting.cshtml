@model Atrai.Core.Entity.DocApprovalSettingModel
@{
    ViewData["Title"] = "AddApproval Setting";
    
        Layout = "~/Views/Shared/_adminLayout.cshtml";
}



<div class="page-wrapper">
    <div class="container-fluid">
        <!-- Start Page Content -->

            <section class="my-3">
        <div class="row">
            <div class="col-md-8 col-12">
                <div class="card">
                    <div class="card-header py-1">
                        <h4>New Approval Setting</h4>

                    </div>

                    <div class="card-body  py-5">
                      
                            <form asp-controller="admin" asp-action="AddApprovalSetting" method="post">
                                @if (Model != null)
                                {
                                    <input type="hidden" asp-for="Id" />
                                    <input type="hidden" asp-for="CreateDate" />
                                    <input type="hidden" asp-for="LuserId" />

                                    
                                }
                                else
                                {
                                    <input type="hidden" asp-for="Id" value="0" />
                                }

                                        <div class="mb-3">
                                            @Html.LabelFor(x => x.DocTypeId)
                                            @Html.DropDownListFor(x => x.DocTypeId,
                                            new SelectList((IEnumerable<SelectListItem>)ViewBag.DocTypeId, "Value", "Text"), "Select Doc Type",
                                            htmlAttributes: new { @class = "form-control", id = "DocTypeId" })
                                            @Html.ValidationMessageFor(x => x.DocTypeId, "", new { @class = "text-danger" })
                                        </div>


                                        <div class="mb-3">
                                            @Html.LabelFor(x => x.ApprovalTypeId)
                                            @Html.DropDownListFor(x => x.ApprovalTypeId,
                                            new SelectList((IEnumerable<SelectListItem>)ViewBag.ApprovalTypeId, "Value", "Text"), "Select Approval Type",
                                            htmlAttributes: new { @class = "form-control", id = "ApprovalTypeId" })
                                            @Html.ValidationMessageFor(x => x.ApprovalTypeId, "", new { @class = "text-danger" })
                                        </div>



                                <div class="mb-3">
                                    @Html.LabelFor(x => x.LuserIdEntry)
                                    @Html.DropDownListFor(x => x.LuserIdEntry,
                                    new SelectList((IEnumerable<SelectListItem>)ViewBag.LuserIdEntry, "Value", "Text"), "Select Entry user",
                                    htmlAttributes: new { @class = "form-control", id = "LuserIdEntry" })
                                    @Html.ValidationMessageFor(x => x.LuserIdEntry, "", new { @class = "text-danger" })
                                </div>



                                
                                <div class="mb-3">
                                    @Html.LabelFor(x => x.LuserIdCheck)
                                    @Html.DropDownListFor(x => x.LuserIdCheck,
                                    new SelectList((IEnumerable<SelectListItem>)ViewBag.LuserIdCheck, "Value", "Text"), "Select Check by User",
                                    htmlAttributes: new { @class = "form-control", id = "LuserIdCheck" })
                                    @Html.ValidationMessageFor(x => x.LuserIdCheck, "", new { @class = "text-danger" })
                                </div>


                                <div class="mb-3">
                                    @Html.LabelFor(x => x.LuserIdVerify)
                                    @Html.DropDownListFor(x => x.LuserIdVerify,
                                    new SelectList((IEnumerable<SelectListItem>)ViewBag.LuserIdVerify, "Value", "Text"), "Select Verify by User",
                                    htmlAttributes: new { @class = "form-control", id = "LuserIdVerify" })
                                    @Html.ValidationMessageFor(x => x.LuserIdVerify, "", new { @class = "text-danger" })
                                </div>


                                <div class="mb-3">
                                    @Html.LabelFor(x => x.LuserIdApprove)
                                    @Html.DropDownListFor(x => x.LuserIdApprove,
                                    new SelectList((IEnumerable<SelectListItem>)ViewBag.LuserIdApprove, "Value", "Text"), "Select Approved by User",
                                    htmlAttributes: new { @class = "form-control", id = "LuserIdApprove" })
                                    @Html.ValidationMessageFor(x => x.LuserIdApprove, "", new { @class = "text-danger" })
                                </div>


                                <div class="mb-3">
                                    @Html.LabelFor(x => x.isInactive)
                                    @Html.CheckBoxFor(x => x.isInactive)
                                    @Html.ValidationMessageFor(x => x.isInactive, "", new { @class = "text-danger" })
                                </div>


                                         <div class="mb-3">
                                            @*<button type="submit" class="btn btn-primary rounded-0"> Save Changes </button>*@


                                            @if (ViewBag.ActionType == "Create")
                                            {
                                    <input type="submit" value="Save Changes" class="btn  btn-primary rounded-0" /> }
                                else if (ViewBag.ActionType == "Edit")
                                {
                                    <input type="submit" value="Update Changes" class="btn btn-warning rounded-0" /> }
                                else if (ViewBag.ActionType == "Delete")
                                {
                                    <button class="btn btn-danger rounded-0" type="button" onclick="Bank_delete()">Delete</button>}

                                     @if (ViewBag.IsPartialView != 1)
                                     {
                                            @Html.ActionLink("Back", "ApprovalSettingList", "Admin", null, new { @class = "btn btn-info rounded-0", @id = "btnBack" })
                                     }
                                        </div>


                                     
             

                            </form>
                    
                    </div>
                </div>
            </div>
        </div>
    </section>
        <!-- End PAge Content -->
    </div>
</div>
