@*@model IEnumerable<Atrai.Core.Entity.ProductModel>*@
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Product List";
    Layout = "~/Views/Shared/_customerLayout.cshtml";
}
<style>
/*
    .row center {
        display: flex;
        align-items: center;
    } */

/*
    .tbllist th:first-child, .tbllist tbody td:first-child {
        position: sticky !important;
        left: 0px;
        background-color: #f2f2f2e6;
        z-index: 1;
    }

    .tbllist tfoot td:first-child {
        position: sticky;
        left: 0px;
        z-index: 1;
    }


    .tbllist th:last-child, .tbllist tbody td:last-child {
        position: sticky !important;
        right: 0px;
        background-color: #f2f2f2e6;
        z-index: 1;
    }

    .tbllist tfoot td:last-child {
        position: sticky;
        right: 0px;
        z-index: 1;
    }*/


    hr.solid {
        border-top: 2px solid #bbb;
        margin-top: .2rem;
        margin-bottom: .2rem;
        vertical-align:middle;
    }

/*    p.lineheight {
        line-height: 6px;
        vertical-align:middle;
    }*/
/*
    .table > tbody > tr > td, .table > tbody > tr > th, .table > tfoot > tr > td, .table > tfoot > tr > th, .table > thead > tr > td, .table > thead > tr > th {
        line-height: 18px;
        padding-top: 6px;
        vertical-align: top;
        vertical-align: middle;
        text-align: center;
        color: dimgray;
        font-family: Poppins;
    }*/

</style>

<div class="">
    @Html.AntiForgeryToken()
    <div class="container-fluid">
        <!-- Start Page Content -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    @Html.Hidden("FromDate", null, new { @class = "form-control form-control-sm text-center FromDate", @placeholder = "From Date", @autocomplete = "off", name = "FromDate" })
                    @Html.Hidden("ToDate", null, new { @class = "form-control form-control-sm text-center ToDate", @placeholder = "To Date", @autocomplete = "off", name = "ToDate" })

                    <div class="card-body">

                        <div class="row mb-2">
                            <div class="col-md-2 col-6">
                                @Html.ActionLink("Create Product", "AddSupplierProduct", null, null, new { @class = "btn btn-sm btn-outline-info btn-block rounded-0", @id = "btnCreate" })
                            </div>

                                                    <div class="col-md-3 col-12">
                            <div class="input-group input-group-sm mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">
                                        Category
                                    </span>
                                </div>
                                @Html.DropDownList("CategoryId", null, "--Select--", htmlAttributes: new { @id = "CategoryId", @class = "form-control" })
                            </div>
                        </div>

@*                            <div class="col-md-2 col-6 mt-1">
                                <div class="row inline">
                                          <span class="card-title h3" style="color: #1976d2;">Product List
                                            
                                              @{
                                              var businesstype  = HttpContextAccessor.HttpContext.Session.GetString("BusinessType");
                                              }
                                              @if (businesstype.ToLower().Contains("walton") || businesstype.ToLower().Contains("marcel")) 
                                              {
                                                <span>
                                                    @Html.ActionLink(" ", "ProductSync", null, null, new { @class = "btn btn-sm btn-outline-warning rounded-0 fa fa-sm fa-refresh float-right ml-2", @id = "btnSync" ,title="Sync With Walton / Marcel DB"})
                                                </span>
                                              }
                                          </span>
                                </div>
                          

                            </div>*@
@*                            <div class="col-md-3 col-9 pt-2">
                                <fieldset class="float-right">
                                    <label class="pr-2"><input type="radio" name="RptType" value="PDF" checked="checked" /> PDF  </label>
                                    <label class="pr-2"><input type="radio" name="RptType" value="EXCEL" /> EXCEL  </label>
                                    <label class="pr-2"><input type="radio" name="RptType" value="WORD" /> WORD  </label>
                                </fieldset>
                            </div>

                            <div class="col-md-3 col-12">
                                <form id="myform" method="post" enctype="multipart/form-data" asp-action="UploadFiles" asp-controller="Admin">

                                    <div class="input-group input-group-sm">
                                        <span class="input-group-btn input-group-prepend">
                                            <span class="btn btn-primary rounded-0" onclick="$(this).parent().find('input[type=file]').click();">Browse</span>
                                            <input name="uploaded_file" onchange="$(this).parent().parent().find('.form-control').html($(this).val().split(/[\\|/]/).pop());" style="display: none;" type="file" id="FileUpload1">
                                        </span>
                                        <span class="form-control border border-primary" style="background: #f2f2f2e6;"></span>
                                        <input class="rounded-0 btn btn-primary btn-sm" type="submit" id="btnUpload" value="Upload Files" />

                                    </div>
                                </form>
                            </div>*@
                            @*<div class="col-md-3 col-12 d-block mx-auto">


                                <div class="input-group input-group-sm">
                                    <span class="input-group-btn input-group-prepend">
                                        <span class="btn btn-primary rounded-0" onclick="$(this).parent().find('input[type=file]').click();">Browse</span>
                                        <input name="uploaded_file" onchange="$(this).parent().parent().find('.form-control').html($(this).val().split(/[\\|/]/).pop());" style="display: none;" type="file" id="FileUpload1">
                                    </span>
                                    <span class="form-control border border-primary" style="background: #f2f2f2e6;"></span>
                                    <input type="button" id="btnUpload" value="Upload Files" class="input-group-append btn-primary btn-sm border-0">

                                </div>

                            </div>*@
@*                            <div class="col-md-2 col-12">
                                <a class="btn btn-block btn-sm rounded-0 btn-purple mb-1" href="Download?file=ProductSample.xlsm" target="_blank">Download Sample</a>
                            </div>*@


                        </div>

                            @*<div class="table-responsive m-t-10">
                        <table id="tbllist" class="display table table-sm table-hover  table-bordered" cellspacing="0" width="100%">*@

                    <div class="row">





                        @*<div class="col-md-3 col-12">
                            <div class="input-group input-group-sm mb-2">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">
                                        Warehouse
                                    </span>
                                </div>
                                @Html.DropDownList("WarehouseId", null, htmlAttributes: new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-4 col-12  mb-2">
                                    <div class="form-inline divHiddenItems">
                                         <div class="input-group input-group-sm">
                                        <div class="input-group-prepend">
                                            <div class="input-group-text">
                                               <i class="fa fa-calendar"></i>
                                             </div>
                                        </div>
                                        <input type="text" class="form-control from-control-sm" name="date" id="daterange-btn" style="width: auto;">
                                         <button id='btnDec' type="button" class="btn btn-danger rounded-0" title='Decrement month'><i class="fa fa-calendar-minus-o" aria-hidden="true"></i></button>
                                        <button id='btnInc' type="button" class="btn btn-info  rounded-0" title='Increment month'><i class="fa fa-calendar-plus-o" aria-hidden="true"></i></button>
                                        </div>
                                    </div>
                                </div>*@

                        @*<div class="col-md-2 col-12 divHiddenItems">
                            <div class="input-group input-group-sm mb-1">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        <label>From Date</label>
                                    </span>
                                </div>
                                @Html.TextBox("FromDate", null, new { @class = "form-control text-center FromDate", @placeholder = "Select From Date ", @autocomplete = "off", name = "FromDate" })
                            </div>
                        </div>

                        <div class="col-md-2 col-12 divHiddenItems">
                            <div class="input-group input-group-sm mb-1">
                                <div class="input-group-prepend">
                                    <span class="input-group-text py-0">
                                        <label>To Date </label>
                                    </span>
                                </div>
                                @Html.TextBox("ToDate", null, new { @class = "form-control text-center ToDate", @placeholder = "Select To Date ", @autocomplete = "off", name = "ToDate" })
                            </div>
                        </div>*@

@*
                        <div class="col-md-2 col-12">
                            @Html.DropDownList("ROL", new List<SelectListItem>
                                        {
                                            new SelectListItem() {Text = "-Select Criteria-", Value="All"},
                                            new SelectListItem() {Text = "Corss First Reorder Level", Value="ROL1"},
                                            new SelectListItem() {Text = "Corss Secound Reorder Level", Value="ROL2"},
                                            new SelectListItem() {Text = "Corss Third Reorder Level", Value="ROL3"},
                                            new SelectListItem() {Text = "Only Corss First ROL", Value="OnlyROL1"},
                                            new SelectListItem() {Text = "Only Corss Secound ROL", Value="OnlyROL2"},
                                            new SelectListItem() {Text = "Only Corss Third ROL", Value="OnlyROL3"},

                                        }, new { @class = "form-control form-control-sm" })
                        </div>*@

                    @* <div class="col-md-2 col-12">

                            <input type="text" id="myInput" class="form-control form-control-sm" onmouseover="this.focus();" placeholder="On Page Filtering / Search." title="Search Item">
                        </div>*@


                    </div>
                           
@*                            <div class="row center divHiddenItems">


                                <div class="col-md-2 col-12">
                                    <button class="btn btn-sm btn-outline-success mb-1 btn-block rounded-0 mt-md-1" type="button" onclick="ReportPrint('PrintLedger')">Ledger</button>
                                </div>
                                <div class="col-md-2 col-12">
                                    <button class="btn btn-sm btn-outline-success mb-1 btn-block rounded-0 mt-md-1" type="button" onclick="ReportPrint('prdregistervalue')">Register With Value</button>
                                </div>
                                <div class="col-md-2 col-12">
                                    <button class="btn btn-sm btn-outline-success mb-1 btn-block rounded-0 mt-md-1" type="button" onclick="ReportPrint('prdregistervaluesummary')">Register Summary</button>
                                </div>
                                <div class="col-md-2 col-12">
                                    <button class="btn btn-sm btn-outline-success mb-1 btn-block rounded-0 mt-md-1" type="button" onclick="ReportPrint('rptPrdAvgRateCalculation')">Qty & Rate Calculation</button>
                                </div>

                                <div class="col-md-2 col-12">
                                    <button class="btn btn-sm btn-outline-success mb-1 btn-block rounded-0 mt-md-1" type="button" onclick="ReportPrint('PrintProductList')">Item List</button>
                                </div>
                                <div class="col-md-2 col-12">
                                    <button class="btn btn-sm btn-outline-success mb-1 btn-block rounded-0 mt-md-1" type="button" onclick="ReportPrint('PrintProductListWithoutZero')">Stock Item List</button>
                                </div>
      

                            </div>*@




                            <div class="table-responsive mt-2">
                                <table id="tbllist" class="table tbllist table-striped table-bordered text-nowrap" cellspacing="0" width="100%">
                                </table>
                            </div>



                        </div>
                </div>

                @*<div>
                        @Html.ActionLink("Delete my profile", "DeleteMyProfile", new { userId = this.Model.Id, profilePageAntiforgery = this.ViewBag.ProfilePageAntiforgery })
                    </div>*@

            </div>
        </div>
        <!-- End PAge Content -->
    </div>
</div>





        @section Scripts{

            <script type="text/javascript">
                
                    //var VatViewActivate = '@HttpContextAccessor.HttpContext.Session.GetInt32("VatViewActivate").ToString()';
                    //if (VatViewActivate == 1){$('.divHiddenItems').hide();}
                    //var isHidden = VatViewActivate != 1;

                    var isHidden = false;


                    @*$('#btnUpload').click(function () {


                        //var fileUpload = $("#FileUpload1").get(0);
                        //var files = fileUpload.files;
                        //var fileData = new FormData();
                        //fileData.append(files[0].name, files[0]);

                        //console.log(fileData);

                        var input = document.getElementById('FileUpload1');
                        //var files = $("#FileUpload1").get(0).files();//.files;
                        var files = input.files;
                        var fileData = new FormData();

                        for (var i = 0; i != files.length; i++) {
                            fileData.append("files", files[i]);
                        }



                        $.ajax({
                            url: '@Url.Action("UploadFiles", "Admin")',
                            type: "Post",
                            contentType: false, // Not to set any content header
                            processData: false, // Not to process data
                            data: { fileData: fileData },
                                success: function (result) {
                                    if (result.Success == "1") {
                                        //alert('Excel Upload Successfully');
                                        toastr.success("'Excel Upload Successfully'");
                                        window.location.href = "@Url.Action("SupplierProductList", "Admin", new {Flag=1})";

                                    }
                                    else {
                                        alert(result.ex);
                                    }
                                },
                                error: function (err) {
                                    alert(err.statusText);
                                }
                            });



                    });*@
















                var CategoryId = $('#CategoryId').val();
                var WarehouseId = $('#WarehouseId').val();
                var ROL = $('#ROL').val();




                loaddata();

                function loaddata() {

                    var othersearchvalue = $("#myInput").val() || "";

                    var table = $('#tbllist').DataTable({
                        initComplete: function () {

                            var input = $('.dataTables_filter input'),//.unbind(),
                                self = this.api(),

                                //$searchButton = $('<button class="btn rounded-0 btn-info btn-sm" tabindex="0" aria-controls="saleslist" TransactionId="button" title="Search"><span><i class="mdi mdi-file-excel"></i></span></button>')
                                //    .text('Search')
                                //    .click(function () {
                                //        if (input.val().length > 0) {
                                //            self.search(input.val()).draw();
                                //        }
                                //        else {
                                //            loaddata();

                                //        }
                                //    }),
                                $OtherSearch = $('<input  class="form-control form-control-sm text-center" id="myInput" name="myInput" placeholder="" title="Search" type="text"  value="'+othersearchvalue+'">')
                        
                                $allButton = $('<span class="ml-2 btn rounded-0 btn-primary btn-sm" tabindex="0" aria-controls="saleslist" TransactionId="button" title="Load"><span></span></span>')
                                    .text('Load')
                                    .click(function () {
                                        input.val('');
                                        loaddata();
                                    })
                            $('.dataTables_filter').append($allButton,$OtherSearch);//, $clearButton //, $searchButton
                            //$('#tbllist_length').append($OtherSearch);//, $clearButton //, $searchButton
                            

                            

                           $("#myInput").on("click", function () {
                        
                            setTimeout(function () {
                                // whene transaction error then reload page
                                 table.page.len(10).draw();
                            }, 1);

                       
                            });


                            $("#myInput").on("keyup", function () {
                                var value = $(this).val().toLowerCase();
                                $("#tbllist tr").filter(function () {
                                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                                    //$(this).addClass("selected");
                            });
                    });
                        },
                        serverSide: true,  "scrollX": true,
                        processing: true,
                        "language": {
                            sLengthMenu: " _MENU_",
                            search: "",
                            searchPlaceholder: "Search..."
                        },
                        "destroy": true,
                        ajax: {
                            url: '@Url.Action("GetSupplierProductList", "Admin")',
                            data: { CategoryId: $("#CategoryId").val(), ROL: $("#ROL").val(), WarehouseId: $('#WarehouseId').val(), ROL: $('#ROL').val()},
                            type: "POST",
                            "datatype": "json"
                        },
                        "order": [[0, "desc"]],

                        //order: false,
                        //columnDefs: [{
                        //    targets: "_all",
                        //    orderable: false
                        //}],

                        select: {
                            style: 'single',
                            selector: 'td:nth-child(1),td:nth-child(2),td:nth-child(3),td:nth-child(4),td:nth-child(5),td:nth-child(6),td:nth-child(7),td:nth-child(8),td:nth-child(9),td:nth-child(10)'
                        },
                        "pageLength": 5,
                        "lengthMenu": [[5, 10, 20, 50, 100, 500, 1000], [5, 10, 20, 50, 100, 500, 1000]],
                        //rowId: 'Id',
                        //dom: 'Bfrtip',
                         dom: "<'row'<'col-md-10 col-12 'f><'col-md-2 col-12 text-right float-right p-0 m-0'lB>><'row'<'col-sm-12'tr>><'row'<'col-sm-12'ip>>",
                        //dom: '<"dom_wrapper"flB>tip',
                        buttons: [
                            //'copy', 'csv', 'excel', 'pdf', 'print'
                            { "extend": 'excel', "text": 'Excel', "className": 'btn btn-success rouned-0 btn-sm' }
                        ],
                        //success: function (data) {
                        //    alert('success');
                        //    console.log(data);
                        //    //alert(data);
                        //},
                        //error: function () {
                        //    console.log(err);
                        //},
                        columns: [

                            { "title": "Id", "data": "Id", "visible": false },

                            { "title": "Name", "data": "Name", "searchable": true },
                            { "title": "Local Name", "data": "LocalName", "searchable": true },


                            { "title": "Code", "data": "Code", "searchable": true },
                            { "title": "Model", "data": "ModelName", "searchable": true },

                            { "title": "Color", "data": "ColorName", "searchable": true },
                            { "title": "Size", "data": "SizeName", "searchable": true },


                            { "title": "Category", "data": "CategoryName", "searchable": true },

                            { "title": "Barcode", "data": "ProductBarcode", "searchable": true },

                            { "title": "Description", "data": "Description", "searchable": true },

                            { "title": "Unit", "data": "UnitName", "searchable": true },
                            { "title": "Brand", "data": "BrandName", "searchable": true },
                            //{ "title": "ROL", "data": "ROL", "searchable": false },
                            //{ "title": "ROQ", "data": "ROQ", "searchable": false },
                            //{ "title": "MOQ", "data": "MOQ", "searchable": false },



                            //{ "title": "Avg. Cost Price", "data": "CostPrice", "searchable": false },

                            {
                                "title": "Avg. Cost", "data": "WarehouseList", "className": "nowrap text-nowrap text-center", "searchable": false ,  "visible" : isHidden,

                                "render": function (data, type, row) {
                                    //console.log(data);
                                    if (data != null) {

                                        var output = "";
                                        var totalstock = 0;
                                        var totalcostingvalue = 0;
                                        var totalsalesvalue = 0;

                                        var totalstock = 0;

                                        var count = 0;
                                        for (var i = 0; i < data.length; i++) {
                                            totalstock = totalstock + data[i].CurrentStock
                                            totalcostingvalue = totalcostingvalue + data[i].CostingValue
                                            totalsalesvalue = totalsalesvalue + data[i].SalesValue

                                            count++;
                                        };

                                        if (totalstock > 0) {
                                            //if (count > 1) {
                                            output = (totalcostingvalue / totalstock).toFixed(2);
                                            //}
                                        };

                                        //console.log(output);
                                        //console.log(totalstock);

                                        return output;
                                    }
                                    else {
                                        return null;
                                    }
                                }

                            },

                            { "title": "Cost Price", "data": "CostPrice", "searchable": false },
                            { "title": "Sale Price", "data": "Price", "searchable": false },
                            {
                                "title": "<p class=narrowlineheight> Curr. Stock With </p> <p class=narrowlineheight> Cost & Sales Value </p>", "data": "WarehouseList",
                                "className": "text-nowrap text-center",
                                "searchable": false,
                                "visible" : isHidden,
                                "render": function (data, type, row) {
                                    //console.log(data);
                                    if (data != null) {

                                        var output = "";
                                        var totalstock = 0;
                                        var totalcostingvalue = 0;
                                        var totalsalesvalue = 0;

                                        var totalstock = 0;

                                        var count = 0;
                                        for (var i = 0; i < data.length; i++) {
                                            output += '<p class="narrowlineheight">' + data[i].WhShortName + ' : ' + data[i].CurrentStock + ' : ' + data[i].CostingValue.toFixed(2) + ' : ' + data[i].SalesValue;
                                            totalstock = totalstock + parseFloat(data[i].CurrentStock.toFixed(2))
                                            totalcostingvalue = totalcostingvalue + parseFloat(data[i].CostingValue.toFixed(2))
                                            totalsalesvalue = totalsalesvalue + parseFloat(data[i].SalesValue.toFixed(2))

                                            if (i < data.length - 1) {
                                                output += "  </p>";

                                                //'<p>' + this + '</p>'
                                            }
                                            count++;
                                        };

                                        if (totalstock > 0) {
                                            if (count > 1) {
                                                output += '<hr class="solid"> <p class="narrowlineheight" style="font-weight: bold;"> TOTAL : ' + totalstock + '  : ' + totalcostingvalue + '  : ' + totalsalesvalue + ' </p>';
                                            }
                                        };

                                        //console.log(output);
                                        //console.log(totalstock);

                                        return output;
                                    }
                                    else {
                                        return null;
                                    }
                                }

                            },
                            {
                                "title": "<p class=narrowlineheight> ROL 1 </p> <p class=narrowlineheight> ROL 2 </p> <p class=narrowlineheight> ROL 3 </p>",
                                "data": {
                                    Id: "Id"
                                },
                                "className": "text-nowrap text-center",
                                "searchable": false,
                                "visible" : isHidden,
                                "render": function (data, type, row) {
                                    //console.log(data);
                                    if (data != null) {

                                        var output = "";
                                        var totalstock = 0.00;

                                        var count = 0;
                                        for (var i = 0; i < data.WarehouseList.length; i++) {
                                            //output += '<p class="narrowlineheight">' + data[i].CurrentStock;
                                            //console.log(data.WarehouseList[i].CurrentStock);
                                            totalstock = totalstock + parseFloat(data.WarehouseList[i].CurrentStock.toFixed(2))
                                            //if (i < data.length - 1) {
                                            //    output += "  </p>";
                                            //    //'<p>' + this + '</p>'
                                            //}
                                            count++;
                                        };
                                        //console.log(totalstock);
                                        //console.log(data.ROQ);


                                        //if (totalstock > 0) {

                                        if (data.ROL > 0) {
                                        if (totalstock < data.ROL) {
                                                output += '<p class="narrowlineheight" style="font-weight: bold; color:red"> Crossed ROL : ' + data.ROL + '</p>';
                                            }
                                            else {
                                                output += '<p class="narrowlineheight" style="font-weight: bold; color:green">Not Crossed ROL : ' + data.ROL + '</p>';

                                        }
                                        }
                                        if (data.ROLTwo > 0) {
                                            if (totalstock < data.ROLTwo) {
                                                output += '<hr class="solid"> <p class="narrowlineheight" style="font-weight: bold; color:#ff5400"> Crossed ROL 2 : ' + data.ROLTwo + '</p>';
                                            }
                                            else {
                                                output += '<hr class="solid"> <p class="narrowlineheight" style="font-weight: bold; color:green">Not Crossed ROL 2: ' + data.ROLTwo + '</p>';

                                            }
                                        }

                                        if (data.ROLThree > 0) {
                                            if (totalstock < data.ROLThree) {
                                                output += '<hr class="solid"> <p class="narrowlineheight" style="font-weight: bold;"> Crossed ROL 3 : ' + data.ROLThree + '</p>';
                                            }
                                            else {
                                                output += '<hr class="solid"> <p class="narrowlineheight" style="font-weight: bold; color:green"> Not Crossed ROL 3: ' + data.ROLThree + '</p>';

                                            }
                                        }
                                            //ROLTwo

                                            //if (count > 1) {
                                            //    output += '<hr class="solid"> <p class="narrowlineheight" style="font-weight: bold;"> TOTAL : ' + totalstock + '</p>';
                                            //}
                                       // };

                                        //console.log(output);
                                        //console.log(totalstock);

                                        return output;
                                    }
                                    else {
                                        return null;
                                    }
                                }

                            },
                            {
                                "title": "<p class=narrowlineheight >Total Pur. / Rcvd. Qty</p> <p class=narrowlineheight>Last Pur. Date</p>Last Pur. / Rcvd. From",
                                "className": "text-nowrap text-center",
                                "searchable": false,
                                "visible" : isHidden,
                                "data": {
                                    Id: "Id"
                                },
                                "render": function (data, type, row) {
                                    var buttons = "";
                                    if (data.TotalPurchase > 0) {
                                        buttons += '<p class="narrowlineheight" >  Qty : ' + (data.TotalPurchase - data.TotalPurchaseReturn) + ' ' + data.UnitName + ' </p>';
                                        buttons += '<p class="narrowlineheight" > ' + data.LastPurchaseDate + ' </p>';
                                        buttons += '<hr class="solid"> <p class="narrowlineheight" > ' + data.LastPurchaseSupplier + ' </p>';
                                    }
                                    return buttons;
                                }

                            },
                            {
                                "title": "<p class=narrowlineheight>Total Sales / Issue Qty</p> <p class=narrowlineheight>Last Sales / Issue Date</p>Last Sales / Issue To",
                                "className": "text-nowrap text-center",
                                "searchable": false,
                                "visible" : isHidden,
                                "data": {
                                    Id: "Id"
                                },
                                "render": function (data, type, row) {
                                    var buttons = "";
                                    if (data.TotalSales > 0 || data.TotalIssue > 0) {
                                        buttons += '<p class="narrowlineheight" >  Qty : ' + (data.TotalSales + data.TotalIssue + data.TotalDamage - data.TotalSalesReturn) + ' ' + data.UnitName + ' </p>';
                                        buttons += '<p class="narrowlineheight" > ' + data.LastSalesDate + ' ' + data.LastIssueDate + ' </p>';
                                        buttons += '<hr class="solid"> <p class="narrowlineheight" > ' + data.LastSalesCustomer + ' </p>';


                                    }
                                    return buttons;


                                }

                            },


                            //{ "title": "Market Name", "data": "MarketName", "searchable": true },
                            {
                                "title": "Image", "data": "ImagePath", "searchable": false, "render": function (data) {
                                    console.log(data);
                                    //return '<img src="..' + data + '" class="img-thumbnail" width="80px">';
                                    //console.log(data);
                                    return '<img src="..' + data + '" class="img-thumbnail" width="80px" onerror=this.onerror=null;this.src="../Content/MemberImages/0.png">';

                                }
                            },

                            {
                                //"title": "Action",
                                "data": "Id",
                                "className": "text-nowrap text-center",
                                "searchable": false,
                                "orderable": false,

                                "render": function (data, type, row) {

                                    var tokenabc = $("input[name='Dominate_ANTIFORZERY']").val();


                                    var myUrledit = '@Url.Action("EditSupplierProduct", "Admin")?productId=' + data;
                                    var myUrlcopy = '@Url.Action("CopySupplierProduct", "Admin")?productId=' + data;
                                    //var myUrldelete = '@Url.Action("DeleteSupplierProduct", "Admin")?productId=' + data + '&Dominate_ANTIFORZERY=' + tokenabc+'';

                                    //method = "post" action = "/Manage/ChangePassword"

                                    //alert(myUrldelete);


                                    var message = `return confirm('Are you sure you want to Remove the Product Information ?')`;

                                    return '<span data-toggle="tooltip" title="Copy"> <a href=\"' + myUrlcopy + '\" class=\"btn btn-icon btn-info btn-sm rounded-0 mb-1\" target=\"_blank\"><i class="fa fa-copy"></i></a></span>' +
                                        '<span data-toggle="tooltip" title="Edit"> <a href=\"' + myUrledit + '\" class=\"btn btn-icon btn-warning btn-sm rounded-0 mb-1\" target=\"_blank\"><i class="fa fa-edit"></i></a></span>' +
                                        '<span> <form class="form-inline d-inline"  onsubmit="return validateForm()"  method="post" action="../Admin/DeleteSupplierProduct?productId=' + data + '">@Html.AntiForgeryToken()<input type="submit" value="X" class=\"fa btn btn-danger btn-sm rounded-0  mb-1\"  target=\"_blank\" /></form></span>';
                                    //    '<span data-toggle="tooltip" title="Delete"> <a  href=\"' + myUrldelete + '\"   message = \"' + message + '\"  class=\"btn btn-icon btn-danger btn-sm rounded-0 mb-1\" target=\"_blank\"><i class="fa fa-remove"></i> <form> </form >  </a></span>';

                                    return
                                }





                            }
                        ]
                    });

                }

                function validateForm() {

                    return confirm('Are you sure you want to Remove the Product Information ?');


                }








                $(window).bind('keydown', function (event) {
                    if (event.ctrlKey || event.metaKey) {
                        switch (String.fromCharCode(event.which).toLowerCase()) {
                            case 'h':
                                event.preventDefault();
                                //alert('ctrl-s');
                                //alert($('#tblpayments').DataTable().data().count());
                                //if ($('#tblpayments').DataTable().data().count() == 0) {
                                //    $("#addpayment").trigger('click');
                                //}

                                //$("#BtnSave").trigger('click');
                                //alert('hit');
                                SomeAction("cntrlh");
                                return;
                                //Sales_save();
                                break;
                                case 'd':
                                event.preventDefault();
                                SomeAction("cntrlu");
                                //alert('ctrl-s');
                                Product_delete();
                                return;
                                break;
                                @*case 'n':
                                event.preventDefault();
                                //alert('ctrl-n');
                                window.location.href = '@Url.Action("POSCreate", "Sales")';
                                break;
                            case 'r':
                                event.preventDefault();
                                //alert('ctrl-r');
                                window.location.href = '@Url.Action("POSCreate", "Sales")';
                                break;
                            case 'b':
                                event.preventDefault();
                                //alert('ctrl-b');
                                window.location.href = '@Url.Action("Index", "Sales")';
                                //$('#btnBack').click(function () {
                                //    ///Code
                                //});
                                break;*@
                            }
                    }
                });

                function SomeAction(commandtype) {

                    var totalproductlist = $('#tbllist').DataTable();
                    var rows = totalproductlist.rows('.selected').data();
                    //console.log(rows.length);
                    //console.log(rows);


                    //var selectedsaleslist = [];
                    //var pid = 0;

                    //if (rows.length > 0) {
                    //    pid = rows[0]["Id"];
                    //}


                    var pid = [];
                    //var doctype = [];



                    for (var i = 0; i < rows.length; i++) {

                        var rowData = rows[i];
                        pid.push(rowData["Id"]);
                        //doctype.push(rowData[5]);

                    }

                    //console.log(pid);
                    //alert(WarehouseId);
                    //alert(btnvalue);

                        if ((pid == null) || (pid == "")) {
                            toastr.error("Please Select Product from the List.");
                            return true;
                        }

                    //console.log(rows);
                    //var doctype = "pdf";
                    //var criteria = "DownloadReport";


                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("ProductDeleteAction", "Admin")',
                        dataType: 'json',
                        async: true,
                        data: { ProductId: pid, CommandType: commandtype},
                        success: function (response) {

                            if (response.Success == "1") {
                                var selectedRows = totalproductlist.rows(".selected");
                                selectedRows.remove().draw();
                                toastr.success(response.ex);
                                //$("#btnLoad").focus();
                            }
                            else if (response.Success == "2") {
                                toastr.warning(response.ex);
                            }
                            //else if (response.Success == "3") {
                            //    toastr.error(response.ex);
                            //    setTimeout(function () {
                            //        // whene transaction error then reload page
                            //        $("#btnLoad").click();
                            //    }, 3000);
                            //}
                            //else {
                            //    toastr.error(response.ex);
                            //}

                            //toastr.success("Command Executed Successfully.");
                            //window.open(response.Url, '_blank')
                        },
                        error: function (ex) {
                            alert('Failed.' + ex);
                        }

                    });


                }




            function ReportPrint(btnvalue) {

                var peopleList = $('#tbllist').DataTable();
                var rows = peopleList.rows('.selected').data();

                var CategoryId = $('#CategoryId').val();
                var reporttype = $("input[name=RptType]:checked").val();
                var WarehouseId = $('#WarehouseId').val();
                var FromDate = $(".FromDate").val();
                var ToDate = $(".ToDate").val();



                //console.log(rows.length);
                //console.log(rows);


                var productidlist = [];
                var pid = 0;

                if (rows.length > 0) {
                    pid = rows[0]["Id"];
                }
                //console.log(pid);
                //alert(WarehouseId);
                //alert(btnvalue);


                if (btnvalue == "PrintLedger") {

                    if ((WarehouseId == null) || (WarehouseId == "")) {
                        toastr.error("Please Select Store First.");
                        return true;

                    }
                    else if ((pid == null) || (pid == ""))
                    {
                        toastr.error("Please Select Product from the List.");
                        return true;
                    }
                    //alert('Wait');
                }
                else if (btnvalue == "rptPrdAvgRateCalculation") {

                    if ((pid == null) || (pid == "")) {
                        toastr.error("Please Select Product from the List.");
                        return true;
                    }
                }





            //console.log(rows);




            //var doctype = "pdf";

            //var criteria = "DownloadReport";





            $.ajax({
                type: 'POST',
                url: '@Url.Action("ProductReport", "Admin")',
                dataType: 'json',
                async: true,
                data: { rptFormat: reporttype, action: btnvalue, CategoryId: CategoryId , ProductId: pid, FromDate: FromDate, ToDate: ToDate, WarehouseId: WarehouseId },
                success: function (response) {

                    //setTimeout(function () {
                    //    window.open(response.Url, '_blank')
                    //}, 3000);

                    window.open(response.Url, '_blank')

                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }

            });


        }




        CurrentDate();

        $(".FromDate").datepicker({

            dateFormat: "dd-M-y",
            changeMonth: true,
            changeYear: true

        });
        $(".ToDate").datepicker({

            dateFormat: "dd-M-y",
            changeMonth: true,
            changeYear: true

        });

        function CurrentDate() {
            var date = new Date();
            var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
                "Aug", "Sep", "Oct", "Nov", "Dec"];
            var val = date.getDate() + "-" + months[date.getMonth()] + "-" + date.getFullYear().toString().substr(-2);


            if ($(".FromDate").val() == '') {
                $(".FromDate").val(val);
            }
            if ($(".ToDate").val() == '') {
                $(".ToDate").val(val);
            }


        }





            </script>
        }
